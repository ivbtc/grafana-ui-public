"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkgrafana"] = self["webpackChunkgrafana"] || []).push([["tableOldPlugin"],{

/***/ "./public/app/angular/AngularLocationWrapper.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AngularLocationWrapper: () => (/* binding */ AngularLocationWrapper)\n/* harmony export */ });\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/utils/deprecationWarning.ts\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/utils/url.ts\");\n/* harmony import */ var _grafana_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-runtime-virtual-68c57d4c0c/1/packages/grafana-runtime/src/services/LocationService.ts\");\n\n\n\nconst DEFAULT_PORTS = { http: 80, https: 443, ftp: 21 };\nclass AngularLocationWrapper {\n  constructor() {\n    this.absUrl = this.wrapInDeprecationWarning(this.absUrl);\n    this.hash = this.wrapInDeprecationWarning(this.hash);\n    this.host = this.wrapInDeprecationWarning(this.host);\n    this.path = this.wrapInDeprecationWarning(this.path);\n    this.port = this.wrapInDeprecationWarning(this.port, \"window.location\");\n    this.protocol = this.wrapInDeprecationWarning(this.protocol, \"window.location\");\n    this.replace = this.wrapInDeprecationWarning(this.replace);\n    this.search = this.wrapInDeprecationWarning(this.search);\n    this.state = this.wrapInDeprecationWarning(this.state);\n    this.url = this.wrapInDeprecationWarning(this.url);\n  }\n  wrapInDeprecationWarning(fn, replacement) {\n    let self = this;\n    return function wrapper() {\n      (0,_grafana_data__WEBPACK_IMPORTED_MODULE_0__.deprecationWarning)(\"$location\", fn.name, replacement || \"locationService\");\n      return fn.apply(self, arguments);\n    };\n  }\n  absUrl() {\n    return `${window.location.origin}${this.url()}`;\n  }\n  hash(newHash) {\n    (0,_grafana_runtime__WEBPACK_IMPORTED_MODULE_1__.navigationLogger)(\"AngularLocationWrapper\", false, \"Angular compat layer: hash\");\n    if (!newHash) {\n      return _grafana_runtime__WEBPACK_IMPORTED_MODULE_1__.locationService.getLocation().hash.slice(1);\n    } else {\n      throw new Error(\"AngularLocationWrapper method not implemented.\");\n    }\n  }\n  host() {\n    return new URL(window.location.href).hostname;\n  }\n  path(pathname) {\n    (0,_grafana_runtime__WEBPACK_IMPORTED_MODULE_1__.navigationLogger)(\"AngularLocationWrapper\", false, \"Angular compat layer: path\");\n    const location = _grafana_runtime__WEBPACK_IMPORTED_MODULE_1__.locationService.getLocation();\n    if (pathname !== void 0 && pathname !== null) {\n      let parsedPath = String(pathname);\n      parsedPath = parsedPath.startsWith(\"/\") ? parsedPath : `/${parsedPath}`;\n      const url = new URL(`${window.location.origin}${parsedPath}`);\n      _grafana_runtime__WEBPACK_IMPORTED_MODULE_1__.locationService.push({\n        pathname: url.pathname,\n        search: url.search.length > 0 ? url.search : location.search,\n        hash: url.hash.length > 0 ? url.hash : location.hash\n      });\n      return this;\n    }\n    if (pathname === null) {\n      _grafana_runtime__WEBPACK_IMPORTED_MODULE_1__.locationService.push(\"/\");\n      return this;\n    }\n    return location.pathname;\n  }\n  port() {\n    const url = new URL(window.location.href);\n    return parseInt(url.port, 10) || DEFAULT_PORTS[url.protocol] || null;\n  }\n  protocol() {\n    return new URL(window.location.href).protocol.slice(0, -1);\n  }\n  replace() {\n    throw new Error(\"AngularLocationWrapper method not implemented.\");\n  }\n  search(search, paramValue) {\n    (0,_grafana_runtime__WEBPACK_IMPORTED_MODULE_1__.navigationLogger)(\"AngularLocationWrapper\", false, \"Angular compat layer: search\");\n    if (!search) {\n      return _grafana_runtime__WEBPACK_IMPORTED_MODULE_1__.locationService.getSearchObject();\n    }\n    if (search && arguments.length > 1) {\n      _grafana_runtime__WEBPACK_IMPORTED_MODULE_1__.locationService.partial({\n        [search]: paramValue\n      });\n      return this;\n    }\n    if (search) {\n      let newQuery;\n      if (typeof search === \"object\") {\n        newQuery = { ...search };\n      } else {\n        newQuery = (0,_grafana_runtime__WEBPACK_IMPORTED_MODULE_1__.locationSearchToObject)(search);\n      }\n      for (const key of Object.keys(newQuery)) {\n        if (newQuery[key] === null || newQuery[key] === void 0) {\n          delete newQuery[key];\n        }\n      }\n      const updatedUrl = _grafana_data__WEBPACK_IMPORTED_MODULE_2__.urlUtil.renderUrl(_grafana_runtime__WEBPACK_IMPORTED_MODULE_1__.locationService.getLocation().pathname, newQuery);\n      _grafana_runtime__WEBPACK_IMPORTED_MODULE_1__.locationService.push(updatedUrl);\n    }\n    return this;\n  }\n  state(state) {\n    (0,_grafana_runtime__WEBPACK_IMPORTED_MODULE_1__.navigationLogger)(\"AngularLocationWrapper\", false, \"Angular compat layer: state\");\n    throw new Error(\"AngularLocationWrapper method not implemented.\");\n  }\n  url(newUrl) {\n    (0,_grafana_runtime__WEBPACK_IMPORTED_MODULE_1__.navigationLogger)(\"AngularLocationWrapper\", false, \"Angular compat layer: url\");\n    if (newUrl !== void 0) {\n      if (newUrl.startsWith(\"#\")) {\n        _grafana_runtime__WEBPACK_IMPORTED_MODULE_1__.locationService.push({ ..._grafana_runtime__WEBPACK_IMPORTED_MODULE_1__.locationService.getLocation(), hash: newUrl });\n      } else if (newUrl.startsWith(\"?\")) {\n        _grafana_runtime__WEBPACK_IMPORTED_MODULE_1__.locationService.push({ ..._grafana_runtime__WEBPACK_IMPORTED_MODULE_1__.locationService.getLocation(), search: newUrl });\n      } else if (newUrl.trim().length === 0) {\n        _grafana_runtime__WEBPACK_IMPORTED_MODULE_1__.locationService.push(\"/\");\n      } else {\n        _grafana_runtime__WEBPACK_IMPORTED_MODULE_1__.locationService.push(newUrl);\n      }\n      return _grafana_runtime__WEBPACK_IMPORTED_MODULE_1__.locationService;\n    }\n    const location = _grafana_runtime__WEBPACK_IMPORTED_MODULE_1__.locationService.getLocation();\n    return `${location.pathname}${location.search}${location.hash}`;\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/app/angular/AngularLocationWrapper.ts\n");

/***/ }),

/***/ "./public/app/angular/panel/metrics_panel_ctrl.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MetricsPanelCtrl: () => (/* binding */ MetricsPanelCtrl)\n/* harmony export */ });\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/lodash-npm-4.17.21-6382451519-eb835a2e51.zip/node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/types/data.ts\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/dataframe/processDataFrame.ts\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/types/legacyEvents.ts\");\n/* harmony import */ var app_angular_panel_panel_ctrl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/angular/panel/panel_ctrl.ts\");\n/* harmony import */ var app_features_dashboard_utils_panel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/features/dashboard/utils/panel.ts\");\n\n\n\n\n\nclass MetricsPanelCtrl extends app_angular_panel_panel_ctrl__WEBPACK_IMPORTED_MODULE_1__.PanelCtrl {\n  constructor($scope, $injector) {\n    super($scope, $injector);\n    this.skipDataOnInit = false;\n    this.dataList = [];\n    this.useDataFrames = false;\n    // Updates the response with information from the stream\n    this.panelDataObserver = {\n      next: (data) => {\n        this.panelData = data;\n        if (data.state === _grafana_data__WEBPACK_IMPORTED_MODULE_3__.LoadingState.Error) {\n          this.loading = false;\n          this.processDataError(data.error);\n        }\n        if (data.state === _grafana_data__WEBPACK_IMPORTED_MODULE_3__.LoadingState.Loading) {\n          this.loading = true;\n          this.angularDirtyCheck();\n          return;\n        }\n        if (data.request) {\n          const { timeInfo } = data.request;\n          if (timeInfo) {\n            this.timeInfo = timeInfo;\n          }\n        }\n        if (data.timeRange) {\n          this.range = data.timeRange;\n        }\n        if (this.useDataFrames) {\n          this.handleDataFrames(data.series);\n        } else {\n          const legacy = data.series.map((v) => (0,_grafana_data__WEBPACK_IMPORTED_MODULE_4__.toLegacyResponseData)(v));\n          this.handleQueryResult({ data: legacy });\n        }\n        this.angularDirtyCheck();\n      }\n    };\n    this.contextSrv = $injector.get(\"contextSrv\");\n    this.datasourceSrv = $injector.get(\"datasourceSrv\");\n    this.timeSrv = $injector.get(\"timeSrv\");\n    this.templateSrv = $injector.get(\"templateSrv\");\n    this.panel.datasource = this.panel.datasource || null;\n    this.events.on(_grafana_data__WEBPACK_IMPORTED_MODULE_5__.PanelEvents.refresh, this.onMetricsPanelRefresh.bind(this));\n    this.events.on(_grafana_data__WEBPACK_IMPORTED_MODULE_5__.PanelEvents.panelTeardown, this.onPanelTearDown.bind(this));\n    this.events.on(_grafana_data__WEBPACK_IMPORTED_MODULE_5__.PanelEvents.componentDidMount, this.onMetricsPanelMounted.bind(this));\n  }\n  onMetricsPanelMounted() {\n    const queryRunner = this.panel.getQueryRunner();\n    this.querySubscription = queryRunner.getData({ withTransforms: true, withFieldConfig: true }).subscribe(this.panelDataObserver);\n  }\n  onPanelTearDown() {\n    if (this.querySubscription) {\n      this.querySubscription.unsubscribe();\n      this.querySubscription = null;\n    }\n  }\n  onMetricsPanelRefresh() {\n    if (this.otherPanelInFullscreenMode()) {\n      return;\n    }\n    if (this.panel.snapshotData) {\n      this.updateTimeRange();\n      let data = this.panel.snapshotData;\n      if (!(0,lodash__WEBPACK_IMPORTED_MODULE_0__.isArray)(data)) {\n        data = data.data;\n      }\n      this.panelData = {\n        state: _grafana_data__WEBPACK_IMPORTED_MODULE_3__.LoadingState.Done,\n        series: data,\n        timeRange: this.range\n      };\n      return this.$timeout(() => {\n        this.events.emit(_grafana_data__WEBPACK_IMPORTED_MODULE_5__.PanelEvents.dataSnapshotLoad, data);\n      });\n    }\n    delete this.error;\n    this.loading = true;\n    return this.datasourceSrv.get(this.panel.datasource, this.panel.scopedVars).then(this.issueQueries.bind(this)).catch((err) => {\n      this.processDataError(err);\n    });\n  }\n  processDataError(err) {\n    if (err.cancelled) {\n      console.log(\"Panel request cancelled\", err);\n      return;\n    }\n    this.error = err.message || \"Request Error\";\n    if (err.data) {\n      if (err.data.message) {\n        this.error = err.data.message;\n      } else if (err.data.error) {\n        this.error = err.data.error;\n      }\n    }\n    this.angularDirtyCheck();\n  }\n  angularDirtyCheck() {\n    if (!this.$scope.$root.$$phase) {\n      this.$scope.$digest();\n    }\n  }\n  updateTimeRange(datasource) {\n    this.datasource = datasource || this.datasource;\n    this.range = this.timeSrv.timeRange();\n    const newTimeData = (0,app_features_dashboard_utils_panel__WEBPACK_IMPORTED_MODULE_2__.applyPanelTimeOverrides)(this.panel, this.range);\n    this.timeInfo = newTimeData.timeInfo;\n    this.range = newTimeData.timeRange;\n  }\n  issueQueries(datasource) {\n    this.updateTimeRange(datasource);\n    this.datasource = datasource;\n    const panel = this.panel;\n    const queryRunner = panel.getQueryRunner();\n    return queryRunner.run({\n      datasource: panel.datasource,\n      queries: panel.targets,\n      panelId: panel.id,\n      dashboardUID: this.dashboard.uid,\n      timezone: this.dashboard.getTimezone(),\n      timeInfo: this.timeInfo,\n      timeRange: this.range,\n      maxDataPoints: panel.maxDataPoints || this.width,\n      minInterval: panel.interval,\n      publicDashboardAccessToken: this.dashboard.meta.publicDashboardAccessToken,\n      scopedVars: panel.scopedVars,\n      cacheTimeout: panel.cacheTimeout,\n      queryCachingTTL: panel.queryCachingTTL,\n      transformations: panel.transformations\n    });\n  }\n  handleDataFrames(data) {\n    this.loading = false;\n    if (this.dashboard && this.dashboard.snapshot) {\n      this.panel.snapshotData = data.map((frame) => (0,_grafana_data__WEBPACK_IMPORTED_MODULE_4__.toDataFrameDTO)(frame));\n    }\n    try {\n      this.events.emit(_grafana_data__WEBPACK_IMPORTED_MODULE_5__.PanelEvents.dataFramesReceived, data);\n    } catch (err) {\n      this.processDataError(err);\n    }\n  }\n  handleQueryResult(result) {\n    this.loading = false;\n    if (this.dashboard.snapshot) {\n      this.panel.snapshotData = result.data;\n    }\n    if (!result || !result.data) {\n      console.log(\"Data source query result invalid, missing data field:\", result);\n      result = { data: [] };\n    }\n    try {\n      this.events.emit(_grafana_data__WEBPACK_IMPORTED_MODULE_5__.PanelEvents.dataReceived, result.data);\n    } catch (err) {\n      this.processDataError(err);\n    }\n  }\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/app/angular/panel/metrics_panel_ctrl.ts\n");

/***/ }),

/***/ "./public/app/angular/panel/panel_ctrl.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PanelCtrl: () => (/* binding */ PanelCtrl)\n/* harmony export */ });\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/lodash-npm-4.17.21-6382451519-eb835a2e51.zip/node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/events/EventBus.ts\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/types/legacyEvents.ts\");\n/* harmony import */ var app_angular_AngularLocationWrapper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/angular/AngularLocationWrapper.ts\");\n/* harmony import */ var app_core_config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/core/config.ts\");\n/* harmony import */ var app_core_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./public/app/core/core.ts\");\n\n\n\n\n\n\nclass PanelCtrl {\n  constructor($scope, $injector) {\n    this.pluginName = \"\";\n    this.pluginId = \"\";\n    this.editModeInitiated = false;\n    this.loading = false;\n    // overriden from react\n    this.onPluginTypeChange = (plugin) => {\n    };\n    this.panel = this.panel ?? $scope.$parent.panel;\n    this.dashboard = this.dashboard ?? $scope.$parent.dashboard;\n    this.$injector = $injector;\n    this.$scope = $scope;\n    this.$timeout = $injector.get(\"$timeout\");\n    this.editorTabs = [];\n    this.$location = new app_angular_AngularLocationWrapper__WEBPACK_IMPORTED_MODULE_1__.AngularLocationWrapper();\n    this.events = new _grafana_data__WEBPACK_IMPORTED_MODULE_4__.EventBusSrv();\n    this.timing = {};\n    const plugin = app_core_config__WEBPACK_IMPORTED_MODULE_2__[\"default\"].panels[this.panel.type];\n    if (plugin) {\n      this.pluginId = plugin.id;\n      this.pluginName = plugin.name;\n    }\n    $scope.$on(_grafana_data__WEBPACK_IMPORTED_MODULE_5__.PanelEvents.componentDidMount.name, () => this.panelDidMount());\n  }\n  panelDidMount() {\n    this.events.emit(_grafana_data__WEBPACK_IMPORTED_MODULE_5__.PanelEvents.componentDidMount);\n    this.events.emit(_grafana_data__WEBPACK_IMPORTED_MODULE_5__.PanelEvents.initialized);\n    this.dashboard.panelInitialized(this.panel);\n  }\n  renderingCompleted() {\n    app_core_core__WEBPACK_IMPORTED_MODULE_3__.profiler.renderingCompleted();\n  }\n  refresh() {\n    this.panel.refresh();\n  }\n  publishAppEvent(event, payload) {\n    this.$scope.$root.appEvent(event, payload);\n  }\n  initEditMode() {\n    if (!this.editModeInitiated) {\n      this.editModeInitiated = true;\n      this.events.emit(_grafana_data__WEBPACK_IMPORTED_MODULE_5__.PanelEvents.editModeInitialized);\n    }\n  }\n  addEditorTab(title, directiveFn, index, icon) {\n    const editorTab = { title, directiveFn, icon };\n    if ((0,lodash__WEBPACK_IMPORTED_MODULE_0__.isString)(directiveFn)) {\n      editorTab.directiveFn = () => {\n        return { templateUrl: directiveFn };\n      };\n    }\n    if (index) {\n      this.editorTabs.splice(index, 0, editorTab);\n    } else {\n      this.editorTabs.push(editorTab);\n    }\n  }\n  getExtendedMenu() {\n    const menu = [];\n    this.events.emit(_grafana_data__WEBPACK_IMPORTED_MODULE_5__.PanelEvents.initPanelActions, menu);\n    return menu;\n  }\n  // Override in sub-class to add items before extended menu\n  async getAdditionalMenuItems() {\n    return [];\n  }\n  otherPanelInFullscreenMode() {\n    return this.dashboard.otherPanelInFullscreen(this.panel);\n  }\n  render(payload) {\n    this.events.emit(_grafana_data__WEBPACK_IMPORTED_MODULE_5__.PanelEvents.render, payload);\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL2FuZ3VsYXIvcGFuZWwvcGFuZWxfY3RybC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFDeUI7QUFTbEI7QUFDZ0M7QUFDcEI7QUFDTTtBQUlsQixNQUFNLFVBQVU7QUFBQSxFQW1CckIsWUFBWSxRQUFhLFdBQWtDO0FBZjNELHNCQUFhO0FBQ2Isb0JBQVc7QUFLWCw2QkFBb0I7QUFLcEIsbUJBQVU7QUFxRlY7QUFBQSw4QkFBcUIsQ0FBQyxXQUE0QjtBQUFBLElBQUM7QUFoRmpELFNBQUssUUFBUSxLQUFLLFNBQVMsT0FBTyxRQUFRO0FBQzFDLFNBQUssWUFBWSxLQUFLLGFBQWEsT0FBTyxRQUFRO0FBQ2xELFNBQUssWUFBWTtBQUNqQixTQUFLLFNBQVM7QUFDZCxTQUFLLFdBQVcsVUFBVSxJQUFJLFVBQVU7QUFDeEMsU0FBSyxhQUFhLENBQUM7QUFDbkIsU0FBSyxZQUFZLElBQUksc0ZBQXNCLENBQUM7QUFDNUMsU0FBSyxTQUFTLElBQUksc0RBQVcsQ0FBQztBQUM5QixTQUFLLFNBQVMsQ0FBQztBQUVmLFVBQU0sU0FBUyx1REFBTSxDQUFDLE9BQU8sS0FBSyxNQUFNLElBQUk7QUFDNUMsUUFBSSxRQUFRO0FBQ1YsV0FBSyxXQUFXLE9BQU87QUFDdkIsV0FBSyxhQUFhLE9BQU87QUFBQSxJQUMzQjtBQUVBLFdBQU8sSUFBSSxzREFBVyxDQUFDLGtCQUFrQixNQUFNLE1BQU0sS0FBSyxjQUFjLENBQUM7QUFBQSxFQUMzRTtBQUFBLEVBRUEsZ0JBQWdCO0FBQ2QsU0FBSyxPQUFPLEtBQUssc0RBQVcsQ0FBQyxpQkFBaUI7QUFDOUMsU0FBSyxPQUFPLEtBQUssc0RBQVcsQ0FBQyxXQUFXO0FBQ3hDLFNBQUssVUFBVSxpQkFBaUIsS0FBSyxLQUFLO0FBQUEsRUFDNUM7QUFBQSxFQUVBLHFCQUFxQjtBQUNuQix1REFBUSxDQUFDLG1CQUFtQjtBQUFBLEVBQzlCO0FBQUEsRUFFQSxVQUFVO0FBQ1IsU0FBSyxNQUFNLFFBQVE7QUFBQSxFQUNyQjtBQUFBLEVBRUEsZ0JBQW1CLE9BQW9CLFNBQWE7QUFDbEQsU0FBSyxPQUFPLE1BQU0sU0FBUyxPQUFPLE9BQU87QUFBQSxFQUMzQztBQUFBLEVBRUEsZUFBZTtBQUNiLFFBQUksQ0FBQyxLQUFLLG1CQUFtQjtBQUMzQixXQUFLLG9CQUFvQjtBQUN6QixXQUFLLE9BQU8sS0FBSyxzREFBVyxDQUFDLG1CQUFtQjtBQUFBLElBQ2xEO0FBQUEsRUFDRjtBQUFBLEVBRUEsYUFBYSxPQUFlLGFBQWtCLE9BQWdCLE1BQVk7QUFDeEUsVUFBTSxZQUFZLEVBQUUsT0FBTyxhQUFhLEtBQUs7QUFFN0MsUUFBSSxnREFBUSxDQUFDLFdBQVcsR0FBRztBQUN6QixnQkFBVSxjQUFjLE1BQU07QUFDNUIsZUFBTyxFQUFFLGFBQWEsWUFBWTtBQUFBLE1BQ3BDO0FBQUEsSUFDRjtBQUVBLFFBQUksT0FBTztBQUNULFdBQUssV0FBVyxPQUFPLE9BQU8sR0FBRyxTQUFTO0FBQUEsSUFDNUMsT0FBTztBQUNMLFdBQUssV0FBVyxLQUFLLFNBQVM7QUFBQSxJQUNoQztBQUFBLEVBQ0Y7QUFBQSxFQUVBLGtCQUFrQjtBQUNoQixVQUFNLE9BQStCLENBQUM7QUFDdEMsU0FBSyxPQUFPLEtBQUssc0RBQVcsQ0FBQyxrQkFBa0IsSUFBSTtBQUNuRCxXQUFPO0FBQUEsRUFDVDtBQUFBO0FBQUEsRUFHQSxNQUFNLHlCQUF5QztBQUM3QyxXQUFPLENBQUM7QUFBQSxFQUNWO0FBQUEsRUFFQSw2QkFBNkI7QUFDM0IsV0FBTyxLQUFLLFVBQVUsdUJBQXVCLEtBQUssS0FBSztBQUFBLEVBQ3pEO0FBQUEsRUFFQSxPQUFPLFNBQWU7QUFDcEIsU0FBSyxPQUFPLEtBQUssc0RBQVcsQ0FBQyxRQUFRLE9BQU87QUFBQSxFQUM5QztBQUlGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ3JhZmFuYS8uL3B1YmxpYy9hcHAvYW5ndWxhci9wYW5lbC9wYW5lbF9jdHJsLnRzPzFkNGUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYXV0byB9IGZyb20gJ2FuZ3VsYXInO1xuaW1wb3J0IHsgaXNTdHJpbmcgfSBmcm9tICdsb2Rhc2gnO1xuXG5pbXBvcnQge1xuICBBcHBFdmVudCxcbiAgUGFuZWxFdmVudHMsXG4gIFBhbmVsUGx1Z2luTWV0YSxcbiAgQW5ndWxhclBhbmVsTWVudUl0ZW0sXG4gIEV2ZW50QnVzRXh0ZW5kZWQsXG4gIEV2ZW50QnVzU3J2LFxufSBmcm9tICdAZ3JhZmFuYS9kYXRhJztcbmltcG9ydCB7IEFuZ3VsYXJMb2NhdGlvbldyYXBwZXIgfSBmcm9tICdhcHAvYW5ndWxhci9Bbmd1bGFyTG9jYXRpb25XcmFwcGVyJztcbmltcG9ydCBjb25maWcgZnJvbSAnYXBwL2NvcmUvY29uZmlnJztcbmltcG9ydCB7IHByb2ZpbGVyIH0gZnJvbSAnYXBwL2NvcmUvY29yZSc7XG5cbmltcG9ydCB7IERhc2hib2FyZE1vZGVsIH0gZnJvbSAnLi4vLi4vZmVhdHVyZXMvZGFzaGJvYXJkL3N0YXRlJztcblxuZXhwb3J0IGNsYXNzIFBhbmVsQ3RybCB7XG4gIHBhbmVsOiBhbnk7XG4gIGVycm9yOiBhbnk7XG4gIGRlY2xhcmUgZGFzaGJvYXJkOiBEYXNoYm9hcmRNb2RlbDtcbiAgcGx1Z2luTmFtZSA9ICcnO1xuICBwbHVnaW5JZCA9ICcnO1xuICBlZGl0b3JUYWJzOiBhbnk7XG4gICRzY29wZTogYW55O1xuICAkaW5qZWN0b3I6IGF1dG8uSUluamVjdG9yU2VydmljZTtcbiAgJHRpbWVvdXQ6IGFueTtcbiAgZWRpdE1vZGVJbml0aWF0ZWQgPSBmYWxzZTtcbiAgZGVjbGFyZSBoZWlnaHQ6IG51bWJlcjtcbiAgZGVjbGFyZSB3aWR0aDogbnVtYmVyO1xuICBjb250YWluZXJIZWlnaHQ6IGFueTtcbiAgZXZlbnRzOiBFdmVudEJ1c0V4dGVuZGVkO1xuICBsb2FkaW5nID0gZmFsc2U7XG4gIHRpbWluZzogYW55O1xuICAkbG9jYXRpb246IEFuZ3VsYXJMb2NhdGlvbldyYXBwZXI7XG5cbiAgY29uc3RydWN0b3IoJHNjb3BlOiBhbnksICRpbmplY3RvcjogYXV0by5JSW5qZWN0b3JTZXJ2aWNlKSB7XG4gICAgdGhpcy5wYW5lbCA9IHRoaXMucGFuZWwgPz8gJHNjb3BlLiRwYXJlbnQucGFuZWw7XG4gICAgdGhpcy5kYXNoYm9hcmQgPSB0aGlzLmRhc2hib2FyZCA/PyAkc2NvcGUuJHBhcmVudC5kYXNoYm9hcmQ7XG4gICAgdGhpcy4kaW5qZWN0b3IgPSAkaW5qZWN0b3I7XG4gICAgdGhpcy4kc2NvcGUgPSAkc2NvcGU7XG4gICAgdGhpcy4kdGltZW91dCA9ICRpbmplY3Rvci5nZXQoJyR0aW1lb3V0Jyk7XG4gICAgdGhpcy5lZGl0b3JUYWJzID0gW107XG4gICAgdGhpcy4kbG9jYXRpb24gPSBuZXcgQW5ndWxhckxvY2F0aW9uV3JhcHBlcigpO1xuICAgIHRoaXMuZXZlbnRzID0gbmV3IEV2ZW50QnVzU3J2KCk7XG4gICAgdGhpcy50aW1pbmcgPSB7fTsgLy8gbm90IHVzZWQgYnV0IGhlcmUgdG8gbm90IGJyZWFrIHBsdWdpbnNcblxuICAgIGNvbnN0IHBsdWdpbiA9IGNvbmZpZy5wYW5lbHNbdGhpcy5wYW5lbC50eXBlXTtcbiAgICBpZiAocGx1Z2luKSB7XG4gICAgICB0aGlzLnBsdWdpbklkID0gcGx1Z2luLmlkO1xuICAgICAgdGhpcy5wbHVnaW5OYW1lID0gcGx1Z2luLm5hbWU7XG4gICAgfVxuXG4gICAgJHNjb3BlLiRvbihQYW5lbEV2ZW50cy5jb21wb25lbnREaWRNb3VudC5uYW1lLCAoKSA9PiB0aGlzLnBhbmVsRGlkTW91bnQoKSk7XG4gIH1cblxuICBwYW5lbERpZE1vdW50KCkge1xuICAgIHRoaXMuZXZlbnRzLmVtaXQoUGFuZWxFdmVudHMuY29tcG9uZW50RGlkTW91bnQpO1xuICAgIHRoaXMuZXZlbnRzLmVtaXQoUGFuZWxFdmVudHMuaW5pdGlhbGl6ZWQpO1xuICAgIHRoaXMuZGFzaGJvYXJkLnBhbmVsSW5pdGlhbGl6ZWQodGhpcy5wYW5lbCk7XG4gIH1cblxuICByZW5kZXJpbmdDb21wbGV0ZWQoKSB7XG4gICAgcHJvZmlsZXIucmVuZGVyaW5nQ29tcGxldGVkKCk7XG4gIH1cblxuICByZWZyZXNoKCkge1xuICAgIHRoaXMucGFuZWwucmVmcmVzaCgpO1xuICB9XG5cbiAgcHVibGlzaEFwcEV2ZW50PFQ+KGV2ZW50OiBBcHBFdmVudDxUPiwgcGF5bG9hZD86IFQpIHtcbiAgICB0aGlzLiRzY29wZS4kcm9vdC5hcHBFdmVudChldmVudCwgcGF5bG9hZCk7XG4gIH1cblxuICBpbml0RWRpdE1vZGUoKSB7XG4gICAgaWYgKCF0aGlzLmVkaXRNb2RlSW5pdGlhdGVkKSB7XG4gICAgICB0aGlzLmVkaXRNb2RlSW5pdGlhdGVkID0gdHJ1ZTtcbiAgICAgIHRoaXMuZXZlbnRzLmVtaXQoUGFuZWxFdmVudHMuZWRpdE1vZGVJbml0aWFsaXplZCk7XG4gICAgfVxuICB9XG5cbiAgYWRkRWRpdG9yVGFiKHRpdGxlOiBzdHJpbmcsIGRpcmVjdGl2ZUZuOiBhbnksIGluZGV4PzogbnVtYmVyLCBpY29uPzogYW55KSB7XG4gICAgY29uc3QgZWRpdG9yVGFiID0geyB0aXRsZSwgZGlyZWN0aXZlRm4sIGljb24gfTtcblxuICAgIGlmIChpc1N0cmluZyhkaXJlY3RpdmVGbikpIHtcbiAgICAgIGVkaXRvclRhYi5kaXJlY3RpdmVGbiA9ICgpID0+IHtcbiAgICAgICAgcmV0dXJuIHsgdGVtcGxhdGVVcmw6IGRpcmVjdGl2ZUZuIH07XG4gICAgICB9O1xuICAgIH1cblxuICAgIGlmIChpbmRleCkge1xuICAgICAgdGhpcy5lZGl0b3JUYWJzLnNwbGljZShpbmRleCwgMCwgZWRpdG9yVGFiKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5lZGl0b3JUYWJzLnB1c2goZWRpdG9yVGFiKTtcbiAgICB9XG4gIH1cblxuICBnZXRFeHRlbmRlZE1lbnUoKSB7XG4gICAgY29uc3QgbWVudTogQW5ndWxhclBhbmVsTWVudUl0ZW1bXSA9IFtdO1xuICAgIHRoaXMuZXZlbnRzLmVtaXQoUGFuZWxFdmVudHMuaW5pdFBhbmVsQWN0aW9ucywgbWVudSk7XG4gICAgcmV0dXJuIG1lbnU7XG4gIH1cblxuICAvLyBPdmVycmlkZSBpbiBzdWItY2xhc3MgdG8gYWRkIGl0ZW1zIGJlZm9yZSBleHRlbmRlZCBtZW51XG4gIGFzeW5jIGdldEFkZGl0aW9uYWxNZW51SXRlbXMoKTogUHJvbWlzZTxhbnlbXT4ge1xuICAgIHJldHVybiBbXTtcbiAgfVxuXG4gIG90aGVyUGFuZWxJbkZ1bGxzY3JlZW5Nb2RlKCkge1xuICAgIHJldHVybiB0aGlzLmRhc2hib2FyZC5vdGhlclBhbmVsSW5GdWxsc2NyZWVuKHRoaXMucGFuZWwpO1xuICB9XG5cbiAgcmVuZGVyKHBheWxvYWQ/OiBhbnkpIHtcbiAgICB0aGlzLmV2ZW50cy5lbWl0KFBhbmVsRXZlbnRzLnJlbmRlciwgcGF5bG9hZCk7XG4gIH1cblxuICAvLyBvdmVycmlkZW4gZnJvbSByZWFjdFxuICBvblBsdWdpblR5cGVDaGFuZ2UgPSAocGx1Z2luOiBQYW5lbFBsdWdpbk1ldGEpID0+IHt9O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./public/app/angular/panel/panel_ctrl.ts\n");

/***/ }),

/***/ "./public/app/angular/panel/query_ctrl.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryCtrl: () => (/* binding */ QueryCtrl)\n/* harmony export */ });\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/lodash-npm-4.17.21-6382451519-eb835a2e51.zip/node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);\n\n\nclass QueryCtrl {\n  constructor($scope, $injector) {\n    this.$scope = $scope;\n    this.$injector = $injector;\n    this.panelCtrl = this.panelCtrl ?? $scope.ctrl.panelCtrl;\n    this.target = this.target ?? $scope.ctrl.target;\n    this.datasource = this.datasource ?? $scope.ctrl.datasource;\n    this.panel = this.panelCtrl?.panel ?? $scope.ctrl.panelCtrl.panel;\n    this.isLastQuery = (0,lodash__WEBPACK_IMPORTED_MODULE_0__.indexOf)(this.panel.targets, this.target) === this.panel.targets.length - 1;\n  }\n  refresh() {\n    this.panelCtrl.refresh();\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL2FuZ3VsYXIvcGFuZWwvcXVlcnlfY3RybC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQ3dCO0FBRWpCLE1BQU0sVUFBbUI7QUFBQSxFQVM5QixZQUNTLFFBQ0EsV0FDUDtBQUZPO0FBQ0E7QUFFUCxTQUFLLFlBQVksS0FBSyxhQUFhLE9BQU8sS0FBSztBQUMvQyxTQUFLLFNBQVMsS0FBSyxVQUFVLE9BQU8sS0FBSztBQUN6QyxTQUFLLGFBQWEsS0FBSyxjQUFjLE9BQU8sS0FBSztBQUNqRCxTQUFLLFFBQVEsS0FBSyxXQUFXLFNBQVMsT0FBTyxLQUFLLFVBQVU7QUFDNUQsU0FBSyxjQUFjLCtDQUFPLENBQUMsS0FBSyxNQUFNLFNBQVMsS0FBSyxNQUFNLE1BQU0sS0FBSyxNQUFNLFFBQVEsU0FBUztBQUFBLEVBQzlGO0FBQUEsRUFFQSxVQUFVO0FBQ1IsU0FBSyxVQUFVLFFBQVE7QUFBQSxFQUN6QjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ3JhZmFuYS8uL3B1YmxpYy9hcHAvYW5ndWxhci9wYW5lbC9xdWVyeV9jdHJsLnRzP2Q2ZGIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYXV0byB9IGZyb20gJ2FuZ3VsYXInO1xuaW1wb3J0IHsgaW5kZXhPZiB9IGZyb20gJ2xvZGFzaCc7XG5cbmV4cG9ydCBjbGFzcyBRdWVyeUN0cmw8VCA9IGFueT4ge1xuICB0YXJnZXQhOiBUO1xuICBkYXRhc291cmNlITogYW55O1xuICBwYW5lbEN0cmwhOiBhbnk7XG4gIHBhbmVsOiBhbnk7XG4gIGhhc1Jhd01vZGUhOiBib29sZWFuO1xuICBlcnJvcj86IHN0cmluZyB8IG51bGw7XG4gIGlzTGFzdFF1ZXJ5OiBib29sZWFuO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHB1YmxpYyAkc2NvcGU6IGFueSxcbiAgICBwdWJsaWMgJGluamVjdG9yOiBhdXRvLklJbmplY3RvclNlcnZpY2VcbiAgKSB7XG4gICAgdGhpcy5wYW5lbEN0cmwgPSB0aGlzLnBhbmVsQ3RybCA/PyAkc2NvcGUuY3RybC5wYW5lbEN0cmw7XG4gICAgdGhpcy50YXJnZXQgPSB0aGlzLnRhcmdldCA/PyAkc2NvcGUuY3RybC50YXJnZXQ7XG4gICAgdGhpcy5kYXRhc291cmNlID0gdGhpcy5kYXRhc291cmNlID8/ICRzY29wZS5jdHJsLmRhdGFzb3VyY2U7XG4gICAgdGhpcy5wYW5lbCA9IHRoaXMucGFuZWxDdHJsPy5wYW5lbCA/PyAkc2NvcGUuY3RybC5wYW5lbEN0cmwucGFuZWw7XG4gICAgdGhpcy5pc0xhc3RRdWVyeSA9IGluZGV4T2YodGhpcy5wYW5lbC50YXJnZXRzLCB0aGlzLnRhcmdldCkgPT09IHRoaXMucGFuZWwudGFyZ2V0cy5sZW5ndGggLSAxO1xuICB9XG5cbiAgcmVmcmVzaCgpIHtcbiAgICB0aGlzLnBhbmVsQ3RybC5yZWZyZXNoKCk7XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./public/app/angular/panel/query_ctrl.ts\n");

/***/ }),

/***/ "./public/app/plugins/panel/table-old/column_options.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ColumnOptionsCtrl: () => (/* binding */ ColumnOptionsCtrl),\n/* harmony export */   columnOptionsTab: () => (/* binding */ columnOptionsTab)\n/* harmony export */ });\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/lodash-npm-4.17.21-6382451519-eb835a2e51.zip/node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/valueFormats/valueFormats.ts\");\n\n\n\nconst _ColumnOptionsCtrl = class {\n  constructor($scope) {\n    $scope.editor = this;\n    this.activeStyleIndex = 0;\n    this.panelCtrl = $scope.ctrl;\n    this.panel = this.panelCtrl.panel;\n    this.unitFormats = (0,_grafana_data__WEBPACK_IMPORTED_MODULE_1__.getValueFormats)();\n    this.colorModes = [\n      { text: \"Disabled\", value: null },\n      { text: \"Cell\", value: \"cell\" },\n      { text: \"Value\", value: \"value\" },\n      { text: \"Row\", value: \"row\" }\n    ];\n    this.columnTypes = [\n      { text: \"Number\", value: \"number\" },\n      { text: \"String\", value: \"string\" },\n      { text: \"Date\", value: \"date\" },\n      { text: \"Hidden\", value: \"hidden\" }\n    ];\n    this.fontSizes = [\"80%\", \"90%\", \"100%\", \"110%\", \"120%\", \"130%\", \"150%\", \"160%\", \"180%\", \"200%\", \"220%\", \"250%\"];\n    this.dateFormats = [\n      { text: \"YYYY-MM-DD HH:mm:ss\", value: \"YYYY-MM-DD HH:mm:ss\" },\n      { text: \"YYYY-MM-DD HH:mm:ss.SSS\", value: \"YYYY-MM-DD HH:mm:ss.SSS\" },\n      { text: \"MM/DD/YY h:mm:ss a\", value: \"MM/DD/YY h:mm:ss a\" },\n      { text: \"MMMM D, YYYY LT\", value: \"MMMM D, YYYY LT\" },\n      { text: \"YYYY-MM-DD\", value: \"YYYY-MM-DD\" }\n    ];\n    this.mappingTypes = [\n      { text: \"Value to text\", value: 1 },\n      { text: \"Range to text\", value: 2 }\n    ];\n    this.alignTypes = _ColumnOptionsCtrl.alignTypesEnum;\n    this.getColumnNames = () => {\n      if (!this.panelCtrl.table) {\n        return [];\n      }\n      return (0,lodash__WEBPACK_IMPORTED_MODULE_0__.map)(this.panelCtrl.table.columns, (col) => {\n        return col.text;\n      });\n    };\n    this.onColorChange = this.onColorChange.bind(this);\n  }\n  render() {\n    this.panelCtrl.render();\n  }\n  setUnitFormat(column) {\n    return (value) => {\n      column.unit = value;\n      this.panelCtrl.render();\n    };\n  }\n  addColumnStyle() {\n    const newStyleRule = {\n      unit: \"short\",\n      type: \"number\",\n      alias: \"\",\n      decimals: 2,\n      colors: [\"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\"],\n      colorMode: null,\n      pattern: \"\",\n      dateFormat: \"YYYY-MM-DD HH:mm:ss\",\n      thresholds: [],\n      mappingType: 1,\n      align: \"auto\"\n    };\n    const styles = this.panel.styles;\n    const stylesCount = styles.length;\n    let indexToInsert = stylesCount;\n    if (stylesCount > 0) {\n      const last = styles[stylesCount - 1];\n      if (last.pattern === \"/.*/\") {\n        indexToInsert = stylesCount - 1;\n      }\n    }\n    styles.splice(indexToInsert, 0, newStyleRule);\n    this.activeStyleIndex = indexToInsert;\n  }\n  removeColumnStyle(style) {\n    this.panel.styles = (0,lodash__WEBPACK_IMPORTED_MODULE_0__.without)(this.panel.styles, style);\n  }\n  invertColorOrder(index) {\n    const ref = this.panel.styles[index].colors;\n    const copy = ref[0];\n    ref[0] = ref[2];\n    ref[2] = copy;\n    this.panelCtrl.render();\n  }\n  onColorChange(style, colorIndex) {\n    return (newColor) => {\n      style.colors[colorIndex] = newColor;\n      this.render();\n    };\n  }\n  addValueMap(style) {\n    if (!style.valueMaps) {\n      style.valueMaps = [];\n    }\n    style.valueMaps.push({ value: \"\", text: \"\" });\n    this.panelCtrl.render();\n  }\n  removeValueMap(style, index) {\n    style.valueMaps.splice(index, 1);\n    this.panelCtrl.render();\n  }\n  addRangeMap(style) {\n    if (!style.rangeMaps) {\n      style.rangeMaps = [];\n    }\n    style.rangeMaps.push({ from: \"\", to: \"\", text: \"\" });\n    this.panelCtrl.render();\n  }\n  removeRangeMap(style, index) {\n    style.rangeMaps.splice(index, 1);\n    this.panelCtrl.render();\n  }\n};\nlet ColumnOptionsCtrl = _ColumnOptionsCtrl;\nColumnOptionsCtrl.alignTypesEnum = [\n  { text: \"auto\", value: \"\" },\n  { text: \"left\", value: \"left\" },\n  { text: \"center\", value: \"center\" },\n  { text: \"right\", value: \"right\" }\n];\nColumnOptionsCtrl.$inject = [\"$scope\"];\nfunction columnOptionsTab() {\n  \"use strict\";\n  return {\n    restrict: \"E\",\n    scope: true,\n    templateUrl: \"public/app/plugins/panel/table-old/column_options.html\",\n    controller: ColumnOptionsCtrl\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvcGFuZWwvdGFibGUtb2xkL2NvbHVtbl9vcHRpb25zLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUE2QjtBQUVHO0FBRXpCLE1BQU0scUJBQU4sTUFBd0I7QUFBQSxFQXdCN0IsWUFBWSxRQUFhO0FBQ3ZCLFdBQU8sU0FBUztBQUVoQixTQUFLLG1CQUFtQjtBQUN4QixTQUFLLFlBQVksT0FBTztBQUN4QixTQUFLLFFBQVEsS0FBSyxVQUFVO0FBQzVCLFNBQUssY0FBYyw4REFBZSxDQUFDO0FBQ25DLFNBQUssYUFBYTtBQUFBLE1BQ2hCLEVBQUUsTUFBTSxZQUFZLE9BQU8sS0FBSztBQUFBLE1BQ2hDLEVBQUUsTUFBTSxRQUFRLE9BQU8sT0FBTztBQUFBLE1BQzlCLEVBQUUsTUFBTSxTQUFTLE9BQU8sUUFBUTtBQUFBLE1BQ2hDLEVBQUUsTUFBTSxPQUFPLE9BQU8sTUFBTTtBQUFBLElBQzlCO0FBQ0EsU0FBSyxjQUFjO0FBQUEsTUFDakIsRUFBRSxNQUFNLFVBQVUsT0FBTyxTQUFTO0FBQUEsTUFDbEMsRUFBRSxNQUFNLFVBQVUsT0FBTyxTQUFTO0FBQUEsTUFDbEMsRUFBRSxNQUFNLFFBQVEsT0FBTyxPQUFPO0FBQUEsTUFDOUIsRUFBRSxNQUFNLFVBQVUsT0FBTyxTQUFTO0FBQUEsSUFDcEM7QUFDQSxTQUFLLFlBQVksQ0FBQyxPQUFPLE9BQU8sUUFBUSxRQUFRLFFBQVEsUUFBUSxRQUFRLFFBQVEsUUFBUSxRQUFRLFFBQVEsTUFBTTtBQUM5RyxTQUFLLGNBQWM7QUFBQSxNQUNqQixFQUFFLE1BQU0sdUJBQXVCLE9BQU8sc0JBQXNCO0FBQUEsTUFDNUQsRUFBRSxNQUFNLDJCQUEyQixPQUFPLDBCQUEwQjtBQUFBLE1BQ3BFLEVBQUUsTUFBTSxzQkFBc0IsT0FBTyxxQkFBcUI7QUFBQSxNQUMxRCxFQUFFLE1BQU0sbUJBQW1CLE9BQU8sa0JBQWtCO0FBQUEsTUFDcEQsRUFBRSxNQUFNLGNBQWMsT0FBTyxhQUFhO0FBQUEsSUFDNUM7QUFDQSxTQUFLLGVBQWU7QUFBQSxNQUNsQixFQUFFLE1BQU0saUJBQWlCLE9BQU8sRUFBRTtBQUFBLE1BQ2xDLEVBQUUsTUFBTSxpQkFBaUIsT0FBTyxFQUFFO0FBQUEsSUFDcEM7QUFDQSxTQUFLLGFBQWEsbUJBQWtCO0FBRXBDLFNBQUssaUJBQWlCLE1BQU07QUFDMUIsVUFBSSxDQUFDLEtBQUssVUFBVSxPQUFPO0FBQ3pCLGVBQU8sQ0FBQztBQUFBLE1BQ1Y7QUFDQSxhQUFPLDJDQUFHLENBQUMsS0FBSyxVQUFVLE1BQU0sU0FBUyxDQUFDLFFBQWE7QUFDckQsZUFBTyxJQUFJO0FBQUEsTUFDYixDQUFDO0FBQUEsSUFDSDtBQUVBLFNBQUssZ0JBQWdCLEtBQUssY0FBYyxLQUFLLElBQUk7QUFBQSxFQUNuRDtBQUFBLEVBRUEsU0FBUztBQUNQLFNBQUssVUFBVSxPQUFPO0FBQUEsRUFDeEI7QUFBQSxFQUVBLGNBQWMsUUFBYTtBQUN6QixXQUFPLENBQUMsVUFBZTtBQUNyQixhQUFPLE9BQU87QUFDZCxXQUFLLFVBQVUsT0FBTztBQUFBLElBQ3hCO0FBQUEsRUFDRjtBQUFBLEVBRUEsaUJBQWlCO0FBQ2YsVUFBTSxlQUF1QjtBQUFBLE1BQzNCLE1BQU07QUFBQSxNQUNOLE1BQU07QUFBQSxNQUNOLE9BQU87QUFBQSxNQUNQLFVBQVU7QUFBQSxNQUNWLFFBQVEsQ0FBQywwQkFBMEIsNEJBQTRCLHlCQUF5QjtBQUFBLE1BQ3hGLFdBQVc7QUFBQSxNQUNYLFNBQVM7QUFBQSxNQUNULFlBQVk7QUFBQSxNQUNaLFlBQVksQ0FBQztBQUFBLE1BQ2IsYUFBYTtBQUFBLE1BQ2IsT0FBTztBQUFBLElBQ1Q7QUFFQSxVQUFNLFNBQVMsS0FBSyxNQUFNO0FBQzFCLFVBQU0sY0FBYyxPQUFPO0FBQzNCLFFBQUksZ0JBQWdCO0FBR3BCLFFBQUksY0FBYyxHQUFHO0FBQ25CLFlBQU0sT0FBTyxPQUFPLGNBQWMsQ0FBQztBQUNuQyxVQUFJLEtBQUssWUFBWSxRQUFRO0FBQzNCLHdCQUFnQixjQUFjO0FBQUEsTUFDaEM7QUFBQSxJQUNGO0FBRUEsV0FBTyxPQUFPLGVBQWUsR0FBRyxZQUFZO0FBQzVDLFNBQUssbUJBQW1CO0FBQUEsRUFDMUI7QUFBQSxFQUVBLGtCQUFrQixPQUFZO0FBQzVCLFNBQUssTUFBTSxTQUFTLCtDQUFPLENBQUMsS0FBSyxNQUFNLFFBQVEsS0FBSztBQUFBLEVBQ3REO0FBQUEsRUFFQSxpQkFBaUIsT0FBZTtBQUM5QixVQUFNLE1BQU0sS0FBSyxNQUFNLE9BQU8sS0FBSyxFQUFFO0FBQ3JDLFVBQU0sT0FBTyxJQUFJLENBQUM7QUFDbEIsUUFBSSxDQUFDLElBQUksSUFBSSxDQUFDO0FBQ2QsUUFBSSxDQUFDLElBQUk7QUFDVCxTQUFLLFVBQVUsT0FBTztBQUFBLEVBQ3hCO0FBQUEsRUFFQSxjQUFjLE9BQVksWUFBb0I7QUFDNUMsV0FBTyxDQUFDLGFBQXFCO0FBQzNCLFlBQU0sT0FBTyxVQUFVLElBQUk7QUFDM0IsV0FBSyxPQUFPO0FBQUEsSUFDZDtBQUFBLEVBQ0Y7QUFBQSxFQUVBLFlBQVksT0FBWTtBQUN0QixRQUFJLENBQUMsTUFBTSxXQUFXO0FBQ3BCLFlBQU0sWUFBWSxDQUFDO0FBQUEsSUFDckI7QUFDQSxVQUFNLFVBQVUsS0FBSyxFQUFFLE9BQU8sSUFBSSxNQUFNLEdBQUcsQ0FBQztBQUM1QyxTQUFLLFVBQVUsT0FBTztBQUFBLEVBQ3hCO0FBQUEsRUFFQSxlQUFlLE9BQVksT0FBZTtBQUN4QyxVQUFNLFVBQVUsT0FBTyxPQUFPLENBQUM7QUFDL0IsU0FBSyxVQUFVLE9BQU87QUFBQSxFQUN4QjtBQUFBLEVBRUEsWUFBWSxPQUFZO0FBQ3RCLFFBQUksQ0FBQyxNQUFNLFdBQVc7QUFDcEIsWUFBTSxZQUFZLENBQUM7QUFBQSxJQUNyQjtBQUNBLFVBQU0sVUFBVSxLQUFLLEVBQUUsTUFBTSxJQUFJLElBQUksSUFBSSxNQUFNLEdBQUcsQ0FBQztBQUNuRCxTQUFLLFVBQVUsT0FBTztBQUFBLEVBQ3hCO0FBQUEsRUFFQSxlQUFlLE9BQVksT0FBZTtBQUN4QyxVQUFNLFVBQVUsT0FBTyxPQUFPLENBQUM7QUFDL0IsU0FBSyxVQUFVLE9BQU87QUFBQSxFQUN4QjtBQUNGO0FBM0pPLElBQU0sb0JBQU47QUFBTSxrQkFlSyxpQkFBaUI7QUFBQSxFQUMvQixFQUFFLE1BQU0sUUFBUSxPQUFPLEdBQUc7QUFBQSxFQUMxQixFQUFFLE1BQU0sUUFBUSxPQUFPLE9BQU87QUFBQSxFQUM5QixFQUFFLE1BQU0sVUFBVSxPQUFPLFNBQVM7QUFBQSxFQUNsQyxFQUFFLE1BQU0sU0FBUyxPQUFPLFFBQVE7QUFDbEM7QUFwQlcsa0JBc0JKLFVBQVUsQ0FBQyxRQUFRO0FBdUlyQixTQUFTLG1CQUFtQjtBQUNqQztBQUNBLFNBQU87QUFBQSxJQUNMLFVBQVU7QUFBQSxJQUNWLE9BQU87QUFBQSxJQUNQLGFBQWE7QUFBQSxJQUNiLFlBQVk7QUFBQSxFQUNkO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ncmFmYW5hLy4vcHVibGljL2FwcC9wbHVnaW5zL3BhbmVsL3RhYmxlLW9sZC9jb2x1bW5fb3B0aW9ucy50cz9iNjg0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG1hcCwgd2l0aG91dCB9IGZyb20gJ2xvZGFzaCc7XG5cbmltcG9ydCB7IGdldFZhbHVlRm9ybWF0cyB9IGZyb20gJ0BncmFmYW5hL2RhdGEnO1xuXG5leHBvcnQgY2xhc3MgQ29sdW1uT3B0aW9uc0N0cmwge1xuICBwYW5lbDogYW55O1xuICBwYW5lbEN0cmw6IGFueTtcbiAgY29sb3JNb2RlczogYW55O1xuICBjb2x1bW5TdHlsZXM6IGFueTtcbiAgY29sdW1uVHlwZXM6IGFueTtcbiAgZm9udFNpemVzOiBhbnk7XG4gIGRhdGVGb3JtYXRzOiBhbnk7XG4gIGFkZENvbHVtblNlZ21lbnQ6IGFueTtcbiAgdW5pdEZvcm1hdHM6IGFueTtcbiAgZ2V0Q29sdW1uTmFtZXM6IGFueTtcbiAgYWN0aXZlU3R5bGVJbmRleDogbnVtYmVyO1xuICBtYXBwaW5nVHlwZXM6IGFueTtcblxuICBhbGlnblR5cGVzOiBhbnk7XG4gIHN0YXRpYyByZWFkb25seSBhbGlnblR5cGVzRW51bSA9IFtcbiAgICB7IHRleHQ6ICdhdXRvJywgdmFsdWU6ICcnIH0sXG4gICAgeyB0ZXh0OiAnbGVmdCcsIHZhbHVlOiAnbGVmdCcgfSxcbiAgICB7IHRleHQ6ICdjZW50ZXInLCB2YWx1ZTogJ2NlbnRlcicgfSxcbiAgICB7IHRleHQ6ICdyaWdodCcsIHZhbHVlOiAncmlnaHQnIH0sXG4gIF07XG5cbiAgc3RhdGljICRpbmplY3QgPSBbJyRzY29wZSddO1xuXG4gIGNvbnN0cnVjdG9yKCRzY29wZTogYW55KSB7XG4gICAgJHNjb3BlLmVkaXRvciA9IHRoaXM7XG5cbiAgICB0aGlzLmFjdGl2ZVN0eWxlSW5kZXggPSAwO1xuICAgIHRoaXMucGFuZWxDdHJsID0gJHNjb3BlLmN0cmw7XG4gICAgdGhpcy5wYW5lbCA9IHRoaXMucGFuZWxDdHJsLnBhbmVsO1xuICAgIHRoaXMudW5pdEZvcm1hdHMgPSBnZXRWYWx1ZUZvcm1hdHMoKTtcbiAgICB0aGlzLmNvbG9yTW9kZXMgPSBbXG4gICAgICB7IHRleHQ6ICdEaXNhYmxlZCcsIHZhbHVlOiBudWxsIH0sXG4gICAgICB7IHRleHQ6ICdDZWxsJywgdmFsdWU6ICdjZWxsJyB9LFxuICAgICAgeyB0ZXh0OiAnVmFsdWUnLCB2YWx1ZTogJ3ZhbHVlJyB9LFxuICAgICAgeyB0ZXh0OiAnUm93JywgdmFsdWU6ICdyb3cnIH0sXG4gICAgXTtcbiAgICB0aGlzLmNvbHVtblR5cGVzID0gW1xuICAgICAgeyB0ZXh0OiAnTnVtYmVyJywgdmFsdWU6ICdudW1iZXInIH0sXG4gICAgICB7IHRleHQ6ICdTdHJpbmcnLCB2YWx1ZTogJ3N0cmluZycgfSxcbiAgICAgIHsgdGV4dDogJ0RhdGUnLCB2YWx1ZTogJ2RhdGUnIH0sXG4gICAgICB7IHRleHQ6ICdIaWRkZW4nLCB2YWx1ZTogJ2hpZGRlbicgfSxcbiAgICBdO1xuICAgIHRoaXMuZm9udFNpemVzID0gWyc4MCUnLCAnOTAlJywgJzEwMCUnLCAnMTEwJScsICcxMjAlJywgJzEzMCUnLCAnMTUwJScsICcxNjAlJywgJzE4MCUnLCAnMjAwJScsICcyMjAlJywgJzI1MCUnXTtcbiAgICB0aGlzLmRhdGVGb3JtYXRzID0gW1xuICAgICAgeyB0ZXh0OiAnWVlZWS1NTS1ERCBISDptbTpzcycsIHZhbHVlOiAnWVlZWS1NTS1ERCBISDptbTpzcycgfSxcbiAgICAgIHsgdGV4dDogJ1lZWVktTU0tREQgSEg6bW06c3MuU1NTJywgdmFsdWU6ICdZWVlZLU1NLUREIEhIOm1tOnNzLlNTUycgfSxcbiAgICAgIHsgdGV4dDogJ01NL0REL1lZIGg6bW06c3MgYScsIHZhbHVlOiAnTU0vREQvWVkgaDptbTpzcyBhJyB9LFxuICAgICAgeyB0ZXh0OiAnTU1NTSBELCBZWVlZIExUJywgdmFsdWU6ICdNTU1NIEQsIFlZWVkgTFQnIH0sXG4gICAgICB7IHRleHQ6ICdZWVlZLU1NLUREJywgdmFsdWU6ICdZWVlZLU1NLUREJyB9LFxuICAgIF07XG4gICAgdGhpcy5tYXBwaW5nVHlwZXMgPSBbXG4gICAgICB7IHRleHQ6ICdWYWx1ZSB0byB0ZXh0JywgdmFsdWU6IDEgfSxcbiAgICAgIHsgdGV4dDogJ1JhbmdlIHRvIHRleHQnLCB2YWx1ZTogMiB9LFxuICAgIF07XG4gICAgdGhpcy5hbGlnblR5cGVzID0gQ29sdW1uT3B0aW9uc0N0cmwuYWxpZ25UeXBlc0VudW07XG5cbiAgICB0aGlzLmdldENvbHVtbk5hbWVzID0gKCkgPT4ge1xuICAgICAgaWYgKCF0aGlzLnBhbmVsQ3RybC50YWJsZSkge1xuICAgICAgICByZXR1cm4gW107XG4gICAgICB9XG4gICAgICByZXR1cm4gbWFwKHRoaXMucGFuZWxDdHJsLnRhYmxlLmNvbHVtbnMsIChjb2w6IGFueSkgPT4ge1xuICAgICAgICByZXR1cm4gY29sLnRleHQ7XG4gICAgICB9KTtcbiAgICB9O1xuXG4gICAgdGhpcy5vbkNvbG9yQ2hhbmdlID0gdGhpcy5vbkNvbG9yQ2hhbmdlLmJpbmQodGhpcyk7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgdGhpcy5wYW5lbEN0cmwucmVuZGVyKCk7XG4gIH1cblxuICBzZXRVbml0Rm9ybWF0KGNvbHVtbjogYW55KSB7XG4gICAgcmV0dXJuICh2YWx1ZTogYW55KSA9PiB7XG4gICAgICBjb2x1bW4udW5pdCA9IHZhbHVlO1xuICAgICAgdGhpcy5wYW5lbEN0cmwucmVuZGVyKCk7XG4gICAgfTtcbiAgfVxuXG4gIGFkZENvbHVtblN0eWxlKCkge1xuICAgIGNvbnN0IG5ld1N0eWxlUnVsZTogb2JqZWN0ID0ge1xuICAgICAgdW5pdDogJ3Nob3J0JyxcbiAgICAgIHR5cGU6ICdudW1iZXInLFxuICAgICAgYWxpYXM6ICcnLFxuICAgICAgZGVjaW1hbHM6IDIsXG4gICAgICBjb2xvcnM6IFsncmdiYSgyNDUsIDU0LCA1NCwgMC45KScsICdyZ2JhKDIzNywgMTI5LCA0MCwgMC44OSknLCAncmdiYSg1MCwgMTcyLCA0NSwgMC45NyknXSxcbiAgICAgIGNvbG9yTW9kZTogbnVsbCxcbiAgICAgIHBhdHRlcm46ICcnLFxuICAgICAgZGF0ZUZvcm1hdDogJ1lZWVktTU0tREQgSEg6bW06c3MnLFxuICAgICAgdGhyZXNob2xkczogW10sXG4gICAgICBtYXBwaW5nVHlwZTogMSxcbiAgICAgIGFsaWduOiAnYXV0bycsXG4gICAgfTtcblxuICAgIGNvbnN0IHN0eWxlcyA9IHRoaXMucGFuZWwuc3R5bGVzO1xuICAgIGNvbnN0IHN0eWxlc0NvdW50ID0gc3R5bGVzLmxlbmd0aDtcbiAgICBsZXQgaW5kZXhUb0luc2VydCA9IHN0eWxlc0NvdW50O1xuXG4gICAgLy8gY2hlY2sgaWYgbGFzdCBpcyBhIGNhdGNoIGFsbCBydWxlLCB0aGVuIGFkZCBpdCBiZWZvcmUgdGhhdCBvbmVcbiAgICBpZiAoc3R5bGVzQ291bnQgPiAwKSB7XG4gICAgICBjb25zdCBsYXN0ID0gc3R5bGVzW3N0eWxlc0NvdW50IC0gMV07XG4gICAgICBpZiAobGFzdC5wYXR0ZXJuID09PSAnLy4qLycpIHtcbiAgICAgICAgaW5kZXhUb0luc2VydCA9IHN0eWxlc0NvdW50IC0gMTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBzdHlsZXMuc3BsaWNlKGluZGV4VG9JbnNlcnQsIDAsIG5ld1N0eWxlUnVsZSk7XG4gICAgdGhpcy5hY3RpdmVTdHlsZUluZGV4ID0gaW5kZXhUb0luc2VydDtcbiAgfVxuXG4gIHJlbW92ZUNvbHVtblN0eWxlKHN0eWxlOiBhbnkpIHtcbiAgICB0aGlzLnBhbmVsLnN0eWxlcyA9IHdpdGhvdXQodGhpcy5wYW5lbC5zdHlsZXMsIHN0eWxlKTtcbiAgfVxuXG4gIGludmVydENvbG9yT3JkZXIoaW5kZXg6IG51bWJlcikge1xuICAgIGNvbnN0IHJlZiA9IHRoaXMucGFuZWwuc3R5bGVzW2luZGV4XS5jb2xvcnM7XG4gICAgY29uc3QgY29weSA9IHJlZlswXTtcbiAgICByZWZbMF0gPSByZWZbMl07XG4gICAgcmVmWzJdID0gY29weTtcbiAgICB0aGlzLnBhbmVsQ3RybC5yZW5kZXIoKTtcbiAgfVxuXG4gIG9uQ29sb3JDaGFuZ2Uoc3R5bGU6IGFueSwgY29sb3JJbmRleDogbnVtYmVyKSB7XG4gICAgcmV0dXJuIChuZXdDb2xvcjogc3RyaW5nKSA9PiB7XG4gICAgICBzdHlsZS5jb2xvcnNbY29sb3JJbmRleF0gPSBuZXdDb2xvcjtcbiAgICAgIHRoaXMucmVuZGVyKCk7XG4gICAgfTtcbiAgfVxuXG4gIGFkZFZhbHVlTWFwKHN0eWxlOiBhbnkpIHtcbiAgICBpZiAoIXN0eWxlLnZhbHVlTWFwcykge1xuICAgICAgc3R5bGUudmFsdWVNYXBzID0gW107XG4gICAgfVxuICAgIHN0eWxlLnZhbHVlTWFwcy5wdXNoKHsgdmFsdWU6ICcnLCB0ZXh0OiAnJyB9KTtcbiAgICB0aGlzLnBhbmVsQ3RybC5yZW5kZXIoKTtcbiAgfVxuXG4gIHJlbW92ZVZhbHVlTWFwKHN0eWxlOiBhbnksIGluZGV4OiBudW1iZXIpIHtcbiAgICBzdHlsZS52YWx1ZU1hcHMuc3BsaWNlKGluZGV4LCAxKTtcbiAgICB0aGlzLnBhbmVsQ3RybC5yZW5kZXIoKTtcbiAgfVxuXG4gIGFkZFJhbmdlTWFwKHN0eWxlOiBhbnkpIHtcbiAgICBpZiAoIXN0eWxlLnJhbmdlTWFwcykge1xuICAgICAgc3R5bGUucmFuZ2VNYXBzID0gW107XG4gICAgfVxuICAgIHN0eWxlLnJhbmdlTWFwcy5wdXNoKHsgZnJvbTogJycsIHRvOiAnJywgdGV4dDogJycgfSk7XG4gICAgdGhpcy5wYW5lbEN0cmwucmVuZGVyKCk7XG4gIH1cblxuICByZW1vdmVSYW5nZU1hcChzdHlsZTogYW55LCBpbmRleDogbnVtYmVyKSB7XG4gICAgc3R5bGUucmFuZ2VNYXBzLnNwbGljZShpbmRleCwgMSk7XG4gICAgdGhpcy5wYW5lbEN0cmwucmVuZGVyKCk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNvbHVtbk9wdGlvbnNUYWIoKSB7XG4gICd1c2Ugc3RyaWN0JztcbiAgcmV0dXJuIHtcbiAgICByZXN0cmljdDogJ0UnLFxuICAgIHNjb3BlOiB0cnVlLFxuICAgIHRlbXBsYXRlVXJsOiAncHVibGljL2FwcC9wbHVnaW5zL3BhbmVsL3RhYmxlLW9sZC9jb2x1bW5fb3B0aW9ucy5odG1sJyxcbiAgICBjb250cm9sbGVyOiBDb2x1bW5PcHRpb25zQ3RybCxcbiAgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./public/app/plugins/panel/table-old/column_options.ts\n");

/***/ }),

/***/ "./public/app/plugins/panel/table-old/editor.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TablePanelEditorCtrl: () => (/* binding */ TablePanelEditorCtrl),\n/* harmony export */   tablePanelEditor: () => (/* binding */ tablePanelEditor)\n/* harmony export */ });\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/lodash-npm-4.17.21-6382451519-eb835a2e51.zip/node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _transformers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/plugins/panel/table-old/transformers.ts\");\n\n\n\nclass TablePanelEditorCtrl {\n  constructor($scope, uiSegmentSrv) {\n    this.uiSegmentSrv = uiSegmentSrv;\n    this.canSetColumns = false;\n    this.columnsHelpMessage = \"\";\n    $scope.editor = this;\n    this.panelCtrl = $scope.ctrl;\n    this.panel = this.panelCtrl.panel;\n    this.transformers = _transformers__WEBPACK_IMPORTED_MODULE_1__.transformers;\n    this.fontSizes = [\"80%\", \"90%\", \"100%\", \"110%\", \"120%\", \"130%\", \"150%\", \"160%\", \"180%\", \"200%\", \"220%\", \"250%\"];\n    this.addColumnSegment = uiSegmentSrv.newPlusButton();\n    this.updateTransformHints();\n  }\n  updateTransformHints() {\n    this.canSetColumns = false;\n    this.columnsHelpMessage = \"\";\n    switch (this.panel.transform) {\n      case \"timeseries_aggregations\": {\n        this.canSetColumns = true;\n        break;\n      }\n      case \"json\": {\n        this.canSetColumns = true;\n        break;\n      }\n      case \"table\": {\n        this.columnsHelpMessage = \"Columns and their order are determined by the data query\";\n      }\n    }\n  }\n  getColumnOptions() {\n    if (!this.panelCtrl.dataRaw) {\n      return Promise.resolve([]);\n    }\n    const columns = this.transformers[this.panel.transform].getColumns(this.panelCtrl.dataRaw);\n    const segments = (0,lodash__WEBPACK_IMPORTED_MODULE_0__.map)(columns, (c) => this.uiSegmentSrv.newSegment({ value: c.text }));\n    return Promise.resolve(segments);\n  }\n  addColumn() {\n    const columns = _transformers__WEBPACK_IMPORTED_MODULE_1__.transformers[this.panel.transform].getColumns(this.panelCtrl.dataRaw);\n    const column = (0,lodash__WEBPACK_IMPORTED_MODULE_0__.find)(columns, { text: this.addColumnSegment.value });\n    if (column) {\n      this.panel.columns.push(column);\n      this.render();\n    }\n    const plusButton = this.uiSegmentSrv.newPlusButton();\n    this.addColumnSegment.html = plusButton.html;\n    this.addColumnSegment.value = plusButton.value;\n  }\n  transformChanged() {\n    this.panel.columns = [];\n    if (this.panel.transform === \"annotations\") {\n      this.panelCtrl.refresh();\n    } else {\n      if (this.panel.transform === \"timeseries_aggregations\") {\n        this.panel.columns.push({ text: \"Avg\", value: \"avg\" });\n      }\n      this.updateTransformHints();\n      this.render();\n    }\n  }\n  render() {\n    this.panelCtrl.render();\n  }\n  removeColumn(column) {\n    this.panel.columns = (0,lodash__WEBPACK_IMPORTED_MODULE_0__.without)(this.panel.columns, column);\n    this.panelCtrl.render();\n  }\n}\nTablePanelEditorCtrl.$inject = [\"$scope\", \"uiSegmentSrv\"];\nfunction tablePanelEditor(uiSegmentSrv) {\n  \"use strict\";\n  return {\n    restrict: \"E\",\n    scope: true,\n    templateUrl: \"public/app/plugins/panel/table-old/editor.html\",\n    controller: TablePanelEditorCtrl\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvcGFuZWwvdGFibGUtb2xkL2VkaXRvci50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBbUM7QUFFTjtBQUd0QixNQUFNLHFCQUFxQjtBQUFBLEVBWWhDLFlBQ0UsUUFDUSxjQUNSO0FBRFE7QUFQVix5QkFBZ0I7QUFDaEIsOEJBQXFCO0FBUW5CLFdBQU8sU0FBUztBQUNoQixTQUFLLFlBQVksT0FBTztBQUN4QixTQUFLLFFBQVEsS0FBSyxVQUFVO0FBQzVCLFNBQUssZUFBZSx1REFBWTtBQUNoQyxTQUFLLFlBQVksQ0FBQyxPQUFPLE9BQU8sUUFBUSxRQUFRLFFBQVEsUUFBUSxRQUFRLFFBQVEsUUFBUSxRQUFRLFFBQVEsTUFBTTtBQUM5RyxTQUFLLG1CQUFtQixhQUFhLGNBQWM7QUFDbkQsU0FBSyxxQkFBcUI7QUFBQSxFQUM1QjtBQUFBLEVBRUEsdUJBQXVCO0FBQ3JCLFNBQUssZ0JBQWdCO0FBQ3JCLFNBQUsscUJBQXFCO0FBRTFCLFlBQVEsS0FBSyxNQUFNLFdBQVc7QUFBQSxNQUM1QixLQUFLLDJCQUEyQjtBQUM5QixhQUFLLGdCQUFnQjtBQUNyQjtBQUFBLE1BQ0Y7QUFBQSxNQUNBLEtBQUssUUFBUTtBQUNYLGFBQUssZ0JBQWdCO0FBQ3JCO0FBQUEsTUFDRjtBQUFBLE1BQ0EsS0FBSyxTQUFTO0FBQ1osYUFBSyxxQkFBcUI7QUFBQSxNQUM1QjtBQUFBLElBQ0Y7QUFBQSxFQUNGO0FBQUEsRUFFQSxtQkFBbUI7QUFDakIsUUFBSSxDQUFDLEtBQUssVUFBVSxTQUFTO0FBQzNCLGFBQU8sUUFBUSxRQUFRLENBQUMsQ0FBQztBQUFBLElBQzNCO0FBQ0EsVUFBTSxVQUFVLEtBQUssYUFBYSxLQUFLLE1BQU0sU0FBUyxFQUFFLFdBQVcsS0FBSyxVQUFVLE9BQU87QUFDekYsVUFBTSxXQUFXLDJDQUFHLENBQUMsU0FBUyxDQUFDLE1BQVcsS0FBSyxhQUFhLFdBQVcsRUFBRSxPQUFPLEVBQUUsS0FBSyxDQUFDLENBQUM7QUFDekYsV0FBTyxRQUFRLFFBQVEsUUFBUTtBQUFBLEVBQ2pDO0FBQUEsRUFFQSxZQUFZO0FBQ1YsVUFBTSxVQUFVLHVEQUFZLENBQUMsS0FBSyxNQUFNLFNBQVMsRUFBRSxXQUFXLEtBQUssVUFBVSxPQUFPO0FBQ3BGLFVBQU0sU0FBYyw0Q0FBSSxDQUFDLFNBQVMsRUFBRSxNQUFNLEtBQUssaUJBQWlCLE1BQU0sQ0FBQztBQUV2RSxRQUFJLFFBQVE7QUFDVixXQUFLLE1BQU0sUUFBUSxLQUFLLE1BQU07QUFDOUIsV0FBSyxPQUFPO0FBQUEsSUFDZDtBQUVBLFVBQU0sYUFBYSxLQUFLLGFBQWEsY0FBYztBQUNuRCxTQUFLLGlCQUFpQixPQUFPLFdBQVc7QUFDeEMsU0FBSyxpQkFBaUIsUUFBUSxXQUFXO0FBQUEsRUFDM0M7QUFBQSxFQUVBLG1CQUFtQjtBQUNqQixTQUFLLE1BQU0sVUFBVSxDQUFDO0FBQ3RCLFFBQUksS0FBSyxNQUFNLGNBQWMsZUFBZTtBQUMxQyxXQUFLLFVBQVUsUUFBUTtBQUFBLElBQ3pCLE9BQU87QUFDTCxVQUFJLEtBQUssTUFBTSxjQUFjLDJCQUEyQjtBQUN0RCxhQUFLLE1BQU0sUUFBUSxLQUFLLEVBQUUsTUFBTSxPQUFPLE9BQU8sTUFBTSxDQUFDO0FBQUEsTUFDdkQ7QUFFQSxXQUFLLHFCQUFxQjtBQUMxQixXQUFLLE9BQU87QUFBQSxJQUNkO0FBQUEsRUFDRjtBQUFBLEVBRUEsU0FBUztBQUNQLFNBQUssVUFBVSxPQUFPO0FBQUEsRUFDeEI7QUFBQSxFQUVBLGFBQWEsUUFBcUI7QUFDaEMsU0FBSyxNQUFNLFVBQVUsK0NBQU8sQ0FBQyxLQUFLLE1BQU0sU0FBUyxNQUFNO0FBQ3ZELFNBQUssVUFBVSxPQUFPO0FBQUEsRUFDeEI7QUFDRjtBQXpGYSxxQkFVSixVQUFVLENBQUMsVUFBVSxjQUFjO0FBaUZyQyxTQUFTLGlCQUFpQixjQUFtQjtBQUNsRDtBQUNBLFNBQU87QUFBQSxJQUNMLFVBQVU7QUFBQSxJQUNWLE9BQU87QUFBQSxJQUNQLGFBQWE7QUFBQSxJQUNiLFlBQVk7QUFBQSxFQUNkO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ncmFmYW5hLy4vcHVibGljL2FwcC9wbHVnaW5zL3BhbmVsL3RhYmxlLW9sZC9lZGl0b3IudHM/NzZjMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBmaW5kLCBtYXAsIHdpdGhvdXQgfSBmcm9tICdsb2Rhc2gnO1xuXG5pbXBvcnQgeyB0cmFuc2Zvcm1lcnMgfSBmcm9tICcuL3RyYW5zZm9ybWVycyc7XG5pbXBvcnQgeyBDb2x1bW5TdHlsZSB9IGZyb20gJy4vdHlwZXMnO1xuXG5leHBvcnQgY2xhc3MgVGFibGVQYW5lbEVkaXRvckN0cmwge1xuICBwYW5lbDogYW55O1xuICBwYW5lbEN0cmw6IGFueTtcbiAgdHJhbnNmb3JtZXJzOiBhbnk7XG4gIGZvbnRTaXplczogYW55O1xuICBhZGRDb2x1bW5TZWdtZW50OiBhbnk7XG4gIGdldENvbHVtbk5hbWVzOiBhbnk7XG4gIGNhblNldENvbHVtbnMgPSBmYWxzZTtcbiAgY29sdW1uc0hlbHBNZXNzYWdlID0gJyc7XG5cbiAgc3RhdGljICRpbmplY3QgPSBbJyRzY29wZScsICd1aVNlZ21lbnRTcnYnXTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICAkc2NvcGU6IGFueSxcbiAgICBwcml2YXRlIHVpU2VnbWVudFNydjogYW55XG4gICkge1xuICAgICRzY29wZS5lZGl0b3IgPSB0aGlzO1xuICAgIHRoaXMucGFuZWxDdHJsID0gJHNjb3BlLmN0cmw7XG4gICAgdGhpcy5wYW5lbCA9IHRoaXMucGFuZWxDdHJsLnBhbmVsO1xuICAgIHRoaXMudHJhbnNmb3JtZXJzID0gdHJhbnNmb3JtZXJzO1xuICAgIHRoaXMuZm9udFNpemVzID0gWyc4MCUnLCAnOTAlJywgJzEwMCUnLCAnMTEwJScsICcxMjAlJywgJzEzMCUnLCAnMTUwJScsICcxNjAlJywgJzE4MCUnLCAnMjAwJScsICcyMjAlJywgJzI1MCUnXTtcbiAgICB0aGlzLmFkZENvbHVtblNlZ21lbnQgPSB1aVNlZ21lbnRTcnYubmV3UGx1c0J1dHRvbigpO1xuICAgIHRoaXMudXBkYXRlVHJhbnNmb3JtSGludHMoKTtcbiAgfVxuXG4gIHVwZGF0ZVRyYW5zZm9ybUhpbnRzKCkge1xuICAgIHRoaXMuY2FuU2V0Q29sdW1ucyA9IGZhbHNlO1xuICAgIHRoaXMuY29sdW1uc0hlbHBNZXNzYWdlID0gJyc7XG5cbiAgICBzd2l0Y2ggKHRoaXMucGFuZWwudHJhbnNmb3JtKSB7XG4gICAgICBjYXNlICd0aW1lc2VyaWVzX2FnZ3JlZ2F0aW9ucyc6IHtcbiAgICAgICAgdGhpcy5jYW5TZXRDb2x1bW5zID0gdHJ1ZTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBjYXNlICdqc29uJzoge1xuICAgICAgICB0aGlzLmNhblNldENvbHVtbnMgPSB0cnVlO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIGNhc2UgJ3RhYmxlJzoge1xuICAgICAgICB0aGlzLmNvbHVtbnNIZWxwTWVzc2FnZSA9ICdDb2x1bW5zIGFuZCB0aGVpciBvcmRlciBhcmUgZGV0ZXJtaW5lZCBieSB0aGUgZGF0YSBxdWVyeSc7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZ2V0Q29sdW1uT3B0aW9ucygpIHtcbiAgICBpZiAoIXRoaXMucGFuZWxDdHJsLmRhdGFSYXcpIHtcbiAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoW10pO1xuICAgIH1cbiAgICBjb25zdCBjb2x1bW5zID0gdGhpcy50cmFuc2Zvcm1lcnNbdGhpcy5wYW5lbC50cmFuc2Zvcm1dLmdldENvbHVtbnModGhpcy5wYW5lbEN0cmwuZGF0YVJhdyk7XG4gICAgY29uc3Qgc2VnbWVudHMgPSBtYXAoY29sdW1ucywgKGM6IGFueSkgPT4gdGhpcy51aVNlZ21lbnRTcnYubmV3U2VnbWVudCh7IHZhbHVlOiBjLnRleHQgfSkpO1xuICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoc2VnbWVudHMpO1xuICB9XG5cbiAgYWRkQ29sdW1uKCkge1xuICAgIGNvbnN0IGNvbHVtbnMgPSB0cmFuc2Zvcm1lcnNbdGhpcy5wYW5lbC50cmFuc2Zvcm1dLmdldENvbHVtbnModGhpcy5wYW5lbEN0cmwuZGF0YVJhdyk7XG4gICAgY29uc3QgY29sdW1uOiBhbnkgPSBmaW5kKGNvbHVtbnMsIHsgdGV4dDogdGhpcy5hZGRDb2x1bW5TZWdtZW50LnZhbHVlIH0pO1xuXG4gICAgaWYgKGNvbHVtbikge1xuICAgICAgdGhpcy5wYW5lbC5jb2x1bW5zLnB1c2goY29sdW1uKTtcbiAgICAgIHRoaXMucmVuZGVyKCk7XG4gICAgfVxuXG4gICAgY29uc3QgcGx1c0J1dHRvbiA9IHRoaXMudWlTZWdtZW50U3J2Lm5ld1BsdXNCdXR0b24oKTtcbiAgICB0aGlzLmFkZENvbHVtblNlZ21lbnQuaHRtbCA9IHBsdXNCdXR0b24uaHRtbDtcbiAgICB0aGlzLmFkZENvbHVtblNlZ21lbnQudmFsdWUgPSBwbHVzQnV0dG9uLnZhbHVlO1xuICB9XG5cbiAgdHJhbnNmb3JtQ2hhbmdlZCgpIHtcbiAgICB0aGlzLnBhbmVsLmNvbHVtbnMgPSBbXTtcbiAgICBpZiAodGhpcy5wYW5lbC50cmFuc2Zvcm0gPT09ICdhbm5vdGF0aW9ucycpIHtcbiAgICAgIHRoaXMucGFuZWxDdHJsLnJlZnJlc2goKTtcbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKHRoaXMucGFuZWwudHJhbnNmb3JtID09PSAndGltZXNlcmllc19hZ2dyZWdhdGlvbnMnKSB7XG4gICAgICAgIHRoaXMucGFuZWwuY29sdW1ucy5wdXNoKHsgdGV4dDogJ0F2ZycsIHZhbHVlOiAnYXZnJyB9KTtcbiAgICAgIH1cblxuICAgICAgdGhpcy51cGRhdGVUcmFuc2Zvcm1IaW50cygpO1xuICAgICAgdGhpcy5yZW5kZXIoKTtcbiAgICB9XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgdGhpcy5wYW5lbEN0cmwucmVuZGVyKCk7XG4gIH1cblxuICByZW1vdmVDb2x1bW4oY29sdW1uOiBDb2x1bW5TdHlsZSkge1xuICAgIHRoaXMucGFuZWwuY29sdW1ucyA9IHdpdGhvdXQodGhpcy5wYW5lbC5jb2x1bW5zLCBjb2x1bW4pO1xuICAgIHRoaXMucGFuZWxDdHJsLnJlbmRlcigpO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB0YWJsZVBhbmVsRWRpdG9yKHVpU2VnbWVudFNydjogYW55KSB7XG4gICd1c2Ugc3RyaWN0JztcbiAgcmV0dXJuIHtcbiAgICByZXN0cmljdDogJ0UnLFxuICAgIHNjb3BlOiB0cnVlLFxuICAgIHRlbXBsYXRlVXJsOiAncHVibGljL2FwcC9wbHVnaW5zL3BhbmVsL3RhYmxlLW9sZC9lZGl0b3IuaHRtbCcsXG4gICAgY29udHJvbGxlcjogVGFibGVQYW5lbEVkaXRvckN0cmwsXG4gIH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./public/app/plugins/panel/table-old/editor.ts\n");

/***/ }),

/***/ "./public/app/plugins/panel/table-old/module.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TablePanelCtrl: () => (/* binding */ TablePanelCtrl),\n/* harmony export */   plugin: () => (/* binding */ plugin)\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/jquery-npm-3.7.0-a02a382bf4-907785e133.zip/node_modules/jquery/dist/jquery-exposed.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/cache/lodash-npm-4.17.21-6382451519-eb835a2e51.zip/node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/types/legacyEvents.ts\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/dataframe/processDataFrame.ts\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/panel/PanelPlugin.ts\");\n/* harmony import */ var app_core_config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/core/config.ts\");\n/* harmony import */ var app_features_variables_adhoc_actions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./public/app/features/variables/adhoc/actions.ts\");\n/* harmony import */ var app_plugins_sdk__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./public/app/plugins/sdk.ts\");\n/* harmony import */ var app_store_store__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./public/app/store/store.ts\");\n/* harmony import */ var _column_options__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./public/app/plugins/panel/table-old/column_options.ts\");\n/* harmony import */ var _editor__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\"./public/app/plugins/panel/table-old/editor.ts\");\n/* harmony import */ var _renderer__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(\"./public/app/plugins/panel/table-old/renderer.ts\");\n/* harmony import */ var _transformers__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(\"./public/app/plugins/panel/table-old/transformers.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\nclass TablePanelCtrl extends app_plugins_sdk__WEBPACK_IMPORTED_MODULE_4__.MetricsPanelCtrl {\n  constructor($scope, $injector, annotationsSrv, $sanitize) {\n    super($scope, $injector);\n    this.annotationsSrv = annotationsSrv;\n    this.$sanitize = $sanitize;\n    this.panelDefaults = {\n      targets: [{}],\n      transform: \"timeseries_to_columns\",\n      pageSize: null,\n      showHeader: true,\n      styles: [\n        {\n          type: \"date\",\n          pattern: \"Time\",\n          alias: \"Time\",\n          dateFormat: \"YYYY-MM-DD HH:mm:ss\",\n          align: \"auto\"\n        },\n        {\n          unit: \"short\",\n          type: \"number\",\n          alias: \"\",\n          decimals: 2,\n          colors: [\"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\"],\n          colorMode: null,\n          pattern: \"/.*/\",\n          thresholds: [],\n          align: \"right\"\n        }\n      ],\n      columns: [],\n      fontSize: \"100%\",\n      sort: { col: 0, desc: true }\n    };\n    this.pageIndex = 0;\n    if (this.panel.styles === void 0) {\n      this.panel.styles = this.panel.columns;\n      this.panel.columns = this.panel.fields;\n      delete this.panel.columns;\n      delete this.panel.fields;\n    }\n    (0,lodash__WEBPACK_IMPORTED_MODULE_1__.defaults)(this.panel, this.panelDefaults);\n    this.panelHasRowColorMode = Boolean(this.panel.styles.find((style) => style.colorMode === \"row\"));\n    this.panelHasLinks = Boolean(this.panel.styles.find((style) => style.link));\n    this.events.on(_grafana_data__WEBPACK_IMPORTED_MODULE_10__.PanelEvents.dataReceived, this.onDataReceived.bind(this));\n    this.events.on(_grafana_data__WEBPACK_IMPORTED_MODULE_10__.PanelEvents.dataSnapshotLoad, this.onDataReceived.bind(this));\n    this.events.on(_grafana_data__WEBPACK_IMPORTED_MODULE_10__.PanelEvents.editModeInitialized, this.onInitEditMode.bind(this));\n  }\n  onInitEditMode() {\n    this.addEditorTab(\"Options\", _editor__WEBPACK_IMPORTED_MODULE_7__.tablePanelEditor, 2);\n    this.addEditorTab(\"Column Styles\", _column_options__WEBPACK_IMPORTED_MODULE_6__.columnOptionsTab, 3);\n  }\n  migrateToPanel(type) {\n    this.onPluginTypeChange(app_core_config__WEBPACK_IMPORTED_MODULE_2__[\"default\"].panels[type]);\n  }\n  issueQueries(datasource) {\n    this.pageIndex = 0;\n    if (this.panel.transform === \"annotations\") {\n      return this.annotationsSrv.getAnnotations({\n        dashboard: this.dashboard,\n        panel: this.panel,\n        range: this.range\n      }).then((anno) => {\n        this.loading = false;\n        this.dataRaw = anno;\n        this.pageIndex = 0;\n        this.render();\n        return { data: this.dataRaw };\n      });\n    }\n    return super.issueQueries(datasource);\n  }\n  onDataReceived(dataList) {\n    this.dataRaw = dataList;\n    this.pageIndex = 0;\n    if (this.dataRaw && this.dataRaw.length) {\n      if ((0,_grafana_data__WEBPACK_IMPORTED_MODULE_11__.isTableData)(this.dataRaw[0])) {\n        this.panel.transform = \"table\";\n      } else {\n        if (this.dataRaw[0].type === \"docs\") {\n          this.panel.transform = \"json\";\n        } else {\n          if (this.panel.transform === \"table\" || this.panel.transform === \"json\") {\n            this.panel.transform = \"timeseries_to_rows\";\n          }\n        }\n      }\n    }\n    this.render();\n  }\n  render() {\n    this.table = (0,_transformers__WEBPACK_IMPORTED_MODULE_9__.transformDataToTable)(this.dataRaw, this.panel);\n    this.table.sort(this.panel.sort);\n    this.renderer = new _renderer__WEBPACK_IMPORTED_MODULE_8__.TableRenderer(\n      this.panel,\n      this.table,\n      this.dashboard.getTimezone(),\n      this.$sanitize,\n      this.templateSrv,\n      app_core_config__WEBPACK_IMPORTED_MODULE_2__[\"default\"].theme2\n    );\n    return super.render(this.table);\n  }\n  toggleColumnSort(col, colIndex) {\n    if (this.table.columns[this.panel.sort.col]) {\n      this.table.columns[this.panel.sort.col].sort = false;\n    }\n    if (this.panel.sort.col === colIndex) {\n      if (this.panel.sort.desc) {\n        this.panel.sort.desc = false;\n      } else {\n        this.panel.sort.col = null;\n      }\n    } else {\n      this.panel.sort.col = colIndex;\n      this.panel.sort.desc = true;\n    }\n    this.render();\n  }\n  link(scope, elem, attrs, ctrl) {\n    let data;\n    const panel = ctrl.panel;\n    let pageCount = 0;\n    function getTableHeight() {\n      let panelHeight = ctrl.height;\n      if (pageCount > 1) {\n        panelHeight -= 26;\n      }\n      return panelHeight - 31 + \"px\";\n    }\n    function appendTableRows(tbodyElem) {\n      ctrl.renderer.setTable(data);\n      tbodyElem.empty();\n      tbodyElem.html(ctrl.renderer.render(ctrl.pageIndex));\n    }\n    function switchPage(e) {\n      const el = jquery__WEBPACK_IMPORTED_MODULE_0___default()(e.currentTarget);\n      ctrl.pageIndex = parseInt(el.text(), 10) - 1;\n      renderPanel();\n    }\n    function appendPaginationControls(footerElem) {\n      footerElem.empty();\n      const pageSize = panel.pageSize || 100;\n      pageCount = Math.ceil(data.rows.length / pageSize);\n      if (pageCount === 1) {\n        return;\n      }\n      const startPage = Math.max(ctrl.pageIndex - 3, 0);\n      const endPage = Math.min(pageCount, startPage + 9);\n      const paginationList = jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"<ul></ul>\");\n      for (let i = startPage; i < endPage; i++) {\n        const activeClass = i === ctrl.pageIndex ? \"active\" : \"\";\n        const pageLinkElem = jquery__WEBPACK_IMPORTED_MODULE_0___default()(\n          '<li><a class=\"table-panel-page-link pointer ' + activeClass + '\">' + (i + 1) + \"</a></li>\"\n        );\n        paginationList.append(pageLinkElem);\n      }\n      footerElem.append(paginationList);\n    }\n    function renderPanel() {\n      const panelElem = elem.parents(\".panel-content\");\n      const rootElem = elem.find(\".table-panel-scroll\");\n      const tbodyElem = elem.find(\"tbody\");\n      const footerElem = elem.find(\".table-panel-footer\");\n      elem.css({ \"font-size\": panel.fontSize });\n      panelElem.addClass(\"table-panel-content\");\n      appendTableRows(tbodyElem);\n      appendPaginationControls(footerElem);\n      rootElem.css({ \"max-height\": getTableHeight() });\n    }\n    elem.tooltip({\n      selector: \"[data-link-tooltip]\"\n    });\n    function addFilterClicked(e) {\n      const filterData = jquery__WEBPACK_IMPORTED_MODULE_0___default()(e.currentTarget).data();\n      const options = {\n        datasource: panel.datasource,\n        key: data.columns[filterData.column].text,\n        value: data.rows[filterData.row][filterData.column],\n        operator: filterData.operator\n      };\n      (0,app_store_store__WEBPACK_IMPORTED_MODULE_5__.dispatch)((0,app_features_variables_adhoc_actions__WEBPACK_IMPORTED_MODULE_3__.applyFilterFromTable)(options));\n    }\n    elem.on(\"click\", \".table-panel-page-link\", switchPage);\n    elem.on(\"click\", \".table-panel-filter-link\", addFilterClicked);\n    const unbindDestroy = scope.$on(\"$destroy\", () => {\n      elem.off(\"click\", \".table-panel-page-link\");\n      elem.off(\"click\", \".table-panel-filter-link\");\n      unbindDestroy();\n    });\n    ctrl.events.on(_grafana_data__WEBPACK_IMPORTED_MODULE_10__.PanelEvents.render, (renderData) => {\n      data = renderData || data;\n      if (data) {\n        renderPanel();\n      }\n      ctrl.renderingCompleted();\n    });\n  }\n}\nTablePanelCtrl.templateUrl = \"module.html\";\nTablePanelCtrl.$inject = [\"$scope\", \"$injector\", \"annotationsSrv\", \"$sanitize\"];\nconst plugin = new _grafana_data__WEBPACK_IMPORTED_MODULE_12__.PanelPlugin(null);\nplugin.angularPanelCtrl = TablePanelCtrl;\nplugin.setNoPadding();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/app/plugins/panel/table-old/module.ts\n");

/***/ }),

/***/ "./public/app/plugins/panel/table-old/renderer.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TableRenderer: () => (/* binding */ TableRenderer)\n/* harmony export */ });\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/lodash-npm-4.17.21-6382451519-eb835a2e51.zip/node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/text/string.ts\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/text/index.ts\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/datetime/formatter.ts\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/valueFormats/valueFormats.ts\");\n/* harmony import */ var _grafana_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-runtime-virtual-68c57d4c0c/1/packages/grafana-runtime/src/services/templateSrv.ts\");\n/* harmony import */ var _column_options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/plugins/panel/table-old/column_options.ts\");\n\n\n\n\n\nclass TableRenderer {\n  constructor(panel, table, timeZone, sanitize, templateSrv = (0,_grafana_runtime__WEBPACK_IMPORTED_MODULE_2__.getTemplateSrv)(), theme) {\n    this.panel = panel;\n    this.table = table;\n    this.timeZone = timeZone;\n    this.sanitize = sanitize;\n    this.templateSrv = templateSrv;\n    this.theme = theme;\n    this.formatters = [];\n    this.initColumns();\n  }\n  setTable(table) {\n    this.table = table;\n    this.initColumns();\n  }\n  initColumns() {\n    this.formatters = [];\n    this.colorState = {};\n    for (let colIndex = 0; colIndex < this.table.columns.length; colIndex++) {\n      const column = this.table.columns[colIndex];\n      column.title = column.text;\n      for (let i = 0; i < this.panel.styles.length; i++) {\n        const style = this.panel.styles[i];\n        const escapedPattern = (0,_grafana_data__WEBPACK_IMPORTED_MODULE_3__.stringStartsAsRegEx)(style.pattern) ? style.pattern : (0,_grafana_data__WEBPACK_IMPORTED_MODULE_3__.escapeStringForRegex)((0,_grafana_data__WEBPACK_IMPORTED_MODULE_3__.unEscapeStringFromRegex)(style.pattern));\n        const regex = (0,_grafana_data__WEBPACK_IMPORTED_MODULE_3__.stringToJsRegex)(escapedPattern);\n        if (column.text.match(regex)) {\n          column.style = style;\n          if (style.alias) {\n            column.title = _grafana_data__WEBPACK_IMPORTED_MODULE_4__.textUtil.escapeHtml(column.text.replace(regex, style.alias));\n          }\n          break;\n        }\n      }\n      this.formatters[colIndex] = this.createColumnFormatter(column);\n    }\n  }\n  getColorForValue(value, style) {\n    if (!style.thresholds || !style.colors) {\n      return null;\n    }\n    for (let i = style.thresholds.length; i > 0; i--) {\n      if (value >= style.thresholds[i - 1]) {\n        return this.theme.visualization.getColorByName(style.colors[i]);\n      }\n    }\n    return this.theme.visualization.getColorByName((0,lodash__WEBPACK_IMPORTED_MODULE_0__.first)(style.colors));\n  }\n  defaultCellFormatter(v, style) {\n    if (v === null || v === void 0 || v === void 0) {\n      return \"\";\n    }\n    if ((0,lodash__WEBPACK_IMPORTED_MODULE_0__.isArray)(v)) {\n      v = v.join(\", \");\n    }\n    if (style && style.sanitize) {\n      return this.sanitize(v);\n    } else {\n      return (0,lodash__WEBPACK_IMPORTED_MODULE_0__.escape)(v);\n    }\n  }\n  createColumnFormatter(column) {\n    if (!column.style) {\n      return this.defaultCellFormatter;\n    }\n    if (column.style.type === \"hidden\") {\n      return (v) => void 0;\n    }\n    if (column.style.type === \"date\") {\n      return (v) => {\n        if (v === void 0 || v === null) {\n          return \"-\";\n        }\n        if ((0,lodash__WEBPACK_IMPORTED_MODULE_0__.isArray)(v)) {\n          v = v[0];\n        }\n        if ((0,lodash__WEBPACK_IMPORTED_MODULE_0__.isString)(v) && !isNaN(v) && v.length > 12) {\n          v = parseInt(v, 10);\n        }\n        if (!column.style.dateFormat) {\n          return (0,_grafana_data__WEBPACK_IMPORTED_MODULE_5__.dateTimeFormatISO)(v, {\n            timeZone: this.timeZone\n          });\n        }\n        return (0,_grafana_data__WEBPACK_IMPORTED_MODULE_5__.dateTimeFormat)(v, {\n          format: column.style.dateFormat,\n          timeZone: this.timeZone\n        });\n      };\n    }\n    if (column.style.type === \"string\") {\n      return (v) => {\n        if ((0,lodash__WEBPACK_IMPORTED_MODULE_0__.isArray)(v)) {\n          v = v.join(\", \");\n        }\n        const mappingType = column.style.mappingType || 0;\n        if (mappingType === 1 && column.style.valueMaps) {\n          for (let i = 0; i < column.style.valueMaps.length; i++) {\n            const map = column.style.valueMaps[i];\n            if (v === null) {\n              if (map.value === \"null\") {\n                return map.text;\n              }\n              continue;\n            }\n            if (!(0,lodash__WEBPACK_IMPORTED_MODULE_0__.isString)(v) && Number(map.value) === Number(v) || map.value === v) {\n              this.setColorState(v, column.style);\n              return this.defaultCellFormatter(map.text, column.style);\n            }\n          }\n        }\n        if (mappingType === 2 && column.style.rangeMaps) {\n          for (let i = 0; i < column.style.rangeMaps.length; i++) {\n            const map = column.style.rangeMaps[i];\n            if (v === null) {\n              if (map.from === \"null\" && map.to === \"null\") {\n                return map.text;\n              }\n              continue;\n            }\n            if (Number(map.from) <= Number(v) && Number(map.to) >= Number(v)) {\n              this.setColorState(v, column.style);\n              return this.defaultCellFormatter(map.text, column.style);\n            }\n          }\n        }\n        if (v === null || v === void 0) {\n          return \"-\";\n        }\n        this.setColorState(v, column.style);\n        return this.defaultCellFormatter(v, column.style);\n      };\n    }\n    if (column.style.type === \"number\") {\n      const valueFormatter = (0,_grafana_data__WEBPACK_IMPORTED_MODULE_6__.getValueFormat)(column.unit || column.style.unit);\n      return (v) => {\n        if (v === null || v === void 0) {\n          return \"-\";\n        }\n        if (isNaN(v) || (0,lodash__WEBPACK_IMPORTED_MODULE_0__.isArray)(v)) {\n          return this.defaultCellFormatter(v, column.style);\n        }\n        this.setColorState(v, column.style);\n        return (0,_grafana_data__WEBPACK_IMPORTED_MODULE_6__.formattedValueToString)(valueFormatter(v, column.style.decimals, null));\n      };\n    }\n    return (value) => {\n      return this.defaultCellFormatter(value, column.style);\n    };\n  }\n  setColorState(value, style) {\n    if (!style.colorMode) {\n      return;\n    }\n    if (value === null || value === void 0 || (0,lodash__WEBPACK_IMPORTED_MODULE_0__.isArray)(value)) {\n      return;\n    }\n    const numericValue = Number(value);\n    if (isNaN(numericValue)) {\n      return;\n    }\n    this.colorState[style.colorMode] = this.getColorForValue(numericValue, style);\n  }\n  renderRowVariables(rowIndex) {\n    const scopedVars = {};\n    let cellVariable;\n    const row = this.table.rows[rowIndex];\n    for (let i = 0; i < row.length; i++) {\n      cellVariable = `__cell_${i}`;\n      scopedVars[cellVariable] = { value: row[i], text: row[i] ? row[i].toString() : \"\" };\n    }\n    return scopedVars;\n  }\n  formatColumnValue(colIndex, value) {\n    const fmt = this.formatters[colIndex];\n    if (fmt) {\n      return fmt(value);\n    }\n    return value;\n  }\n  renderCell(columnIndex, rowIndex, value, addWidthHack = false) {\n    value = this.formatColumnValue(columnIndex, value);\n    const column = this.table.columns[columnIndex];\n    const cellStyles = [];\n    let cellStyle = \"\";\n    const cellClasses = [];\n    let cellClass = \"\";\n    if (this.colorState.cell) {\n      cellStyles.push(\"background-color:\" + this.colorState.cell);\n      cellClasses.push(\"table-panel-color-cell\");\n      this.colorState.cell = null;\n    } else if (this.colorState.value) {\n      cellStyles.push(\"color:\" + this.colorState.value);\n      this.colorState.value = null;\n    }\n    let columnHtml = \"\";\n    if (addWidthHack) {\n      columnHtml = '<div class=\"table-panel-width-hack\">' + this.table.columns[columnIndex].title + \"</div>\";\n    }\n    if (value === void 0) {\n      cellStyles.push(\"display:none\");\n      column.hidden = true;\n    } else {\n      column.hidden = false;\n    }\n    if (column.hidden === true) {\n      return \"\";\n    }\n    if (column.style && column.style.preserveFormat) {\n      cellClasses.push(\"table-panel-cell-pre\");\n    }\n    if (column.style && column.style.align) {\n      const textAlign = (0,lodash__WEBPACK_IMPORTED_MODULE_0__.find)(_column_options__WEBPACK_IMPORTED_MODULE_1__.ColumnOptionsCtrl.alignTypesEnum, [\"text\", column.style.align]);\n      if (textAlign && textAlign[\"value\"]) {\n        cellStyles.push(`text-align:${textAlign[\"value\"]}`);\n      }\n    }\n    if (cellStyles.length) {\n      cellStyle = ' style=\"' + cellStyles.join(\";\") + '\"';\n    }\n    if (column.style && column.style.link) {\n      const scopedVars = this.renderRowVariables(rowIndex);\n      scopedVars[\"__cell\"] = { value, text: value ? value.toString() : \"\" };\n      const cellLink = this.templateSrv.replace(column.style.linkUrl, scopedVars, encodeURIComponent);\n      const sanitizedCellLink = _grafana_data__WEBPACK_IMPORTED_MODULE_4__.textUtil.sanitizeUrl(cellLink);\n      const cellLinkTooltip = _grafana_data__WEBPACK_IMPORTED_MODULE_4__.textUtil.escapeHtml(this.templateSrv.replace(column.style.linkTooltip, scopedVars));\n      const cellTarget = column.style.linkTargetBlank ? \"_blank\" : \"\";\n      cellClasses.push(\"table-panel-cell-link\");\n      columnHtml += `<a href=\"${sanitizedCellLink}\" target=\"${cellTarget}\" data-link-tooltip data-original-title=\"${cellLinkTooltip}\" data-placement=\"right\"${cellStyle}>`;\n      columnHtml += `${value}`;\n      columnHtml += `</a>`;\n    } else {\n      columnHtml += value;\n    }\n    if (column.filterable) {\n      cellClasses.push(\"table-panel-cell-filterable\");\n      columnHtml += `<a class=\"table-panel-filter-link\" data-link-tooltip data-original-title=\"Filter out value\" data-placement=\"bottom\"\n           data-row=\"${rowIndex}\" data-column=\"${columnIndex}\" data-operator=\"!=\">`;\n      columnHtml += `<i class=\"fa fa-search-minus\"></i>`;\n      columnHtml += `</a>`;\n      columnHtml += `<a class=\"table-panel-filter-link\" data-link-tooltip data-original-title=\"Filter for value\" data-placement=\"bottom\"\n           data-row=\"${rowIndex}\" data-column=\"${columnIndex}\" data-operator=\"=\">`;\n      columnHtml += `<i class=\"fa fa-search-plus\"></i>`;\n      columnHtml += `</a>`;\n    }\n    if (cellClasses.length) {\n      cellClass = ' class=\"' + cellClasses.join(\" \") + '\"';\n    }\n    columnHtml = \"<td\" + cellClass + cellStyle + \">\" + columnHtml + \"</td>\";\n    return columnHtml;\n  }\n  render(page) {\n    const pageSize = this.panel.pageSize || 100;\n    const startPos = page * pageSize;\n    const endPos = Math.min(startPos + pageSize, this.table.rows.length);\n    let html = \"\";\n    for (let y = startPos; y < endPos; y++) {\n      const row = this.table.rows[y];\n      let cellHtml = \"\";\n      let rowStyle = \"\";\n      const rowClasses = [];\n      let rowClass = \"\";\n      for (let i = 0; i < this.table.columns.length; i++) {\n        cellHtml += this.renderCell(i, y, row[i], y === startPos);\n      }\n      if (this.colorState.row) {\n        rowStyle = ' style=\"background-color:' + this.colorState.row + '\"';\n        rowClasses.push(\"table-panel-color-row\");\n        this.colorState.row = null;\n      }\n      if (rowClasses.length) {\n        rowClass = ' class=\"' + rowClasses.join(\" \") + '\"';\n      }\n      html += \"<tr \" + rowClass + rowStyle + \">\" + cellHtml + \"</tr>\";\n    }\n    return html;\n  }\n  render_values() {\n    const rows = [];\n    const visibleColumns = this.table.columns.filter((column) => !column.hidden);\n    for (let y = 0; y < this.table.rows.length; y++) {\n      const row = this.table.rows[y];\n      const newRow = [];\n      for (let i = 0; i < this.table.columns.length; i++) {\n        if (!this.table.columns[i].hidden) {\n          newRow.push(this.formatColumnValue(i, row[i]));\n        }\n      }\n      rows.push(newRow);\n    }\n    return {\n      columns: visibleColumns,\n      rows\n    };\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/app/plugins/panel/table-old/renderer.ts\n");

/***/ }),

/***/ "./public/app/plugins/panel/table-old/transformers.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   tableDataFormatFilterer: () => (/* binding */ tableDataFormatFilterer),\n/* harmony export */   timeSeriesFormatFilterer: () => (/* binding */ timeSeriesFormatFilterer),\n/* harmony export */   transformDataToTable: () => (/* binding */ transformDataToTable),\n/* harmony export */   transformers: () => (/* binding */ transformers)\n/* harmony export */ });\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/lodash-npm-4.17.21-6382451519-eb835a2e51.zip/node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var app_core_TableModel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/core/TableModel.ts\");\n/* harmony import */ var app_core_time_series2__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/core/time_series2.ts\");\n/* harmony import */ var app_core_utils_flatten__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./public/app/core/utils/flatten.ts\");\n\n\n\n\n\nconst transformers = {};\nconst timeSeriesFormatFilterer = (data) => {\n  if (!Array.isArray(data)) {\n    return data.datapoints ? [data] : [];\n  }\n  return data.reduce((acc, series) => {\n    if (!series.datapoints) {\n      return acc;\n    }\n    return acc.concat(series);\n  }, []);\n};\nconst tableDataFormatFilterer = (data) => {\n  if (!Array.isArray(data)) {\n    return data.columns ? [data] : [];\n  }\n  return data.reduce((acc, series) => {\n    if (!series.columns) {\n      return acc;\n    }\n    return acc.concat(series);\n  }, []);\n};\ntransformers[\"timeseries_to_rows\"] = {\n  description: \"Time series to rows\",\n  getColumns: () => {\n    return [];\n  },\n  transform: (data, panel, model) => {\n    model.columns = [{ text: \"Time\", type: \"date\" }, { text: \"Metric\" }, { text: \"Value\" }];\n    const filteredData = timeSeriesFormatFilterer(data);\n    for (let i = 0; i < filteredData.length; i++) {\n      const series = filteredData[i];\n      for (let y = 0; y < series.datapoints.length; y++) {\n        const dp = series.datapoints[y];\n        model.rows.push([dp[1], series.target, dp[0]]);\n      }\n    }\n  }\n};\ntransformers[\"timeseries_to_columns\"] = {\n  description: \"Time series to columns\",\n  getColumns: () => {\n    return [];\n  },\n  transform: (data, panel, model) => {\n    model.columns.push({ text: \"Time\", type: \"date\" });\n    const points = {};\n    const filteredData = timeSeriesFormatFilterer(data);\n    for (let i = 0; i < filteredData.length; i++) {\n      const series = filteredData[i];\n      model.columns.push({ text: series.target });\n      for (let y = 0; y < series.datapoints.length; y++) {\n        const dp = series.datapoints[y];\n        const timeKey = dp[1].toString();\n        if (!points[timeKey]) {\n          points[timeKey] = { time: dp[1] };\n          points[timeKey][i] = dp[0];\n        } else {\n          points[timeKey][i] = dp[0];\n        }\n      }\n    }\n    for (const time in points) {\n      const point = points[time];\n      const values = [point.time];\n      for (let i = 0; i < filteredData.length; i++) {\n        const value = point[i];\n        values.push(value);\n      }\n      model.rows.push(values);\n    }\n  }\n};\ntransformers[\"timeseries_aggregations\"] = {\n  description: \"Time series aggregations\",\n  getColumns: () => {\n    return [\n      { text: \"Avg\", value: \"avg\" },\n      { text: \"Min\", value: \"min\" },\n      { text: \"Max\", value: \"max\" },\n      { text: \"Total\", value: \"total\" },\n      { text: \"Current\", value: \"current\" },\n      { text: \"Count\", value: \"count\" }\n    ];\n  },\n  transform: (data, panel, model) => {\n    let i, y;\n    model.columns.push({ text: \"Metric\" });\n    for (i = 0; i < panel.columns.length; i++) {\n      model.columns.push({ text: panel.columns[i].text });\n    }\n    const filteredData = timeSeriesFormatFilterer(data);\n    for (i = 0; i < filteredData.length; i++) {\n      const series = new app_core_time_series2__WEBPACK_IMPORTED_MODULE_2__[\"default\"]({\n        datapoints: filteredData[i].datapoints,\n        alias: filteredData[i].target\n      });\n      series.getFlotPairs(\"connected\");\n      const cells = [series.alias];\n      for (y = 0; y < panel.columns.length; y++) {\n        cells.push(series.stats[panel.columns[y].value]);\n      }\n      model.rows.push(cells);\n    }\n  }\n};\ntransformers[\"annotations\"] = {\n  description: \"Annotations\",\n  getColumns: () => {\n    return [];\n  },\n  transform: (data, panel, model) => {\n    model.columns.push({ text: \"Time\", type: \"date\" });\n    model.columns.push({ text: \"Title\" });\n    model.columns.push({ text: \"Text\" });\n    model.columns.push({ text: \"Tags\" });\n    if (!data || !data.annotations || data.annotations.length === 0) {\n      return;\n    }\n    for (let i = 0; i < data.annotations.length; i++) {\n      const evt = data.annotations[i];\n      model.rows.push([evt.time, evt.title, evt.text, evt.tags]);\n    }\n  }\n};\ntransformers[\"table\"] = {\n  description: \"Table\",\n  getColumns: (data) => {\n    if (!data || data.length === 0) {\n      return [];\n    }\n    if (data.length === 1) {\n      return [...data[0].columns];\n    }\n    const filteredData = tableDataFormatFilterer(data);\n    const columnNames = {};\n    const columns = filteredData.reduce((acc, series) => {\n      series.columns.forEach((col) => {\n        const { text } = col;\n        if (columnNames[text] === void 0) {\n          columnNames[text] = acc.length;\n          acc.push(col);\n        }\n      });\n      return acc;\n    }, []);\n    return columns;\n  },\n  transform: (data, panel, model) => {\n    if (!data || data.length === 0) {\n      return;\n    }\n    const filteredData = tableDataFormatFilterer(data);\n    const noTableIndex = (0,lodash__WEBPACK_IMPORTED_MODULE_0__.findIndex)(filteredData, (d) => \"columns\" in d && \"rows\" in d);\n    if (noTableIndex < 0) {\n      throw {\n        message: `Result of query #${String.fromCharCode(\n          65 + noTableIndex\n        )} is not in table format, try using another transform.`\n      };\n    }\n    (0,app_core_TableModel__WEBPACK_IMPORTED_MODULE_1__.mergeTablesIntoModel)(model, ...filteredData);\n  }\n};\ntransformers[\"json\"] = {\n  description: \"JSON Data\",\n  getColumns: (data) => {\n    if (!data || data.length === 0) {\n      return [];\n    }\n    const names = {};\n    for (let i = 0; i < data.length; i++) {\n      const series = data[i];\n      if (series.type !== \"docs\") {\n        continue;\n      }\n      const maxDocs = Math.min(series.datapoints.length, 100);\n      for (let y = 0; y < maxDocs; y++) {\n        const doc = series.datapoints[y];\n        const flattened = (0,app_core_utils_flatten__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(doc, {});\n        for (const propName in flattened) {\n          names[propName] = true;\n        }\n      }\n    }\n    return (0,lodash__WEBPACK_IMPORTED_MODULE_0__.map)(names, (value, key) => {\n      return { text: key, value: key };\n    });\n  },\n  transform: (data, panel, model) => {\n    let i, y, z;\n    for (const column of panel.columns) {\n      const tableCol = { text: column.text };\n      if (data.length > 0 && data[0].filterable) {\n        tableCol.filterable = true;\n      }\n      model.columns.push(tableCol);\n    }\n    if (model.columns.length === 0) {\n      model.columns.push({ text: \"JSON\" });\n    }\n    for (i = 0; i < data.length; i++) {\n      const series = data[i];\n      for (y = 0; y < series.datapoints.length; y++) {\n        const dp = series.datapoints[y];\n        const values = [];\n        if ((0,lodash__WEBPACK_IMPORTED_MODULE_0__.isObject)(dp) && panel.columns.length > 0) {\n          const flattened = (0,app_core_utils_flatten__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(dp);\n          for (z = 0; z < panel.columns.length; z++) {\n            values.push(flattened[panel.columns[z].value]);\n          }\n        } else {\n          values.push(JSON.stringify(dp));\n        }\n        model.rows.push(values);\n      }\n    }\n  }\n};\nfunction transformDataToTable(data, panel) {\n  const model = new app_core_TableModel__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n  if (!data || data.length === 0) {\n    return model;\n  }\n  const transformer = transformers[panel.transform];\n  if (!transformer) {\n    throw { message: \"Transformer \" + panel.transform + \" not found\" };\n  }\n  transformer.transform(data, panel, model);\n  return model;\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/app/plugins/panel/table-old/transformers.ts\n");

/***/ }),

/***/ "./public/app/plugins/sdk.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MetricsPanelCtrl: () => (/* binding */ MetricsPanelCtrl),\n/* harmony export */   PanelCtrl: () => (/* binding */ PanelCtrl),\n/* harmony export */   QueryCtrl: () => (/* binding */ QueryCtrl),\n/* harmony export */   loadPluginCss: () => (/* reexport safe */ _grafana_runtime__WEBPACK_IMPORTED_MODULE_4__.loadPluginCss)\n/* harmony export */ });\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/utils/makeClassES5Compatible.ts\");\n/* harmony import */ var _grafana_runtime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-runtime-virtual-68c57d4c0c/1/packages/grafana-runtime/src/utils/plugin.ts\");\n/* harmony import */ var app_angular_panel_metrics_panel_ctrl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./public/app/angular/panel/metrics_panel_ctrl.ts\");\n/* harmony import */ var app_angular_panel_panel_ctrl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/angular/panel/panel_ctrl.ts\");\n/* harmony import */ var app_angular_panel_query_ctrl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/angular/panel/query_ctrl.ts\");\n\n\n\n\n\n\nconst PanelCtrl = (0,_grafana_data__WEBPACK_IMPORTED_MODULE_3__.makeClassES5Compatible)(app_angular_panel_panel_ctrl__WEBPACK_IMPORTED_MODULE_1__.PanelCtrl);\nconst MetricsPanelCtrl = (0,_grafana_data__WEBPACK_IMPORTED_MODULE_3__.makeClassES5Compatible)(app_angular_panel_metrics_panel_ctrl__WEBPACK_IMPORTED_MODULE_0__.MetricsPanelCtrl);\nconst QueryCtrl = (0,_grafana_data__WEBPACK_IMPORTED_MODULE_3__.makeClassES5Compatible)(app_angular_panel_query_ctrl__WEBPACK_IMPORTED_MODULE_2__.QueryCtrl);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvc2RrLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBdUM7QUFDVDtBQUMwQjtBQUNkO0FBQ0E7QUFFMUMsTUFBTSxZQUFZLHFFQUFzQixDQUFDLG1FQUFZO0FBQ3JELE1BQU0sbUJBQW1CLHFFQUFzQixDQUFDLGtGQUFtQjtBQUNuRSxNQUFNLFlBQVkscUVBQXNCLENBQUMsbUVBQVk7QUFFWSIsInNvdXJjZXMiOlsid2VicGFjazovL2dyYWZhbmEvLi9wdWJsaWMvYXBwL3BsdWdpbnMvc2RrLnRzPzJmMzUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbWFrZUNsYXNzRVM1Q29tcGF0aWJsZSB9IGZyb20gJ0BncmFmYW5hL2RhdGEnO1xuaW1wb3J0IHsgbG9hZFBsdWdpbkNzcyB9IGZyb20gJ0BncmFmYW5hL3J1bnRpbWUnO1xuaW1wb3J0IHsgTWV0cmljc1BhbmVsQ3RybCBhcyBNZXRyaWNzUGFuZWxDdHJsRVM2IH0gZnJvbSAnYXBwL2FuZ3VsYXIvcGFuZWwvbWV0cmljc19wYW5lbF9jdHJsJztcbmltcG9ydCB7IFBhbmVsQ3RybCBhcyBQYW5lbEN0cmxFUzYgfSBmcm9tICdhcHAvYW5ndWxhci9wYW5lbC9wYW5lbF9jdHJsJztcbmltcG9ydCB7IFF1ZXJ5Q3RybCBhcyBRdWVyeUN0cmxFUzYgfSBmcm9tICdhcHAvYW5ndWxhci9wYW5lbC9xdWVyeV9jdHJsJztcblxuY29uc3QgUGFuZWxDdHJsID0gbWFrZUNsYXNzRVM1Q29tcGF0aWJsZShQYW5lbEN0cmxFUzYpO1xuY29uc3QgTWV0cmljc1BhbmVsQ3RybCA9IG1ha2VDbGFzc0VTNUNvbXBhdGlibGUoTWV0cmljc1BhbmVsQ3RybEVTNik7XG5jb25zdCBRdWVyeUN0cmwgPSBtYWtlQ2xhc3NFUzVDb21wYXRpYmxlKFF1ZXJ5Q3RybEVTNik7XG5cbmV4cG9ydCB7IFBhbmVsQ3RybCwgTWV0cmljc1BhbmVsQ3RybCwgUXVlcnlDdHJsLCBsb2FkUGx1Z2luQ3NzIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./public/app/plugins/sdk.ts\n");

/***/ })

}]);