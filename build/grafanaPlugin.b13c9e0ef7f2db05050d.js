"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkgrafana"] = self["webpackChunkgrafana"] || []).push([["grafanaPlugin"],{

/***/ "./public/app/plugins/datasource/grafana/components/QueryEditor.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryEditor: () => (/* binding */ QueryEditor),\n/* harmony export */   UnthemedQueryEditor: () => (/* binding */ UnthemedQueryEditor)\n/* harmony export */ });\n/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/@emotion-css-npm-11.11.2-dbfa42cf83-1edea109df.zip/node_modules/@emotion/css/dist/emotion-css.esm.js\");\n/* harmony import */ var pluralize__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/cache/pluralize-npm-8.0.0-f5f044ed52-08931d4a6a.zip/node_modules/pluralize/pluralize.js\");\n/* harmony import */ var pluralize__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(pluralize__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/datetime/rangeutil.ts\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/dataframe/DataFrameJSON.ts\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/valueFormats/valueFormats.ts\");\n/* harmony import */ var _grafana_runtime__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-runtime-virtual-68c57d4c0c/1/packages/grafana-runtime/src/analytics/utils.ts\");\n/* harmony import */ var _grafana_runtime__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-runtime-virtual-68c57d4c0c/1/packages/grafana-runtime/src/config.ts\");\n/* harmony import */ var _grafana_runtime__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-runtime-virtual-68c57d4c0c/1/packages/grafana-runtime/src/services/backendSrv.ts\");\n/* harmony import */ var _grafana_runtime__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-runtime-virtual-68c57d4c0c/1/packages/grafana-runtime/src/services/dataSourceSrv.ts\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Forms/InlineField.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Select/Select.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Input/Input.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Alert/Alert.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Forms/InlineFieldRow.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Forms/InlineLabel.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/FileDropzone/FileDropzone.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/themes/ThemeContext.tsx\");\n/* harmony import */ var app_core_config__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./public/app/core/config.ts\");\n/* harmony import */ var app_features_dataframe_import__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./public/app/features/dataframe-import/index.ts\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./public/app/plugins/datasource/grafana/types.ts\");\n/* harmony import */ var _SearchEditor__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./public/app/plugins/datasource/grafana/components/SearchEditor.tsx\");\n\n\n\n\n\n\n\n\n\n\n\nconst labelWidth = 12;\nclass UnthemedQueryEditor extends react__WEBPACK_IMPORTED_MODULE_2__.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = { channels: [], channelFields: {} };\n    this.queryTypes = [\n      {\n        label: \"Random Walk\",\n        value: _types__WEBPACK_IMPORTED_MODULE_5__.GrafanaQueryType.RandomWalk,\n        description: \"Random signal within the selected time range\"\n      },\n      {\n        label: \"Live Measurements\",\n        value: _types__WEBPACK_IMPORTED_MODULE_5__.GrafanaQueryType.LiveMeasurements,\n        description: \"Stream real-time measurements from Grafana\"\n      },\n      {\n        label: \"List public files\",\n        value: _types__WEBPACK_IMPORTED_MODULE_5__.GrafanaQueryType.List,\n        description: \"Show directory listings for public resources\"\n      }\n    ];\n    this.onQueryTypeChange = (sel) => {\n      const { onChange, query, onRunQuery } = this.props;\n      onChange({ ...query, queryType: sel.value });\n      onRunQuery();\n      this.loadChannelInfo();\n    };\n    this.onChannelChange = (sel) => {\n      const { onChange, query, onRunQuery } = this.props;\n      onChange({ ...query, channel: sel?.value });\n      onRunQuery();\n    };\n    this.onFieldNamesChange = (item) => {\n      const { onChange, query, onRunQuery } = this.props;\n      let fields = [];\n      if (Array.isArray(item)) {\n        fields = item.map((v) => v.value);\n      } else if (item.value) {\n        fields = [item.value];\n      }\n      if (fields.length === 1 && !query.filter?.fields?.length && query.channel) {\n        const names = this.state.channelFields[query.channel] ?? [];\n        const tf = names.find((f) => f.value === \"time\" || f.value === \"Time\");\n        if (tf && tf.value && tf.value !== fields[0]) {\n          fields = [tf.value, ...fields];\n        }\n      }\n      onChange({\n        ...query,\n        filter: {\n          ...query.filter,\n          fields\n        }\n      });\n      onRunQuery();\n    };\n    this.checkAndUpdateValue = (key, txt) => {\n      const { onChange, query, onRunQuery } = this.props;\n      if (key === \"buffer\") {\n        let buffer;\n        if (txt) {\n          try {\n            buffer = _grafana_data__WEBPACK_IMPORTED_MODULE_7__.intervalToSeconds(txt) * 1e3;\n          } catch (err) {\n            console.warn(\"ERROR\", err);\n          }\n        }\n        onChange({\n          ...query,\n          buffer\n        });\n      } else {\n        onChange({\n          ...query,\n          [key]: txt\n        });\n      }\n      onRunQuery();\n    };\n    this.handleEnterKey = (e) => {\n      if (e.key !== \"Enter\") {\n        return;\n      }\n      this.checkAndUpdateValue(\"buffer\", e.target.value);\n    };\n    this.handleBlur = (e) => {\n      this.checkAndUpdateValue(\"buffer\", e.target.value);\n    };\n    this.onFolderChanged = (sel) => {\n      const { onChange, query, onRunQuery } = this.props;\n      onChange({ ...query, path: sel?.value });\n      onRunQuery();\n    };\n    // Skip rendering the file list as we're handling that in this component instead.\n    this.fileListRenderer = (file, removeFile) => {\n      return null;\n    };\n    this.onFileDrop = (acceptedFiles, fileRejections, event) => {\n      app_features_dataframe_import__WEBPACK_IMPORTED_MODULE_4__.filesToDataframes(acceptedFiles).subscribe((next) => {\n        const snapshot = [];\n        next.dataFrames.forEach((df) => {\n          const dataframeJson = (0,_grafana_data__WEBPACK_IMPORTED_MODULE_8__.dataFrameToJSON)(df);\n          snapshot.push(dataframeJson);\n        });\n        this.props.onChange({\n          ...this.props.query,\n          file: { name: next.file.name, size: next.file.size },\n          queryType: _types__WEBPACK_IMPORTED_MODULE_5__.GrafanaQueryType.Snapshot,\n          snapshot\n        });\n        this.props.onRunQuery();\n        (0,_grafana_runtime__WEBPACK_IMPORTED_MODULE_9__.reportInteraction)(\"grafana_datasource_drop_files\", {\n          number_of_files: fileRejections.length + acceptedFiles.length,\n          accepted_files: acceptedFiles.map((a) => {\n            return { type: a.type, size: a.size };\n          }),\n          rejected_files: fileRejections.map((r) => {\n            return { type: r.file.type, size: r.file.size };\n          })\n        });\n      });\n    };\n    this.onSearchChange = (search) => {\n      const { query, onChange, onRunQuery } = this.props;\n      onChange({\n        ...query,\n        search\n      });\n      onRunQuery();\n    };\n    if (_grafana_runtime__WEBPACK_IMPORTED_MODULE_10__.config.featureToggles.panelTitleSearch && app_core_config__WEBPACK_IMPORTED_MODULE_3__.hasAlphaPanels) {\n      this.queryTypes.push({\n        label: \"Search\",\n        value: _types__WEBPACK_IMPORTED_MODULE_5__.GrafanaQueryType.Search,\n        description: \"Search for grafana resources\"\n      });\n    }\n    if (_grafana_runtime__WEBPACK_IMPORTED_MODULE_10__.config.featureToggles.editPanelCSVDragAndDrop) {\n      this.queryTypes.push({\n        label: \"Spreadsheet or snapshot\",\n        value: _types__WEBPACK_IMPORTED_MODULE_5__.GrafanaQueryType.Snapshot,\n        description: \"Query an uploaded spreadsheet or a snapshot\"\n      });\n    }\n  }\n  loadChannelInfo() {\n    (0,_grafana_runtime__WEBPACK_IMPORTED_MODULE_11__.getBackendSrv)().fetch({ url: \"api/live/list\" }).subscribe({\n      next: (v) => {\n        const channelInfo = v.data?.channels;\n        if (channelInfo?.length) {\n          const channelFields = {};\n          const channels = channelInfo.map((c) => {\n            if (c.data) {\n              const distinctFields = /* @__PURE__ */ new Set();\n              const frame = (0,_grafana_data__WEBPACK_IMPORTED_MODULE_8__.dataFrameFromJSON)(c.data);\n              for (const f of frame.fields) {\n                distinctFields.add(f.name);\n              }\n              channelFields[c.channel] = Array.from(distinctFields).map((n) => ({\n                value: n,\n                label: n\n              }));\n            }\n            return {\n              value: c.channel,\n              label: c.channel + \" [\" + c.minute_rate + \" msg/min]\"\n            };\n          });\n          this.setState({ channelFields, channels });\n        }\n      }\n    });\n  }\n  loadFolderInfo() {\n    const query = {\n      targets: [{ queryType: _types__WEBPACK_IMPORTED_MODULE_5__.GrafanaQueryType.List, refId: \"A\" }]\n    };\n    (0,_grafana_runtime__WEBPACK_IMPORTED_MODULE_12__.getDataSourceSrv)().get(\"-- Grafana --\").then((ds) => {\n      const gds = ds;\n      gds.query(query).subscribe({\n        next: (rsp) => {\n          if (rsp.data.length) {\n            const names = rsp.data[0].fields[0];\n            const folders = names.values.map((v) => ({\n              value: v,\n              label: v\n            }));\n            this.setState({ folders });\n          }\n        }\n      });\n    });\n  }\n  componentDidMount() {\n    this.loadChannelInfo();\n  }\n  renderMeasurementsQuery() {\n    let { channel, filter, buffer } = this.props.query;\n    let { channels, channelFields } = this.state;\n    let currentChannel = channels.find((c) => c.value === channel);\n    if (channel && !currentChannel) {\n      currentChannel = {\n        value: channel,\n        label: channel,\n        description: `Connected to ${channel}`\n      };\n      channels = [currentChannel, ...channels];\n    }\n    const distinctFields = /* @__PURE__ */ new Set();\n    const fields = channel ? channelFields[channel] ?? [] : [];\n    if (filter?.fields) {\n      for (const f of filter.fields) {\n        if (!distinctFields.has(f)) {\n          fields.push({\n            value: f,\n            label: `${f} (not loaded)`,\n            description: `Configured, but not found in the query results`\n          });\n          distinctFields.add(f);\n        }\n      }\n    }\n    let formattedTime = \"\";\n    if (buffer) {\n      formattedTime = _grafana_data__WEBPACK_IMPORTED_MODULE_7__.secondsToHms(buffer / 1e3);\n    }\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement((react__WEBPACK_IMPORTED_MODULE_2___default().Fragment), null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", { className: \"gf-form\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_13__.InlineField, { label: \"Channel\", grow: true, labelWidth }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\n      _grafana_ui__WEBPACK_IMPORTED_MODULE_14__.Select,\n      {\n        options: channels,\n        value: currentChannel || \"\",\n        onChange: this.onChannelChange,\n        allowCustomValue: true,\n        backspaceRemovesValue: true,\n        placeholder: \"Select measurements channel\",\n        isClearable: true,\n        noOptionsMessage: \"Enter channel name\",\n        formatCreateLabel: (input) => `Connect to: ${input}`\n      }\n    ))), channel && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", { className: \"gf-form\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_13__.InlineField, { label: \"Fields\", grow: true, labelWidth }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\n      _grafana_ui__WEBPACK_IMPORTED_MODULE_14__.Select,\n      {\n        options: fields,\n        value: filter?.fields || [],\n        onChange: this.onFieldNamesChange,\n        allowCustomValue: true,\n        backspaceRemovesValue: true,\n        placeholder: \"All fields\",\n        isClearable: true,\n        noOptionsMessage: \"Unable to list all fields\",\n        formatCreateLabel: (input) => `Field: ${input}`,\n        isSearchable: true,\n        isMulti: true\n      }\n    )), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_13__.InlineField, { label: \"Buffer\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\n      _grafana_ui__WEBPACK_IMPORTED_MODULE_15__.Input,\n      {\n        placeholder: \"Auto\",\n        width: 12,\n        defaultValue: formattedTime,\n        onKeyDown: this.handleEnterKey,\n        onBlur: this.handleBlur,\n        spellCheck: false\n      }\n    ))), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_16__.Alert, { title: \"Grafana Live - Measurements\", severity: \"info\" }, \"This supports real-time event streams in Grafana core. This feature is under heavy development. Expect the interfaces and structures to change as this becomes more production ready.\"));\n  }\n  renderListPublicFiles() {\n    let { path } = this.props.query;\n    let { folders } = this.state;\n    if (!folders) {\n      folders = [];\n      this.loadFolderInfo();\n    }\n    const currentFolder = folders.find((f) => f.value === path);\n    if (path && !currentFolder) {\n      folders = [\n        ...folders,\n        {\n          value: path,\n          label: path\n        }\n      ];\n    }\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_17__.InlineFieldRow, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_13__.InlineField, { label: \"Path\", grow: true, labelWidth }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\n      _grafana_ui__WEBPACK_IMPORTED_MODULE_14__.Select,\n      {\n        options: folders,\n        value: currentFolder || \"\",\n        onChange: this.onFolderChanged,\n        allowCustomValue: true,\n        backspaceRemovesValue: true,\n        placeholder: \"Select folder\",\n        isClearable: true,\n        formatCreateLabel: (input) => `Folder: ${input}`\n      }\n    )));\n  }\n  renderSnapshotQuery() {\n    const { query, theme } = this.props;\n    const file = query.file;\n    const styles = getStyles(theme);\n    const fileSize = (0,_grafana_data__WEBPACK_IMPORTED_MODULE_18__.getValueFormat)(\"decbytes\")(file ? file.size : 0);\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement((react__WEBPACK_IMPORTED_MODULE_2___default().Fragment), null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_17__.InlineFieldRow, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_13__.InlineField, { label: \"Snapshot\", grow: true, labelWidth }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_19__.InlineLabel, null, pluralize__WEBPACK_IMPORTED_MODULE_1___default()(\"frame\", query.snapshot?.length ?? 0, true)))), _grafana_runtime__WEBPACK_IMPORTED_MODULE_10__.config.featureToggles.editPanelCSVDragAndDrop && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement((react__WEBPACK_IMPORTED_MODULE_2___default().Fragment), null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\n      _grafana_ui__WEBPACK_IMPORTED_MODULE_20__.FileDropzone,\n      {\n        readAs: \"readAsArrayBuffer\",\n        fileListRenderer: this.fileListRenderer,\n        options: {\n          onDrop: this.onFileDrop,\n          maxSize: app_features_dataframe_import__WEBPACK_IMPORTED_MODULE_4__.maxFileSize,\n          multiple: false,\n          accept: app_features_dataframe_import__WEBPACK_IMPORTED_MODULE_4__.acceptedFiles\n        }\n      },\n      /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\n        _grafana_ui__WEBPACK_IMPORTED_MODULE_20__.FileDropzoneDefaultChildren,\n        {\n          primaryText: this.props?.query?.file ? \"Replace file\" : \"Drop file here or click to upload\"\n        }\n      )\n    ), file && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", { className: styles.file }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"span\", null, file?.name), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"span\", null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"span\", null, (0,_grafana_data__WEBPACK_IMPORTED_MODULE_18__.formattedValueToString)(fileSize))))));\n  }\n  render() {\n    const query = {\n      ..._types__WEBPACK_IMPORTED_MODULE_5__.defaultQuery,\n      ...this.props.query\n    };\n    const { queryType } = query;\n    let queryTypes = this.queryTypes;\n    if (queryType === _types__WEBPACK_IMPORTED_MODULE_5__.GrafanaQueryType.Snapshot && !_grafana_runtime__WEBPACK_IMPORTED_MODULE_10__.config.featureToggles.editPanelCSVDragAndDrop) {\n      queryTypes = [\n        ...this.queryTypes,\n        {\n          label: \"Snapshot\",\n          value: queryType\n        }\n      ];\n    }\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement((react__WEBPACK_IMPORTED_MODULE_2___default().Fragment), null, queryType === _types__WEBPACK_IMPORTED_MODULE_5__.GrafanaQueryType.Search && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_16__.Alert, { title: \"Grafana Search\", severity: \"info\" }, \"Using this datasource to call the new search system is experimental, and subject to change at any time without notice.\"), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_17__.InlineFieldRow, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_13__.InlineField, { label: \"Query type\", grow: true, labelWidth }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\n      _grafana_ui__WEBPACK_IMPORTED_MODULE_14__.Select,\n      {\n        options: queryTypes,\n        value: queryTypes.find((v) => v.value === queryType) || queryTypes[0],\n        onChange: this.onQueryTypeChange\n      }\n    ))), queryType === _types__WEBPACK_IMPORTED_MODULE_5__.GrafanaQueryType.LiveMeasurements && this.renderMeasurementsQuery(), queryType === _types__WEBPACK_IMPORTED_MODULE_5__.GrafanaQueryType.List && this.renderListPublicFiles(), queryType === _types__WEBPACK_IMPORTED_MODULE_5__.GrafanaQueryType.Snapshot && this.renderSnapshotQuery(), queryType === _types__WEBPACK_IMPORTED_MODULE_5__.GrafanaQueryType.Search && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_SearchEditor__WEBPACK_IMPORTED_MODULE_6__[\"default\"], { value: query.search ?? {}, onChange: this.onSearchChange }));\n  }\n}\nconst QueryEditor = (0,_grafana_ui__WEBPACK_IMPORTED_MODULE_21__.withTheme2)(UnthemedQueryEditor);\nfunction getStyles(theme) {\n  return {\n    file: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n      width: 100%;\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      justify-content: space-between;\n      padding: ${theme.spacing(2)};\n      border: 1px dashed ${theme.colors.border.medium};\n      background-color: ${theme.colors.background.secondary};\n      margin-top: ${theme.spacing(1)};\n    `\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/grafana/components/QueryEditor.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/grafana/components/SearchEditor.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SearchEditor)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Forms/InlineFieldRow.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Forms/InlineField.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Input/Input.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Monaco/CodeEditor.tsx\");\n\n\n\nfunction SearchEditor({ value, onChange }) {\n  const [json, setJSON] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\");\n  const [query, setQuery] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(value.query ?? \"\");\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    const emptySearchQuery = {\n      query: \"*\",\n      location: \"\",\n      // general, etc\n      ds_uid: \"\",\n      sort: \"\",\n      tags: [],\n      kind: [],\n      explain: false,\n      facet: [{ field: \"kind\" }, { field: \"tags\" }],\n      from: 0,\n      limit: 20\n    };\n    setJSON(JSON.stringify({ ...emptySearchQuery, ...value }, null, 2));\n  }, [value]);\n  const handleSearchBlur = (e) => {\n    if (query !== value.query) {\n      onChange({ ...value, query });\n    }\n  };\n  const handleSearchEnterKey = (e) => {\n    if (e.key !== \"Enter\") {\n      return;\n    }\n    handleSearchBlur(e);\n  };\n  const onSaveSearchJSON = (rawSearchJSON) => {\n    try {\n      const searchQuery = JSON.parse(rawSearchJSON);\n      onChange(searchQuery);\n      setQuery(searchQuery.query ?? \"\");\n    } catch (ex) {\n      console.log(\"UNABLE TO parse search\", rawSearchJSON, ex);\n    }\n  };\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_1__.InlineFieldRow, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_2__.InlineField, { label: \"Query\", grow: true, labelWidth: 12 }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n    _grafana_ui__WEBPACK_IMPORTED_MODULE_3__.Input,\n    {\n      placeholder: \"Everything\",\n      value: query,\n      onChange: (e) => setQuery(e.currentTarget.value),\n      onKeyDown: handleSearchEnterKey,\n      onBlur: handleSearchBlur,\n      spellCheck: false\n    }\n  ))), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n    _grafana_ui__WEBPACK_IMPORTED_MODULE_4__.CodeEditor,\n    {\n      height: 300,\n      language: \"json\",\n      value: json,\n      onBlur: onSaveSearchJSON,\n      onSave: onSaveSearchJSON,\n      showMiniMap: false,\n      showLineNumbers: true\n    }\n  ));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9ncmFmYW5hL2NvbXBvbmVudHMvU2VhcmNoRWRpdG9yLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUEyQztBQUVvQjtBQVFoRCxTQUFTLGFBQWEsRUFBRSxPQUFPLFNBQVMsR0FBVTtBQUMvRCxRQUFNLENBQUMsTUFBTSxPQUFPLElBQUksK0NBQVEsQ0FBQyxFQUFFO0FBQ25DLFFBQU0sQ0FBQyxPQUFPLFFBQVEsSUFBSSwrQ0FBUSxDQUFDLE1BQU0sU0FBUyxFQUFFO0FBRXBELGtEQUFTLENBQUMsTUFBTTtBQUNkLFVBQU0sbUJBQWdDO0FBQUEsTUFDcEMsT0FBTztBQUFBLE1BQ1AsVUFBVTtBQUFBO0FBQUEsTUFDVixRQUFRO0FBQUEsTUFDUixNQUFNO0FBQUEsTUFDTixNQUFNLENBQUM7QUFBQSxNQUNQLE1BQU0sQ0FBQztBQUFBLE1BQ1AsU0FBUztBQUFBLE1BQ1QsT0FBTyxDQUFDLEVBQUUsT0FBTyxPQUFPLEdBQUcsRUFBRSxPQUFPLE9BQU8sQ0FBQztBQUFBLE1BQzVDLE1BQU07QUFBQSxNQUNOLE9BQU87QUFBQSxJQUNUO0FBRUEsWUFBUSxLQUFLLFVBQVUsRUFBRSxHQUFHLGtCQUFrQixHQUFHLE1BQU0sR0FBRyxNQUFNLENBQUMsQ0FBQztBQUFBLEVBQ3BFLEdBQUcsQ0FBQyxLQUFLLENBQUM7QUFFVixRQUFNLG1CQUFtQixDQUFDLE1BQTBDO0FBQ2xFLFFBQUksVUFBVSxNQUFNLE9BQU87QUFDekIsZUFBUyxFQUFFLEdBQUcsT0FBTyxNQUFNLENBQUM7QUFBQSxJQUM5QjtBQUFBLEVBQ0Y7QUFFQSxRQUFNLHVCQUF1QixDQUFDLE1BQTZDO0FBQ3pFLFFBQUksRUFBRSxRQUFRLFNBQVM7QUFDckI7QUFBQSxJQUNGO0FBQ0EscUJBQWlCLENBQVE7QUFBQSxFQUMzQjtBQUVBLFFBQU0sbUJBQW1CLENBQUMsa0JBQTBCO0FBQ2xELFFBQUk7QUFDRixZQUFNLGNBQWMsS0FBSyxNQUFNLGFBQWE7QUFDNUMsZUFBUyxXQUFXO0FBQ3BCLGVBQVMsWUFBWSxTQUFTLEVBQUU7QUFBQSxJQUNsQyxTQUFTLElBQVA7QUFDQSxjQUFRLElBQUksMEJBQTBCLGVBQWUsRUFBRTtBQUFBLElBQ3pEO0FBQUEsRUFDRjtBQUVBLFNBQ0UsMElBQ0UsMkVBQUMsdURBQWMsUUFDYiwyRUFBQyxvREFBVyxJQUFDLE9BQU0sU0FBUSxNQUFNLE1BQU0sWUFBWSxNQUNqRDtBQUFBLElBQUMsOENBQUs7QUFBTDtBQUFBLE1BQ0MsYUFBWTtBQUFBLE1BQ1osT0FBTztBQUFBLE1BQ1AsVUFBVSxDQUFDLE1BQU0sU0FBUyxFQUFFLGNBQWMsS0FBSztBQUFBLE1BQy9DLFdBQVc7QUFBQSxNQUNYLFFBQVE7QUFBQSxNQUNSLFlBQVk7QUFBQTtBQUFBLEVBQ2QsQ0FDRixDQUNGLEdBQ0E7QUFBQSxJQUFDLG1EQUFVO0FBQVY7QUFBQSxNQUNDLFFBQVE7QUFBQSxNQUNSLFVBQVM7QUFBQSxNQUNULE9BQU87QUFBQSxNQUNQLFFBQVE7QUFBQSxNQUNSLFFBQVE7QUFBQSxNQUNSLGFBQWE7QUFBQSxNQUNiLGlCQUFpQjtBQUFBO0FBQUEsRUFDbkIsQ0FDRjtBQUVKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ3JhZmFuYS8uL3B1YmxpYy9hcHAvcGx1Z2lucy9kYXRhc291cmNlL2dyYWZhbmEvY29tcG9uZW50cy9TZWFyY2hFZGl0b3IudHN4P2FkOTMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB7IElubGluZUZpZWxkLCBJbnB1dCwgSW5saW5lRmllbGRSb3csIENvZGVFZGl0b3IgfSBmcm9tICdAZ3JhZmFuYS91aSc7XG5pbXBvcnQgeyBTZWFyY2hRdWVyeSB9IGZyb20gJ2FwcC9mZWF0dXJlcy9zZWFyY2gvc2VydmljZSc7XG5cbmludGVyZmFjZSBQcm9wcyB7XG4gIHZhbHVlOiBTZWFyY2hRdWVyeTtcbiAgb25DaGFuZ2U6ICh2YWx1ZTogU2VhcmNoUXVlcnkpID0+IHZvaWQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFNlYXJjaEVkaXRvcih7IHZhbHVlLCBvbkNoYW5nZSB9OiBQcm9wcykge1xuICBjb25zdCBbanNvbiwgc2V0SlNPTl0gPSB1c2VTdGF0ZSgnJyk7XG4gIGNvbnN0IFtxdWVyeSwgc2V0UXVlcnldID0gdXNlU3RhdGUodmFsdWUucXVlcnkgPz8gJycpO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3QgZW1wdHlTZWFyY2hRdWVyeTogU2VhcmNoUXVlcnkgPSB7XG4gICAgICBxdWVyeTogJyonLFxuICAgICAgbG9jYXRpb246ICcnLCAvLyBnZW5lcmFsLCBldGNcbiAgICAgIGRzX3VpZDogJycsXG4gICAgICBzb3J0OiAnJyxcbiAgICAgIHRhZ3M6IFtdLFxuICAgICAga2luZDogW10sXG4gICAgICBleHBsYWluOiBmYWxzZSxcbiAgICAgIGZhY2V0OiBbeyBmaWVsZDogJ2tpbmQnIH0sIHsgZmllbGQ6ICd0YWdzJyB9XSxcbiAgICAgIGZyb206IDAsXG4gICAgICBsaW1pdDogMjAsXG4gICAgfTtcblxuICAgIHNldEpTT04oSlNPTi5zdHJpbmdpZnkoeyAuLi5lbXB0eVNlYXJjaFF1ZXJ5LCAuLi52YWx1ZSB9LCBudWxsLCAyKSk7XG4gIH0sIFt2YWx1ZV0pO1xuXG4gIGNvbnN0IGhhbmRsZVNlYXJjaEJsdXIgPSAoZTogUmVhY3QuRm9jdXNFdmVudDxIVE1MSW5wdXRFbGVtZW50PikgPT4ge1xuICAgIGlmIChxdWVyeSAhPT0gdmFsdWUucXVlcnkpIHtcbiAgICAgIG9uQ2hhbmdlKHsgLi4udmFsdWUsIHF1ZXJ5IH0pO1xuICAgIH1cbiAgfTtcblxuICBjb25zdCBoYW5kbGVTZWFyY2hFbnRlcktleSA9IChlOiBSZWFjdC5LZXlib2FyZEV2ZW50PEhUTUxJbnB1dEVsZW1lbnQ+KSA9PiB7XG4gICAgaWYgKGUua2V5ICE9PSAnRW50ZXInKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGhhbmRsZVNlYXJjaEJsdXIoZSBhcyBhbnkpO1xuICB9O1xuXG4gIGNvbnN0IG9uU2F2ZVNlYXJjaEpTT04gPSAocmF3U2VhcmNoSlNPTjogc3RyaW5nKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHNlYXJjaFF1ZXJ5ID0gSlNPTi5wYXJzZShyYXdTZWFyY2hKU09OKSBhcyBTZWFyY2hRdWVyeTtcbiAgICAgIG9uQ2hhbmdlKHNlYXJjaFF1ZXJ5KTtcbiAgICAgIHNldFF1ZXJ5KHNlYXJjaFF1ZXJ5LnF1ZXJ5ID8/ICcnKTtcbiAgICB9IGNhdGNoIChleCkge1xuICAgICAgY29uc29sZS5sb2coJ1VOQUJMRSBUTyBwYXJzZSBzZWFyY2gnLCByYXdTZWFyY2hKU09OLCBleCk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxJbmxpbmVGaWVsZFJvdz5cbiAgICAgICAgPElubGluZUZpZWxkIGxhYmVsPVwiUXVlcnlcIiBncm93PXt0cnVlfSBsYWJlbFdpZHRoPXsxMn0+XG4gICAgICAgICAgPElucHV0XG4gICAgICAgICAgICBwbGFjZWhvbGRlcj1cIkV2ZXJ5dGhpbmdcIlxuICAgICAgICAgICAgdmFsdWU9e3F1ZXJ5fVxuICAgICAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiBzZXRRdWVyeShlLmN1cnJlbnRUYXJnZXQudmFsdWUpfVxuICAgICAgICAgICAgb25LZXlEb3duPXtoYW5kbGVTZWFyY2hFbnRlcktleX1cbiAgICAgICAgICAgIG9uQmx1cj17aGFuZGxlU2VhcmNoQmx1cn1cbiAgICAgICAgICAgIHNwZWxsQ2hlY2s9e2ZhbHNlfVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvSW5saW5lRmllbGQ+XG4gICAgICA8L0lubGluZUZpZWxkUm93PlxuICAgICAgPENvZGVFZGl0b3JcbiAgICAgICAgaGVpZ2h0PXszMDB9XG4gICAgICAgIGxhbmd1YWdlPVwianNvblwiXG4gICAgICAgIHZhbHVlPXtqc29ufVxuICAgICAgICBvbkJsdXI9e29uU2F2ZVNlYXJjaEpTT059XG4gICAgICAgIG9uU2F2ZT17b25TYXZlU2VhcmNoSlNPTn1cbiAgICAgICAgc2hvd01pbmlNYXA9e2ZhbHNlfVxuICAgICAgICBzaG93TGluZU51bWJlcnM9e3RydWV9XG4gICAgICAvPlxuICAgIDwvPlxuICApO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/grafana/components/SearchEditor.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/grafana/module.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   plugin: () => (/* binding */ plugin)\n/* harmony export */ });\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/types/datasource.ts\");\n/* harmony import */ var _components_QueryEditor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./public/app/plugins/datasource/grafana/components/QueryEditor.tsx\");\n/* harmony import */ var _datasource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/plugins/datasource/grafana/datasource.ts\");\n\n\n\n\nconst plugin = new _grafana_data__WEBPACK_IMPORTED_MODULE_2__.DataSourcePlugin(_datasource__WEBPACK_IMPORTED_MODULE_1__.GrafanaDatasource).setQueryEditor(\n  _components_QueryEditor__WEBPACK_IMPORTED_MODULE_0__.QueryEditor\n);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9ncmFmYW5hL21vZHVsZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFpQztBQUVMO0FBQ007QUFHM0IsTUFBTSxTQUFTLElBQUksMkRBQWdCLENBQWtDLDBEQUFpQixFQUFFO0FBQUEsRUFDN0YsZ0VBQVc7QUFDYiIsInNvdXJjZXMiOlsid2VicGFjazovL2dyYWZhbmEvLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9ncmFmYW5hL21vZHVsZS50cz84MWM3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERhdGFTb3VyY2VQbHVnaW4gfSBmcm9tICdAZ3JhZmFuYS9kYXRhJztcblxuaW1wb3J0IHsgUXVlcnlFZGl0b3IgfSBmcm9tICcuL2NvbXBvbmVudHMvUXVlcnlFZGl0b3InO1xuaW1wb3J0IHsgR3JhZmFuYURhdGFzb3VyY2UgfSBmcm9tICcuL2RhdGFzb3VyY2UnO1xuaW1wb3J0IHsgR3JhZmFuYVF1ZXJ5IH0gZnJvbSAnLi90eXBlcyc7XG5cbmV4cG9ydCBjb25zdCBwbHVnaW4gPSBuZXcgRGF0YVNvdXJjZVBsdWdpbjxHcmFmYW5hRGF0YXNvdXJjZSwgR3JhZmFuYVF1ZXJ5PihHcmFmYW5hRGF0YXNvdXJjZSkuc2V0UXVlcnlFZGl0b3IoXG4gIFF1ZXJ5RWRpdG9yXG4pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/grafana/module.ts\n");

/***/ })

}]);