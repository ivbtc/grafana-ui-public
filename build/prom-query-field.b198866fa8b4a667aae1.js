"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkgrafana"] = self["webpackChunkgrafana"] || []).push([["prom-query-field"],{

/***/ "./public/app/plugins/datasource/prometheus/components/monaco-query-field/MonacoQueryField.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/@emotion-css-npm-11.11.2-dbfa42cf83-1edea109df.zip/node_modules/@emotion/css/dist/emotion-css.esm.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/cache/lodash-npm-4.17.21-6382451519-eb835a2e51.zip/node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var monaco_promql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./.yarn/cache/monaco-promql-npm-1.7.4-1b0c13a666-9fe2708be5.zip/node_modules/monaco-promql/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var react_use__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\"./.yarn/__virtual__/react-use-virtual-dd7926f458/0/cache/react-use-npm-17.4.0-0ef4521544-0889da919b.zip/node_modules/react-use/esm/useLatest.js\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./.yarn/cache/uuid-npm-9.0.0-46c41e3e43-8dd2c83c43.zip/node_modules/uuid/dist/esm-browser/v4.js\");\n/* harmony import */ var _grafana_e2e_selectors__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(\"./packages/grafana-e2e-selectors/src/selectors/index.ts\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/themes/ThemeContext.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Monaco/ReactMonacoEditorLazy.tsx\");\n/* harmony import */ var _getOverrideServices__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./public/app/plugins/datasource/prometheus/components/monaco-query-field/getOverrideServices.ts\");\n/* harmony import */ var _monaco_completion_provider__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./public/app/plugins/datasource/prometheus/components/monaco-query-field/monaco-completion-provider/index.ts\");\n\n\n\n\n\n\n\n\n\n\n\nconst options = {\n  codeLens: false,\n  contextmenu: false,\n  // we need `fixedOverflowWidgets` because otherwise in grafana-dashboards\n  // the popup is clipped by the panel-visualizations.\n  fixedOverflowWidgets: true,\n  folding: false,\n  fontSize: 14,\n  lineDecorationsWidth: 8,\n  // used as \"padding-left\"\n  lineNumbers: \"off\",\n  minimap: { enabled: false },\n  overviewRulerBorder: false,\n  overviewRulerLanes: 0,\n  padding: {\n    // these numbers were picked so that visually this matches the previous version\n    // of the query-editor the best\n    top: 4,\n    bottom: 5\n  },\n  renderLineHighlight: \"none\",\n  scrollbar: {\n    vertical: \"hidden\",\n    verticalScrollbarSize: 8,\n    // used as \"padding-right\"\n    horizontal: \"hidden\",\n    horizontalScrollbarSize: 0\n  },\n  scrollBeyondLastLine: false,\n  suggest: (0,_monaco_completion_provider__WEBPACK_IMPORTED_MODULE_5__.getSuggestOptions)(),\n  suggestFontSize: 12,\n  wordWrap: \"on\"\n};\nconst EDITOR_HEIGHT_OFFSET = 2;\nconst PROMQL_LANG_ID = monaco_promql__WEBPACK_IMPORTED_MODULE_2__.promLanguageDefinition.id;\nlet PROMQL_SETUP_STARTED = false;\nfunction ensurePromQL(monaco) {\n  if (PROMQL_SETUP_STARTED === false) {\n    PROMQL_SETUP_STARTED = true;\n    const { aliases, extensions, mimetypes, loader } = monaco_promql__WEBPACK_IMPORTED_MODULE_2__.promLanguageDefinition;\n    monaco.languages.register({ id: PROMQL_LANG_ID, aliases, extensions, mimetypes });\n    loader().then((mod) => {\n      monaco.languages.setMonarchTokensProvider(PROMQL_LANG_ID, mod.language);\n      monaco.languages.setLanguageConfiguration(PROMQL_LANG_ID, mod.languageConfiguration);\n    });\n  }\n}\nconst getStyles = (theme, placeholder) => {\n  return {\n    container: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n      border-radius: ${theme.shape.borderRadius()};\n      border: 1px solid ${theme.components.input.borderColor};\n    `,\n    placeholder: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n      ::after {\n        content: '${placeholder}';\n        font-family: ${theme.typography.fontFamilyMonospace};\n        opacity: 0.3;\n      }\n    `\n  };\n};\nconst MonacoQueryField = (props) => {\n  const id = (0,uuid__WEBPACK_IMPORTED_MODULE_6__[\"default\"])();\n  const overrideServicesRef = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)((0,_getOverrideServices__WEBPACK_IMPORTED_MODULE_4__.getOverrideServices)());\n  const containerRef = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)(null);\n  const { languageProvider, history, onBlur, onRunQuery, initialValue, placeholder, onChange } = props;\n  const lpRef = (0,react_use__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(languageProvider);\n  const historyRef = (0,react_use__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(history);\n  const onRunQueryRef = (0,react_use__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(onRunQuery);\n  const onBlurRef = (0,react_use__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(onBlur);\n  const onChangeRef = (0,react_use__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(onChange);\n  const autocompleteDisposeFun = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)(null);\n  const theme = (0,_grafana_ui__WEBPACK_IMPORTED_MODULE_8__.useTheme2)();\n  const styles = getStyles(theme, placeholder);\n  (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(() => {\n    return () => {\n      autocompleteDisposeFun.current?.();\n    };\n  }, []);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_3___default().createElement(\n    \"div\",\n    {\n      \"aria-label\": _grafana_e2e_selectors__WEBPACK_IMPORTED_MODULE_9__.selectors.components.QueryField.container,\n      className: styles.container,\n      ref: containerRef\n    },\n    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_3___default().createElement(\n      _grafana_ui__WEBPACK_IMPORTED_MODULE_10__.ReactMonacoEditorLazy,\n      {\n        overrideServices: overrideServicesRef.current,\n        options,\n        language: \"promql\",\n        value: initialValue,\n        beforeMount: (monaco) => {\n          ensurePromQL(monaco);\n        },\n        onMount: (editor, monaco) => {\n          const isEditorFocused = editor.createContextKey(\"isEditorFocused\" + id, false);\n          editor.onDidBlurEditorWidget(() => {\n            isEditorFocused.set(false);\n            onBlurRef.current(editor.getValue());\n          });\n          editor.onDidFocusEditorText(() => {\n            isEditorFocused.set(true);\n          });\n          const getHistory = () => Promise.resolve(historyRef.current.map((h) => h.query.expr).filter((expr) => expr !== void 0));\n          const getAllMetricNames = () => {\n            const { metrics, metricsMetadata } = lpRef.current;\n            const result = metrics.map((m) => {\n              const metaItem = metricsMetadata?.[m];\n              return {\n                name: m,\n                help: metaItem?.help ?? \"\",\n                type: metaItem?.type ?? \"\"\n              };\n            });\n            return Promise.resolve(result);\n          };\n          const getAllLabelNames = () => Promise.resolve(lpRef.current.getLabelKeys());\n          const getLabelValues = (labelName) => lpRef.current.getLabelValues(labelName);\n          const getSeriesValues = lpRef.current.getSeriesValues;\n          const getSeriesLabels = lpRef.current.getSeriesLabels;\n          const dataProvider = {\n            getHistory,\n            getAllMetricNames,\n            getAllLabelNames,\n            getLabelValues,\n            getSeriesValues,\n            getSeriesLabels\n          };\n          const completionProvider = (0,_monaco_completion_provider__WEBPACK_IMPORTED_MODULE_5__.getCompletionProvider)(monaco, dataProvider);\n          const filteringCompletionProvider = {\n            ...completionProvider,\n            provideCompletionItems: (model, position, context, token) => {\n              if (editor.getModel()?.id !== model.id) {\n                return { suggestions: [] };\n              }\n              return completionProvider.provideCompletionItems(model, position, context, token);\n            }\n          };\n          const { dispose } = monaco.languages.registerCompletionItemProvider(\n            PROMQL_LANG_ID,\n            filteringCompletionProvider\n          );\n          autocompleteDisposeFun.current = dispose;\n          const updateElementHeight = () => {\n            const containerDiv = containerRef.current;\n            if (containerDiv !== null) {\n              const pixelHeight = editor.getContentHeight();\n              containerDiv.style.height = `${pixelHeight + EDITOR_HEIGHT_OFFSET}px`;\n              containerDiv.style.width = \"100%\";\n              const pixelWidth = containerDiv.clientWidth;\n              editor.layout({ width: pixelWidth, height: pixelHeight });\n            }\n          };\n          editor.onDidContentSizeChange(updateElementHeight);\n          updateElementHeight();\n          const updateCurrentEditorValue = (0,lodash__WEBPACK_IMPORTED_MODULE_1__.debounce)(() => {\n            const editorValue = editor.getValue();\n            onChangeRef.current(editorValue);\n          }, lpRef.current.datasource.getDebounceTimeInMilliseconds());\n          editor.getModel()?.onDidChangeContent(() => {\n            updateCurrentEditorValue();\n          });\n          editor.addCommand(\n            monaco.KeyMod.Shift | monaco.KeyCode.Enter,\n            () => {\n              onRunQueryRef.current(editor.getValue());\n            },\n            \"isEditorFocused\" + id\n          );\n          editor.addCommand(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KeyK, function() {\n            __webpack_require__.g.dispatchEvent(new KeyboardEvent(\"keydown\", { key: \"k\", metaKey: true }));\n          });\n          if (placeholder) {\n            const placeholderDecorators = [\n              {\n                range: new monaco.Range(1, 1, 1, 1),\n                options: {\n                  className: styles.placeholder,\n                  isWholeLine: true\n                }\n              }\n            ];\n            let decorators = [];\n            const checkDecorators = () => {\n              const model = editor.getModel();\n              if (!model) {\n                return;\n              }\n              const newDecorators = model.getValueLength() === 0 ? placeholderDecorators : [];\n              decorators = model.deltaDecorations(decorators, newDecorators);\n            };\n            checkDecorators();\n            editor.onDidChangeModelContent(checkDecorators);\n          }\n        }\n      }\n    )\n  );\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MonacoQueryField);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/prometheus/components/monaco-query-field/MonacoQueryField.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/prometheus/components/monaco-query-field/getOverrideServices.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getOverrideServices: () => (/* binding */ getOverrideServices)\n/* harmony export */ });\n\nfunction makeStorageService() {\n  const strings = /* @__PURE__ */ new Map();\n  strings.set(\"expandSuggestionDocs\", true.toString());\n  return {\n    // we do not implement the on* handlers\n    onDidChangeValue: (data) => void 0,\n    onDidChangeTarget: (data) => void 0,\n    onWillSaveState: (data) => void 0,\n    get: (key, scope, fallbackValue) => {\n      return strings.get(key) ?? fallbackValue;\n    },\n    getBoolean: (key, scope, fallbackValue) => {\n      const val = strings.get(key);\n      if (val !== void 0) {\n        return val === \"true\";\n      } else {\n        return fallbackValue;\n      }\n    },\n    getNumber: (key, scope, fallbackValue) => {\n      const val = strings.get(key);\n      if (val !== void 0) {\n        return parseInt(val, 10);\n      } else {\n        return fallbackValue;\n      }\n    },\n    store: (key, value, scope, target) => {\n      if (value === null || value === void 0) {\n        strings.delete(key);\n      } else {\n        strings.set(key, value.toString());\n      }\n    },\n    remove: (key, scope) => {\n      strings.delete(key);\n    },\n    keys: (scope, target) => {\n      return Array.from(strings.keys());\n    },\n    logStorage: () => {\n      console.log(\"logStorage: not implemented\");\n    },\n    migrate: () => {\n      return Promise.resolve(void 0);\n    },\n    isNew: (scope) => {\n      return true;\n    },\n    flush: (reason) => {\n      return Promise.resolve(void 0);\n    }\n  };\n}\nlet overrideServices = null;\nfunction getOverrideServices() {\n  if (overrideServices === null) {\n    overrideServices = {\n      storageService: makeStorageService()\n    };\n  }\n  return overrideServices;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9wcm9tZXRoZXVzL2NvbXBvbmVudHMvbW9uYWNvLXF1ZXJ5LWZpZWxkL2dldE92ZXJyaWRlU2VydmljZXMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFvQkEsU0FBUyxxQkFBcUI7QUFLNUIsUUFBTSxVQUFVLG9CQUFJLElBQW9CO0FBR3hDLFVBQVEsSUFBSSx3QkFBd0IsS0FBSyxTQUFTLENBQUM7QUFFbkQsU0FBTztBQUFBO0FBQUEsSUFFTCxrQkFBa0IsQ0FBQyxTQUF3QjtBQUFBLElBQzNDLG1CQUFtQixDQUFDLFNBQXdCO0FBQUEsSUFDNUMsaUJBQWlCLENBQUMsU0FBd0I7QUFBQSxJQUUxQyxLQUFLLENBQUMsS0FBYSxPQUFnQixrQkFBK0M7QUFDaEYsYUFBTyxRQUFRLElBQUksR0FBRyxLQUFLO0FBQUEsSUFDN0I7QUFBQSxJQUVBLFlBQVksQ0FBQyxLQUFhLE9BQWdCLGtCQUFpRDtBQUN6RixZQUFNLE1BQU0sUUFBUSxJQUFJLEdBQUc7QUFDM0IsVUFBSSxRQUFRLFFBQVc7QUFHckIsZUFBTyxRQUFRO0FBQUEsTUFDakIsT0FBTztBQUNMLGVBQU87QUFBQSxNQUNUO0FBQUEsSUFDRjtBQUFBLElBRUEsV0FBVyxDQUFDLEtBQWEsT0FBZ0Isa0JBQStDO0FBQ3RGLFlBQU0sTUFBTSxRQUFRLElBQUksR0FBRztBQUMzQixVQUFJLFFBQVEsUUFBVztBQUNyQixlQUFPLFNBQVMsS0FBSyxFQUFFO0FBQUEsTUFDekIsT0FBTztBQUNMLGVBQU87QUFBQSxNQUNUO0FBQUEsSUFDRjtBQUFBLElBRUEsT0FBTyxDQUNMLEtBQ0EsT0FDQSxPQUNBLFdBQ1M7QUFFVCxVQUFJLFVBQVUsUUFBUSxVQUFVLFFBQVc7QUFDekMsZ0JBQVEsT0FBTyxHQUFHO0FBQUEsTUFDcEIsT0FBTztBQUNMLGdCQUFRLElBQUksS0FBSyxNQUFNLFNBQVMsQ0FBQztBQUFBLE1BQ25DO0FBQUEsSUFDRjtBQUFBLElBRUEsUUFBUSxDQUFDLEtBQWEsVUFBeUI7QUFDN0MsY0FBUSxPQUFPLEdBQUc7QUFBQSxJQUNwQjtBQUFBLElBRUEsTUFBTSxDQUFDLE9BQWdCLFdBQThCO0FBQ25ELGFBQU8sTUFBTSxLQUFLLFFBQVEsS0FBSyxDQUFDO0FBQUEsSUFDbEM7QUFBQSxJQUVBLFlBQVksTUFBWTtBQUN0QixjQUFRLElBQUksNkJBQTZCO0FBQUEsSUFDM0M7QUFBQSxJQUVBLFNBQVMsTUFBcUI7QUFFNUIsYUFBTyxRQUFRLFFBQVEsTUFBUztBQUFBLElBQ2xDO0FBQUEsSUFFQSxPQUFPLENBQUMsVUFBNEI7QUFHbEMsYUFBTztBQUFBLElBQ1Q7QUFBQSxJQUVBLE9BQU8sQ0FBQyxXQUFvQztBQUUxQyxhQUFPLFFBQVEsUUFBUSxNQUFTO0FBQUEsSUFDbEM7QUFBQSxFQUNGO0FBQ0Y7QUFFQSxJQUFJLG1CQUFzRTtBQUVuRSxTQUFTLHNCQUFrRTtBQUVoRixNQUFJLHFCQUFxQixNQUFNO0FBQzdCLHVCQUFtQjtBQUFBLE1BQ2pCLGdCQUFnQixtQkFBbUI7QUFBQSxJQUNyQztBQUFBLEVBQ0Y7QUFFQSxTQUFPO0FBQ1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ncmFmYW5hLy4vcHVibGljL2FwcC9wbHVnaW5zL2RhdGFzb3VyY2UvcHJvbWV0aGV1cy9jb21wb25lbnRzL21vbmFjby1xdWVyeS1maWVsZC9nZXRPdmVycmlkZVNlcnZpY2VzLnRzPzFkNzciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbW9uYWNvVHlwZXMgfSBmcm9tICdAZ3JhZmFuYS91aSc7XG5cbi8vIHRoaXMgdGhpbmcgaGVyZSBpcyBhIHdvcmthcm91bmQgaW4gYSB3YXkuXG4vLyB3aGF0IHdlIHdhbnQgdG8gYWNoaWV2ZSwgaXMgdGhhdCB3aGVuIHRoZSBhdXRvY29tcGxldGUtd2luZG93XG4vLyBvcGVucywgdGhlIFwic2Vjb25kLCBleHRyYSBwb3B1cFwiIHdpdGggdGhlIGV4dHJhIGhlbHAsXG4vLyBhbHNvIG9wZW5zIGF1dG9tYXRpY2FsbHkuXG4vLyBidXQgdGhlcmUgaXMgbm8gQVBJIHRvIGFjaGlldmUgaXQuXG4vLyB0aGUgd2F5IHRvIGRvIGl0IGlzIHRvIGltcGxlbWVudCB0aGUgYHN0b3JhZ2VTZXJ2aWNlYFxuLy8gaW50ZXJmYWNlLCBhbmQgcHJvdmlkZSBvdXIgY3VzdG9tIGltcGxlbWVudGF0aW9uLFxuLy8gd2hpY2ggd2lsbCBkZWZhdWx0IHRvIGB0cnVlYCBmb3IgdGhlIGNvcnJlY3Qgc3RyaW5nLWtleS5cbi8vIHVuZm9ydHVuYXRlbHksIHdoaWxlIHRoZSB0eXBlc2NyaXB0LWludGVyZmFjZSBleGlzdHMsXG4vLyBpdCBpcyBub3QgZXhwb3J0ZWQgZnJvbSBtb25hY28tZWRpdG9yLFxuLy8gc28gd2UgY2Fubm90IHJlbHkgb24gdHlwZXNjcmlwdCB0byBtYWtlIHN1cmVcbi8vIHdlIGRvIGl0IHJpZ2h0LiBhbGwgd2UgY2FuIGRvIGlzIHRvIG1hbnVhbGx5XG4vLyBsb29rdXAgdGhlIGludGVyZmFjZSwgYW5kIG1ha2Ugc3VyZSB3ZSBjb2RlIG91ciBjb2RlIHJpZ2h0LlxuLy8gb3VyIGNvZGUgaXMgYSBcImJlc3QgZWZmb3J0XCIgYXBwcm9hY2gsXG4vLyBpIGFtIG5vdCAxMDAlIGhvdyB0aGUgYHNjb3BlYCBhbmQgYHRhcmdldGAgdGhpbmdzIHdvcmssXG4vLyBidXQgc28gZmFyIGl0IHNlZW1zIHRvIHdvcmsgb2suXG4vLyBpIHdvdWxkIHVzZSBhbiBhbm90aGVyIGFwcHJvYWNoLCBpZiB0aGVyZSB3YXMgb25lIGF2YWlsYWJsZS5cblxuZnVuY3Rpb24gbWFrZVN0b3JhZ2VTZXJ2aWNlKCkge1xuICAvLyB3ZSBuZWVkIHRvIHJldHVybiBhbiBvYmplY3QgdGhhdCBmdWxmaWxscyB0aGlzIGludGVyZmFjZTpcbiAgLy8gaHR0cHM6Ly9naXRodWIuY29tL21pY3Jvc29mdC92c2NvZGUvYmxvYi9mZjFlMTZlZWJiOTNhZjc5ZmQ2ZDdhZjEzNTZjNDAwM2ExMjBjNTYzL3NyYy92cy9wbGF0Zm9ybS9zdG9yYWdlL2NvbW1vbi9zdG9yYWdlLnRzI0wzN1xuICAvLyB1bmZvcnR1bmF0ZWx5IGl0IGlzIG5vdCBleHBvcnQgZnJvbSBtb25hY28tZWRpdG9yXG5cbiAgY29uc3Qgc3RyaW5ncyA9IG5ldyBNYXA8c3RyaW5nLCBzdHJpbmc+KCk7XG5cbiAgLy8gd2Ugd2FudCB0aGlzIHRvIGJlIHRydWUgYnkgZGVmYXVsdFxuICBzdHJpbmdzLnNldCgnZXhwYW5kU3VnZ2VzdGlvbkRvY3MnLCB0cnVlLnRvU3RyaW5nKCkpO1xuXG4gIHJldHVybiB7XG4gICAgLy8gd2UgZG8gbm90IGltcGxlbWVudCB0aGUgb24qIGhhbmRsZXJzXG4gICAgb25EaWRDaGFuZ2VWYWx1ZTogKGRhdGE6IHVua25vd24pOiB2b2lkID0+IHVuZGVmaW5lZCxcbiAgICBvbkRpZENoYW5nZVRhcmdldDogKGRhdGE6IHVua25vd24pOiB2b2lkID0+IHVuZGVmaW5lZCxcbiAgICBvbldpbGxTYXZlU3RhdGU6IChkYXRhOiB1bmtub3duKTogdm9pZCA9PiB1bmRlZmluZWQsXG5cbiAgICBnZXQ6IChrZXk6IHN0cmluZywgc2NvcGU6IHVua25vd24sIGZhbGxiYWNrVmFsdWU/OiBzdHJpbmcpOiBzdHJpbmcgfCB1bmRlZmluZWQgPT4ge1xuICAgICAgcmV0dXJuIHN0cmluZ3MuZ2V0KGtleSkgPz8gZmFsbGJhY2tWYWx1ZTtcbiAgICB9LFxuXG4gICAgZ2V0Qm9vbGVhbjogKGtleTogc3RyaW5nLCBzY29wZTogdW5rbm93biwgZmFsbGJhY2tWYWx1ZT86IGJvb2xlYW4pOiBib29sZWFuIHwgdW5kZWZpbmVkID0+IHtcbiAgICAgIGNvbnN0IHZhbCA9IHN0cmluZ3MuZ2V0KGtleSk7XG4gICAgICBpZiAodmFsICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgLy8gdGhlIGludGVyZmFjZS1kb2NzIHNheSB0aGUgdmFsdWUgd2lsbCBiZSBjb252ZXJ0ZWRcbiAgICAgICAgLy8gdG8gYSBib29sZWFuIGJ1dCBkbyBub3Qgc3BlY2lmeSBob3csIHNvIHdlIGltcHJvdmlzZVxuICAgICAgICByZXR1cm4gdmFsID09PSAndHJ1ZSc7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gZmFsbGJhY2tWYWx1ZTtcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgZ2V0TnVtYmVyOiAoa2V5OiBzdHJpbmcsIHNjb3BlOiB1bmtub3duLCBmYWxsYmFja1ZhbHVlPzogbnVtYmVyKTogbnVtYmVyIHwgdW5kZWZpbmVkID0+IHtcbiAgICAgIGNvbnN0IHZhbCA9IHN0cmluZ3MuZ2V0KGtleSk7XG4gICAgICBpZiAodmFsICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHBhcnNlSW50KHZhbCwgMTApO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGZhbGxiYWNrVmFsdWU7XG4gICAgICB9XG4gICAgfSxcblxuICAgIHN0b3JlOiAoXG4gICAgICBrZXk6IHN0cmluZyxcbiAgICAgIHZhbHVlOiBzdHJpbmcgfCBib29sZWFuIHwgbnVtYmVyIHwgdW5kZWZpbmVkIHwgbnVsbCxcbiAgICAgIHNjb3BlOiB1bmtub3duLFxuICAgICAgdGFyZ2V0OiB1bmtub3duXG4gICAgKTogdm9pZCA9PiB7XG4gICAgICAvLyB0aGUgaW50ZXJmYWNlLWRvY3Mgc2F5IGlmIHRoZSB2YWx1ZSBpcyBudWxsaXNoLCBpdCBzaG91bGQgYWN0IGFzIGRlbGV0ZVxuICAgICAgaWYgKHZhbHVlID09PSBudWxsIHx8IHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgc3RyaW5ncy5kZWxldGUoa2V5KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHN0cmluZ3Muc2V0KGtleSwgdmFsdWUudG9TdHJpbmcoKSk7XG4gICAgICB9XG4gICAgfSxcblxuICAgIHJlbW92ZTogKGtleTogc3RyaW5nLCBzY29wZTogdW5rbm93bik6IHZvaWQgPT4ge1xuICAgICAgc3RyaW5ncy5kZWxldGUoa2V5KTtcbiAgICB9LFxuXG4gICAga2V5czogKHNjb3BlOiB1bmtub3duLCB0YXJnZXQ6IHVua25vd24pOiBzdHJpbmdbXSA9PiB7XG4gICAgICByZXR1cm4gQXJyYXkuZnJvbShzdHJpbmdzLmtleXMoKSk7XG4gICAgfSxcblxuICAgIGxvZ1N0b3JhZ2U6ICgpOiB2b2lkID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKCdsb2dTdG9yYWdlOiBub3QgaW1wbGVtZW50ZWQnKTtcbiAgICB9LFxuXG4gICAgbWlncmF0ZTogKCk6IFByb21pc2U8dm9pZD4gPT4ge1xuICAgICAgLy8gd2UgZG8gbm90IGltcGxlbWVudCB0aGlzXG4gICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHVuZGVmaW5lZCk7XG4gICAgfSxcblxuICAgIGlzTmV3OiAoc2NvcGU6IHVua25vd24pOiBib29sZWFuID0+IHtcbiAgICAgIC8vIHdlIGNyZWF0ZSBhIG5ldyBzdG9yYWdlIGZvciBldmVyeSBzZXNzaW9uLCB3ZSBkbyBub3QgcGVyc2lzdCBpdCxcbiAgICAgIC8vIHNvIHdlIHJldHVybiBgdHJ1ZWAuXG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9LFxuXG4gICAgZmx1c2g6IChyZWFzb24/OiB1bmtub3duKTogUHJvbWlzZTx2b2lkPiA9PiB7XG4gICAgICAvLyB3ZSBkbyBub3QgaW1wbGVtZW50IHRoaXNcbiAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUodW5kZWZpbmVkKTtcbiAgICB9LFxuICB9O1xufVxuXG5sZXQgb3ZlcnJpZGVTZXJ2aWNlczogbW9uYWNvVHlwZXMuZWRpdG9yLklFZGl0b3JPdmVycmlkZVNlcnZpY2VzIHwgbnVsbCA9IG51bGw7XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRPdmVycmlkZVNlcnZpY2VzKCk6IG1vbmFjb1R5cGVzLmVkaXRvci5JRWRpdG9yT3ZlcnJpZGVTZXJ2aWNlcyB7XG4gIC8vIG9ubHkgaGF2ZSBvbmUgaW5zdGFuY2Ugb2YgdGhpcyBmb3IgZXZlcnkgcXVlcnkgZWRpdG9yXG4gIGlmIChvdmVycmlkZVNlcnZpY2VzID09PSBudWxsKSB7XG4gICAgb3ZlcnJpZGVTZXJ2aWNlcyA9IHtcbiAgICAgIHN0b3JhZ2VTZXJ2aWNlOiBtYWtlU3RvcmFnZVNlcnZpY2UoKSxcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIG92ZXJyaWRlU2VydmljZXM7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/prometheus/components/monaco-query-field/getOverrideServices.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/prometheus/components/monaco-query-field/monaco-completion-provider/completions.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCompletions: () => (/* binding */ getCompletions)\n/* harmony export */ });\n/* harmony import */ var _language_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./public/app/plugins/datasource/prometheus/language_utils.ts\");\n/* harmony import */ var _promql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/plugins/datasource/prometheus/promql.ts\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/plugins/datasource/prometheus/components/monaco-query-field/monaco-completion-provider/util.ts\");\n\n\n\n\nasync function getAllMetricNamesCompletions(dataProvider) {\n  const metrics = await dataProvider.getAllMetricNames();\n  return metrics.map((metric) => ({\n    type: \"METRIC_NAME\",\n    label: metric.name,\n    insertText: metric.name,\n    detail: `${metric.name} : ${metric.type}`,\n    documentation: metric.help\n  }));\n}\nconst FUNCTION_COMPLETIONS = _promql__WEBPACK_IMPORTED_MODULE_1__.FUNCTIONS.map((f) => ({\n  type: \"FUNCTION\",\n  label: f.label,\n  insertText: f.insertText ?? \"\",\n  // i don't know what to do when this is nullish. it should not be.\n  detail: f.detail,\n  documentation: f.documentation\n}));\nasync function getAllFunctionsAndMetricNamesCompletions(dataProvider) {\n  const metricNames = await getAllMetricNamesCompletions(dataProvider);\n  return [...FUNCTION_COMPLETIONS, ...metricNames];\n}\nconst DURATION_COMPLETIONS = [\n  \"$__interval\",\n  \"$__range\",\n  \"$__rate_interval\",\n  \"1m\",\n  \"5m\",\n  \"10m\",\n  \"30m\",\n  \"1h\",\n  \"1d\"\n].map((text) => ({\n  type: \"DURATION\",\n  label: text,\n  insertText: text\n}));\nasync function getAllHistoryCompletions(dataProvider) {\n  const allHistory = await dataProvider.getHistory();\n  return allHistory.slice(0, 10).map((expr) => ({\n    type: \"HISTORY\",\n    label: expr,\n    insertText: expr\n  }));\n}\nfunction makeSelector(metricName, labels) {\n  const allLabels = [...labels];\n  if (metricName !== void 0) {\n    allLabels.push({ name: \"__name__\", value: metricName, op: \"=\" });\n  }\n  const allLabelTexts = allLabels.map(\n    (label) => `${label.name}${label.op}\"${(0,_language_utils__WEBPACK_IMPORTED_MODULE_0__.escapeLabelValueInExactSelector)(label.value)}\"`\n  );\n  return `{${allLabelTexts.join(\",\")}}`;\n}\nasync function getLabelNames(metric, otherLabels, dataProvider) {\n  if (metric === void 0 && otherLabels.length === 0) {\n    return dataProvider.getAllLabelNames();\n  } else {\n    const selector = makeSelector(metric, otherLabels);\n    return await dataProvider.getSeriesLabels(selector, otherLabels);\n  }\n}\nasync function getLabelNamesForCompletions(metric, suffix, triggerOnInsert, otherLabels, dataProvider) {\n  const labelNames = await getLabelNames(metric, otherLabels, dataProvider);\n  return labelNames.map((text) => ({\n    type: \"LABEL_NAME\",\n    label: text,\n    insertText: `${text}${suffix}`,\n    triggerOnInsert\n  }));\n}\nasync function getLabelNamesForSelectorCompletions(metric, otherLabels, dataProvider) {\n  return getLabelNamesForCompletions(metric, \"=\", true, otherLabels, dataProvider);\n}\nasync function getLabelNamesForByCompletions(metric, otherLabels, dataProvider) {\n  return getLabelNamesForCompletions(metric, \"\", false, otherLabels, dataProvider);\n}\nasync function getLabelValues(metric, labelName, otherLabels, dataProvider) {\n  if (metric === void 0 && otherLabels.length === 0) {\n    return dataProvider.getLabelValues(labelName);\n  } else {\n    const selector = makeSelector(metric, otherLabels);\n    return await dataProvider.getSeriesValues(labelName, selector);\n  }\n}\nasync function getLabelValuesForMetricCompletions(metric, labelName, betweenQuotes, otherLabels, dataProvider) {\n  const values = await getLabelValues(metric, labelName, otherLabels, dataProvider);\n  return values.map((text) => ({\n    type: \"LABEL_VALUE\",\n    label: text,\n    insertText: betweenQuotes ? text : `\"${text}\"`\n    // FIXME: escaping strange characters?\n  }));\n}\nasync function getCompletions(situation, dataProvider) {\n  switch (situation.type) {\n    case \"IN_DURATION\":\n      return DURATION_COMPLETIONS;\n    case \"IN_FUNCTION\":\n      return getAllFunctionsAndMetricNamesCompletions(dataProvider);\n    case \"AT_ROOT\": {\n      return getAllFunctionsAndMetricNamesCompletions(dataProvider);\n    }\n    case \"EMPTY\": {\n      const metricNames = await getAllMetricNamesCompletions(dataProvider);\n      const historyCompletions = await getAllHistoryCompletions(dataProvider);\n      return [...historyCompletions, ...FUNCTION_COMPLETIONS, ...metricNames];\n    }\n    case \"IN_LABEL_SELECTOR_NO_LABEL_NAME\":\n      return getLabelNamesForSelectorCompletions(situation.metricName, situation.otherLabels, dataProvider);\n    case \"IN_GROUPING\":\n      return getLabelNamesForByCompletions(situation.metricName, situation.otherLabels, dataProvider);\n    case \"IN_LABEL_SELECTOR_WITH_LABEL_NAME\":\n      return getLabelValuesForMetricCompletions(\n        situation.metricName,\n        situation.labelName,\n        situation.betweenQuotes,\n        situation.otherLabels,\n        dataProvider\n      );\n    default:\n      throw new _util__WEBPACK_IMPORTED_MODULE_2__.NeverCaseError(situation);\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/prometheus/components/monaco-query-field/monaco-completion-provider/completions.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/prometheus/components/monaco-query-field/monaco-completion-provider/index.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCompletionProvider: () => (/* binding */ getCompletionProvider),\n/* harmony export */   getSuggestOptions: () => (/* binding */ getSuggestOptions)\n/* harmony export */ });\n/* harmony import */ var _completions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./public/app/plugins/datasource/prometheus/components/monaco-query-field/monaco-completion-provider/completions.ts\");\n/* harmony import */ var _situation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/plugins/datasource/prometheus/components/monaco-query-field/monaco-completion-provider/situation.ts\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/plugins/datasource/prometheus/components/monaco-query-field/monaco-completion-provider/util.ts\");\n\n\n\n\nfunction getSuggestOptions() {\n  return {\n    // monaco-editor sometimes provides suggestions automatically, i am not\n    // sure based on what, seems to be by analyzing the words already\n    // written.\n    // to try it out:\n    // - enter `go_goroutines{job~`\n    // - have the cursor at the end of the string\n    // - press ctrl-enter\n    // - you will get two suggestions\n    // those were not provided by grafana, they are offered automatically.\n    // i want to remove those. the only way i found is:\n    // - every suggestion-item has a `kind` attribute,\n    //   that controls the icon to the left of the suggestion.\n    // - items auto-generated by monaco have `kind` set to `text`.\n    // - we make sure grafana-provided suggestions do not have `kind` set to `text`.\n    // - and then we tell monaco not to show suggestions of kind `text`\n    showWords: false\n  };\n}\nfunction getMonacoCompletionItemKind(type, monaco) {\n  switch (type) {\n    case \"DURATION\":\n      return monaco.languages.CompletionItemKind.Unit;\n    case \"FUNCTION\":\n      return monaco.languages.CompletionItemKind.Variable;\n    case \"HISTORY\":\n      return monaco.languages.CompletionItemKind.Snippet;\n    case \"LABEL_NAME\":\n      return monaco.languages.CompletionItemKind.Enum;\n    case \"LABEL_VALUE\":\n      return monaco.languages.CompletionItemKind.EnumMember;\n    case \"METRIC_NAME\":\n      return monaco.languages.CompletionItemKind.Constructor;\n    default:\n      throw new _util__WEBPACK_IMPORTED_MODULE_2__.NeverCaseError(type);\n  }\n}\nfunction getCompletionProvider(monaco, dataProvider) {\n  const provideCompletionItems = (model, position) => {\n    const word = model.getWordAtPosition(position);\n    const range = word != null ? monaco.Range.lift({\n      startLineNumber: position.lineNumber,\n      endLineNumber: position.lineNumber,\n      startColumn: word.startColumn,\n      endColumn: word.endColumn\n    }) : monaco.Range.fromPositions(position);\n    const positionClone = {\n      column: position.column,\n      lineNumber: position.lineNumber\n    };\n    if (window.getSelection) {\n      const selectedText = window.getSelection()?.toString();\n      if (selectedText && selectedText.length > 0) {\n        positionClone.column = positionClone.column - selectedText.length;\n      }\n    }\n    const offset = model.getOffsetAt(positionClone);\n    const situation = (0,_situation__WEBPACK_IMPORTED_MODULE_1__.getSituation)(model.getValue(), offset);\n    const completionsPromise = situation != null ? (0,_completions__WEBPACK_IMPORTED_MODULE_0__.getCompletions)(situation, dataProvider) : Promise.resolve([]);\n    return completionsPromise.then((items) => {\n      const maxIndexDigits = items.length.toString().length;\n      const suggestions = items.map((item, index) => ({\n        kind: getMonacoCompletionItemKind(item.type, monaco),\n        label: item.label,\n        insertText: item.insertText,\n        detail: item.detail,\n        documentation: item.documentation,\n        sortText: index.toString().padStart(maxIndexDigits, \"0\"),\n        // to force the order we have\n        range,\n        command: item.triggerOnInsert ? {\n          id: \"editor.action.triggerSuggest\",\n          title: \"\"\n        } : void 0\n      }));\n      return { suggestions };\n    });\n  };\n  return {\n    triggerCharacters: [\"{\", \",\", \"[\", \"(\", \"=\", \"~\", \" \", '\"'],\n    provideCompletionItems\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/prometheus/components/monaco-query-field/monaco-completion-provider/index.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/prometheus/components/monaco-query-field/monaco-completion-provider/situation.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getSituation: () => (/* binding */ getSituation)\n/* harmony export */ });\n/* harmony import */ var _prometheus_io_lezer_promql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/__virtual__/@prometheus-io-lezer-promql-virtual-ded3c03445/0/cache/@prometheus-io-lezer-promql-npm-0.37.0-dcde65254c-17722456a6.zip/node_modules/@prometheus-io/lezer-promql/dist/index.es.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/plugins/datasource/prometheus/components/monaco-query-field/monaco-completion-provider/util.ts\");\n\n\n\nfunction move(node, direction) {\n  switch (direction) {\n    case \"parent\":\n      return node.parent;\n    case \"firstChild\":\n      return node.firstChild;\n    case \"lastChild\":\n      return node.lastChild;\n    case \"nextSibling\":\n      return node.nextSibling;\n    default:\n      throw new _util__WEBPACK_IMPORTED_MODULE_1__.NeverCaseError(direction);\n  }\n}\nfunction walk(node, path) {\n  let current = node;\n  for (const [direction, expectedType] of path) {\n    current = move(current, direction);\n    if (current === null) {\n      return null;\n    }\n    if (current.type.id !== expectedType) {\n      return null;\n    }\n  }\n  return current;\n}\nfunction getNodeText(node, text) {\n  return text.slice(node.from, node.to);\n}\nfunction parsePromQLStringLiteral(text) {\n  const inside = text.slice(1, text.length - 1);\n  if (text.startsWith('\"') && text.endsWith('\"')) {\n    return inside.replace(/\\\\\"/, '\"');\n  }\n  if (text.startsWith(\"'\") && text.endsWith(\"'\")) {\n    return inside.replace(/\\\\'/, \"'\");\n  }\n  if (text.startsWith(\"`\") && text.endsWith(\"`\")) {\n    return inside;\n  }\n  throw new Error(\"FIXME: invalid string literal\");\n}\nfunction isPathMatch(resolverPath, cursorPath) {\n  return resolverPath.every((item, index) => item === cursorPath[index]);\n}\nconst ERROR_NODE_NAME = 0;\nconst RESOLVERS = [\n  {\n    path: [_prometheus_io_lezer_promql__WEBPACK_IMPORTED_MODULE_0__.LabelMatchers, _prometheus_io_lezer_promql__WEBPACK_IMPORTED_MODULE_0__.VectorSelector],\n    fun: resolveLabelKeysWithEquals\n  },\n  {\n    path: [_prometheus_io_lezer_promql__WEBPACK_IMPORTED_MODULE_0__.PromQL],\n    fun: resolveTopLevel\n  },\n  {\n    path: [_prometheus_io_lezer_promql__WEBPACK_IMPORTED_MODULE_0__.FunctionCallBody],\n    fun: resolveInFunction\n  },\n  {\n    path: [_prometheus_io_lezer_promql__WEBPACK_IMPORTED_MODULE_0__.StringLiteral, _prometheus_io_lezer_promql__WEBPACK_IMPORTED_MODULE_0__.LabelMatcher],\n    fun: resolveLabelMatcher\n  },\n  {\n    path: [ERROR_NODE_NAME, _prometheus_io_lezer_promql__WEBPACK_IMPORTED_MODULE_0__.LabelMatcher],\n    fun: resolveLabelMatcher\n  },\n  {\n    path: [ERROR_NODE_NAME, _prometheus_io_lezer_promql__WEBPACK_IMPORTED_MODULE_0__.MatrixSelector],\n    fun: resolveDurations\n  },\n  {\n    path: [_prometheus_io_lezer_promql__WEBPACK_IMPORTED_MODULE_0__.GroupingLabels],\n    fun: resolveLabelsForGrouping\n  }\n];\nconst LABEL_OP_MAP = /* @__PURE__ */ new Map([\n  [_prometheus_io_lezer_promql__WEBPACK_IMPORTED_MODULE_0__.EqlSingle, \"=\"],\n  [_prometheus_io_lezer_promql__WEBPACK_IMPORTED_MODULE_0__.EqlRegex, \"=~\"],\n  [_prometheus_io_lezer_promql__WEBPACK_IMPORTED_MODULE_0__.Neq, \"!=\"],\n  [_prometheus_io_lezer_promql__WEBPACK_IMPORTED_MODULE_0__.NeqRegex, \"!~\"]\n]);\nfunction getLabelOp(opNode) {\n  const opChild = opNode.firstChild;\n  if (opChild === null) {\n    return null;\n  }\n  return LABEL_OP_MAP.get(opChild.type.id) ?? null;\n}\nfunction getLabel(labelMatcherNode, text) {\n  if (labelMatcherNode.type.id !== _prometheus_io_lezer_promql__WEBPACK_IMPORTED_MODULE_0__.LabelMatcher) {\n    return null;\n  }\n  const nameNode = walk(labelMatcherNode, [[\"firstChild\", _prometheus_io_lezer_promql__WEBPACK_IMPORTED_MODULE_0__.LabelName]]);\n  if (nameNode === null) {\n    return null;\n  }\n  const opNode = walk(nameNode, [[\"nextSibling\", _prometheus_io_lezer_promql__WEBPACK_IMPORTED_MODULE_0__.MatchOp]]);\n  if (opNode === null) {\n    return null;\n  }\n  const op = getLabelOp(opNode);\n  if (op === null) {\n    return null;\n  }\n  const valueNode = walk(labelMatcherNode, [[\"lastChild\", _prometheus_io_lezer_promql__WEBPACK_IMPORTED_MODULE_0__.StringLiteral]]);\n  if (valueNode === null) {\n    return null;\n  }\n  const name = getNodeText(nameNode, text);\n  const value = parsePromQLStringLiteral(getNodeText(valueNode, text));\n  return { name, value, op };\n}\nfunction getLabels(labelMatchersNode, text) {\n  if (labelMatchersNode.type.id !== _prometheus_io_lezer_promql__WEBPACK_IMPORTED_MODULE_0__.LabelMatchers) {\n    return [];\n  }\n  let listNode = walk(labelMatchersNode, [[\"firstChild\", _prometheus_io_lezer_promql__WEBPACK_IMPORTED_MODULE_0__.LabelMatchList]]);\n  const labels = [];\n  while (listNode !== null) {\n    const matcherNode = walk(listNode, [[\"lastChild\", _prometheus_io_lezer_promql__WEBPACK_IMPORTED_MODULE_0__.LabelMatcher]]);\n    if (matcherNode === null) {\n      return [];\n    }\n    const label = getLabel(matcherNode, text);\n    if (label !== null) {\n      labels.push(label);\n    }\n    listNode = walk(listNode, [[\"firstChild\", _prometheus_io_lezer_promql__WEBPACK_IMPORTED_MODULE_0__.LabelMatchList]]);\n  }\n  labels.reverse();\n  return labels;\n}\nfunction getNodeChildren(node) {\n  let child = node.firstChild;\n  const children = [];\n  while (child !== null) {\n    children.push(child);\n    child = child.nextSibling;\n  }\n  return children;\n}\nfunction getNodeInSubtree(node, typeId) {\n  if (node.type.id === typeId) {\n    return node;\n  }\n  const children = getNodeChildren(node);\n  for (const child of children) {\n    const n = getNodeInSubtree(child, typeId);\n    if (n !== null) {\n      return n;\n    }\n  }\n  return null;\n}\nfunction resolveLabelsForGrouping(node, text, pos) {\n  const aggrExpNode = walk(node, [\n    [\"parent\", _prometheus_io_lezer_promql__WEBPACK_IMPORTED_MODULE_0__.AggregateModifier],\n    [\"parent\", _prometheus_io_lezer_promql__WEBPACK_IMPORTED_MODULE_0__.AggregateExpr]\n  ]);\n  if (aggrExpNode === null) {\n    return null;\n  }\n  const bodyNode = aggrExpNode.getChild(_prometheus_io_lezer_promql__WEBPACK_IMPORTED_MODULE_0__.FunctionCallBody);\n  if (bodyNode === null) {\n    return null;\n  }\n  const metricIdNode = getNodeInSubtree(bodyNode, _prometheus_io_lezer_promql__WEBPACK_IMPORTED_MODULE_0__.MetricIdentifier);\n  if (metricIdNode === null) {\n    return null;\n  }\n  const idNode = walk(metricIdNode, [[\"firstChild\", _prometheus_io_lezer_promql__WEBPACK_IMPORTED_MODULE_0__.Identifier]]);\n  if (idNode === null) {\n    return null;\n  }\n  const metricName = getNodeText(idNode, text);\n  return {\n    type: \"IN_GROUPING\",\n    metricName,\n    otherLabels: []\n  };\n}\nfunction resolveLabelMatcher(node, text, pos) {\n  const inStringNode = !node.type.isError;\n  const parent = walk(node, [[\"parent\", _prometheus_io_lezer_promql__WEBPACK_IMPORTED_MODULE_0__.LabelMatcher]]);\n  if (parent === null) {\n    return null;\n  }\n  const labelNameNode = walk(parent, [[\"firstChild\", _prometheus_io_lezer_promql__WEBPACK_IMPORTED_MODULE_0__.LabelName]]);\n  if (labelNameNode === null) {\n    return null;\n  }\n  const labelName = getNodeText(labelNameNode, text);\n  const firstListNode = walk(parent, [[\"parent\", _prometheus_io_lezer_promql__WEBPACK_IMPORTED_MODULE_0__.LabelMatchList]]);\n  if (firstListNode === null) {\n    return null;\n  }\n  let listNode = firstListNode;\n  let labelMatchersNode = null;\n  while (labelMatchersNode === null) {\n    const p = listNode.parent;\n    if (p === null) {\n      return null;\n    }\n    const { id } = p.type;\n    switch (id) {\n      case _prometheus_io_lezer_promql__WEBPACK_IMPORTED_MODULE_0__.LabelMatchList:\n        listNode = p;\n        continue;\n      case _prometheus_io_lezer_promql__WEBPACK_IMPORTED_MODULE_0__.LabelMatchers:\n        labelMatchersNode = p;\n        continue;\n      default:\n        return null;\n    }\n  }\n  const allLabels = getLabels(labelMatchersNode, text);\n  const otherLabels = allLabels.filter((label) => label.name !== labelName);\n  const metricNameNode = walk(labelMatchersNode, [\n    [\"parent\", _prometheus_io_lezer_promql__WEBPACK_IMPORTED_MODULE_0__.VectorSelector],\n    [\"firstChild\", _prometheus_io_lezer_promql__WEBPACK_IMPORTED_MODULE_0__.MetricIdentifier],\n    [\"firstChild\", _prometheus_io_lezer_promql__WEBPACK_IMPORTED_MODULE_0__.Identifier]\n  ]);\n  if (metricNameNode === null) {\n    return {\n      type: \"IN_LABEL_SELECTOR_WITH_LABEL_NAME\",\n      labelName,\n      betweenQuotes: inStringNode,\n      otherLabels\n    };\n  }\n  const metricName = getNodeText(metricNameNode, text);\n  return {\n    type: \"IN_LABEL_SELECTOR_WITH_LABEL_NAME\",\n    metricName,\n    labelName,\n    betweenQuotes: inStringNode,\n    otherLabels\n  };\n}\nfunction resolveTopLevel(node, text, pos) {\n  return {\n    type: \"AT_ROOT\"\n  };\n}\nfunction resolveInFunction(node, text, pos) {\n  return {\n    type: \"IN_FUNCTION\"\n  };\n}\nfunction resolveDurations(node, text, pos) {\n  return {\n    type: \"IN_DURATION\"\n  };\n}\nfunction subTreeHasError(node) {\n  return getNodeInSubtree(node, ERROR_NODE_NAME) !== null;\n}\nfunction resolveLabelKeysWithEquals(node, text, pos) {\n  if (subTreeHasError(node)) {\n    return null;\n  }\n  const child = walk(node, [[\"firstChild\", _prometheus_io_lezer_promql__WEBPACK_IMPORTED_MODULE_0__.LabelMatchList]]);\n  if (child !== null) {\n    const textToCheck = text.slice(child.to, pos);\n    if (!textToCheck.includes(\",\")) {\n      return null;\n    }\n  }\n  const metricNameNode = walk(node, [\n    [\"parent\", _prometheus_io_lezer_promql__WEBPACK_IMPORTED_MODULE_0__.VectorSelector],\n    [\"firstChild\", _prometheus_io_lezer_promql__WEBPACK_IMPORTED_MODULE_0__.MetricIdentifier],\n    [\"firstChild\", _prometheus_io_lezer_promql__WEBPACK_IMPORTED_MODULE_0__.Identifier]\n  ]);\n  const otherLabels = getLabels(node, text);\n  if (metricNameNode === null) {\n    return {\n      type: \"IN_LABEL_SELECTOR_NO_LABEL_NAME\",\n      otherLabels\n    };\n  }\n  const metricName = getNodeText(metricNameNode, text);\n  return {\n    type: \"IN_LABEL_SELECTOR_NO_LABEL_NAME\",\n    metricName,\n    otherLabels\n  };\n}\nfunction getErrorNode(tree, pos) {\n  const cur = tree.cursorAt(pos);\n  while (true) {\n    if (cur.from === pos && cur.to === pos) {\n      const { node } = cur;\n      if (node.type.isError) {\n        return node;\n      }\n    }\n    if (!cur.next()) {\n      break;\n    }\n  }\n  return null;\n}\nfunction getSituation(text, pos) {\n  if (text === \"\") {\n    return {\n      type: \"EMPTY\"\n    };\n  }\n  const tree = _prometheus_io_lezer_promql__WEBPACK_IMPORTED_MODULE_0__.parser.parse(text);\n  const maybeErrorNode = getErrorNode(tree, pos);\n  const cur = maybeErrorNode != null ? maybeErrorNode.cursor() : tree.cursorAt(pos);\n  const currentNode = cur.node;\n  const ids = [cur.type.id];\n  while (cur.parent()) {\n    ids.push(cur.type.id);\n  }\n  for (let resolver of RESOLVERS) {\n    if (isPathMatch(resolver.path, ids)) {\n      return resolver.fun(currentNode, text, pos);\n    }\n  }\n  return null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9wcm9tZXRoZXVzL2NvbXBvbmVudHMvbW9uYWNvLXF1ZXJ5LWZpZWxkL21vbmFjby1jb21wbGV0aW9uLXByb3ZpZGVyL3NpdHVhdGlvbi50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBc0JPO0FBRXdCO0FBNEIvQixTQUFTLEtBQUssTUFBa0IsV0FBeUM7QUFDdkUsVUFBUSxXQUFXO0FBQUEsSUFDakIsS0FBSztBQUNILGFBQU8sS0FBSztBQUFBLElBQ2QsS0FBSztBQUNILGFBQU8sS0FBSztBQUFBLElBQ2QsS0FBSztBQUNILGFBQU8sS0FBSztBQUFBLElBQ2QsS0FBSztBQUNILGFBQU8sS0FBSztBQUFBLElBQ2Q7QUFDRSxZQUFNLElBQUksaURBQWMsQ0FBQyxTQUFTO0FBQUEsRUFDdEM7QUFDRjtBQUVBLFNBQVMsS0FBSyxNQUFrQixNQUErQjtBQUM3RCxNQUFJLFVBQTZCO0FBQ2pDLGFBQVcsQ0FBQyxXQUFXLFlBQVksS0FBSyxNQUFNO0FBQzVDLGNBQVUsS0FBSyxTQUFTLFNBQVM7QUFDakMsUUFBSSxZQUFZLE1BQU07QUFFcEIsYUFBTztBQUFBLElBQ1Q7QUFDQSxRQUFJLFFBQVEsS0FBSyxPQUFPLGNBQWM7QUFFcEMsYUFBTztBQUFBLElBQ1Q7QUFBQSxFQUNGO0FBQ0EsU0FBTztBQUNUO0FBRUEsU0FBUyxZQUFZLE1BQWtCLE1BQXNCO0FBQzNELFNBQU8sS0FBSyxNQUFNLEtBQUssTUFBTSxLQUFLLEVBQUU7QUFDdEM7QUFFQSxTQUFTLHlCQUF5QixNQUFzQjtBQUV0RCxRQUFNLFNBQVMsS0FBSyxNQUFNLEdBQUcsS0FBSyxTQUFTLENBQUM7QUFRNUMsTUFBSSxLQUFLLFdBQVcsR0FBRyxLQUFLLEtBQUssU0FBUyxHQUFHLEdBQUc7QUFHOUMsV0FBTyxPQUFPLFFBQVEsT0FBTyxHQUFHO0FBQUEsRUFDbEM7QUFHQSxNQUFJLEtBQUssV0FBVyxHQUFHLEtBQUssS0FBSyxTQUFTLEdBQUcsR0FBRztB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RztBQUU3QyxRQUFNLE1BQU0sa0JBQWtCLE9BQU8sZUFBZSxPQUFPLElBQUksS0FBSyxTQUFTLEdBQUc7QUFDaEYsUUFBTSxjQUFjLElBQUk7QUFFeEIsUUFBTSxNQUFNLENBQUMsSUFBSSxLQUFLLEVBQUU7QUFDeEIsU0FBTyxJQUFJLE9BQU8sR0FBRztBQUNuQixRQUFJLEtBQUssSUFBSSxLQUFLLEVBQUU7QUFBQSxFQUN0QjtBQUVBLFdBQVMsWUFBWSxXQUFXO0FBRzlCLFFBQUksWUFBWSxTQUFTLE1BQU0sR0FBRyxHQUFHO0FBQ25DLGFBQU8sU0FBUyxJQUFJLGFBQWEsTUFBTSxHQUFHO0FBQUEsSUFDNUM7QUFBQSxFQUNGO0FBRUEsU0FBTztBQUNUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ3JhZmFuYS8uL3B1YmxpYy9hcHAvcGx1Z2lucy9kYXRhc291cmNlL3Byb21ldGhldXMvY29tcG9uZW50cy9tb25hY28tcXVlcnktZmllbGQvbW9uYWNvLWNvbXBsZXRpb24tcHJvdmlkZXIvc2l0dWF0aW9uLnRzPzJiMWMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBTeW50YXhOb2RlLCBUcmVlIH0gZnJvbSAnQGxlemVyL2NvbW1vbic7XG5pbXBvcnQge1xuICBBZ2dyZWdhdGVFeHByLFxuICBBZ2dyZWdhdGVNb2RpZmllcixcbiAgRXFsUmVnZXgsXG4gIEVxbFNpbmdsZSxcbiAgRnVuY3Rpb25DYWxsQm9keSxcbiAgR3JvdXBpbmdMYWJlbHMsXG4gIElkZW50aWZpZXIsXG4gIExhYmVsTWF0Y2hlcixcbiAgTGFiZWxNYXRjaGVycyxcbiAgTGFiZWxNYXRjaExpc3QsXG4gIExhYmVsTmFtZSxcbiAgTWF0Y2hPcCxcbiAgTWF0cml4U2VsZWN0b3IsXG4gIE1ldHJpY0lkZW50aWZpZXIsXG4gIE5lcSxcbiAgTmVxUmVnZXgsXG4gIHBhcnNlcixcbiAgUHJvbVFMLFxuICBTdHJpbmdMaXRlcmFsLFxuICBWZWN0b3JTZWxlY3Rvcixcbn0gZnJvbSAnQHByb21ldGhldXMtaW8vbGV6ZXItcHJvbXFsJztcblxuaW1wb3J0IHsgTmV2ZXJDYXNlRXJyb3IgfSBmcm9tICcuL3V0aWwnO1xuXG50eXBlIERpcmVjdGlvbiA9ICdwYXJlbnQnIHwgJ2ZpcnN0Q2hpbGQnIHwgJ2xhc3RDaGlsZCcgfCAnbmV4dFNpYmxpbmcnO1xuXG50eXBlIE5vZGVUeXBlSWQgPVxuICB8IDAgLy8gdGhpcyBpcyB1c2VkIGFzIGVycm9yLWlkXG4gIHwgdHlwZW9mIEFnZ3JlZ2F0ZUV4cHJcbiAgfCB0eXBlb2YgQWdncmVnYXRlTW9kaWZpZXJcbiAgfCB0eXBlb2YgRnVuY3Rpb25DYWxsQm9keVxuICB8IHR5cGVvZiBHcm91cGluZ0xhYmVsc1xuICB8IHR5cGVvZiBJZGVudGlmaWVyXG4gIHwgdHlwZW9mIExhYmVsTWF0Y2hlclxuICB8IHR5cGVvZiBMYWJlbE1hdGNoZXJzXG4gIHwgdHlwZW9mIExhYmVsTWF0Y2hMaXN0XG4gIHwgdHlwZW9mIExhYmVsTmFtZVxuICB8IHR5cGVvZiBNZXRyaWNJZGVudGlmaWVyXG4gIHwgdHlwZW9mIFByb21RTFxuICB8IHR5cGVvZiBTdHJpbmdMaXRlcmFsXG4gIHwgdHlwZW9mIFZlY3RvclNlbGVjdG9yXG4gIHwgdHlwZW9mIE1hdHJpeFNlbGVjdG9yXG4gIHwgdHlwZW9mIE1hdGNoT3BcbiAgfCB0eXBlb2YgRXFsU2luZ2xlXG4gIHwgdHlwZW9mIE5lcVxuICB8IHR5cGVvZiBFcWxSZWdleFxuICB8IHR5cGVvZiBOZXFSZWdleDtcblxudHlwZSBQYXRoID0gQXJyYXk8W0RpcmVjdGlvbiwgTm9kZVR5cGVJZF0+O1xuXG5mdW5jdGlvbiBtb3ZlKG5vZGU6IFN5bnRheE5vZGUsIGRpcmVjdGlvbjogRGlyZWN0aW9uKTogU3ludGF4Tm9kZSB8IG51bGwge1xuICBzd2l0Y2ggKGRpcmVjdGlvbikge1xuICAgIGNhc2UgJ3BhcmVudCc6XG4gICAgICByZXR1cm4gbm9kZS5wYXJlbnQ7XG4gICAgY2FzZSAnZmlyc3RDaGlsZCc6XG4gICAgICByZXR1cm4gbm9kZS5maXJzdENoaWxkO1xuICAgIGNhc2UgJ2xhc3RDaGlsZCc6XG4gICAgICByZXR1cm4gbm9kZS5sYXN0Q2hpbGQ7XG4gICAgY2FzZSAnbmV4dFNpYmxpbmcnOlxuICAgICAgcmV0dXJuIG5vZGUubmV4dFNpYmxpbmc7XG4gICAgZGVmYXVsdDpcbiAgICAgIHRocm93IG5ldyBOZXZlckNhc2VFcnJvcihkaXJlY3Rpb24pO1xuICB9XG59XG5cbmZ1bmN0aW9uIHdhbGsobm9kZTogU3ludGF4Tm9kZSwgcGF0aDogUGF0aCk6IFN5bnRheE5vZGUgfCBudWxsIHtcbiAgbGV0IGN1cnJlbnQ6IFN5bnRheE5vZGUgfCBudWxsID0gbm9kZTtcbiAgZm9yIChjb25zdCBbZGlyZWN0aW9uLCBleHBlY3RlZFR5cGVdIG9mIHBhdGgpIHtcbiAgICBjdXJyZW50ID0gbW92ZShjdXJyZW50LCBkaXJlY3Rpb24pO1xuICAgIGlmIChjdXJyZW50ID09PSBudWxsKSB7XG4gICAgICAvLyB3ZSBjb3VsZCBub3QgbW92ZSBpbiB0aGUgZGlyZWN0aW9uLCB3ZSBzdG9wXG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgaWYgKGN1cnJlbnQudHlwZS5pZCAhPT0gZXhwZWN0ZWRUeXBlKSB7XG4gICAgICAvLyB0aGUgcmVhY2hlZCBub2RlIGhhcyB3cm9uZyB0eXBlLCB3ZSBzdG9wXG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGN1cnJlbnQ7XG59XG5cbmZ1bmN0aW9uIGdldE5vZGVUZXh0KG5vZGU6IFN5bnRheE5vZGUsIHRleHQ6IHN0cmluZyk6IHN0cmluZyB7XG4gIHJldHVybiB0ZXh0LnNsaWNlKG5vZGUuZnJvbSwgbm9kZS50byk7XG59XG5cbmZ1bmN0aW9uIHBhcnNlUHJvbVFMU3RyaW5nTGl0ZXJhbCh0ZXh0OiBzdHJpbmcpOiBzdHJpbmcge1xuICAvLyBpZiBpdCBpcyBhIHN0cmluZy1saXRlcmFsLCBpdCBpcyBpbnNpZGUgcXVvdGVzIG9mIHNvbWUga2luZFxuICBjb25zdCBpbnNpZGUgPSB0ZXh0LnNsaWNlKDEsIHRleHQubGVuZ3RoIC0gMSk7XG5cbiAgLy8gRklYTUU6IHN1cHBvcnQgaHR0cHM6Ly9wcm9tZXRoZXVzLmlvL2RvY3MvcHJvbWV0aGV1cy9sYXRlc3QvcXVlcnlpbmcvYmFzaWNzLyNzdHJpbmctbGl0ZXJhbHNcbiAgLy8gRklYTUU6IG1heWJlIGNoZWNrIG90aGVyIHByb21xbCBjb2RlLCBpZiBhbGwgaXMgc3VwcG9ydGVkIG9yIG5vdFxuXG4gIC8vIGZvciBub3cgd2UgZG8gb25seSBzb21lIHZlcnkgc2ltcGxlIHVuLWVzY2FwaW5nXG5cbiAgLy8gd2Ugc3RhcnQgd2l0aCBkb3VibGUtcXVvdGVzXG4gIGlmICh0ZXh0LnN0YXJ0c1dpdGgoJ1wiJykgJiYgdGV4dC5lbmRzV2l0aCgnXCInKSkge1xuICAgIC8vIE5PVEU6IHRoaXMgaXMgbm90IDEwMCUgcGVyZmVjdCwgd2Ugb25seSB1bmVzY2FwZSB0aGUgZG91YmxlLXF1b3RlLFxuICAgIC8vIHRoZXJlIG1pZ2h0IGJlIG90aGVyIGNoYXJhY3RlcnMgdG9vXG4gICAgcmV0dXJuIGluc2lkZS5yZXBsYWNlKC9cXFxcXCIvLCAnXCInKTtcbiAgfVxuXG4gIC8vIHRoZW4gc2luZ2xlLXF1b3RlXG4gIGlmICh0ZXh0LnN0YXJ0c1dpdGgoXCInXCIpICYmIHRleHQuZW5kc1dpdGgoXCInXCIpKSB7XG4gICAgLy8gTk9URTogdGhpcyBpcyBub3QgMTAwJSBwZXJmZWN0LCB3ZSBvbmx5IHVuZXNjYXBlIHRoZSBzaW5nbGUtcXVvdGUsXG4gICAgLy8gdGhlcmUgbWlnaHQgYmUgb3RoZXIgY2hhcmFjdGVycyB0b29cbiAgICByZXR1cm4gaW5zaWRlLnJlcGxhY2UoL1xcXFwnLywgXCInXCIpO1xuICB9XG5cbiAgLy8gdGhlbiBiYWNrdGlja3NcbiAgaWYgKHRleHQuc3RhcnRzV2l0aCgnYCcpICYmIHRleHQuZW5kc1dpdGgoJ2AnKSkge1xuICAgIHJldHVybiBpbnNpZGU7XG4gIH1cblxuICB0aHJvdyBuZXcgRXJyb3IoJ0ZJWE1FOiBpbnZhbGlkIHN0cmluZyBsaXRlcmFsJyk7XG59XG5cbnR5cGUgTGFiZWxPcGVyYXRvciA9ICc9JyB8ICchPScgfCAnPX4nIHwgJyF+JztcblxuZXhwb3J0IHR5cGUgTGFiZWwgPSB7XG4gIG5hbWU6IHN0cmluZztcbiAgdmFsdWU6IHN0cmluZztcbiAgb3A6IExhYmVsT3BlcmF0b3I7XG59O1xuXG5leHBvcnQgdHlwZSBTaXR1YXRpb24gPVxuICB8IHtcbiAgICAgIHR5cGU6ICdJTl9GVU5DVElPTic7XG4gICAgfVxuICB8IHtcbiAgICAgIHR5cGU6ICdBVF9ST09UJztcbiAgICB9XG4gIHwge1xuICAgICAgdHlwZTogJ0VNUFRZJztcbiAgICB9XG4gIHwge1xuICAgICAgdHlwZTogJ0lOX0RVUkFUSU9OJztcbiAgICB9XG4gIHwge1xuICAgICAgdHlwZTogJ0lOX0xBQkVMX1NFTEVDVE9SX05PX0xBQkVMX05BTUUnO1xuICAgICAgbWV0cmljTmFtZT86IHN0cmluZztcbiAgICAgIG90aGVyTGFiZWxzOiBMYWJlbFtdO1xuICAgIH1cbiAgfCB7XG4gICAgICB0eXBlOiAnSU5fR1JPVVBJTkcnO1xuICAgICAgbWV0cmljTmFtZTogc3RyaW5nO1xuICAgICAgb3RoZXJMYWJlbHM6IExhYmVsW107XG4gICAgfVxuICB8IHtcbiAgICAgIHR5cGU6ICdJTl9MQUJFTF9TRUxFQ1RPUl9XSVRIX0xBQkVMX05BTUUnO1xuICAgICAgbWV0cmljTmFtZT86IHN0cmluZztcbiAgICAgIGxhYmVsTmFtZTogc3RyaW5nO1xuICAgICAgYmV0d2VlblF1b3RlczogYm9vbGVhbjtcbiAgICAgIG90aGVyTGFiZWxzOiBMYWJlbFtdO1xuICAgIH07XG5cbnR5cGUgUmVzb2x2ZXIgPSB7XG4gIHBhdGg6IE5vZGVUeXBlSWRbXTtcbiAgZnVuOiAobm9kZTogU3ludGF4Tm9kZSwgdGV4dDogc3RyaW5nLCBwb3M6IG51bWJlcikgPT4gU2l0dWF0aW9uIHwgbnVsbDtcbn07XG5cbmZ1bmN0aW9uIGlzUGF0aE1hdGNoKHJlc29sdmVyUGF0aDogTm9kZVR5cGVJZFtdLCBjdXJzb3JQYXRoOiBudW1iZXJbXSk6IGJvb2xlYW4ge1xuICByZXR1cm4gcmVzb2x2ZXJQYXRoLmV2ZXJ5KChpdGVtLCBpbmRleCkgPT4gaXRlbSA9PT0gY3Vyc29yUGF0aFtpbmRleF0pO1xufVxuXG5jb25zdCBFUlJPUl9OT0RFX05BTUU6IE5vZGVUeXBlSWQgPSAwOyAvLyB0aGlzIGlzIHVzZWQgYXMgZXJyb3ItaWRcblxuY29uc3QgUkVTT0xWRVJTOiBSZXNvbHZlcltdID0gW1xuICB7XG4gICAgcGF0aDogW0xhYmVsTWF0Y2hlcnMsIFZlY3RvclNlbGVjdG9yXSxcbiAgICBmdW46IHJlc29sdmVMYWJlbEtleXNXaXRoRXF1YWxzLFxuICB9LFxuICB7XG4gICAgcGF0aDogW1Byb21RTF0sXG4gICAgZnVuOiByZXNvbHZlVG9wTGV2ZWwsXG4gIH0sXG4gIHtcbiAgICBwYXRoOiBbRnVuY3Rpb25DYWxsQm9keV0sXG4gICAgZnVuOiByZXNvbHZlSW5GdW5jdGlvbixcbiAgfSxcbiAge1xuICAgIHBhdGg6IFtTdHJpbmdMaXRlcmFsLCBMYWJlbE1hdGNoZXJdLFxuICAgIGZ1bjogcmVzb2x2ZUxhYmVsTWF0Y2hlcixcbiAgfSxcbiAge1xuICAgIHBhdGg6IFtFUlJPUl9OT0RFX05BTUUsIExhYmVsTWF0Y2hlcl0sXG4gICAgZnVuOiByZXNvbHZlTGFiZWxNYXRjaGVyLFxuICB9LFxuICB7XG4gICAgcGF0aDogW0VSUk9SX05PREVfTkFNRSwgTWF0cml4U2VsZWN0b3JdLFxuICAgIGZ1bjogcmVzb2x2ZUR1cmF0aW9ucyxcbiAgfSxcbiAge1xuICAgIHBhdGg6IFtHcm91cGluZ0xhYmVsc10sXG4gICAgZnVuOiByZXNvbHZlTGFiZWxzRm9yR3JvdXBpbmcsXG4gIH0sXG5dO1xuXG5jb25zdCBMQUJFTF9PUF9NQVAgPSBuZXcgTWFwPG51bWJlciwgTGFiZWxPcGVyYXRvcj4oW1xuICBbRXFsU2luZ2xlLCAnPSddLFxuICBbRXFsUmVnZXgsICc9fiddLFxuICBbTmVxLCAnIT0nXSxcbiAgW05lcVJlZ2V4LCAnIX4nXSxcbl0pO1xuXG5mdW5jdGlvbiBnZXRMYWJlbE9wKG9wTm9kZTogU3ludGF4Tm9kZSk6IExhYmVsT3BlcmF0b3IgfCBudWxsIHtcbiAgY29uc3Qgb3BDaGlsZCA9IG9wTm9kZS5maXJzdENoaWxkO1xuICBpZiAob3BDaGlsZCA9PT0gbnVsbCkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgcmV0dXJuIExBQkVMX09QX01BUC5nZXQob3BDaGlsZC50eXBlLmlkKSA/PyBudWxsO1xufVxuXG5mdW5jdGlvbiBnZXRMYWJlbChsYWJlbE1hdGNoZXJOb2RlOiBTeW50YXhOb2RlLCB0ZXh0OiBzdHJpbmcpOiBMYWJlbCB8IG51bGwge1xuICBpZiAobGFiZWxNYXRjaGVyTm9kZS50eXBlLmlkICE9PSBMYWJlbE1hdGNoZXIpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIGNvbnN0IG5hbWVOb2RlID0gd2FsayhsYWJlbE1hdGNoZXJOb2RlLCBbWydmaXJzdENoaWxkJywgTGFiZWxOYW1lXV0pO1xuXG4gIGlmIChuYW1lTm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgY29uc3Qgb3BOb2RlID0gd2FsayhuYW1lTm9kZSwgW1snbmV4dFNpYmxpbmcnLCBNYXRjaE9wXV0pO1xuICBpZiAob3BOb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICBjb25zdCBvcCA9IGdldExhYmVsT3Aob3BOb2RlKTtcbiAgaWYgKG9wID09PSBudWxsKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICBjb25zdCB2YWx1ZU5vZGUgPSB3YWxrKGxhYmVsTWF0Y2hlck5vZGUsIFtbJ2xhc3RDaGlsZCcsIFN0cmluZ0xpdGVyYWxdXSk7XG5cbiAgaWYgKHZhbHVlTm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgY29uc3QgbmFtZSA9IGdldE5vZGVUZXh0KG5hbWVOb2RlLCB0ZXh0KTtcbiAgY29uc3QgdmFsdWUgPSBwYXJzZVByb21RTFN0cmluZ0xpdGVyYWwoZ2V0Tm9kZVRleHQodmFsdWVOb2RlLCB0ZXh0KSk7XG5cbiAgcmV0dXJuIHsgbmFtZSwgdmFsdWUsIG9wIH07XG59XG5cbmZ1bmN0aW9uIGdldExhYmVscyhsYWJlbE1hdGNoZXJzTm9kZTogU3ludGF4Tm9kZSwgdGV4dDogc3RyaW5nKTogTGFiZWxbXSB7XG4gIGlmIChsYWJlbE1hdGNoZXJzTm9kZS50eXBlLmlkICE9PSBMYWJlbE1hdGNoZXJzKSB7XG4gICAgcmV0dXJuIFtdO1xuICB9XG5cbiAgbGV0IGxpc3ROb2RlOiBTeW50YXhOb2RlIHwgbnVsbCA9IHdhbGsobGFiZWxNYXRjaGVyc05vZGUsIFtbJ2ZpcnN0Q2hpbGQnLCBMYWJlbE1hdGNoTGlzdF1dKTtcblxuICBjb25zdCBsYWJlbHM6IExhYmVsW10gPSBbXTtcblxuICB3aGlsZSAobGlzdE5vZGUgIT09IG51bGwpIHtcbiAgICBjb25zdCBtYXRjaGVyTm9kZSA9IHdhbGsobGlzdE5vZGUsIFtbJ2xhc3RDaGlsZCcsIExhYmVsTWF0Y2hlcl1dKTtcbiAgICBpZiAobWF0Y2hlck5vZGUgPT09IG51bGwpIHtcbiAgICAgIC8vIHVuZXhwZWN0ZWQsIHdlIHN0b3BcbiAgICAgIHJldHVybiBbXTtcbiAgICB9XG5cbiAgICBjb25zdCBsYWJlbCA9IGdldExhYmVsKG1hdGNoZXJOb2RlLCB0ZXh0KTtcbiAgICBpZiAobGFiZWwgIT09IG51bGwpIHtcbiAgICAgIGxhYmVscy5wdXNoKGxhYmVsKTtcbiAgICB9XG5cbiAgICAvLyB0aGVyZSBtaWdodCBiZSBtb3JlIGxhYmVsc1xuICAgIGxpc3ROb2RlID0gd2FsayhsaXN0Tm9kZSwgW1snZmlyc3RDaGlsZCcsIExhYmVsTWF0Y2hMaXN0XV0pO1xuICB9XG5cbiAgLy8gb3VyIGxhYmVscy1saXN0IGlzIGxhc3QtZmlyc3QsIHNvIHdlIHJldmVyc2UgaXRcbiAgbGFiZWxzLnJldmVyc2UoKTtcblxuICByZXR1cm4gbGFiZWxzO1xufVxuXG5mdW5jdGlvbiBnZXROb2RlQ2hpbGRyZW4obm9kZTogU3ludGF4Tm9kZSk6IFN5bnRheE5vZGVbXSB7XG4gIGxldCBjaGlsZDogU3ludGF4Tm9kZSB8IG51bGwgPSBub2RlLmZpcnN0Q2hpbGQ7XG4gIGNvbnN0IGNoaWxkcmVuOiBTeW50YXhOb2RlW10gPSBbXTtcbiAgd2hpbGUgKGNoaWxkICE9PSBudWxsKSB7XG4gICAgY2hpbGRyZW4ucHVzaChjaGlsZCk7XG4gICAgY2hpbGQgPSBjaGlsZC5uZXh0U2libGluZztcbiAgfVxuICByZXR1cm4gY2hpbGRyZW47XG59XG5cbmZ1bmN0aW9uIGdldE5vZGVJblN1YnRyZWUobm9kZTogU3ludGF4Tm9kZSwgdHlwZUlkOiBOb2RlVHlwZUlkKTogU3ludGF4Tm9kZSB8IG51bGwge1xuICAvLyBmaXJzdCB3ZSB0cnkgdGhlIGN1cnJlbnQgbm9kZVxuICBpZiAobm9kZS50eXBlLmlkID09PSB0eXBlSWQpIHtcbiAgICByZXR1cm4gbm9kZTtcbiAgfVxuXG4gIC8vIHRoZW4gd2UgdHJ5IHRoZSBjaGlsZHJlblxuICBjb25zdCBjaGlsZHJlbiA9IGdldE5vZGVDaGlsZHJlbihub2RlKTtcbiAgZm9yIChjb25zdCBjaGlsZCBvZiBjaGlsZHJlbikge1xuICAgIGNvbnN0IG4gPSBnZXROb2RlSW5TdWJ0cmVlKGNoaWxkLCB0eXBlSWQpO1xuICAgIGlmIChuICE9PSBudWxsKSB7XG4gICAgICByZXR1cm4gbjtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbnVsbDtcbn1cblxuZnVuY3Rpb24gcmVzb2x2ZUxhYmVsc0Zvckdyb3VwaW5nKG5vZGU6IFN5bnRheE5vZGUsIHRleHQ6IHN0cmluZywgcG9zOiBudW1iZXIpOiBTaXR1YXRpb24gfCBudWxsIHtcbiAgY29uc3QgYWdnckV4cE5vZGUgPSB3YWxrKG5vZGUsIFtcbiAgICBbJ3BhcmVudCcsIEFnZ3JlZ2F0ZU1vZGlmaWVyXSxcbiAgICBbJ3BhcmVudCcsIEFnZ3JlZ2F0ZUV4cHJdLFxuICBdKTtcbiAgaWYgKGFnZ3JFeHBOb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgY29uc3QgYm9keU5vZGUgPSBhZ2dyRXhwTm9kZS5nZXRDaGlsZChGdW5jdGlvbkNhbGxCb2R5KTtcbiAgaWYgKGJvZHlOb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICBjb25zdCBtZXRyaWNJZE5vZGUgPSBnZXROb2RlSW5TdWJ0cmVlKGJvZHlOb2RlLCBNZXRyaWNJZGVudGlmaWVyKTtcbiAgaWYgKG1ldHJpY0lkTm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgY29uc3QgaWROb2RlID0gd2FsayhtZXRyaWNJZE5vZGUsIFtbJ2ZpcnN0Q2hpbGQnLCBJZGVudGlmaWVyXV0pO1xuICBpZiAoaWROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICBjb25zdCBtZXRyaWNOYW1lID0gZ2V0Tm9kZVRleHQoaWROb2RlLCB0ZXh0KTtcbiAgcmV0dXJuIHtcbiAgICB0eXBlOiAnSU5fR1JPVVBJTkcnLFxuICAgIG1ldHJpY05hbWUsXG4gICAgb3RoZXJMYWJlbHM6IFtdLFxuICB9O1xufVxuXG5mdW5jdGlvbiByZXNvbHZlTGFiZWxNYXRjaGVyKG5vZGU6IFN5bnRheE5vZGUsIHRleHQ6IHN0cmluZywgcG9zOiBudW1iZXIpOiBTaXR1YXRpb24gfCBudWxsIHtcbiAgLy8gd2UgY2FuIGFycml2ZSBoZXJlIGluIHR3byBzaXR1YXRpb24uIGBub2RlYCBpcyBlaXRoZXI6XG4gIC8vIC0gYSBTdHJpbmdOb2RlIChsaWtlIGluIGB7am9iPVwiXlwifWApXG4gIC8vIC0gb3IgYW4gZXJyb3Igbm9kZSAobGlrZSBpbiBge2pvYj1efWApXG4gIGNvbnN0IGluU3RyaW5nTm9kZSA9ICFub2RlLnR5cGUuaXNFcnJvcjtcblxuICBjb25zdCBwYXJlbnQgPSB3YWxrKG5vZGUsIFtbJ3BhcmVudCcsIExhYmVsTWF0Y2hlcl1dKTtcbiAgaWYgKHBhcmVudCA9PT0gbnVsbCkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgY29uc3QgbGFiZWxOYW1lTm9kZSA9IHdhbGsocGFyZW50LCBbWydmaXJzdENoaWxkJywgTGFiZWxOYW1lXV0pO1xuICBpZiAobGFiZWxOYW1lTm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgY29uc3QgbGFiZWxOYW1lID0gZ2V0Tm9kZVRleHQobGFiZWxOYW1lTm9kZSwgdGV4dCk7XG5cbiAgLy8gbm93IHdlIG5lZWQgdG8gZ28gdXAsIHRvIHRoZSBwYXJlbnQgb2YgTGFiZWxNYXRjaGVyLFxuICAvLyB0aGVyZSBjYW4gYmUgb25lIG9yIG1hbnkgYExhYmVsTWF0Y2hMaXN0YCBwYXJlbnRzLCB3ZSBoYXZlXG4gIC8vIHRvIGdvIHRocm91Z2ggYWxsIG9mIHRoZW1cblxuICBjb25zdCBmaXJzdExpc3ROb2RlID0gd2FsayhwYXJlbnQsIFtbJ3BhcmVudCcsIExhYmVsTWF0Y2hMaXN0XV0pO1xuICBpZiAoZmlyc3RMaXN0Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgbGV0IGxpc3ROb2RlID0gZmlyc3RMaXN0Tm9kZTtcblxuICAvLyB3ZSBrZWVwIGdvaW5nIHRocm91Z2ggdGhlIHBhcmVudC1ub2Rlc1xuICAvLyBhcyBsb25nIGFzIHRoZXkgYXJlIExhYmVsTWF0Y2hMaXN0LlxuICAvLyBhcyBzb29uIGFzIHdlIHJlYXdjaCBMYWJlbE1hdGNoZXJzLCB3ZSBzdG9wXG4gIGxldCBsYWJlbE1hdGNoZXJzTm9kZTogU3ludGF4Tm9kZSB8IG51bGwgPSBudWxsO1xuICB3aGlsZSAobGFiZWxNYXRjaGVyc05vZGUgPT09IG51bGwpIHtcbiAgICBjb25zdCBwID0gbGlzdE5vZGUucGFyZW50O1xuICAgIGlmIChwID09PSBudWxsKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICBjb25zdCB7IGlkIH0gPSBwLnR5cGU7XG5cbiAgICBzd2l0Y2ggKGlkKSB7XG4gICAgICBjYXNlIExhYmVsTWF0Y2hMaXN0OlxuICAgICAgICAvL3dlIGtlZXAgbG9vcGluZ1xuICAgICAgICBsaXN0Tm9kZSA9IHA7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgY2FzZSBMYWJlbE1hdGNoZXJzOlxuICAgICAgICAvLyB3ZSByZWFjaGVkIHRoZSBlbmQsIHdlIGNhbiBzdG9wIHRoZSBsb29wXG4gICAgICAgIGxhYmVsTWF0Y2hlcnNOb2RlID0gcDtcbiAgICAgICAgY29udGludWU7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICAvLyB3ZSByZWFjaGVkIHNvbWUgb3RoZXIgbm9kZSwgd2Ugc3RvcFxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gIH1cblxuICAvLyBub3cgd2UgbmVlZCB0byBmaW5kIHRoZSBvdGhlciBuYW1lc1xuICBjb25zdCBhbGxMYWJlbHMgPSBnZXRMYWJlbHMobGFiZWxNYXRjaGVyc05vZGUsIHRleHQpO1xuXG4gIC8vIHdlIG5lZWQgdG8gcmVtb3ZlIFwib3VyXCIgbGFiZWwgZnJvbSBhbGwtbGFiZWxzLCBpZiBpdCBpcyBpbiB0aGVyZVxuICBjb25zdCBvdGhlckxhYmVscyA9IGFsbExhYmVscy5maWx0ZXIoKGxhYmVsKSA9PiBsYWJlbC5uYW1lICE9PSBsYWJlbE5hbWUpO1xuXG4gIGNvbnN0IG1ldHJpY05hbWVOb2RlID0gd2FsayhsYWJlbE1hdGNoZXJzTm9kZSwgW1xuICAgIFsncGFyZW50JywgVmVjdG9yU2VsZWN0b3JdLFxuICAgIFsnZmlyc3RDaGlsZCcsIE1ldHJpY0lkZW50aWZpZXJdLFxuICAgIFsnZmlyc3RDaGlsZCcsIElkZW50aWZpZXJdLFxuICBdKTtcblxuICBpZiAobWV0cmljTmFtZU5vZGUgPT09IG51bGwpIHtcbiAgICAvLyB3ZSBhcmUgcHJvYmFibHkgaW4gYSBzaXR1YXRpb24gd2l0aG91dCBhIG1ldHJpYyBuYW1lXG4gICAgcmV0dXJuIHtcbiAgICAgIHR5cGU6ICdJTl9MQUJFTF9TRUxFQ1RPUl9XSVRIX0xBQkVMX05BTUUnLFxuICAgICAgbGFiZWxOYW1lLFxuICAgICAgYmV0d2VlblF1b3RlczogaW5TdHJpbmdOb2RlLFxuICAgICAgb3RoZXJMYWJlbHMsXG4gICAgfTtcbiAgfVxuXG4gIGNvbnN0IG1ldHJpY05hbWUgPSBnZXROb2RlVGV4dChtZXRyaWNOYW1lTm9kZSwgdGV4dCk7XG5cbiAgcmV0dXJuIHtcbiAgICB0eXBlOiAnSU5fTEFCRUxfU0VMRUNUT1JfV0lUSF9MQUJFTF9OQU1FJyxcbiAgICBtZXRyaWNOYW1lLFxuICAgIGxhYmVsTmFtZSxcbiAgICBiZXR3ZWVuUXVvdGVzOiBpblN0cmluZ05vZGUsXG4gICAgb3RoZXJMYWJlbHMsXG4gIH07XG59XG5cbmZ1bmN0aW9uIHJlc29sdmVUb3BMZXZlbChub2RlOiBTeW50YXhOb2RlLCB0ZXh0OiBzdHJpbmcsIHBvczogbnVtYmVyKTogU2l0dWF0aW9uIHtcbiAgcmV0dXJuIHtcbiAgICB0eXBlOiAnQVRfUk9PVCcsXG4gIH07XG59XG5cbmZ1bmN0aW9uIHJlc29sdmVJbkZ1bmN0aW9uKG5vZGU6IFN5bnRheE5vZGUsIHRleHQ6IHN0cmluZywgcG9zOiBudW1iZXIpOiBTaXR1YXRpb24ge1xuICByZXR1cm4ge1xuICAgIHR5cGU6ICdJTl9GVU5DVElPTicsXG4gIH07XG59XG5cbmZ1bmN0aW9uIHJlc29sdmVEdXJhdGlvbnMobm9kZTogU3ludGF4Tm9kZSwgdGV4dDogc3RyaW5nLCBwb3M6IG51bWJlcik6IFNpdHVhdGlvbiB7XG4gIHJldHVybiB7XG4gICAgdHlwZTogJ0lOX0RVUkFUSU9OJyxcbiAgfTtcbn1cblxuZnVuY3Rpb24gc3ViVHJlZUhhc0Vycm9yKG5vZGU6IFN5bnRheE5vZGUpOiBib29sZWFuIHtcbiAgcmV0dXJuIGdldE5vZGVJblN1YnRyZWUobm9kZSwgRVJST1JfTk9ERV9OQU1FKSAhPT0gbnVsbDtcbn1cblxuZnVuY3Rpb24gcmVzb2x2ZUxhYmVsS2V5c1dpdGhFcXVhbHMobm9kZTogU3ludGF4Tm9kZSwgdGV4dDogc3RyaW5nLCBwb3M6IG51bWJlcik6IFNpdHVhdGlvbiB8IG51bGwge1xuICAvLyBmb3IgZXhhbXBsZSBgc29tZXRoaW5ne159YFxuXG4gIC8vIHRoZXJlIGFyZSBzb21lIGZhbHNlIHBvc2l0aXZlcyB0aGF0IGNhbiBlbmQgdXAgaW4gdGhpcyBzaXR1YXRpb24sIHRoYXQgd2Ugd2FudFxuICAvLyB0byBlbGltaW5hdGU6XG4gIC8vIGBzb21ldGhpbmd7YX5efWAgKGlmIHRoaXMgc3VidHJlZSBjb250YWlucyBhbnkgZXJyb3Itbm9kZSwgd2Ugc3RvcClcbiAgaWYgKHN1YlRyZWVIYXNFcnJvcihub2RlKSkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgLy8gbmV4dCBmYWxzZSBwb3NpdGl2ZTpcbiAgLy8gYHNvbWV0aGluZ3thPVwiMVwiXn1gXG4gIGNvbnN0IGNoaWxkID0gd2Fsayhub2RlLCBbWydmaXJzdENoaWxkJywgTGFiZWxNYXRjaExpc3RdXSk7XG4gIGlmIChjaGlsZCAhPT0gbnVsbCkge1xuICAgIC8vIG1lYW5zIHRoZSBsYWJlbC1tYXRjaGluZyBwYXJ0IGNvbnRhaW5zIGF0IGxlYXN0IG9uZSBsYWJlbCBhbHJlYWR5LlxuICAgIC8vXG4gICAgLy8gaW4gdGhpcyBjYXNlLCB3ZSB3aWxsIG5lZWQgdG8gaGF2ZSBhIGAsYCBjaGFyYWN0ZXIgYXQgdGhlIGVuZCxcbiAgICAvLyB0byBiZSBhYmxlIHRvIHN1Z2dlc3QgYWRkaW5nIHRoZSBuZXh0IGxhYmVsLlxuICAgIC8vIHRoZSBhcmVhIGJldHdlZW4gdGhlIGVuZC1vZi10aGUtY2hpbGQtbm9kZSBhbmQgdGhlIGN1cnNvci1wb3NcbiAgICAvLyBtdXN0IGNvbnRhaW4gYSBgLGAgaW4gdGhpcyBjYXNlLlxuICAgIGNvbnN0IHRleHRUb0NoZWNrID0gdGV4dC5zbGljZShjaGlsZC50bywgcG9zKTtcblxuICAgIGlmICghdGV4dFRvQ2hlY2suaW5jbHVkZXMoJywnKSkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICB9XG5cbiAgY29uc3QgbWV0cmljTmFtZU5vZGUgPSB3YWxrKG5vZGUsIFtcbiAgICBbJ3BhcmVudCcsIFZlY3RvclNlbGVjdG9yXSxcbiAgICBbJ2ZpcnN0Q2hpbGQnLCBNZXRyaWNJZGVudGlmaWVyXSxcbiAgICBbJ2ZpcnN0Q2hpbGQnLCBJZGVudGlmaWVyXSxcbiAgXSk7XG5cbiAgY29uc3Qgb3RoZXJMYWJlbHMgPSBnZXRMYWJlbHMobm9kZSwgdGV4dCk7XG5cbiAgaWYgKG1ldHJpY05hbWVOb2RlID09PSBudWxsKSB7XG4gICAgLy8gd2UgYXJlIHByb2JhYmx5IGluIGEgc2l0dWF0aW9uIHdpdGhvdXQgYSBtZXRyaWMgbmFtZS5cbiAgICByZXR1cm4ge1xuICAgICAgdHlwZTogJ0lOX0xBQkVMX1NFTEVDVE9SX05PX0xBQkVMX05BTUUnLFxuICAgICAgb3RoZXJMYWJlbHMsXG4gICAgfTtcbiAgfVxuXG4gIGNvbnN0IG1ldHJpY05hbWUgPSBnZXROb2RlVGV4dChtZXRyaWNOYW1lTm9kZSwgdGV4dCk7XG5cbiAgcmV0dXJuIHtcbiAgICB0eXBlOiAnSU5fTEFCRUxfU0VMRUNUT1JfTk9fTEFCRUxfTkFNRScsXG4gICAgbWV0cmljTmFtZSxcbiAgICBvdGhlckxhYmVscyxcbiAgfTtcbn1cblxuLy8gd2UgZmluZCB0aGUgZmlyc3QgZXJyb3Itbm9kZSBpbiB0aGUgdHJlZSB0aGF0IGlzIGF0IHRoZSBjdXJzb3ItcG9zaXRpb24uXG4vLyBOT1RFOiB0aGlzIG1pZ2h0IGJlIHRvbyBzbG93LCBtaWdodCBuZWVkIHRvIG9wdGltaXplIGl0XG4vLyAoaWRlYXM6IHdlIGRvIG5vdCBuZWVkIHRvIGdvIGludG8gZXZlcnkgc3VidHJlZSwgYmFzZWQgb24gZnJvbS90bylcbi8vIGFsc28sIG9ubHkgZ28gdG8gcGxhY2VzIHRoYXQgYXJlIGluIHRoZSBzdWItdHJlZSBvZiB0aGUgbm9kZSBmb3VuZFxuLy8gYnkgZGVmYXVsdCBieSBsZXplci4gcHJvYmxlbSBpcywgYG5leHQoKWAgd2lsbCBnbyB1cHdhcmQgdG9vLFxuLy8gYW5kIHdlIGRvIG5vdCB3YW50IHRvIGdvIGhpZ2hlciB0aGFuIG91ciBub2RlXG5mdW5jdGlvbiBnZXRFcnJvck5vZGUodHJlZTogVHJlZSwgcG9zOiBudW1iZXIpOiBTeW50YXhOb2RlIHwgbnVsbCB7XG4gIGNvbnN0IGN1ciA9IHRyZWUuY3Vyc29yQXQocG9zKTtcbiAgd2hpbGUgKHRydWUpIHtcbiAgICBpZiAoY3VyLmZyb20gPT09IHBvcyAmJiBjdXIudG8gPT09IHBvcykge1xuICAgICAgY29uc3QgeyBub2RlIH0gPSBjdXI7XG4gICAgICBpZiAobm9kZS50eXBlLmlzRXJyb3IpIHtcbiAgICAgICAgcmV0dXJuIG5vZGU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKCFjdXIubmV4dCgpKSB7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIG51bGw7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRTaXR1YXRpb24odGV4dDogc3RyaW5nLCBwb3M6IG51bWJlcik6IFNpdHVhdGlvbiB8IG51bGwge1xuICAvLyB0aGVyZSBpcyBhIHNwZWNpYWwtY2FzZSB3aGVuIHdlIGFyZSBhdCB0aGUgc3RhcnQgb2Ygd3JpdGluZyB0ZXh0LFxuICAvLyBzbyB3ZSBoYW5kbGUgdGhhdCBjYXNlIGZpcnN0XG5cbiAgaWYgKHRleHQgPT09ICcnKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHR5cGU6ICdFTVBUWScsXG4gICAgfTtcbiAgfVxuXG4gIC8qXG5cdFByb21RTFxuICBFeHByXG4gIFZlY3RvclNlbGVjdG9yXG4gIExhYmVsTWF0Y2hlcnNcbiAgKi9cbiAgY29uc3QgdHJlZSA9IHBhcnNlci5wYXJzZSh0ZXh0KTtcblxuICAvLyBpZiB0aGUgdHJlZSBjb250YWlucyBlcnJvciwgaXQgaXMgdmVyeSBwcm9iYWJsZSB0aGF0XG4gIC8vIG91ciBub2RlIGlzIG9uZSBvZiB0aG9zZSBlcnJvci1ub2Rlcy5cbiAgLy8gYWxzbywgaWYgdGhlcmUgYXJlIGVycm9ycywgdGhlIG5vZGUgbGV6ZXIgZmluZHMgdXMsXG4gIC8vIG1pZ2h0IG5vdCBiZSB0aGUgYmVzdCBub2RlLlxuICAvLyBzbyBmaXJzdCB3ZSBjaGVjayBpZiB0aGVyZSBpcyBhbiBlcnJvci1ub2RlIGF0IHRoZSBjdXJzb3ItcG9zaXRpb25cbiAgY29uc3QgbWF5YmVFcnJvck5vZGUgPSBnZXRFcnJvck5vZGUodHJlZSwgcG9zKTtcblxuICBjb25zdCBjdXIgPSBtYXliZUVycm9yTm9kZSAhPSBudWxsID8gbWF5YmVFcnJvck5vZGUuY3Vyc29yKCkgOiB0cmVlLmN1cnNvckF0KHBvcyk7XG4gIGNvbnN0IGN1cnJlbnROb2RlID0gY3VyLm5vZGU7XG5cbiAgY29uc3QgaWRzID0gW2N1ci50eXBlLmlkXTtcbiAgd2hpbGUgKGN1ci5wYXJlbnQoKSkge1xuICAgIGlkcy5wdXNoKGN1ci50eXBlLmlkKTtcbiAgfVxuXG4gIGZvciAobGV0IHJlc29sdmVyIG9mIFJFU09MVkVSUykge1xuICAgIC8vIGkgZG8gbm90IHVzZSBhIGZvcmVhY2ggYmVjYXVzZSBpIHdhbnQgdG8gc3RvcCBhcyBzb29uXG4gICAgLy8gYXMgaSBmaW5kIHNvbWV0aGluZ1xuICAgIGlmIChpc1BhdGhNYXRjaChyZXNvbHZlci5wYXRoLCBpZHMpKSB7XG4gICAgICByZXR1cm4gcmVzb2x2ZXIuZnVuKGN1cnJlbnROb2RlLCB0ZXh0LCBwb3MpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBudWxsO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/prometheus/components/monaco-query-field/monaco-completion-provider/situation.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/prometheus/components/monaco-query-field/monaco-completion-provider/util.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NeverCaseError: () => (/* binding */ NeverCaseError)\n/* harmony export */ });\n\nclass NeverCaseError extends Error {\n  constructor(value) {\n    super(\"should never happen\");\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9wcm9tZXRoZXVzL2NvbXBvbmVudHMvbW9uYWNvLXF1ZXJ5LWZpZWxkL21vbmFjby1jb21wbGV0aW9uLXByb3ZpZGVyL3V0aWwudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFvQk8sTUFBTSx1QkFBdUIsTUFBTTtBQUFBLEVBQ3hDLFlBQVksT0FBYztBQUN4QixVQUFNLHFCQUFxQjtBQUFBLEVBQzdCO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ncmFmYW5hLy4vcHVibGljL2FwcC9wbHVnaW5zL2RhdGFzb3VyY2UvcHJvbWV0aGV1cy9jb21wb25lbnRzL21vbmFjby1xdWVyeS1maWVsZC9tb25hY28tY29tcGxldGlvbi1wcm92aWRlci91dGlsLnRzP2I3NTgiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gdGhpcyBoZWxwZXIgY2xhc3MgaXMgdXNlZCB0byBtYWtlIHR5cGVzY3JpcHQgd2FybiB5b3Ugd2hlbiB5b3UgZm9yZ2V0XG4vLyBhIGNhc2UtYmxvY2sgaW4gYSBzd2l0Y2ggc3RhdGVtZW50LlxuLy8gZXhhbXBsZSBjb2RlIHRoYXQgdHJpZ2dlcnMgdGhlIHR5cGVzY3JpcHQtZXJyb3I6XG4vL1xuLy8gY29uc3QgeDonQSd8J0InfCdDJyA9ICdBJztcbi8vXG4vLyBzd2l0Y2goeCkge1xuLy8gICBjYXNlICdBJzpcbi8vICAgICAvLyBzb21ldGhpbmdcbi8vICAgY2FzZSAnQic6XG4vLyAgICAgLy8gc29tZXRoaW5nXG4vLyAgIGRlZmF1bHQ6XG4vLyAgICAgdGhyb3cgbmV3IE5ldmVyQ2FzZUVycm9yKHgpO1xuLy8gfVxuLy9cbi8vXG4vLyB0eXBlc2NyaXB0IHdpbGwgc2hvdyBhbiBlcnJvciBpbiB0aGlzIGNhc2UsXG4vLyB3aGVuIHlvdSBhZGQgdGhlIG1pc3NpbmcgYGNhc2UgJ0MnYCBjb2RlLFxuLy8gdGhlIHByb2JsZW0gd2lsbCBiZSBmaXhlZC5cblxuZXhwb3J0IGNsYXNzIE5ldmVyQ2FzZUVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICBjb25zdHJ1Y3Rvcih2YWx1ZTogbmV2ZXIpIHtcbiAgICBzdXBlcignc2hvdWxkIG5ldmVyIGhhcHBlbicpO1xuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/prometheus/components/monaco-query-field/monaco-completion-provider/util.ts\n");

/***/ }),

/***/ "./.yarn/__virtual__/react-use-virtual-dd7926f458/0/cache/react-use-npm-17.4.0-0ef4521544-0889da919b.zip/node_modules/react-use/esm/useLatest.js":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nvar useLatest = function (value) {\n    var ref = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(value);\n    ref.current = value;\n    return ref;\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (useLatest);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi8ueWFybi9fX3ZpcnR1YWxfXy9yZWFjdC11c2UtdmlydHVhbC1kZDc5MjZmNDU4LzAvY2FjaGUvcmVhY3QtdXNlLW5wbS0xNy40LjAtMGVmNDUyMTU0NC0wODg5ZGE5MTliLnppcC9ub2RlX21vZHVsZXMvcmVhY3QtdXNlL2VzbS91c2VMYXRlc3QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQStCO0FBQy9CO0FBQ0EsY0FBYyw2Q0FBTTtBQUNwQjtBQUNBO0FBQ0E7QUFDQSxpRUFBZSxTQUFTLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ncmFmYW5hLy4vLnlhcm4vX192aXJ0dWFsX18vcmVhY3QtdXNlLXZpcnR1YWwtZGQ3OTI2ZjQ1OC8wL2NhY2hlL3JlYWN0LXVzZS1ucG0tMTcuNC4wLTBlZjQ1MjE1NDQtMDg4OWRhOTE5Yi56aXAvbm9kZV9tb2R1bGVzL3JlYWN0LXVzZS9lc20vdXNlTGF0ZXN0LmpzPzc5MDIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlUmVmIH0gZnJvbSAncmVhY3QnO1xudmFyIHVzZUxhdGVzdCA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgIHZhciByZWYgPSB1c2VSZWYodmFsdWUpO1xuICAgIHJlZi5jdXJyZW50ID0gdmFsdWU7XG4gICAgcmV0dXJuIHJlZjtcbn07XG5leHBvcnQgZGVmYXVsdCB1c2VMYXRlc3Q7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./.yarn/__virtual__/react-use-virtual-dd7926f458/0/cache/react-use-npm-17.4.0-0ef4521544-0889da919b.zip/node_modules/react-use/esm/useLatest.js\n");

/***/ }),

/***/ "./.yarn/cache/monaco-promql-npm-1.7.4-1b0c13a666-9fe2708be5.zip/node_modules/monaco-promql/index.js":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   promLanguageDefinition: () => (/* reexport safe */ _promql_promql_contribution__WEBPACK_IMPORTED_MODULE_0__.promLanguageDefinition)\n/* harmony export */ });\n/* harmony import */ var _promql_promql_contribution__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/monaco-promql-npm-1.7.4-1b0c13a666-9fe2708be5.zip/node_modules/monaco-promql/promql/promql.contribution.js\");\n// The MIT License (MIT)\n//\n// Copyright (c) Celian Garcia and Augustin Husson @ Amadeus IT Group\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi8ueWFybi9jYWNoZS9tb25hY28tcHJvbXFsLW5wbS0xLjcuNC0xYjBjMTNhNjY2LTlmZTI3MDhiZTUuemlwL25vZGVfbW9kdWxlcy9tb25hY28tcHJvbXFsL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2E7QUFDZ0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ncmFmYW5hLy4vLnlhcm4vY2FjaGUvbW9uYWNvLXByb21xbC1ucG0tMS43LjQtMWIwYzEzYTY2Ni05ZmUyNzA4YmU1LnppcC9ub2RlX21vZHVsZXMvbW9uYWNvLXByb21xbC9pbmRleC5qcz9lMTQ3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIFRoZSBNSVQgTGljZW5zZSAoTUlUKVxuLy9cbi8vIENvcHlyaWdodCAoYykgQ2VsaWFuIEdhcmNpYSBhbmQgQXVndXN0aW4gSHVzc29uIEAgQW1hZGV1cyBJVCBHcm91cFxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHlcbi8vIG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlIFwiU29mdHdhcmVcIiksIHRvIGRlYWxcbi8vIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHNcbi8vIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGxcbi8vIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpc1xuLy8gZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpbiBhbGxcbi8vIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxuLy8gSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksXG4vLyBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEVcbi8vIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcbi8vIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sXG4vLyBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRVxuLy8gU09GVFdBUkUuXG4ndXNlIHN0cmljdCc7XG5leHBvcnQgKiBmcm9tICcuL3Byb21xbC9wcm9tcWwuY29udHJpYnV0aW9uJztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./.yarn/cache/monaco-promql-npm-1.7.4-1b0c13a666-9fe2708be5.zip/node_modules/monaco-promql/index.js\n");

/***/ }),

/***/ "./.yarn/cache/monaco-promql-npm-1.7.4-1b0c13a666-9fe2708be5.zip/node_modules/monaco-promql/promql/promql.contribution.js":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   promLanguageDefinition: () => (/* binding */ promLanguageDefinition)\n/* harmony export */ });\n// The MIT License (MIT)\n//\n// Copyright (c) Celian Garcia and Augustin Husson @ Amadeus IT Group\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n// noinspection JSUnusedGlobalSymbols\nvar promLanguageDefinition = {\n    id: 'promql',\n    extensions: ['.promql'],\n    aliases: ['Prometheus', 'prometheus', 'prom', 'Prom', 'promql', 'Promql', 'promQL', 'PromQL'],\n    mimetypes: [],\n    loader: function () { return __webpack_require__.e(/* import() */ \"_yarn_cache_monaco-promql-npm-1_7_4-1b0c13a666-9fe2708be5_zip_node_modules_monaco-promql_prom-5b671b\").then(__webpack_require__.bind(__webpack_require__, \"./.yarn/cache/monaco-promql-npm-1.7.4-1b0c13a666-9fe2708be5.zip/node_modules/monaco-promql/promql/promql.js\")); } // eslint-disable-line @typescript-eslint/explicit-function-return-type\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi8ueWFybi9jYWNoZS9tb25hY28tcHJvbXFsLW5wbS0xLjcuNC0xYjBjMTNhNjY2LTlmZTI3MDhiZTUuemlwL25vZGVfbW9kdWxlcy9tb25hY28tcHJvbXFsL3Byb21xbC9wcm9tcWwuY29udHJpYnV0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDYTtBQUNiO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixPQUFPLCtTQUFrQixJQUFJO0FBQ3ZEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ3JhZmFuYS8uLy55YXJuL2NhY2hlL21vbmFjby1wcm9tcWwtbnBtLTEuNy40LTFiMGMxM2E2NjYtOWZlMjcwOGJlNS56aXAvbm9kZV9tb2R1bGVzL21vbmFjby1wcm9tcWwvcHJvbXFsL3Byb21xbC5jb250cmlidXRpb24uanM/YmFkMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGUgTUlUIExpY2Vuc2UgKE1JVClcbi8vXG4vLyBDb3B5cmlnaHQgKGMpIENlbGlhbiBHYXJjaWEgYW5kIEF1Z3VzdGluIEh1c3NvbiBAIEFtYWRldXMgSVQgR3JvdXBcbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XG4vLyBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsXG4vLyBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzXG4vLyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXG4vLyBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXNcbi8vIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW4gYWxsXG4vLyBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1Jcbi8vIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuLy8gRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFXG4vLyBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXG4vLyBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLFxuLy8gT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEVcbi8vIFNPRlRXQVJFLlxuJ3VzZSBzdHJpY3QnO1xuLy8gbm9pbnNwZWN0aW9uIEpTVW51c2VkR2xvYmFsU3ltYm9sc1xuZXhwb3J0IHZhciBwcm9tTGFuZ3VhZ2VEZWZpbml0aW9uID0ge1xuICAgIGlkOiAncHJvbXFsJyxcbiAgICBleHRlbnNpb25zOiBbJy5wcm9tcWwnXSxcbiAgICBhbGlhc2VzOiBbJ1Byb21ldGhldXMnLCAncHJvbWV0aGV1cycsICdwcm9tJywgJ1Byb20nLCAncHJvbXFsJywgJ1Byb21xbCcsICdwcm9tUUwnLCAnUHJvbVFMJ10sXG4gICAgbWltZXR5cGVzOiBbXSxcbiAgICBsb2FkZXI6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGltcG9ydCgnLi9wcm9tcWwnKTsgfSAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9leHBsaWNpdC1mdW5jdGlvbi1yZXR1cm4tdHlwZVxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./.yarn/cache/monaco-promql-npm-1.7.4-1b0c13a666-9fe2708be5.zip/node_modules/monaco-promql/promql/promql.contribution.js\n");

/***/ })

}]);