"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkgrafana"] = self["webpackChunkgrafana"] || []).push([["influxdbPlugin"],{

/***/ "./public/app/plugins/datasource/influxdb/components/editor/annotation/AnnotationEditor.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AnnotationEditor: () => (/* binding */ AnnotationEditor)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _grafana_ui_src__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/FormLabel/FormLabel.tsx\");\n/* harmony import */ var _grafana_ui_src__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Input/Input.tsx\");\n\n\n\nconst AnnotationEditor = (props) => {\n  const { query, onChange } = props;\n  const [eventQuery, setEventQuery] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(query.query ?? \"\");\n  const [textColumn, setTextColumn] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(query.textColumn ?? \"\");\n  const [tagsColumn, setTagsColumn] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(query.tagsColumn ?? \"\");\n  const [timeEndColumn, setTimeEndColumn] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(query?.timeEndColumn ?? \"\");\n  const [titleColumn] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(query?.titleColumn ?? \"\");\n  const updateValue = (key, val) => {\n    onChange({\n      ...query,\n      [key]: val,\n      rawQuery: true,\n      fromAnnotations: true,\n      textEditor: true\n    });\n  };\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", { className: \"gf-form-group\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", { className: \"gf-form\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_grafana_ui_src__WEBPACK_IMPORTED_MODULE_1__.InlineFormLabel, { width: 12 }, \"InfluxQL Query\"), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n    _grafana_ui_src__WEBPACK_IMPORTED_MODULE_2__.Input,\n    {\n      value: eventQuery,\n      onChange: (e) => setEventQuery(e.currentTarget.value ?? \"\"),\n      onBlur: () => updateValue(\"query\", eventQuery),\n      placeholder: \"select text from events where $timeFilter limit 1000\"\n    }\n  )), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n    _grafana_ui_src__WEBPACK_IMPORTED_MODULE_1__.InlineFormLabel,\n    {\n      width: 12,\n      tooltip: /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", null, \"If your influxdb query returns more than one field you need to specify the column names below. An annotation event is composed of a title, tags, and an additional text field. Optionally you can map the timeEnd column for region annotation usage.\")\n    },\n    \"Field mappings\"\n  ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", { className: \"gf-form-group\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", { className: \"gf-form-inline\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", { className: \"gf-form\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_grafana_ui_src__WEBPACK_IMPORTED_MODULE_1__.InlineFormLabel, { width: 12 }, \"Text\"), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n    _grafana_ui_src__WEBPACK_IMPORTED_MODULE_2__.Input,\n    {\n      value: textColumn,\n      onChange: (e) => setTextColumn(e.currentTarget.value ?? \"\"),\n      onBlur: () => updateValue(\"textColumn\", textColumn)\n    }\n  )), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", { className: \"gf-form\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_grafana_ui_src__WEBPACK_IMPORTED_MODULE_1__.InlineFormLabel, { width: 12 }, \"Tags\"), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n    _grafana_ui_src__WEBPACK_IMPORTED_MODULE_2__.Input,\n    {\n      value: tagsColumn,\n      onChange: (e) => setTagsColumn(e.currentTarget.value ?? \"\"),\n      onBlur: () => updateValue(\"tagsColumn\", tagsColumn)\n    }\n  )), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", { className: \"gf-form\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_grafana_ui_src__WEBPACK_IMPORTED_MODULE_1__.InlineFormLabel, { width: 12 }, \"TimeEnd\"), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n    _grafana_ui_src__WEBPACK_IMPORTED_MODULE_2__.Input,\n    {\n      value: timeEndColumn,\n      onChange: (e) => setTimeEndColumn(e.currentTarget.value ?? \"\"),\n      onBlur: () => updateValue(\"timeEndColumn\", timeEndColumn)\n    }\n  )), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", { className: \"gf-form ng-hide\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_grafana_ui_src__WEBPACK_IMPORTED_MODULE_1__.InlineFormLabel, { width: 12 }, \"Title\"), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_grafana_ui_src__WEBPACK_IMPORTED_MODULE_2__.Input, { defaultValue: titleColumn })))));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9pbmZsdXhkYi9jb21wb25lbnRzL2VkaXRvci9hbm5vdGF0aW9uL0Fubm90YXRpb25FZGl0b3IudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFnQztBQUdPO0FBS2hDLE1BQU0sbUJBQW1CLENBQUMsVUFBMEU7QUFDekcsUUFBTSxFQUFFLE9BQU8sU0FBUyxJQUFJO0FBQzVCLFFBQU0sQ0FBQyxZQUFZLGFBQWEsSUFBSSwrQ0FBUSxDQUFTLE1BQU0sU0FBUyxFQUFFO0FBRXRFLFFBQU0sQ0FBQyxZQUFZLGFBQWEsSUFBSSwrQ0FBUSxDQUFTLE1BQU0sY0FBYyxFQUFFO0FBQzNFLFFBQU0sQ0FBQyxZQUFZLGFBQWEsSUFBSSwrQ0FBUSxDQUFTLE1BQU0sY0FBYyxFQUFFO0FBQzNFLFFBQU0sQ0FBQyxlQUFlLGdCQUFnQixJQUFJLCtDQUFRLENBQVMsT0FBTyxpQkFBaUIsRUFBRTtBQUNyRixRQUFNLENBQUMsV0FBVyxJQUFJLCtDQUFRLENBQVMsT0FBTyxlQUFlLEVBQUU7QUFDL0QsUUFBTSxjQUFjLENBQXdELEtBQVEsUUFBVztBQUM3RixhQUFTO0FBQUEsTUFDUCxHQUFHO0FBQUEsTUFDSCxDQUFDLEdBQUcsR0FBRztBQUFBLE1BQ1AsVUFBVTtBQUFBLE1BQ1YsaUJBQWlCO0FBQUEsTUFDakIsWUFBWTtBQUFBLElBQ2QsQ0FBQztBQUFBLEVBQ0g7QUFDQSxTQUNFLDJFQUFDLFNBQUksV0FBVSxtQkFDYiwyRUFBQyxTQUFJLFdBQVUsYUFDYiwyRUFBQyw0REFBZSxJQUFDLE9BQU8sTUFBSSxnQkFBYyxHQUMxQztBQUFBLElBQUMsa0RBQUs7QUFBTDtBQUFBLE1BQ0MsT0FBTztBQUFBLE1BQ1AsVUFBVSxDQUFDLE1BQU0sY0FBYyxFQUFFLGNBQWMsU0FBUyxFQUFFO0FBQUEsTUFDMUQsUUFBUSxNQUFNLFlBQVksU0FBUyxVQUFVO0FBQUEsTUFDN0MsYUFBWTtBQUFBO0FBQUEsRUFDZCxDQUNGLEdBQ0E7QUFBQSxJQUFDLDREQUFlO0FBQWY7QUFBQSxNQUNDLE9BQU87QUFBQSxNQUNQLFNBQ0UsMkVBQUMsYUFBSSx1UEFJTDtBQUFBO0FBQUEsSUFFSDtBQUFBLEVBRUQsR0FDQSwyRUFBQyxTQUFJLFdBQVUsbUJBQ2IsMkVBQUMsU0FBSSxXQUFVLG9CQUNiLDJFQUFDLFNBQUksV0FBVSxhQUNiLDJFQUFDLDREQUFlLElBQUMsT0FBTyxNQUFJLE1BQUksR0FDaEM7QUFBQSxJQUFDLGtEQUFLO0FBQUw7QUFBQSxNQUNDLE9BQU87QUFBQSxNQUNQLFVBQVUsQ0FBQyxNQUFNLGNBQWMsRUFBRSxjQUFjLFNBQVMsRUFBRTtBQUFBLE1BQzFELFFBQVEsTUFBTSxZQUFZLGNBQWMsVUFBVTtBQUFBO0FBQUEsRUFDcEQsQ0FDRixHQUNBLDJFQUFDLFNBQUksV0FBVSxhQUNiLDJFQUFDLDREQUFlLElBQUMsT0FBTyxNQUFJLE1BQUksR0FDaEM7QUFBQSxJQUFDLGtEQUFLO0FBQUw7QUFBQSxNQUNDLE9BQU87QUFBQSxNQUNQLFVBQVUsQ0FBQyxNQUFNLGNBQWMsRUFBRSxjQUFjLFNBQVMsRUFBRTtBQUFBLE1BQzFELFFBQVEsTUFBTSxZQUFZLGNBQWMsVUFBVTtBQUFBO0FBQUEsRUFDcEQsQ0FDRixHQUNBLDJFQUFDLFNBQUksV0FBVSxhQUNiLDJFQUFDLDREQUFlLElBQUMsT0FBTyxNQUFJLFNBQU8sR0FDbkM7QUFBQSxJQUFDLGtEQUFLO0FBQUw7QUFBQSxNQUNDLE9BQU87QUFBQSxNQUNQLFVBQVUsQ0FBQyxNQUFNLGlCQUFpQixFQUFFLGNBQWMsU0FBUyxFQUFFO0FBQUEsTUFDN0QsUUFBUSxNQUFNLFlBQVksaUJBQWlCLGFBQWE7QUFBQTtBQUFBLEVBQzFELENBQ0YsR0FDQSwyRUFBQyxTQUFJLFdBQVUscUJBQ2IsMkVBQUMsNERBQWUsSUFBQyxPQUFPLE1BQUksT0FBSyxHQUNqQywyRUFBQyxrREFBSyxJQUFDLGNBQWMsYUFBYSxDQUNwQyxDQUNGLENBQ0YsQ0FDRjtBQUVKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ3JhZmFuYS8uL3B1YmxpYy9hcHAvcGx1Z2lucy9kYXRhc291cmNlL2luZmx1eGRiL2NvbXBvbmVudHMvZWRpdG9yL2Fubm90YXRpb24vQW5ub3RhdGlvbkVkaXRvci50c3g/ZmQzMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB7IFF1ZXJ5RWRpdG9yUHJvcHMgfSBmcm9tICdAZ3JhZmFuYS9kYXRhL3NyYyc7XG5pbXBvcnQgeyBJbmxpbmVGb3JtTGFiZWwsIElucHV0IH0gZnJvbSAnQGdyYWZhbmEvdWkvc3JjJztcblxuaW1wb3J0IEluZmx1eERhdGFzb3VyY2UgZnJvbSAnLi4vLi4vLi4vZGF0YXNvdXJjZSc7XG5pbXBvcnQgeyBJbmZsdXhPcHRpb25zLCBJbmZsdXhRdWVyeSB9IGZyb20gJy4uLy4uLy4uL3R5cGVzJztcblxuZXhwb3J0IGNvbnN0IEFubm90YXRpb25FZGl0b3IgPSAocHJvcHM6IFF1ZXJ5RWRpdG9yUHJvcHM8SW5mbHV4RGF0YXNvdXJjZSwgSW5mbHV4UXVlcnksIEluZmx1eE9wdGlvbnM+KSA9PiB7XG4gIGNvbnN0IHsgcXVlcnksIG9uQ2hhbmdlIH0gPSBwcm9wcztcbiAgY29uc3QgW2V2ZW50UXVlcnksIHNldEV2ZW50UXVlcnldID0gdXNlU3RhdGU8c3RyaW5nPihxdWVyeS5xdWVyeSA/PyAnJyk7XG5cbiAgY29uc3QgW3RleHRDb2x1bW4sIHNldFRleHRDb2x1bW5dID0gdXNlU3RhdGU8c3RyaW5nPihxdWVyeS50ZXh0Q29sdW1uID8/ICcnKTtcbiAgY29uc3QgW3RhZ3NDb2x1bW4sIHNldFRhZ3NDb2x1bW5dID0gdXNlU3RhdGU8c3RyaW5nPihxdWVyeS50YWdzQ29sdW1uID8/ICcnKTtcbiAgY29uc3QgW3RpbWVFbmRDb2x1bW4sIHNldFRpbWVFbmRDb2x1bW5dID0gdXNlU3RhdGU8c3RyaW5nPihxdWVyeT8udGltZUVuZENvbHVtbiA/PyAnJyk7XG4gIGNvbnN0IFt0aXRsZUNvbHVtbl0gPSB1c2VTdGF0ZTxzdHJpbmc+KHF1ZXJ5Py50aXRsZUNvbHVtbiA/PyAnJyk7XG4gIGNvbnN0IHVwZGF0ZVZhbHVlID0gPEsgZXh0ZW5kcyBrZXlvZiBJbmZsdXhRdWVyeSwgViBleHRlbmRzIEluZmx1eFF1ZXJ5W0tdPihrZXk6IEssIHZhbDogVikgPT4ge1xuICAgIG9uQ2hhbmdlKHtcbiAgICAgIC4uLnF1ZXJ5LFxuICAgICAgW2tleV06IHZhbCxcbiAgICAgIHJhd1F1ZXJ5OiB0cnVlLFxuICAgICAgZnJvbUFubm90YXRpb25zOiB0cnVlLFxuICAgICAgdGV4dEVkaXRvcjogdHJ1ZSxcbiAgICB9KTtcbiAgfTtcbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cImdmLWZvcm0tZ3JvdXBcIj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZ2YtZm9ybVwiPlxuICAgICAgICA8SW5saW5lRm9ybUxhYmVsIHdpZHRoPXsxMn0+SW5mbHV4UUwgUXVlcnk8L0lubGluZUZvcm1MYWJlbD5cbiAgICAgICAgPElucHV0XG4gICAgICAgICAgdmFsdWU9e2V2ZW50UXVlcnl9XG4gICAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiBzZXRFdmVudFF1ZXJ5KGUuY3VycmVudFRhcmdldC52YWx1ZSA/PyAnJyl9XG4gICAgICAgICAgb25CbHVyPXsoKSA9PiB1cGRhdGVWYWx1ZSgncXVlcnknLCBldmVudFF1ZXJ5KX1cbiAgICAgICAgICBwbGFjZWhvbGRlcj1cInNlbGVjdCB0ZXh0IGZyb20gZXZlbnRzIHdoZXJlICR0aW1lRmlsdGVyIGxpbWl0IDEwMDBcIlxuICAgICAgICAvPlxuICAgICAgPC9kaXY+XG4gICAgICA8SW5saW5lRm9ybUxhYmVsXG4gICAgICAgIHdpZHRoPXsxMn1cbiAgICAgICAgdG9vbHRpcD17XG4gICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgIElmIHlvdXIgaW5mbHV4ZGIgcXVlcnkgcmV0dXJucyBtb3JlIHRoYW4gb25lIGZpZWxkIHlvdSBuZWVkIHRvIHNwZWNpZnkgdGhlIGNvbHVtbiBuYW1lcyBiZWxvdy4gQW4gYW5ub3RhdGlvblxuICAgICAgICAgICAgZXZlbnQgaXMgY29tcG9zZWQgb2YgYSB0aXRsZSwgdGFncywgYW5kIGFuIGFkZGl0aW9uYWwgdGV4dCBmaWVsZC4gT3B0aW9uYWxseSB5b3UgY2FuIG1hcCB0aGUgdGltZUVuZCBjb2x1bW5cbiAgICAgICAgICAgIGZvciByZWdpb24gYW5ub3RhdGlvbiB1c2FnZS5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgfVxuICAgICAgPlxuICAgICAgICBGaWVsZCBtYXBwaW5nc1xuICAgICAgPC9JbmxpbmVGb3JtTGFiZWw+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImdmLWZvcm0tZ3JvdXBcIj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJnZi1mb3JtLWlubGluZVwiPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZ2YtZm9ybVwiPlxuICAgICAgICAgICAgPElubGluZUZvcm1MYWJlbCB3aWR0aD17MTJ9PlRleHQ8L0lubGluZUZvcm1MYWJlbD5cbiAgICAgICAgICAgIDxJbnB1dFxuICAgICAgICAgICAgICB2YWx1ZT17dGV4dENvbHVtbn1cbiAgICAgICAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiBzZXRUZXh0Q29sdW1uKGUuY3VycmVudFRhcmdldC52YWx1ZSA/PyAnJyl9XG4gICAgICAgICAgICAgIG9uQmx1cj17KCkgPT4gdXBkYXRlVmFsdWUoJ3RleHRDb2x1bW4nLCB0ZXh0Q29sdW1uKX1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJnZi1mb3JtXCI+XG4gICAgICAgICAgICA8SW5saW5lRm9ybUxhYmVsIHdpZHRoPXsxMn0+VGFnczwvSW5saW5lRm9ybUxhYmVsPlxuICAgICAgICAgICAgPElucHV0XG4gICAgICAgICAgICAgIHZhbHVlPXt0YWdzQ29sdW1ufVxuICAgICAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHNldFRhZ3NDb2x1bW4oZS5jdXJyZW50VGFyZ2V0LnZhbHVlID8/ICcnKX1cbiAgICAgICAgICAgICAgb25CbHVyPXsoKSA9PiB1cGRhdGVWYWx1ZSgndGFnc0NvbHVtbicsIHRhZ3NDb2x1bW4pfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImdmLWZvcm1cIj5cbiAgICAgICAgICAgIDxJbmxpbmVGb3JtTGFiZWwgd2lkdGg9ezEyfT5UaW1lRW5kPC9JbmxpbmVGb3JtTGFiZWw+XG4gICAgICAgICAgICA8SW5wdXRcbiAgICAgICAgICAgICAgdmFsdWU9e3RpbWVFbmRDb2x1bW59XG4gICAgICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4gc2V0VGltZUVuZENvbHVtbihlLmN1cnJlbnRUYXJnZXQudmFsdWUgPz8gJycpfVxuICAgICAgICAgICAgICBvbkJsdXI9eygpID0+IHVwZGF0ZVZhbHVlKCd0aW1lRW5kQ29sdW1uJywgdGltZUVuZENvbHVtbil9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZ2YtZm9ybSBuZy1oaWRlXCI+XG4gICAgICAgICAgICA8SW5saW5lRm9ybUxhYmVsIHdpZHRoPXsxMn0+VGl0bGU8L0lubGluZUZvcm1MYWJlbD5cbiAgICAgICAgICAgIDxJbnB1dCBkZWZhdWx0VmFsdWU9e3RpdGxlQ29sdW1ufSAvPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICApO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/influxdb/components/editor/annotation/AnnotationEditor.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/influxdb/components/editor/config/ConfigEditor.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConfigEditor: () => (/* binding */ ConfigEditor),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/lodash-npm-4.17.21-6382451519-eb835a2e51.zip/node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _grafana_data_src__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/utils/datasource.ts\");\n/* harmony import */ var _grafana_ui_src__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/index.ts\");\n/* harmony import */ var _grafana_ui_src__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/FormLabel/FormLabel.tsx\");\n/* harmony import */ var _grafana_ui_src__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/InfoBox/InfoBox.tsx\");\n/* harmony import */ var _grafana_ui_src__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Select/Select.tsx\");\n/* harmony import */ var _grafana_ui_src__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Alert/Alert.tsx\");\n/* harmony import */ var _grafana_ui_src__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/DataSourceSettings/DataSourceHttpSettings.tsx\");\n/* harmony import */ var _grafana_ui_src__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Forms/InlineField.tsx\");\n/* harmony import */ var app_core_config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/core/config.ts\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/constants.ts\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/types.ts\");\n\n\n\n\n\n\n\n\nconst { Input, SecretFormField } = _grafana_ui_src__WEBPACK_IMPORTED_MODULE_5__.LegacyForms;\nconst httpModes = [\n  { label: \"GET\", value: \"GET\" },\n  { label: \"POST\", value: \"POST\" }\n];\nconst versions = [\n  {\n    label: \"InfluxQL\",\n    value: _types__WEBPACK_IMPORTED_MODULE_4__.InfluxVersion.InfluxQL,\n    description: \"The InfluxDB SQL-like query language.\"\n  },\n  {\n    label: \"Flux\",\n    value: _types__WEBPACK_IMPORTED_MODULE_4__.InfluxVersion.Flux,\n    description: \"Advanced data scripting and query language.  Supported in InfluxDB 2.x and 1.8+\"\n  }\n];\nclass ConfigEditor extends react__WEBPACK_IMPORTED_MODULE_1__.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      maxSeries: \"\"\n    };\n    // 1x\n    this.onResetPassword = () => {\n      (0,_grafana_data_src__WEBPACK_IMPORTED_MODULE_6__.updateDatasourcePluginResetOption)(this.props, \"password\");\n    };\n    // 2x\n    this.onResetToken = () => {\n      (0,_grafana_data_src__WEBPACK_IMPORTED_MODULE_6__.updateDatasourcePluginResetOption)(this.props, \"token\");\n    };\n    this.onVersionChanged = (selected) => {\n      const { options, onOptionsChange } = this.props;\n      const copy = {\n        ...options,\n        jsonData: {\n          ...options.jsonData,\n          version: selected.value\n        }\n      };\n      if (selected.value === _types__WEBPACK_IMPORTED_MODULE_4__.InfluxVersion.Flux) {\n        copy.access = \"proxy\";\n        copy.basicAuth = true;\n        copy.jsonData.httpMode = \"POST\";\n        const { user, database, ...rest } = copy;\n        onOptionsChange(rest);\n      } else {\n        onOptionsChange(copy);\n      }\n    };\n    this.state.maxSeries = props.options.jsonData.maxSeries?.toString() || \"\";\n    this.htmlPrefix = (0,lodash__WEBPACK_IMPORTED_MODULE_0__.uniqueId)(\"influxdb-config\");\n  }\n  renderInflux2x() {\n    const { options } = this.props;\n    const { secureJsonFields } = options;\n    const secureJsonData = options.secureJsonData || {};\n    const { htmlPrefix } = this;\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement((react__WEBPACK_IMPORTED_MODULE_1___default().Fragment), null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"gf-form-inline\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"gf-form\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui_src__WEBPACK_IMPORTED_MODULE_7__.InlineFormLabel, { htmlFor: `${htmlPrefix}-org`, className: \"width-10\" }, \"Organization\"), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"width-10\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n      Input,\n      {\n        id: `${htmlPrefix}-org`,\n        className: \"width-20\",\n        value: options.jsonData.organization || \"\",\n        onChange: (0,_grafana_data_src__WEBPACK_IMPORTED_MODULE_6__.onUpdateDatasourceJsonDataOption)(this.props, \"organization\")\n      }\n    )))), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"gf-form-inline\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"gf-form\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n      SecretFormField,\n      {\n        isConfigured: Boolean(secureJsonFields && secureJsonFields.token),\n        value: secureJsonData.token || \"\",\n        label: \"Token\",\n        \"aria-label\": \"Token\",\n        labelWidth: 10,\n        inputWidth: 20,\n        onReset: this.onResetToken,\n        onChange: (0,_grafana_data_src__WEBPACK_IMPORTED_MODULE_6__.onUpdateDatasourceSecureJsonDataOption)(this.props, \"token\")\n      }\n    ))), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"gf-form-inline\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"gf-form\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui_src__WEBPACK_IMPORTED_MODULE_7__.InlineFormLabel, { className: \"width-10\" }, \"Default Bucket\"), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"width-10\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n      Input,\n      {\n        className: \"width-20\",\n        placeholder: \"default bucket\",\n        value: options.jsonData.defaultBucket || \"\",\n        onChange: (0,_grafana_data_src__WEBPACK_IMPORTED_MODULE_6__.onUpdateDatasourceJsonDataOption)(this.props, \"defaultBucket\")\n      }\n    )))), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"gf-form-inline\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"gf-form\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n      _grafana_ui_src__WEBPACK_IMPORTED_MODULE_7__.InlineFormLabel,\n      {\n        className: \"width-10\",\n        tooltip: \"A lower limit for the auto group by time interval. Recommended to be set to write frequency,\\n\t\t\t\tfor example 1m if your data is written every minute.\"\n      },\n      \"Min time interval\"\n    ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"width-10\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n      Input,\n      {\n        className: \"width-10\",\n        placeholder: \"10s\",\n        value: options.jsonData.timeInterval || \"\",\n        onChange: (0,_grafana_data_src__WEBPACK_IMPORTED_MODULE_6__.onUpdateDatasourceJsonDataOption)(this.props, \"timeInterval\")\n      }\n    )))));\n  }\n  renderInflux1x() {\n    const { options } = this.props;\n    const { secureJsonFields } = options;\n    const secureJsonData = options.secureJsonData || {};\n    const { htmlPrefix } = this;\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement((react__WEBPACK_IMPORTED_MODULE_1___default().Fragment), null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui_src__WEBPACK_IMPORTED_MODULE_8__.InfoBox, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"h5\", null, \"Database Access\"), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"p\", null, \"Setting the database for this datasource does not deny access to other databases. The InfluxDB query syntax allows switching the database in the query. For example:\", /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"code\", null, \"SHOW MEASUREMENTS ON _internal\"), \" or\", /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"code\", null, 'SELECT * FROM \"_internal\"..\"database\" LIMIT 10'), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"br\", null), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"br\", null), \"To support data isolation and security, make sure appropriate permissions are configured in InfluxDB.\")), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"gf-form-inline\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"gf-form\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui_src__WEBPACK_IMPORTED_MODULE_7__.InlineFormLabel, { htmlFor: `${htmlPrefix}-db`, className: \"width-10\" }, \"Database\"), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"width-20\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n      Input,\n      {\n        id: `${htmlPrefix}-db`,\n        className: \"width-20\",\n        value: options.jsonData.dbName ?? options.database,\n        onChange: (event) => {\n          this.props.onOptionsChange({\n            ...options,\n            database: \"\",\n            jsonData: {\n              ...options.jsonData,\n              dbName: event.target.value\n            }\n          });\n        }\n      }\n    )))), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"gf-form-inline\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"gf-form\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui_src__WEBPACK_IMPORTED_MODULE_7__.InlineFormLabel, { htmlFor: `${htmlPrefix}-user`, className: \"width-10\" }, \"User\"), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"width-10\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n      Input,\n      {\n        id: `${htmlPrefix}-user`,\n        className: \"width-20\",\n        value: options.user || \"\",\n        onChange: (0,_grafana_data_src__WEBPACK_IMPORTED_MODULE_6__.onUpdateDatasourceOption)(this.props, \"user\")\n      }\n    )))), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"gf-form-inline\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"gf-form\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n      SecretFormField,\n      {\n        isConfigured: Boolean(secureJsonFields && secureJsonFields.password),\n        value: secureJsonData.password || \"\",\n        label: \"Password\",\n        \"aria-label\": \"Password\",\n        labelWidth: 10,\n        inputWidth: 20,\n        onReset: this.onResetPassword,\n        onChange: (0,_grafana_data_src__WEBPACK_IMPORTED_MODULE_6__.onUpdateDatasourceSecureJsonDataOption)(this.props, \"password\")\n      }\n    ))), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"gf-form-inline\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"gf-form\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n      _grafana_ui_src__WEBPACK_IMPORTED_MODULE_7__.InlineFormLabel,\n      {\n        htmlFor: `${htmlPrefix}-http-method`,\n        className: \"width-10\",\n        tooltip: \"You can use either GET or POST HTTP method to query your InfluxDB database. The POST\\n          method allows you to perform heavy requests (with a lots of WHERE clause) while the GET method\\n          will restrict you and return an error if the query is too large.\"\n      },\n      \"HTTP Method\"\n    ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n      _grafana_ui_src__WEBPACK_IMPORTED_MODULE_9__.Select,\n      {\n        inputId: `${htmlPrefix}-http-method`,\n        className: \"width-10\",\n        value: httpModes.find((httpMode) => httpMode.value === options.jsonData.httpMode),\n        options: httpModes,\n        defaultValue: options.jsonData.httpMode,\n        onChange: (0,_grafana_data_src__WEBPACK_IMPORTED_MODULE_6__.onUpdateDatasourceJsonDataOptionSelect)(this.props, \"httpMode\")\n      }\n    ))), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"gf-form-inline\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"gf-form\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n      _grafana_ui_src__WEBPACK_IMPORTED_MODULE_7__.InlineFormLabel,\n      {\n        className: \"width-10\",\n        tooltip: \"A lower limit for the auto group by time interval. Recommended to be set to write frequency,\\n\t\t\t\tfor example 1m if your data is written every minute.\"\n      },\n      \"Min time interval\"\n    ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"width-10\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n      Input,\n      {\n        className: \"width-10\",\n        placeholder: \"10s\",\n        value: options.jsonData.timeInterval || \"\",\n        onChange: (0,_grafana_data_src__WEBPACK_IMPORTED_MODULE_6__.onUpdateDatasourceJsonDataOption)(this.props, \"timeInterval\")\n      }\n    )))));\n  }\n  render() {\n    const { options, onOptionsChange } = this.props;\n    const isDirectAccess = options.access === \"direct\";\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement((react__WEBPACK_IMPORTED_MODULE_1___default().Fragment), null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"h3\", { className: \"page-heading\" }, \"Query Language\"), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"gf-form-group\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"gf-form-inline\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"gf-form\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n      _grafana_ui_src__WEBPACK_IMPORTED_MODULE_9__.Select,\n      {\n        \"aria-label\": \"Query language\",\n        className: \"width-30\",\n        value: options.jsonData.version === _types__WEBPACK_IMPORTED_MODULE_4__.InfluxVersion.Flux ? versions[1] : versions[0],\n        options: versions,\n        defaultValue: versions[0],\n        onChange: this.onVersionChanged\n      }\n    )))), options.jsonData.version === _types__WEBPACK_IMPORTED_MODULE_4__.InfluxVersion.Flux && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui_src__WEBPACK_IMPORTED_MODULE_8__.InfoBox, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"h5\", null, \"Support for Flux in Grafana is currently in beta\"), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"p\", null, \"Please report any issues to: \", /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"br\", null), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"a\", { href: \"https://github.com/grafana/grafana/issues/new/choose\" }, \"https://github.com/grafana/grafana/issues\"))), isDirectAccess && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui_src__WEBPACK_IMPORTED_MODULE_10__.Alert, { title: \"Error\", severity: \"error\" }, _constants__WEBPACK_IMPORTED_MODULE_3__.BROWSER_MODE_DISABLED_MESSAGE), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n      _grafana_ui_src__WEBPACK_IMPORTED_MODULE_11__.DataSourceHttpSettings,\n      {\n        showAccessOptions: isDirectAccess,\n        dataSourceConfig: options,\n        defaultUrl: \"http://localhost:8086\",\n        onChange: onOptionsChange,\n        secureSocksDSProxyEnabled: app_core_config__WEBPACK_IMPORTED_MODULE_2__.config.secureSocksDSProxyEnabled\n      }\n    ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"gf-form-group\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"h3\", { className: \"page-heading\" }, \"InfluxDB Details\")), options.jsonData.version === _types__WEBPACK_IMPORTED_MODULE_4__.InfluxVersion.Flux ? this.renderInflux2x() : this.renderInflux1x(), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"gf-form-inline\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n      _grafana_ui_src__WEBPACK_IMPORTED_MODULE_12__.InlineField,\n      {\n        labelWidth: 20,\n        label: \"Max series\",\n        tooltip: \"Limit the number of series/tables that Grafana will process. Lower this number to prevent abuse, and increase it if you have lots of small time series and not all are shown. Defaults to 1000.\"\n      },\n      /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n        Input,\n        {\n          placeholder: \"1000\",\n          type: \"number\",\n          className: \"width-10\",\n          value: this.state.maxSeries,\n          onChange: (event) => {\n            this.setState({ maxSeries: event.currentTarget.value });\n            const val = parseInt(event.currentTarget.value, 10);\n            (0,_grafana_data_src__WEBPACK_IMPORTED_MODULE_6__.updateDatasourcePluginJsonDataOption)(this.props, \"maxSeries\", Number.isFinite(val) ? val : void 0);\n          }\n        }\n      )\n    ))));\n  }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ConfigEditor);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/influxdb/components/editor/config/ConfigEditor.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/influxdb/components/editor/constants.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_RESULT_FORMAT: () => (/* binding */ DEFAULT_RESULT_FORMAT),\n/* harmony export */   RESULT_FORMATS: () => (/* binding */ RESULT_FORMATS)\n/* harmony export */ });\n\nconst RESULT_FORMATS = [\n  { label: \"Time series\", value: \"time_series\" },\n  { label: \"Table\", value: \"table\" },\n  { label: \"Logs\", value: \"logs\" }\n];\nconst DEFAULT_RESULT_FORMAT = \"time_series\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9pbmZsdXhkYi9jb21wb25lbnRzL2VkaXRvci9jb25zdGFudHMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBSU8sTUFBTSxpQkFBdUQ7QUFBQSxFQUNsRSxFQUFFLE9BQU8sZUFBZSxPQUFPLGNBQWM7QUFBQSxFQUM3QyxFQUFFLE9BQU8sU0FBUyxPQUFPLFFBQVE7QUFBQSxFQUNqQyxFQUFFLE9BQU8sUUFBUSxPQUFPLE9BQU87QUFDakM7QUFFTyxNQUFNLHdCQUFzQyIsInNvdXJjZXMiOlsid2VicGFjazovL2dyYWZhbmEvLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9pbmZsdXhkYi9jb21wb25lbnRzL2VkaXRvci9jb25zdGFudHMudHM/MWYzMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTZWxlY3RhYmxlVmFsdWUgfSBmcm9tICdAZ3JhZmFuYS9kYXRhL3NyYyc7XG5cbmltcG9ydCB7IFJlc3VsdEZvcm1hdCB9IGZyb20gJy4uLy4uL3R5cGVzJztcblxuZXhwb3J0IGNvbnN0IFJFU1VMVF9GT1JNQVRTOiBBcnJheTxTZWxlY3RhYmxlVmFsdWU8UmVzdWx0Rm9ybWF0Pj4gPSBbXG4gIHsgbGFiZWw6ICdUaW1lIHNlcmllcycsIHZhbHVlOiAndGltZV9zZXJpZXMnIH0sXG4gIHsgbGFiZWw6ICdUYWJsZScsIHZhbHVlOiAndGFibGUnIH0sXG4gIHsgbGFiZWw6ICdMb2dzJywgdmFsdWU6ICdsb2dzJyB9LFxuXTtcblxuZXhwb3J0IGNvbnN0IERFRkFVTFRfUkVTVUxUX0ZPUk1BVDogUmVzdWx0Rm9ybWF0ID0gJ3RpbWVfc2VyaWVzJztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/influxdb/components/editor/constants.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/influxdb/components/editor/query/QueryEditor.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryEditor: () => (/* binding */ QueryEditor)\n/* harmony export */ });\n/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/@emotion-css-npm-11.11.2-dbfa42cf83-1edea109df.zip/node_modules/@emotion/css/dist/emotion-css.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _queryUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/queryUtils.ts\");\n/* harmony import */ var _flux_FluxQueryEditor__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/components/editor/query/flux/FluxQueryEditor.tsx\");\n/* harmony import */ var _influxql_QueryEditorModeSwitcher__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/components/editor/query/influxql/QueryEditorModeSwitcher.tsx\");\n/* harmony import */ var _influxql_code_RawInfluxQLEditor__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/components/editor/query/influxql/code/RawInfluxQLEditor.tsx\");\n/* harmony import */ var _influxql_visual_VisualInfluxQLEditor__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/components/editor/query/influxql/visual/VisualInfluxQLEditor.tsx\");\n\n\n\n\n\n\n\n\nconst QueryEditor = ({ query, onChange, onRunQuery, datasource }) => {\n  if (datasource.isFlux) {\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"gf-form-query-content\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_flux_FluxQueryEditor__WEBPACK_IMPORTED_MODULE_3__.FluxQueryEditor, { query, onChange, onRunQuery, datasource }));\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)({ display: \"flex\" }) }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)({ flexGrow: 1 }) }, query.rawQuery ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_influxql_code_RawInfluxQLEditor__WEBPACK_IMPORTED_MODULE_5__.RawInfluxQLEditor, { query, onChange, onRunQuery }) : /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_influxql_visual_VisualInfluxQLEditor__WEBPACK_IMPORTED_MODULE_6__.VisualInfluxQLEditor, { query, onChange, onRunQuery, datasource })), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n    _influxql_QueryEditorModeSwitcher__WEBPACK_IMPORTED_MODULE_4__.QueryEditorModeSwitcher,\n    {\n      isRaw: query.rawQuery ?? false,\n      onChange: (value) => {\n        onChange({ ...query, query: (0,_queryUtils__WEBPACK_IMPORTED_MODULE_2__.buildRawQuery)(query), rawQuery: value });\n        onRunQuery();\n      }\n    }\n  ));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9pbmZsdXhkYi9jb21wb25lbnRzL2VkaXRvci9xdWVyeS9RdWVyeUVkaXRvci50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFvQjtBQUNGO0FBS1k7QUFHRTtBQUNRO0FBQ047QUFDMkI7QUFJdEQsTUFBTSxjQUFjLENBQUMsRUFBRSxPQUFPLFVBQVUsWUFBWSxXQUFXLE1BQWE7QUFDakYsTUFBSSxXQUFXLFFBQVE7QUFDckIsV0FDRSwyRUFBQyxTQUFJLFdBQVUsMkJBQ2IsMkVBQUMsa0VBQWUsSUFBQyxPQUFjLFVBQW9CLFlBQXdCLFlBQXdCLENBQ3JHO0FBQUEsRUFFSjtBQUVBLFNBQ0UsMkVBQUMsU0FBSSxXQUFXLGlEQUFHLENBQUMsRUFBRSxTQUFTLE9BQU8sQ0FBQyxLQUNyQywyRUFBQyxTQUFJLFdBQVcsaURBQUcsQ0FBQyxFQUFFLFVBQVUsRUFBRSxDQUFDLEtBQ2hDLE1BQU0sV0FDTCwyRUFBQywrRUFBaUIsSUFBQyxPQUFjLFVBQW9CLFlBQXdCLElBRTdFLDJFQUFDLHVGQUFvQixJQUFDLE9BQWMsVUFBb0IsWUFBd0IsWUFBd0IsQ0FFNUcsR0FDQTtBQUFBLElBQUMsc0ZBQXVCO0FBQXZCO0FBQUEsTUFDQyxPQUFPLE1BQU0sWUFBWTtBQUFBLE1BQ3pCLFVBQVUsQ0FBQyxVQUFVO0FBQ25CLGlCQUFTLEVBQUUsR0FBRyxPQUFPLE9BQU8sMERBQWEsQ0FBQyxLQUFLLEdBQUcsVUFBVSxNQUFNLENBQUM7QUFDbkUsbUJBQVc7QUFBQSxNQUNiO0FBQUE7QUFBQSxFQUNGLENBQ0Y7QUFFSiIsInNvdXJjZXMiOlsid2VicGFjazovL2dyYWZhbmEvLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9pbmZsdXhkYi9jb21wb25lbnRzL2VkaXRvci9xdWVyeS9RdWVyeUVkaXRvci50c3g/YjI1OCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9jc3MnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHsgUXVlcnlFZGl0b3JQcm9wcyB9IGZyb20gJ0BncmFmYW5hL2RhdGEvc3JjJztcblxuaW1wb3J0IEluZmx1eERhdGFzb3VyY2UgZnJvbSAnLi4vLi4vLi4vZGF0YXNvdXJjZSc7XG5pbXBvcnQgeyBidWlsZFJhd1F1ZXJ5IH0gZnJvbSAnLi4vLi4vLi4vcXVlcnlVdGlscyc7XG5pbXBvcnQgeyBJbmZsdXhPcHRpb25zLCBJbmZsdXhRdWVyeSB9IGZyb20gJy4uLy4uLy4uL3R5cGVzJztcblxuaW1wb3J0IHsgRmx1eFF1ZXJ5RWRpdG9yIH0gZnJvbSAnLi9mbHV4L0ZsdXhRdWVyeUVkaXRvcic7XG5pbXBvcnQgeyBRdWVyeUVkaXRvck1vZGVTd2l0Y2hlciB9IGZyb20gJy4vaW5mbHV4cWwvUXVlcnlFZGl0b3JNb2RlU3dpdGNoZXInO1xuaW1wb3J0IHsgUmF3SW5mbHV4UUxFZGl0b3IgfSBmcm9tICcuL2luZmx1eHFsL2NvZGUvUmF3SW5mbHV4UUxFZGl0b3InO1xuaW1wb3J0IHsgVmlzdWFsSW5mbHV4UUxFZGl0b3IgYXMgVmlzdWFsSW5mbHV4UUxFZGl0b3IgfSBmcm9tICcuL2luZmx1eHFsL3Zpc3VhbC9WaXN1YWxJbmZsdXhRTEVkaXRvcic7XG5cbnR5cGUgUHJvcHMgPSBRdWVyeUVkaXRvclByb3BzPEluZmx1eERhdGFzb3VyY2UsIEluZmx1eFF1ZXJ5LCBJbmZsdXhPcHRpb25zPjtcblxuZXhwb3J0IGNvbnN0IFF1ZXJ5RWRpdG9yID0gKHsgcXVlcnksIG9uQ2hhbmdlLCBvblJ1blF1ZXJ5LCBkYXRhc291cmNlIH06IFByb3BzKSA9PiB7XG4gIGlmIChkYXRhc291cmNlLmlzRmx1eCkge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImdmLWZvcm0tcXVlcnktY29udGVudFwiPlxuICAgICAgICA8Rmx1eFF1ZXJ5RWRpdG9yIHF1ZXJ5PXtxdWVyeX0gb25DaGFuZ2U9e29uQ2hhbmdlfSBvblJ1blF1ZXJ5PXtvblJ1blF1ZXJ5fSBkYXRhc291cmNlPXtkYXRhc291cmNlfSAvPlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9e2Nzcyh7IGRpc3BsYXk6ICdmbGV4JyB9KX0+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHsgZmxleEdyb3c6IDEgfSl9PlxuICAgICAgICB7cXVlcnkucmF3UXVlcnkgPyAoXG4gICAgICAgICAgPFJhd0luZmx1eFFMRWRpdG9yIHF1ZXJ5PXtxdWVyeX0gb25DaGFuZ2U9e29uQ2hhbmdlfSBvblJ1blF1ZXJ5PXtvblJ1blF1ZXJ5fSAvPlxuICAgICAgICApIDogKFxuICAgICAgICAgIDxWaXN1YWxJbmZsdXhRTEVkaXRvciBxdWVyeT17cXVlcnl9IG9uQ2hhbmdlPXtvbkNoYW5nZX0gb25SdW5RdWVyeT17b25SdW5RdWVyeX0gZGF0YXNvdXJjZT17ZGF0YXNvdXJjZX0gLz5cbiAgICAgICAgKX1cbiAgICAgIDwvZGl2PlxuICAgICAgPFF1ZXJ5RWRpdG9yTW9kZVN3aXRjaGVyXG4gICAgICAgIGlzUmF3PXtxdWVyeS5yYXdRdWVyeSA/PyBmYWxzZX1cbiAgICAgICAgb25DaGFuZ2U9eyh2YWx1ZSkgPT4ge1xuICAgICAgICAgIG9uQ2hhbmdlKHsgLi4ucXVlcnksIHF1ZXJ5OiBidWlsZFJhd1F1ZXJ5KHF1ZXJ5KSwgcmF3UXVlcnk6IHZhbHVlIH0pO1xuICAgICAgICAgIG9uUnVuUXVlcnkoKTtcbiAgICAgICAgfX1cbiAgICAgIC8+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/influxdb/components/editor/query/QueryEditor.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/influxdb/components/editor/query/flux/FluxQueryEditor.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FluxQueryEditor: () => (/* binding */ FluxQueryEditor)\n/* harmony export */ });\n/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/@emotion-css-npm-11.11.2-dbfa42cf83-1edea109df.zip/node_modules/@emotion/css/dist/emotion-css.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _grafana_runtime_src__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-runtime-virtual-68c57d4c0c/1/packages/grafana-runtime/src/services/templateSrv.ts\");\n/* harmony import */ var _grafana_ui_src__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Monaco/types.ts\");\n/* harmony import */ var _grafana_ui_src__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Monaco/CodeEditor.tsx\");\n/* harmony import */ var _grafana_ui_src__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Button/Button.tsx\");\n/* harmony import */ var _grafana_ui_src__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Segment/Segment.tsx\");\n/* harmony import */ var _grafana_ui_src__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/FormLabel/FormLabel.tsx\");\n/* harmony import */ var _grafana_ui_src__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/themes/ThemeContext.tsx\");\n\n\n\n\n\nconst samples = [\n  { label: \"Show buckets\", description: \"List the available buckets (table)\", value: \"buckets()\" },\n  {\n    label: \"Simple query\",\n    description: \"filter by measurement and field\",\n    value: `from(bucket: \"db/rp\")\n  |> range(start: v.timeRangeStart, stop:v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"example-measurement\" and\n    r._field == \"example-field\"\n  )`\n  },\n  {\n    label: \"Grouped Query\",\n    description: \"Group by (min/max/sum/median)\",\n    value: `// v.windowPeriod is a variable referring to the current optimized window period (currently: $interval)\nfrom(bucket: v.bucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"measurement1\" or r[\"_measurement\"] =~ /^.*?regex.*$/)\n  |> filter(fn: (r) => r[\"_field\"] == \"field2\" or r[\"_field\"] =~ /^.*?regex.*$/)\n  |> aggregateWindow(every: v.windowPeriod, fn: mean|median|max|count|derivative|sum)\n  |> yield(name: \"some-name\")`\n  },\n  {\n    label: \"Filter by value\",\n    description: \"Results between a min/max\",\n    value: `// v.bucket, v.timeRangeStart, and v.timeRange stop are all variables supported by the flux plugin and influxdb\nfrom(bucket: v.bucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_value\"] >= 10 and r[\"_value\"] <= 20)`\n  },\n  {\n    label: \"Schema Exploration: (measurements)\",\n    description: \"Get a list of measurement using flux\",\n    value: `import \"influxdata/influxdb/v1\"\nv1.measurements(bucket: v.bucket)`\n  },\n  {\n    label: \"Schema Exploration: (fields)\",\n    description: \"Return every possible key in a single table\",\n    value: `from(bucket: v.bucket)\n  |> range(start: v.timeRangeStart, stop:v.timeRangeStop)\n  |> keys()\n  |> keep(columns: [\"_value\"])\n  |> group()\n  |> distinct()`\n  },\n  {\n    label: \"Schema Exploration: (tag keys)\",\n    description: \"Get a list of tag keys using flux\",\n    value: `import \"influxdata/influxdb/v1\"\nv1.tagKeys(bucket: v.bucket)`\n  },\n  {\n    label: \"Schema Exploration: (tag values)\",\n    description: \"Get a list of tag values using flux\",\n    value: `import \"influxdata/influxdb/v1\"\nv1.tagValues(\n    bucket: v.bucket,\n    tag: \"host\",\n    predicate: (r) => true,\n    start: -1d\n)`\n  }\n];\nclass UnthemedFluxQueryEditor extends react__WEBPACK_IMPORTED_MODULE_1__.PureComponent {\n  constructor() {\n    super(...arguments);\n    this.onFluxQueryChange = (query) => {\n      this.props.onChange({ ...this.props.query, query });\n      this.props.onRunQuery();\n    };\n    this.onSampleChange = (val) => {\n      this.props.onChange({\n        ...this.props.query,\n        query: val.value\n      });\n      this.forceUpdate();\n      this.props.onRunQuery();\n    };\n    this.getSuggestions = () => {\n      const sugs = [\n        {\n          label: \"v.timeRangeStart\",\n          kind: _grafana_ui_src__WEBPACK_IMPORTED_MODULE_2__.CodeEditorSuggestionItemKind.Property,\n          detail: \"The start time\"\n        },\n        {\n          label: \"v.timeRangeStop\",\n          kind: _grafana_ui_src__WEBPACK_IMPORTED_MODULE_2__.CodeEditorSuggestionItemKind.Property,\n          detail: \"The stop time\"\n        },\n        {\n          label: \"v.windowPeriod\",\n          kind: _grafana_ui_src__WEBPACK_IMPORTED_MODULE_2__.CodeEditorSuggestionItemKind.Property,\n          detail: \"based on max data points\"\n        },\n        {\n          label: \"v.defaultBucket\",\n          kind: _grafana_ui_src__WEBPACK_IMPORTED_MODULE_2__.CodeEditorSuggestionItemKind.Property,\n          detail: \"bucket configured in the datsource\"\n        },\n        {\n          label: \"v.organization\",\n          kind: _grafana_ui_src__WEBPACK_IMPORTED_MODULE_2__.CodeEditorSuggestionItemKind.Property,\n          detail: \"org configured for the datsource\"\n        }\n      ];\n      const templateSrv = (0,_grafana_runtime_src__WEBPACK_IMPORTED_MODULE_3__.getTemplateSrv)();\n      templateSrv.getVariables().forEach((variable) => {\n        const label = \"${\" + variable.name + \"}\";\n        let val = templateSrv.replace(label);\n        if (val === label) {\n          val = \"\";\n        }\n        sugs.push({\n          label,\n          kind: _grafana_ui_src__WEBPACK_IMPORTED_MODULE_2__.CodeEditorSuggestionItemKind.Text,\n          detail: `(Template Variable) ${val}`\n        });\n      });\n      return sugs;\n    };\n    // For some reason in angular, when this component gets re-mounted, the width\n    // is not set properly.  This forces the layout shortly after mount so that it\n    // displays OK.  Note: this is not an issue when used directly in react\n    this.editorDidMountCallbackHack = (editor) => {\n      setTimeout(() => editor.layout(), 100);\n    };\n  }\n  render() {\n    const { query, theme } = this.props;\n    const styles = getStyles(theme);\n    const helpTooltip = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", null, \"Type: \", /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"i\", null, \"ctrl+space\"), \" to show template variable suggestions \", /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"br\", null), \"Many queries can be copied from Chronograf\");\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement((react__WEBPACK_IMPORTED_MODULE_1___default().Fragment), null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n      _grafana_ui_src__WEBPACK_IMPORTED_MODULE_4__.CodeEditor,\n      {\n        height: \"100%\",\n        containerStyles: styles.editorContainerStyles,\n        language: \"sql\",\n        value: query.query || \"\",\n        onBlur: this.onFluxQueryChange,\n        onSave: this.onFluxQueryChange,\n        showMiniMap: false,\n        showLineNumbers: true,\n        getSuggestions: this.getSuggestions,\n        onEditorDidMount: this.editorDidMountCallbackHack\n      }\n    ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.cx)(\"gf-form-inline\", styles.editorActions) }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n      _grafana_ui_src__WEBPACK_IMPORTED_MODULE_5__.LinkButton,\n      {\n        icon: \"external-link-alt\",\n        variant: \"secondary\",\n        target: \"blank\",\n        href: \"https://docs.influxdata.com/influxdb/latest/query-data/get-started/\"\n      },\n      \"Flux language syntax\"\n    ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n      _grafana_ui_src__WEBPACK_IMPORTED_MODULE_6__.Segment,\n      {\n        options: samples,\n        value: \"Sample query\",\n        onChange: this.onSampleChange,\n        className: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n              margin-top: -${theme.spacing(0.5)};\n              margin-left: ${theme.spacing(0.5)};\n            `\n      }\n    ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"gf-form gf-form--grow\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"gf-form-label gf-form-label--grow\" })), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui_src__WEBPACK_IMPORTED_MODULE_7__.InlineFormLabel, { width: 5, tooltip: helpTooltip }, \"Help\")));\n  }\n}\nconst getStyles = (theme) => ({\n  editorContainerStyles: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n    height: 200px;\n    max-width: 100%;\n    resize: vertical;\n    overflow: auto;\n    background-color: ${theme.isDark ? theme.colors.background.canvas : theme.colors.background.primary};\n    padding-bottom: ${theme.spacing(1)};\n  `,\n  editorActions: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n    margin-top: 6px;\n  `\n});\nconst FluxQueryEditor = (0,_grafana_ui_src__WEBPACK_IMPORTED_MODULE_8__.withTheme2)(UnthemedFluxQueryEditor);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/influxdb/components/editor/query/flux/FluxQueryEditor.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/influxdb/components/editor/query/influxql/InfluxCheatSheet.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InfluxCheatSheet: () => (/* binding */ InfluxCheatSheet)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nconst CHEAT_SHEET_ITEMS = [\n  {\n    title: \"Getting started\",\n    label: \"Start by selecting a measurement and field from the dropdown above. You can then use the tag selector to further narrow your search.\"\n  }\n];\nconst InfluxCheatSheet = () => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"h2\", null, \"InfluxDB Cheat Sheet\"), CHEAT_SHEET_ITEMS.map((item) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", { className: \"cheat-sheet-item\", key: item.title }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", { className: \"cheat-sheet-item__title\" }, item.title), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", { className: \"cheat-sheet-item__label\" }, item.label))));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9pbmZsdXhkYi9jb21wb25lbnRzL2VkaXRvci9xdWVyeS9pbmZsdXhxbC9JbmZsdXhDaGVhdFNoZWV0LnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWtCO0FBRWxCLE1BQU0sb0JBQW9CO0FBQUEsRUFDeEI7QUFBQSxJQUNFLE9BQU87QUFBQSxJQUNQLE9BQ0U7QUFBQSxFQUNKO0FBQ0Y7QUFFTyxNQUFNLG1CQUFtQixNQUM5QiwyRUFBQyxhQUNDLDJFQUFDLFlBQUcsc0JBQW9CLEdBQ3ZCLGtCQUFrQixJQUFJLENBQUMsU0FDdEIsMkVBQUMsU0FBSSxXQUFVLG9CQUFtQixLQUFLLEtBQUssU0FDMUMsMkVBQUMsU0FBSSxXQUFVLDZCQUEyQixLQUFLLEtBQU0sR0FDckQsMkVBQUMsU0FBSSxXQUFVLDZCQUEyQixLQUFLLEtBQU0sQ0FDdkQsQ0FDRCxDQUNIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ3JhZmFuYS8uL3B1YmxpYy9hcHAvcGx1Z2lucy9kYXRhc291cmNlL2luZmx1eGRiL2NvbXBvbmVudHMvZWRpdG9yL3F1ZXJ5L2luZmx1eHFsL0luZmx1eENoZWF0U2hlZXQudHN4PzFiNDUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuY29uc3QgQ0hFQVRfU0hFRVRfSVRFTVMgPSBbXG4gIHtcbiAgICB0aXRsZTogJ0dldHRpbmcgc3RhcnRlZCcsXG4gICAgbGFiZWw6XG4gICAgICAnU3RhcnQgYnkgc2VsZWN0aW5nIGEgbWVhc3VyZW1lbnQgYW5kIGZpZWxkIGZyb20gdGhlIGRyb3Bkb3duIGFib3ZlLiBZb3UgY2FuIHRoZW4gdXNlIHRoZSB0YWcgc2VsZWN0b3IgdG8gZnVydGhlciBuYXJyb3cgeW91ciBzZWFyY2guJyxcbiAgfSxcbl07XG5cbmV4cG9ydCBjb25zdCBJbmZsdXhDaGVhdFNoZWV0ID0gKCkgPT4gKFxuICA8ZGl2PlxuICAgIDxoMj5JbmZsdXhEQiBDaGVhdCBTaGVldDwvaDI+XG4gICAge0NIRUFUX1NIRUVUX0lURU1TLm1hcCgoaXRlbSkgPT4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJjaGVhdC1zaGVldC1pdGVtXCIga2V5PXtpdGVtLnRpdGxlfT5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjaGVhdC1zaGVldC1pdGVtX190aXRsZVwiPntpdGVtLnRpdGxlfTwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNoZWF0LXNoZWV0LWl0ZW1fX2xhYmVsXCI+e2l0ZW0ubGFiZWx9PC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICApKX1cbiAgPC9kaXY+XG4pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/influxdb/components/editor/query/influxql/InfluxCheatSheet.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/influxdb/components/editor/query/influxql/InfluxStartPage.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InfluxStartPage: () => (/* binding */ InfluxStartPage)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _InfluxCheatSheet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/components/editor/query/influxql/InfluxCheatSheet.tsx\");\n\n\n\nfunction InfluxStartPage() {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_InfluxCheatSheet__WEBPACK_IMPORTED_MODULE_1__.InfluxCheatSheet, null);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9pbmZsdXhkYi9jb21wb25lbnRzL2VkaXRvci9xdWVyeS9pbmZsdXhxbC9JbmZsdXhTdGFydFBhZ2UudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQWtCO0FBRWU7QUFFMUIsU0FBUyxrQkFBa0I7QUFDaEMsU0FBTywyRUFBQywrREFBZ0IsTUFBQztBQUMzQiIsInNvdXJjZXMiOlsid2VicGFjazovL2dyYWZhbmEvLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9pbmZsdXhkYi9jb21wb25lbnRzL2VkaXRvci9xdWVyeS9pbmZsdXhxbC9JbmZsdXhTdGFydFBhZ2UudHN4P2NlYzAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHsgSW5mbHV4Q2hlYXRTaGVldCB9IGZyb20gJy4vSW5mbHV4Q2hlYXRTaGVldCc7XG5cbmV4cG9ydCBmdW5jdGlvbiBJbmZsdXhTdGFydFBhZ2UoKSB7XG4gIHJldHVybiA8SW5mbHV4Q2hlYXRTaGVldCAvPjtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/influxdb/components/editor/query/influxql/InfluxStartPage.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/influxdb/components/editor/query/influxql/QueryEditorModeSwitcher.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryEditorModeSwitcher: () => (/* binding */ QueryEditorModeSwitcher)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Button/Button.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/ConfirmModal/ConfirmModal.tsx\");\n\n\n\nconst QueryEditorModeSwitcher = ({ isRaw, onChange }) => {\n  const [isModalOpen, setModalOpen] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    setModalOpen(false);\n  }, [isRaw]);\n  if (isRaw) {\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n      _grafana_ui__WEBPACK_IMPORTED_MODULE_1__.Button,\n      {\n        \"aria-label\": \"Switch to visual editor\",\n        icon: \"pen\",\n        variant: \"secondary\",\n        type: \"button\",\n        onClick: () => {\n          setModalOpen(true);\n        }\n      }\n    ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n      _grafana_ui__WEBPACK_IMPORTED_MODULE_2__.ConfirmModal,\n      {\n        isOpen: isModalOpen,\n        title: \"Switch to visual editor mode\",\n        body: \"Are you sure to switch to visual editor mode? You will lose the changes done in raw query mode.\",\n        confirmText: \"Yes, switch to editor mode\",\n        dismissText: \"No, stay in raw query mode\",\n        onConfirm: () => {\n          onChange(false);\n        },\n        onDismiss: () => {\n          setModalOpen(false);\n        }\n      }\n    ));\n  } else {\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n      _grafana_ui__WEBPACK_IMPORTED_MODULE_1__.Button,\n      {\n        \"aria-label\": \"Switch to text editor\",\n        icon: \"pen\",\n        variant: \"secondary\",\n        type: \"button\",\n        onClick: () => {\n          onChange(true);\n        }\n      }\n    );\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9pbmZsdXhkYi9jb21wb25lbnRzL2VkaXRvci9xdWVyeS9pbmZsdXhxbC9RdWVyeUVkaXRvck1vZGVTd2l0Y2hlci50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQTJDO0FBRU47QUFPOUIsTUFBTSwwQkFBMEIsQ0FBQyxFQUFFLE9BQU8sU0FBUyxNQUEwQjtBQUNsRixRQUFNLENBQUMsYUFBYSxZQUFZLElBQUksK0NBQVEsQ0FBQyxLQUFLO0FBRWxELGtEQUFTLENBQUMsTUFBTTtBQUVkLGlCQUFhLEtBQUs7QUFBQSxFQUNwQixHQUFHLENBQUMsS0FBSyxDQUFDO0FBRVYsTUFBSSxPQUFPO0FBQ1QsV0FDRSwwSUFDRTtBQUFBLE1BQUMsK0NBQU07QUFBTjtBQUFBLFFBQ0MsY0FBVztBQUFBLFFBQ1gsTUFBSztBQUFBLFFBQ0wsU0FBUTtBQUFBLFFBQ1IsTUFBSztBQUFBLFFBQ0wsU0FBUyxNQUFNO0FBRWIsdUJBQWEsSUFBSTtBQUFBLFFBQ25CO0FBQUE7QUFBQSxJQUNELEdBQ0Q7QUFBQSxNQUFDLHFEQUFZO0FBQVo7QUFBQSxRQUNDLFFBQVE7QUFBQSxRQUNSLE9BQU07QUFBQSxRQUNOLE1BQUs7QUFBQSxRQUNMLGFBQVk7QUFBQSxRQUNaLGFBQVk7QUFBQSxRQUNaLFdBQVcsTUFBTTtBQUNmLG1CQUFTLEtBQUs7QUFBQSxRQUNoQjtBQUFBLFFBQ0EsV0FBVyxNQUFNO0FBQ2YsdUJBQWEsS0FBSztBQUFBLFFBQ3BCO0FBQUE7QUFBQSxJQUNGLENBQ0Y7QUFBQSxFQUVKLE9BQU87QUFDTCxXQUNFO0FBQUEsTUFBQywrQ0FBTTtBQUFOO0FBQUEsUUFDQyxjQUFXO0FBQUEsUUFDWCxNQUFLO0FBQUEsUUFDTCxTQUFRO0FBQUEsUUFDUixNQUFLO0FBQUEsUUFDTCxTQUFTLE1BQU07QUFDYixtQkFBUyxJQUFJO0FBQUEsUUFDZjtBQUFBO0FBQUEsSUFDRDtBQUFBLEVBRUw7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2dyYWZhbmEvLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9pbmZsdXhkYi9jb21wb25lbnRzL2VkaXRvci9xdWVyeS9pbmZsdXhxbC9RdWVyeUVkaXRvck1vZGVTd2l0Y2hlci50c3g/ZDA4YiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHsgQnV0dG9uLCBDb25maXJtTW9kYWwgfSBmcm9tICdAZ3JhZmFuYS91aSc7XG5cbnR5cGUgUHJvcHMgPSB7XG4gIGlzUmF3OiBib29sZWFuO1xuICBvbkNoYW5nZTogKG5ld0lzUmF3OiBib29sZWFuKSA9PiB2b2lkO1xufTtcblxuZXhwb3J0IGNvbnN0IFF1ZXJ5RWRpdG9yTW9kZVN3aXRjaGVyID0gKHsgaXNSYXcsIG9uQ2hhbmdlIH06IFByb3BzKTogSlNYLkVsZW1lbnQgPT4ge1xuICBjb25zdCBbaXNNb2RhbE9wZW4sIHNldE1vZGFsT3Blbl0gPSB1c2VTdGF0ZShmYWxzZSk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAvLyBpZiB0aGUgaXNSYXcgY2hhbmdlcywgd2UgaGlkZSB0aGUgbW9kYWxcbiAgICBzZXRNb2RhbE9wZW4oZmFsc2UpO1xuICB9LCBbaXNSYXddKTtcblxuICBpZiAoaXNSYXcpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPD5cbiAgICAgICAgPEJ1dHRvblxuICAgICAgICAgIGFyaWEtbGFiZWw9XCJTd2l0Y2ggdG8gdmlzdWFsIGVkaXRvclwiXG4gICAgICAgICAgaWNvbj1cInBlblwiXG4gICAgICAgICAgdmFyaWFudD1cInNlY29uZGFyeVwiXG4gICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgb25DbGljaz17KCkgPT4ge1xuICAgICAgICAgICAgLy8gd2Ugc2hvdyB0aGUgYXJlLXlvdS1zdXJlIG1vZGFsXG4gICAgICAgICAgICBzZXRNb2RhbE9wZW4odHJ1ZSk7XG4gICAgICAgICAgfX1cbiAgICAgICAgPjwvQnV0dG9uPlxuICAgICAgICA8Q29uZmlybU1vZGFsXG4gICAgICAgICAgaXNPcGVuPXtpc01vZGFsT3Blbn1cbiAgICAgICAgICB0aXRsZT1cIlN3aXRjaCB0byB2aXN1YWwgZWRpdG9yIG1vZGVcIlxuICAgICAgICAgIGJvZHk9XCJBcmUgeW91IHN1cmUgdG8gc3dpdGNoIHRvIHZpc3VhbCBlZGl0b3IgbW9kZT8gWW91IHdpbGwgbG9zZSB0aGUgY2hhbmdlcyBkb25lIGluIHJhdyBxdWVyeSBtb2RlLlwiXG4gICAgICAgICAgY29uZmlybVRleHQ9XCJZZXMsIHN3aXRjaCB0byBlZGl0b3IgbW9kZVwiXG4gICAgICAgICAgZGlzbWlzc1RleHQ9XCJObywgc3RheSBpbiByYXcgcXVlcnkgbW9kZVwiXG4gICAgICAgICAgb25Db25maXJtPXsoKSA9PiB7XG4gICAgICAgICAgICBvbkNoYW5nZShmYWxzZSk7XG4gICAgICAgICAgfX1cbiAgICAgICAgICBvbkRpc21pc3M9eygpID0+IHtcbiAgICAgICAgICAgIHNldE1vZGFsT3BlbihmYWxzZSk7XG4gICAgICAgICAgfX1cbiAgICAgICAgLz5cbiAgICAgIDwvPlxuICAgICk7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxCdXR0b25cbiAgICAgICAgYXJpYS1sYWJlbD1cIlN3aXRjaCB0byB0ZXh0IGVkaXRvclwiXG4gICAgICAgIGljb249XCJwZW5cIlxuICAgICAgICB2YXJpYW50PVwic2Vjb25kYXJ5XCJcbiAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICBvbkNoYW5nZSh0cnVlKTtcbiAgICAgICAgfX1cbiAgICAgID48L0J1dHRvbj5cbiAgICApO1xuICB9XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/influxdb/components/editor/query/influxql/QueryEditorModeSwitcher.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/influxdb/components/editor/query/influxql/code/RawInfluxQLEditor.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RawInfluxQLEditor: () => (/* binding */ RawInfluxQLEditor)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/TextArea/TextArea.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Layout/Layout.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/FormLabel/FormLabel.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Select/Select.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Input/Input.tsx\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/components/editor/constants.ts\");\n/* harmony import */ var _hooks_useShadowedState__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/components/editor/query/influxql/hooks/useShadowedState.ts\");\n\n\n\n\n\nconst RawInfluxQLEditor = ({ query, onChange, onRunQuery }) => {\n  const [currentQuery, setCurrentQuery] = (0,_hooks_useShadowedState__WEBPACK_IMPORTED_MODULE_2__.useShadowedState)(query.query);\n  const [currentAlias, setCurrentAlias] = (0,_hooks_useShadowedState__WEBPACK_IMPORTED_MODULE_2__.useShadowedState)(query.alias);\n  const aliasElementId = (0,react__WEBPACK_IMPORTED_MODULE_0__.useId)();\n  const selectElementId = (0,react__WEBPACK_IMPORTED_MODULE_0__.useId)();\n  const resultFormat = query.resultFormat ?? _constants__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_RESULT_FORMAT;\n  const applyDelayedChangesAndRunQuery = () => {\n    onChange({\n      ...query,\n      query: currentQuery,\n      alias: currentAlias,\n      resultFormat\n    });\n    onRunQuery();\n  };\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n    _grafana_ui__WEBPACK_IMPORTED_MODULE_3__.TextArea,\n    {\n      \"aria-label\": \"query\",\n      rows: 3,\n      spellCheck: false,\n      placeholder: \"InfluxDB Query\",\n      onBlur: applyDelayedChangesAndRunQuery,\n      onChange: (e) => {\n        setCurrentQuery(e.currentTarget.value);\n      },\n      value: currentQuery ?? \"\"\n    }\n  ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_4__.HorizontalGroup, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_5__.InlineFormLabel, { htmlFor: selectElementId }, \"Format as\"), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n    _grafana_ui__WEBPACK_IMPORTED_MODULE_6__.Select,\n    {\n      inputId: selectElementId,\n      onChange: (v) => {\n        onChange({ ...query, resultFormat: v.value });\n        onRunQuery();\n      },\n      value: resultFormat,\n      options: _constants__WEBPACK_IMPORTED_MODULE_1__.RESULT_FORMATS\n    }\n  ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_5__.InlineFormLabel, { htmlFor: aliasElementId }, \"Alias by\"), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n    _grafana_ui__WEBPACK_IMPORTED_MODULE_7__.Input,\n    {\n      id: aliasElementId,\n      type: \"text\",\n      spellCheck: false,\n      placeholder: \"Naming pattern\",\n      onBlur: applyDelayedChangesAndRunQuery,\n      onChange: (e) => {\n        setCurrentAlias(e.currentTarget.value);\n      },\n      value: currentAlias ?? \"\"\n    }\n  )));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9pbmZsdXhkYi9jb21wb25lbnRzL2VkaXRvci9xdWVyeS9pbmZsdXhxbC9jb2RlL1Jhd0luZmx1eFFMRWRpdG9yLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUE2QjtBQUU2QztBQUdwQjtBQUNyQjtBQVcxQixNQUFNLG9CQUFvQixDQUFDLEVBQUUsT0FBTyxVQUFVLFdBQVcsTUFBMEI7QUFDeEYsUUFBTSxDQUFDLGNBQWMsZUFBZSxJQUFJLHlFQUFnQixDQUFDLE1BQU0sS0FBSztBQUNwRSxRQUFNLENBQUMsY0FBYyxlQUFlLElBQUkseUVBQWdCLENBQUMsTUFBTSxLQUFLO0FBQ3BFLFFBQU0saUJBQWlCLDRDQUFLLENBQUM7QUFDN0IsUUFBTSxrQkFBa0IsNENBQUssQ0FBQztBQUU5QixRQUFNLGVBQWUsTUFBTSxnQkFBZ0IsNkRBQXFCO0FBRWhFLFFBQU0saUNBQWlDLE1BQU07QUFDM0MsYUFBUztBQUFBLE1BQ1AsR0FBRztBQUFBLE1BQ0gsT0FBTztBQUFBLE1BQ1AsT0FBTztBQUFBLE1BQ1A7QUFBQSxJQUNGLENBQUM7QUFDRCxlQUFXO0FBQUEsRUFDYjtBQUVBLFNBQ0UsMkVBQUMsYUFDQztBQUFBLElBQUMsaURBQVE7QUFBUjtBQUFBLE1BQ0MsY0FBVztBQUFBLE1BQ1gsTUFBTTtBQUFBLE1BQ04sWUFBWTtBQUFBLE1BQ1osYUFBWTtBQUFBLE1BQ1osUUFBUTtBQUFBLE1BQ1IsVUFBVSxDQUFDLE1BQU07QUFDZix3QkFBZ0IsRUFBRSxjQUFjLEtBQUs7QUFBQSxNQUN2QztBQUFBLE1BQ0EsT0FBTyxnQkFBZ0I7QUFBQTtBQUFBLEVBQ3pCLEdBQ0EsMkVBQUMsd0RBQWUsUUFDZCwyRUFBQyx3REFBZSxJQUFDLFNBQVMsbUJBQWlCLFdBQVMsR0FDcEQ7QUFBQSxJQUFDLCtDQUFNO0FBQU47QUFBQSxNQUNDLFNBQVM7QUFBQSxNQUNULFVBQVUsQ0FBQyxNQUFNO0FBQ2YsaUJBQVMsRUFBRSxHQUFHLE9BQU8sY0FBYyxFQUFFLE1BQU0sQ0FBQztBQUM1QyxtQkFBVztBQUFBLE1BQ2I7QUFBQSxNQUNBLE9BQU87QUFBQSxNQUNQLFNBQVMsc0RBQWM7QUFBZDtBQUFBLEVBQ1gsR0FDQSwyRUFBQyx3REFBZSxJQUFDLFNBQVMsa0JBQWdCLFVBQVEsR0FDbEQ7QUFBQSxJQUFDLDhDQUFLO0FBQUw7QUFBQSxNQUNDLElBQUk7QUFBQSxNQUNKLE1BQUs7QUFBQSxNQUNMLFlBQVk7QUFBQSxNQUNaLGFBQVk7QUFBQSxNQUNaLFFBQVE7QUFBQSxNQUNSLFVBQVUsQ0FBQyxNQUFNO0FBQ2Ysd0JBQWdCLEVBQUUsY0FBYyxLQUFLO0FBQUEsTUFDdkM7QUFBQSxNQUNBLE9BQU8sZ0JBQWdCO0FBQUE7QUFBQSxFQUN6QixDQUNGLENBQ0Y7QUFFSiIsInNvdXJjZXMiOlsid2VicGFjazovL2dyYWZhbmEvLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9pbmZsdXhkYi9jb21wb25lbnRzL2VkaXRvci9xdWVyeS9pbmZsdXhxbC9jb2RlL1Jhd0luZmx1eFFMRWRpdG9yLnRzeD8xNjlmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VJZCB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHsgSG9yaXpvbnRhbEdyb3VwLCBJbmxpbmVGb3JtTGFiZWwsIElucHV0LCBTZWxlY3QsIFRleHRBcmVhIH0gZnJvbSAnQGdyYWZhbmEvdWknO1xuXG5pbXBvcnQgeyBJbmZsdXhRdWVyeSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzJztcbmltcG9ydCB7IERFRkFVTFRfUkVTVUxUX0ZPUk1BVCwgUkVTVUxUX0ZPUk1BVFMgfSBmcm9tICcuLi8uLi8uLi9jb25zdGFudHMnO1xuaW1wb3J0IHsgdXNlU2hhZG93ZWRTdGF0ZSB9IGZyb20gJy4uL2hvb2tzL3VzZVNoYWRvd2VkU3RhdGUnO1xuXG50eXBlIFByb3BzID0ge1xuICBxdWVyeTogSW5mbHV4UXVlcnk7XG4gIG9uQ2hhbmdlOiAocXVlcnk6IEluZmx1eFF1ZXJ5KSA9PiB2b2lkO1xuICBvblJ1blF1ZXJ5OiAoKSA9PiB2b2lkO1xufTtcblxuLy8gd2UgaGFuZGxlIDMgZmllbGRzOiBcInF1ZXJ5XCIsIFwiYWxpYXNcIiwgXCJyZXN1bHRGb3JtYXRcIlxuLy8gXCJyZXN1bHRGb3JtYXRcIiBjaGFuZ2VzIGFyZSBhcHBsaWVkIGltbWVkaWF0ZWx5XG4vLyBcInF1ZXJ5XCIgYW5kIFwiYWxpYXNcIiBjaGFuZ2VzIG9ubHkgaGFwcGVuIG9uIG9uYmx1clxuZXhwb3J0IGNvbnN0IFJhd0luZmx1eFFMRWRpdG9yID0gKHsgcXVlcnksIG9uQ2hhbmdlLCBvblJ1blF1ZXJ5IH06IFByb3BzKTogSlNYLkVsZW1lbnQgPT4ge1xuICBjb25zdCBbY3VycmVudFF1ZXJ5LCBzZXRDdXJyZW50UXVlcnldID0gdXNlU2hhZG93ZWRTdGF0ZShxdWVyeS5xdWVyeSk7XG4gIGNvbnN0IFtjdXJyZW50QWxpYXMsIHNldEN1cnJlbnRBbGlhc10gPSB1c2VTaGFkb3dlZFN0YXRlKHF1ZXJ5LmFsaWFzKTtcbiAgY29uc3QgYWxpYXNFbGVtZW50SWQgPSB1c2VJZCgpO1xuICBjb25zdCBzZWxlY3RFbGVtZW50SWQgPSB1c2VJZCgpO1xuXG4gIGNvbnN0IHJlc3VsdEZvcm1hdCA9IHF1ZXJ5LnJlc3VsdEZvcm1hdCA/PyBERUZBVUxUX1JFU1VMVF9GT1JNQVQ7XG5cbiAgY29uc3QgYXBwbHlEZWxheWVkQ2hhbmdlc0FuZFJ1blF1ZXJ5ID0gKCkgPT4ge1xuICAgIG9uQ2hhbmdlKHtcbiAgICAgIC4uLnF1ZXJ5LFxuICAgICAgcXVlcnk6IGN1cnJlbnRRdWVyeSxcbiAgICAgIGFsaWFzOiBjdXJyZW50QWxpYXMsXG4gICAgICByZXN1bHRGb3JtYXQsXG4gICAgfSk7XG4gICAgb25SdW5RdWVyeSgpO1xuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPGRpdj5cbiAgICAgIDxUZXh0QXJlYVxuICAgICAgICBhcmlhLWxhYmVsPVwicXVlcnlcIlxuICAgICAgICByb3dzPXszfVxuICAgICAgICBzcGVsbENoZWNrPXtmYWxzZX1cbiAgICAgICAgcGxhY2Vob2xkZXI9XCJJbmZsdXhEQiBRdWVyeVwiXG4gICAgICAgIG9uQmx1cj17YXBwbHlEZWxheWVkQ2hhbmdlc0FuZFJ1blF1ZXJ5fVxuICAgICAgICBvbkNoYW5nZT17KGUpID0+IHtcbiAgICAgICAgICBzZXRDdXJyZW50UXVlcnkoZS5jdXJyZW50VGFyZ2V0LnZhbHVlKTtcbiAgICAgICAgfX1cbiAgICAgICAgdmFsdWU9e2N1cnJlbnRRdWVyeSA/PyAnJ31cbiAgICAgIC8+XG4gICAgICA8SG9yaXpvbnRhbEdyb3VwPlxuICAgICAgICA8SW5saW5lRm9ybUxhYmVsIGh0bWxGb3I9e3NlbGVjdEVsZW1lbnRJZH0+Rm9ybWF0IGFzPC9JbmxpbmVGb3JtTGFiZWw+XG4gICAgICAgIDxTZWxlY3RcbiAgICAgICAgICBpbnB1dElkPXtzZWxlY3RFbGVtZW50SWR9XG4gICAgICAgICAgb25DaGFuZ2U9eyh2KSA9PiB7XG4gICAgICAgICAgICBvbkNoYW5nZSh7IC4uLnF1ZXJ5LCByZXN1bHRGb3JtYXQ6IHYudmFsdWUgfSk7XG4gICAgICAgICAgICBvblJ1blF1ZXJ5KCk7XG4gICAgICAgICAgfX1cbiAgICAgICAgICB2YWx1ZT17cmVzdWx0Rm9ybWF0fVxuICAgICAgICAgIG9wdGlvbnM9e1JFU1VMVF9GT1JNQVRTfVxuICAgICAgICAvPlxuICAgICAgICA8SW5saW5lRm9ybUxhYmVsIGh0bWxGb3I9e2FsaWFzRWxlbWVudElkfT5BbGlhcyBieTwvSW5saW5lRm9ybUxhYmVsPlxuICAgICAgICA8SW5wdXRcbiAgICAgICAgICBpZD17YWxpYXNFbGVtZW50SWR9XG4gICAgICAgICAgdHlwZT1cInRleHRcIlxuICAgICAgICAgIHNwZWxsQ2hlY2s9e2ZhbHNlfVxuICAgICAgICAgIHBsYWNlaG9sZGVyPVwiTmFtaW5nIHBhdHRlcm5cIlxuICAgICAgICAgIG9uQmx1cj17YXBwbHlEZWxheWVkQ2hhbmdlc0FuZFJ1blF1ZXJ5fVxuICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4ge1xuICAgICAgICAgICAgc2V0Q3VycmVudEFsaWFzKGUuY3VycmVudFRhcmdldC52YWx1ZSk7XG4gICAgICAgICAgfX1cbiAgICAgICAgICB2YWx1ZT17Y3VycmVudEFsaWFzID8/ICcnfVxuICAgICAgICAvPlxuICAgICAgPC9Ib3Jpem9udGFsR3JvdXA+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/influxdb/components/editor/query/influxql/code/RawInfluxQLEditor.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/influxdb/components/editor/query/influxql/hooks/useShadowedState.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useShadowedState: () => (/* binding */ useShadowedState)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_use__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/__virtual__/react-use-virtual-dd7926f458/0/cache/react-use-npm-17.4.0-0ef4521544-0889da919b.zip/node_modules/react-use/esm/usePrevious.js\");\n\n\n\nfunction useShadowedState(outsideVal) {\n  const [currentVal, setCurrentVal] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(outsideVal);\n  const prevOutsideVal = (0,react_use__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(outsideVal);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    const isOutsideValChanged = prevOutsideVal !== outsideVal;\n    if (isOutsideValChanged && currentVal !== outsideVal) {\n      setCurrentVal(outsideVal);\n    }\n  }, [outsideVal, currentVal, prevOutsideVal]);\n  return [currentVal, setCurrentVal];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9pbmZsdXhkYi9jb21wb25lbnRzL2VkaXRvci9xdWVyeS9pbmZsdXhxbC9ob29rcy91c2VTaGFkb3dlZFN0YXRlLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQW9DO0FBQ1I7QUFFckIsU0FBUyxpQkFBb0IsWUFBeUM7QUFDM0UsUUFBTSxDQUFDLFlBQVksYUFBYSxJQUFJLCtDQUFRLENBQUMsVUFBVTtBQUN2RCxRQUFNLGlCQUFpQixxREFBVyxDQUFDLFVBQVU7QUFFN0Msa0RBQVMsQ0FBQyxNQUFNO0FBQ2QsVUFBTSxzQkFBc0IsbUJBQW1CO0FBRy9DLFFBQUksdUJBQXVCLGVBQWUsWUFBWTtBQUNwRCxvQkFBYyxVQUFVO0FBQUEsSUFDMUI7QUFBQSxFQUNGLEdBQUcsQ0FBQyxZQUFZLFlBQVksY0FBYyxDQUFDO0FBRTNDLFNBQU8sQ0FBQyxZQUFZLGFBQWE7QUFDbkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ncmFmYW5hLy4vcHVibGljL2FwcC9wbHVnaW5zL2RhdGFzb3VyY2UvaW5mbHV4ZGIvY29tcG9uZW50cy9lZGl0b3IvcXVlcnkvaW5mbHV4cWwvaG9va3MvdXNlU2hhZG93ZWRTdGF0ZS50cz9iMGYxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB1c2VQcmV2aW91cyB9IGZyb20gJ3JlYWN0LXVzZSc7XG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VTaGFkb3dlZFN0YXRlPFQ+KG91dHNpZGVWYWw6IFQpOiBbVCwgKG5ld1ZhbDogVCkgPT4gdm9pZF0ge1xuICBjb25zdCBbY3VycmVudFZhbCwgc2V0Q3VycmVudFZhbF0gPSB1c2VTdGF0ZShvdXRzaWRlVmFsKTtcbiAgY29uc3QgcHJldk91dHNpZGVWYWwgPSB1c2VQcmV2aW91cyhvdXRzaWRlVmFsKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IGlzT3V0c2lkZVZhbENoYW5nZWQgPSBwcmV2T3V0c2lkZVZhbCAhPT0gb3V0c2lkZVZhbDtcbiAgICAvLyBpZiB0aGUgdmFsdWUgY2hhbmdlcyBmcm9tIHRoZSBvdXRzaWRlLCB3ZSBhY2NlcHQgaXQgaW50byB0aGUgc3RhdGVcbiAgICAvLyAod2Ugb25seSBzZXQgaXQgaWYgaXQgaXMgZGlmZmVyZW50IGZyb20gdGhlIGN1cnJlbnQgdmFsdWUpXG4gICAgaWYgKGlzT3V0c2lkZVZhbENoYW5nZWQgJiYgY3VycmVudFZhbCAhPT0gb3V0c2lkZVZhbCkge1xuICAgICAgc2V0Q3VycmVudFZhbChvdXRzaWRlVmFsKTtcbiAgICB9XG4gIH0sIFtvdXRzaWRlVmFsLCBjdXJyZW50VmFsLCBwcmV2T3V0c2lkZVZhbF0pO1xuXG4gIHJldHVybiBbY3VycmVudFZhbCwgc2V0Q3VycmVudFZhbF07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/influxdb/components/editor/query/influxql/hooks/useShadowedState.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/influxdb/components/editor/query/influxql/utils/filterTags.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   filterTags: () => (/* binding */ filterTags)\n/* harmony export */ });\n\nfunction filterTags(parts, allTagKeys) {\n  return parts.filter((t) => t.key.endsWith(\"::tag\") || allTagKeys.has(t.key + \"::tag\"));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9pbmZsdXhkYi9jb21wb25lbnRzL2VkaXRvci9xdWVyeS9pbmZsdXhxbC91dGlscy9maWx0ZXJUYWdzLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBSU8sU0FBUyxXQUFXLE9BQXlCLFlBQTJDO0FBQzdGLFNBQU8sTUFBTSxPQUFPLENBQUMsTUFBTSxFQUFFLElBQUksU0FBUyxPQUFPLEtBQUssV0FBVyxJQUFJLEVBQUUsTUFBTSxPQUFPLENBQUM7QUFDdkYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ncmFmYW5hLy4vcHVibGljL2FwcC9wbHVnaW5zL2RhdGFzb3VyY2UvaW5mbHV4ZGIvY29tcG9uZW50cy9lZGl0b3IvcXVlcnkvaW5mbHV4cWwvdXRpbHMvZmlsdGVyVGFncy50cz80YTE0Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGl0IGlzIHBvc3NpYmxlIHRvIGFkZCBmaWVsZHMgaW50byB0aGUgYEluZmx1eFF1ZXJ5VGFnYCBzdHJ1Y3R1cmVzLCBhbmQgdGhleSBkbyB3b3JrLFxuLy8gYnV0IGluIHNvbWUgY2FzZXMsIHdoZW4gd2UgZG8gbWV0YWRhdGEgcXVlcmllcywgd2UgaGF2ZSB0byByZW1vdmUgdGhlbSBmcm9tIHRoZSBxdWVyaWVzLlxuaW1wb3J0IHsgSW5mbHV4UXVlcnlUYWcgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBmaWx0ZXJUYWdzKHBhcnRzOiBJbmZsdXhRdWVyeVRhZ1tdLCBhbGxUYWdLZXlzOiBTZXQ8c3RyaW5nPik6IEluZmx1eFF1ZXJ5VGFnW10ge1xuICByZXR1cm4gcGFydHMuZmlsdGVyKCh0KSA9PiB0LmtleS5lbmRzV2l0aCgnOjp0YWcnKSB8fCBhbGxUYWdLZXlzLmhhcyh0LmtleSArICc6OnRhZycpKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/influxdb/components/editor/query/influxql/utils/filterTags.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/influxdb/components/editor/query/influxql/utils/getTemplateVariableOptions.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getTemplateVariableOptions: () => (/* binding */ getTemplateVariableOptions)\n/* harmony export */ });\n/* harmony import */ var _grafana_runtime_src__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-runtime-virtual-68c57d4c0c/1/packages/grafana-runtime/src/services/templateSrv.ts\");\n\n\nfunction getTemplateVariableOptions(wrapper) {\n  return (0,_grafana_runtime_src__WEBPACK_IMPORTED_MODULE_0__.getTemplateSrv)().getVariables().map(wrapper);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9pbmZsdXhkYi9jb21wb25lbnRzL2VkaXRvci9xdWVyeS9pbmZsdXhxbC91dGlscy9nZXRUZW1wbGF0ZVZhcmlhYmxlT3B0aW9ucy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFDK0I7QUFFeEIsU0FBUywyQkFBMkIsU0FBNEM7QUFDckYsU0FDRSxvRUFBYyxDQUFDLEVBQ1osYUFBYSxFQUdiLElBQUksT0FBTztBQUVsQiIsInNvdXJjZXMiOlsid2VicGFjazovL2dyYWZhbmEvLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9pbmZsdXhkYi9jb21wb25lbnRzL2VkaXRvci9xdWVyeS9pbmZsdXhxbC91dGlscy9nZXRUZW1wbGF0ZVZhcmlhYmxlT3B0aW9ucy50cz8zYjczIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFR5cGVkVmFyaWFibGVNb2RlbCB9IGZyb20gJ0BncmFmYW5hL2RhdGEvc3JjJztcbmltcG9ydCB7IGdldFRlbXBsYXRlU3J2IH0gZnJvbSAnQGdyYWZhbmEvcnVudGltZS9zcmMnO1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0VGVtcGxhdGVWYXJpYWJsZU9wdGlvbnMod3JhcHBlcjogKHY6IFR5cGVkVmFyaWFibGVNb2RlbCkgPT4gc3RyaW5nKSB7XG4gIHJldHVybiAoXG4gICAgZ2V0VGVtcGxhdGVTcnYoKVxuICAgICAgLmdldFZhcmlhYmxlcygpXG4gICAgICAvLyB3ZSBtYWtlIHRoZW0gcmVnZXgtcGFyYW1zLCBpJ20gbm90IDEwMCUgc3VyZSB3aHkuXG4gICAgICAvLyBwcm9iYWJseSBiZWNhdXNlIHRoaXMgd2F5IG11bHRpLXZhbHVlIHZhcmlhYmxlcyB3b3JrIG9rIHRvby5cbiAgICAgIC5tYXAod3JhcHBlcilcbiAgKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/influxdb/components/editor/query/influxql/utils/getTemplateVariableOptions.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/influxdb/components/editor/query/influxql/utils/partListUtils.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getNewGroupByPartOptions: () => (/* binding */ getNewGroupByPartOptions),\n/* harmony export */   getNewSelectPartOptions: () => (/* binding */ getNewSelectPartOptions),\n/* harmony export */   makePartList: () => (/* binding */ makePartList)\n/* harmony export */ });\n/* harmony import */ var _influx_query_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/influx_query_model.ts\");\n/* harmony import */ var _query_part__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/query_part.ts\");\n/* harmony import */ var _toSelectableValue__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/components/editor/query/influxql/utils/toSelectableValue.ts\");\n/* harmony import */ var _unwrap__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/components/editor/query/influxql/utils/unwrap.ts\");\n\n\n\n\n\nfunction getNewSelectPartOptions() {\n  const categories = _query_part__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getCategories();\n  const options = [];\n  const keys = Object.keys(categories);\n  keys.forEach((key) => {\n    const children = categories[key].map((x) => (0,_toSelectableValue__WEBPACK_IMPORTED_MODULE_2__.toSelectableValue)(x.type));\n    options.push({\n      label: key,\n      options: children\n    });\n  });\n  return options;\n}\nasync function getNewGroupByPartOptions(query, getTagKeys) {\n  const tagKeys = await getTagKeys();\n  const queryCopy = { ...query };\n  const model = new _influx_query_model__WEBPACK_IMPORTED_MODULE_0__[\"default\"](queryCopy);\n  const options = [];\n  if (!model.hasFill()) {\n    options.push((0,_toSelectableValue__WEBPACK_IMPORTED_MODULE_2__.toSelectableValue)(\"fill(null)\"));\n  }\n  if (!model.hasGroupByTime()) {\n    options.push((0,_toSelectableValue__WEBPACK_IMPORTED_MODULE_2__.toSelectableValue)(\"time($interval)\"));\n  }\n  tagKeys.forEach((key) => {\n    options.push((0,_toSelectableValue__WEBPACK_IMPORTED_MODULE_2__.toSelectableValue)(`tag(${key})`));\n  });\n  return options;\n}\nfunction getPartParams(part, dynamicParamOptions) {\n  const def = _query_part__WEBPACK_IMPORTED_MODULE_1__[\"default\"].create(part).def;\n  const paramValues = (part.params ?? []).map((p) => p.toString());\n  if (paramValues.length !== def.params.length) {\n    throw new Error(\"Invalid query-segment\");\n  }\n  return paramValues.map((val, index) => {\n    const defParam = def.params[index];\n    if (defParam.dynamicLookup) {\n      return {\n        value: val,\n        options: (0,_unwrap__WEBPACK_IMPORTED_MODULE_3__.unwrap)(dynamicParamOptions.get(`${def.type}_${index}`))\n      };\n    }\n    if (defParam.options != null) {\n      return {\n        value: val,\n        options: () => Promise.resolve(defParam.options)\n      };\n    }\n    return {\n      value: val,\n      options: null\n    };\n  });\n}\nfunction makePartList(queryParts, dynamicParamOptions) {\n  return queryParts.map((qp) => {\n    return {\n      name: qp.type,\n      params: getPartParams(qp, dynamicParamOptions)\n    };\n  });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9pbmZsdXhkYi9jb21wb25lbnRzL2VkaXRvci9xdWVyeS9pbmZsdXhxbC91dGlscy9wYXJ0TGlzdFV0aWxzLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUc2QjtBQUNQO0FBSVk7QUFDWDtBQUloQixTQUFTLDBCQUE2QztBQUMzRCxRQUFNLGFBQXlCLG1EQUFTLENBQUMsY0FBYztBQUN2RCxRQUFNLFVBQTZCLENBQUM7QUFFcEMsUUFBTSxPQUFPLE9BQU8sS0FBSyxVQUFVO0FBRW5DLE9BQUssUUFBUSxDQUFDLFFBQVE7QUFDcEIsVUFBTSxXQUE4QixXQUFXLEdBQUcsRUFBRSxJQUFJLENBQUMsTUFBTSxxRUFBaUIsQ0FBQyxFQUFFLElBQUksQ0FBQztBQUV4RixZQUFRLEtBQUs7QUFBQSxNQUNYLE9BQU87QUFBQSxNQUNQLFNBQVM7QUFBQSxJQUNYLENBQUM7QUFBQSxFQUNILENBQUM7QUFFRCxTQUFPO0FBQ1Q7QUFFTyxlQUFlLHlCQUNwQixPQUNBLFlBQ3lDO0FBQ3pDLFFBQU0sVUFBVSxNQUFNLFdBQVc7QUFDakMsUUFBTSxZQUFZLEVBQUUsR0FBRyxNQUFNO0FBQzdCLFFBQU0sUUFBUSxJQUFJLDJEQUFnQixDQUFDLFNBQVM7QUFDNUMsUUFBTSxVQUEwQyxDQUFDO0FBQ2pELE1BQUksQ0FBQyxNQUFNLFFBQVEsR0FBRztBQUNwQixZQUFRLEtBQUsscUVBQWlCLENBQUMsWUFBWSxDQUFDO0FBQUEsRUFDOUM7QUFDQSxNQUFJLENBQUMsTUFBTSxlQUFlLEdBQUc7QUFDM0IsWUFBUSxLQUFLLHFFQUFpQixDQUFDLGlCQUFpQixDQUFDO0FBQUEsRUFDbkQ7QUFDQSxVQUFRLFFBQVEsQ0FBQyxRQUFRO0FBQ3ZCLFlBQVEsS0FBSyxxRUFBaUIsQ0FBQyxPQUFPLE1BQU0sQ0FBQztBQUFBLEVBQy9DLENBQUM7QUFDRCxTQUFPO0FBQ1Q7QUFPQSxTQUFTLGNBQWMsTUFBdUIscUJBQXVFO0FBS25ILFFBQU0sTUFBTSxtREFBUyxDQUFDLE9BQU8sSUFBSSxFQUFFO0FBSW5DLFFBQU0sZUFBZSxLQUFLLFVBQVUsQ0FBQyxHQUFHLElBQUksQ0FBQyxNQUFNLEVBQUUsU0FBUyxDQUFDO0FBRS9ELE1BQUksWUFBWSxXQUFXLElBQUksT0FBTyxRQUFRO0FBQzVDLFVBQU0sSUFBSSxNQUFNLHVCQUF1QjtBQUFBLEVBQ3pDO0FBRUEsU0FBTyxZQUFZLElBQUksQ0FBQyxLQUFLLFVBQVU7QUFDckMsVUFBTSxXQUFXLElBQUksT0FBTyxLQUFLO0FBQ2pDLFFBQUksU0FBUyxlQUFlO0FBQzFCLGFBQU87QUFBQSxRQUNMLE9BQU87QUFBQSxRQUNQLFNBQVMsK0NBQU0sQ0FBQyxvQkFBb0IsSUFBSSxHQUFHLElBQUksUUFBUSxPQUFPLENBQUM7QUFBQSxNQUNqRTtBQUFBLElBQ0Y7QUFFQSxRQUFJLFNBQVMsV0FBVyxNQUFNO0FBQzVCLGFBQU87QUFBQSxRQUNMLE9BQU87QUFBQSxRQUNQLFNBQVMsTUFBTSxRQUFRLFFBQVEsU0FBUyxPQUFPO0FBQUEsTUFDakQ7QUFBQSxJQUNGO0FBRUEsV0FBTztBQUFBLE1BQ0wsT0FBTztBQUFBLE1BQ1AsU0FBUztBQUFBLElBQ1g7QUFBQSxFQUNGLENBQUM7QUFDSDtBQUVPLFNBQVMsYUFDZCxZQUNBLHFCQUNRO0FBQ1IsU0FBTyxXQUFXLElBQUksQ0FBQyxPQUFPO0FBQzVCLFdBQU87QUFBQSxNQUNMLE1BQU0sR0FBRztBQUFBLE1BQ1QsUUFBUSxjQUFjLElBQUksbUJBQW1CO0FBQUEsSUFDL0M7QUFBQSxFQUNGLENBQUM7QUFDSCIsInNvdXJjZXMiOlsid2VicGFjazovL2dyYWZhbmEvLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9pbmZsdXhkYi9jb21wb25lbnRzL2VkaXRvci9xdWVyeS9pbmZsdXhxbC91dGlscy9wYXJ0TGlzdFV0aWxzLnRzeD82MTgyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNlbGVjdGFibGVWYWx1ZSB9IGZyb20gJ0BncmFmYW5hL2RhdGEnO1xuaW1wb3J0IHsgUXVlcnlQYXJ0RGVmIH0gZnJvbSAnYXBwL2ZlYXR1cmVzL2FsZXJ0aW5nL3N0YXRlL3F1ZXJ5X3BhcnQnO1xuXG5pbXBvcnQgSW5mbHV4UXVlcnlNb2RlbCBmcm9tICcuLi8uLi8uLi8uLi8uLi9pbmZsdXhfcXVlcnlfbW9kZWwnO1xuaW1wb3J0IHF1ZXJ5UGFydCBmcm9tICcuLi8uLi8uLi8uLi8uLi9xdWVyeV9wYXJ0JztcbmltcG9ydCB7IEluZmx1eFF1ZXJ5LCBJbmZsdXhRdWVyeVBhcnQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90eXBlcyc7XG5pbXBvcnQgeyBQYXJ0UGFyYW1zIH0gZnJvbSAnLi4vdmlzdWFsL1BhcnRMaXN0U2VjdGlvbic7XG5cbmltcG9ydCB7IHRvU2VsZWN0YWJsZVZhbHVlIH0gZnJvbSAnLi90b1NlbGVjdGFibGVWYWx1ZSc7XG5pbXBvcnQgeyB1bndyYXAgfSBmcm9tICcuL3Vud3JhcCc7XG5cbnR5cGUgQ2F0ZWdvcmllcyA9IFJlY29yZDxzdHJpbmcsIFF1ZXJ5UGFydERlZltdPjtcblxuZXhwb3J0IGZ1bmN0aW9uIGdldE5ld1NlbGVjdFBhcnRPcHRpb25zKCk6IFNlbGVjdGFibGVWYWx1ZVtdIHtcbiAgY29uc3QgY2F0ZWdvcmllczogQ2F0ZWdvcmllcyA9IHF1ZXJ5UGFydC5nZXRDYXRlZ29yaWVzKCk7XG4gIGNvbnN0IG9wdGlvbnM6IFNlbGVjdGFibGVWYWx1ZVtdID0gW107XG5cbiAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKGNhdGVnb3JpZXMpO1xuXG4gIGtleXMuZm9yRWFjaCgoa2V5KSA9PiB7XG4gICAgY29uc3QgY2hpbGRyZW46IFNlbGVjdGFibGVWYWx1ZVtdID0gY2F0ZWdvcmllc1trZXldLm1hcCgoeCkgPT4gdG9TZWxlY3RhYmxlVmFsdWUoeC50eXBlKSk7XG5cbiAgICBvcHRpb25zLnB1c2goe1xuICAgICAgbGFiZWw6IGtleSxcbiAgICAgIG9wdGlvbnM6IGNoaWxkcmVuLFxuICAgIH0pO1xuICB9KTtcblxuICByZXR1cm4gb3B0aW9ucztcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldE5ld0dyb3VwQnlQYXJ0T3B0aW9ucyhcbiAgcXVlcnk6IEluZmx1eFF1ZXJ5LFxuICBnZXRUYWdLZXlzOiAoKSA9PiBQcm9taXNlPHN0cmluZ1tdPlxuKTogUHJvbWlzZTxBcnJheTxTZWxlY3RhYmxlVmFsdWU8c3RyaW5nPj4+IHtcbiAgY29uc3QgdGFnS2V5cyA9IGF3YWl0IGdldFRhZ0tleXMoKTtcbiAgY29uc3QgcXVlcnlDb3B5ID0geyAuLi5xdWVyeSB9OyAvLyB0aGUgcXVlcnktbW9kZWwgbXV0YXRlcyB0aGUgcXVlcnlcbiAgY29uc3QgbW9kZWwgPSBuZXcgSW5mbHV4UXVlcnlNb2RlbChxdWVyeUNvcHkpO1xuICBjb25zdCBvcHRpb25zOiBBcnJheTxTZWxlY3RhYmxlVmFsdWU8c3RyaW5nPj4gPSBbXTtcbiAgaWYgKCFtb2RlbC5oYXNGaWxsKCkpIHtcbiAgICBvcHRpb25zLnB1c2godG9TZWxlY3RhYmxlVmFsdWUoJ2ZpbGwobnVsbCknKSk7XG4gIH1cbiAgaWYgKCFtb2RlbC5oYXNHcm91cEJ5VGltZSgpKSB7XG4gICAgb3B0aW9ucy5wdXNoKHRvU2VsZWN0YWJsZVZhbHVlKCd0aW1lKCRpbnRlcnZhbCknKSk7XG4gIH1cbiAgdGFnS2V5cy5mb3JFYWNoKChrZXkpID0+IHtcbiAgICBvcHRpb25zLnB1c2godG9TZWxlY3RhYmxlVmFsdWUoYHRhZygke2tleX0pYCkpO1xuICB9KTtcbiAgcmV0dXJuIG9wdGlvbnM7XG59XG5cbnR5cGUgUGFydCA9IHtcbiAgbmFtZTogc3RyaW5nO1xuICBwYXJhbXM6IFBhcnRQYXJhbXM7XG59O1xuXG5mdW5jdGlvbiBnZXRQYXJ0UGFyYW1zKHBhcnQ6IEluZmx1eFF1ZXJ5UGFydCwgZHluYW1pY1BhcmFtT3B0aW9uczogTWFwPHN0cmluZywgKCkgPT4gUHJvbWlzZTxzdHJpbmdbXT4+KTogUGFydFBhcmFtcyB7XG4gIC8vIE5PVEU6IHRoZSB3YXkgdGhlIHN5c3RlbSBpcyBjb25zdHJ1Y3RlZCxcbiAgLy8gdGhlcmUgYWx3YXlzIGNhbiBvbmx5IGJlIG9uZSBwb3NzaWJsZSBkeW5hbWljLWxvb2t1cFxuICAvLyBmaWVsZC4gaW4gY2FzZSBvZiBzZWxlY3QgaXQgaXMgdGhlIGZpZWxkLFxuICAvLyBpbiBjYXNlIG9mIGdyb3VwLWJ5IGl0IGlzIHRoZSB0YWdcbiAgY29uc3QgZGVmID0gcXVlcnlQYXJ0LmNyZWF0ZShwYXJ0KS5kZWY7XG5cbiAgLy8gd2Ugc3dpdGNoIHRoZSBudW1iZXJzIHRvIHN0cmluZ3MsIGl0IHdpbGwgd29yayB0aGF0IHdheSB0b28sXG4gIC8vIGFuZCBpdCBtYWtlcyB0aGUgY29kZSBzaW1wbGVyXG4gIGNvbnN0IHBhcmFtVmFsdWVzID0gKHBhcnQucGFyYW1zID8/IFtdKS5tYXAoKHApID0+IHAudG9TdHJpbmcoKSk7XG5cbiAgaWYgKHBhcmFtVmFsdWVzLmxlbmd0aCAhPT0gZGVmLnBhcmFtcy5sZW5ndGgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgcXVlcnktc2VnbWVudCcpO1xuICB9XG5cbiAgcmV0dXJuIHBhcmFtVmFsdWVzLm1hcCgodmFsLCBpbmRleCkgPT4ge1xuICAgIGNvbnN0IGRlZlBhcmFtID0gZGVmLnBhcmFtc1tpbmRleF07XG4gICAgaWYgKGRlZlBhcmFtLmR5bmFtaWNMb29rdXApIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHZhbHVlOiB2YWwsXG4gICAgICAgIG9wdGlvbnM6IHVud3JhcChkeW5hbWljUGFyYW1PcHRpb25zLmdldChgJHtkZWYudHlwZX1fJHtpbmRleH1gKSksXG4gICAgICB9O1xuICAgIH1cblxuICAgIGlmIChkZWZQYXJhbS5vcHRpb25zICE9IG51bGwpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHZhbHVlOiB2YWwsXG4gICAgICAgIG9wdGlvbnM6ICgpID0+IFByb21pc2UucmVzb2x2ZShkZWZQYXJhbS5vcHRpb25zKSxcbiAgICAgIH07XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIHZhbHVlOiB2YWwsXG4gICAgICBvcHRpb25zOiBudWxsLFxuICAgIH07XG4gIH0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbWFrZVBhcnRMaXN0KFxuICBxdWVyeVBhcnRzOiBJbmZsdXhRdWVyeVBhcnRbXSxcbiAgZHluYW1pY1BhcmFtT3B0aW9uczogTWFwPHN0cmluZywgKCkgPT4gUHJvbWlzZTxzdHJpbmdbXT4+XG4pOiBQYXJ0W10ge1xuICByZXR1cm4gcXVlcnlQYXJ0cy5tYXAoKHFwKSA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5hbWU6IHFwLnR5cGUsXG4gICAgICBwYXJhbXM6IGdldFBhcnRQYXJhbXMocXAsIGR5bmFtaWNQYXJhbU9wdGlvbnMpLFxuICAgIH07XG4gIH0pO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/influxdb/components/editor/query/influxql/utils/partListUtils.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/influxdb/components/editor/query/influxql/utils/tagUtils.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   adjustOperatorIfNeeded: () => (/* binding */ adjustOperatorIfNeeded),\n/* harmony export */   getCondition: () => (/* binding */ getCondition),\n/* harmony export */   getOperator: () => (/* binding */ getOperator)\n/* harmony export */ });\n\nfunction isRegex(text) {\n  return /^\\/.*\\/$/.test(text);\n}\nfunction getOperator(tag) {\n  return tag.operator ?? (isRegex(tag.value) ? \"=~\" : \"=\");\n}\nfunction getCondition(tag, isFirst) {\n  return isFirst ? void 0 : tag.condition ?? \"AND\";\n}\nfunction adjustOperatorIfNeeded(currentOperator, newTagValue) {\n  const isCurrentOperatorRegex = currentOperator === \"=~\" || currentOperator === \"!~\";\n  const isNewTagValueRegex = isRegex(newTagValue);\n  if (isNewTagValueRegex) {\n    return isCurrentOperatorRegex ? currentOperator : \"=~\";\n  } else {\n    return isCurrentOperatorRegex ? \"=\" : currentOperator;\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9pbmZsdXhkYi9jb21wb25lbnRzL2VkaXRvci9xdWVyeS9pbmZsdXhxbC91dGlscy90YWdVdGlscy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBRUEsU0FBUyxRQUFRLE1BQXVCO0FBQ3RDLFNBQU8sV0FBVyxLQUFLLElBQUk7QUFDN0I7QUFJTyxTQUFTLFlBQVksS0FBNkI7QUFDdkQsU0FBTyxJQUFJLGFBQWEsUUFBUSxJQUFJLEtBQUssSUFBSSxPQUFPO0FBQ3REO0FBSU8sU0FBUyxhQUFhLEtBQXFCLFNBQXNDO0FBQ3RGLFNBQU8sVUFBVSxTQUFZLElBQUksYUFBYTtBQUNoRDtBQUVPLFNBQVMsdUJBQXVCLGlCQUF5QixhQUE2QjtBQUMzRixRQUFNLHlCQUF5QixvQkFBb0IsUUFBUSxvQkFBb0I7QUFDL0UsUUFBTSxxQkFBcUIsUUFBUSxXQUFXO0FBRTlDLE1BQUksb0JBQW9CO0FBQ3RCLFdBQU8seUJBQXlCLGtCQUFrQjtBQUFBLEVBQ3BELE9BQU87QUFDTCxXQUFPLHlCQUF5QixNQUFNO0FBQUEsRUFDeEM7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2dyYWZhbmEvLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9pbmZsdXhkYi9jb21wb25lbnRzL2VkaXRvci9xdWVyeS9pbmZsdXhxbC91dGlscy90YWdVdGlscy50cz84YmM1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluZmx1eFF1ZXJ5VGFnIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMnO1xuXG5mdW5jdGlvbiBpc1JlZ2V4KHRleHQ6IHN0cmluZyk6IGJvb2xlYW4ge1xuICByZXR1cm4gL15cXC8uKlxcLyQvLnRlc3QodGV4dCk7XG59XG5cbi8vIEZJWE1FOiBzeW5jIHRoZXNlIHRvIHRoZSBxdWVyeS1zdHJpbmctZ2VuZXJhdGlvbi1jb2RlXG4vLyBwcm9iYWJseSBpdCdzIGluIGluZmx1eF9xdWVyeV9tb2RlbC50c1xuZXhwb3J0IGZ1bmN0aW9uIGdldE9wZXJhdG9yKHRhZzogSW5mbHV4UXVlcnlUYWcpOiBzdHJpbmcge1xuICByZXR1cm4gdGFnLm9wZXJhdG9yID8/IChpc1JlZ2V4KHRhZy52YWx1ZSkgPyAnPX4nIDogJz0nKTtcbn1cblxuLy8gRklYTUU6IHN5bmMgdGhlc2UgdG8gdGhlIHF1ZXJ5LXN0cmluZy1nZW5lcmF0aW9uLWNvZGVcbi8vIHByb2JhYmx5IGl0J3MgaW4gaW5mbHV4X3F1ZXJ5X21vZGVsLnRzXG5leHBvcnQgZnVuY3Rpb24gZ2V0Q29uZGl0aW9uKHRhZzogSW5mbHV4UXVlcnlUYWcsIGlzRmlyc3Q6IGJvb2xlYW4pOiBzdHJpbmcgfCB1bmRlZmluZWQge1xuICByZXR1cm4gaXNGaXJzdCA/IHVuZGVmaW5lZCA6IHRhZy5jb25kaXRpb24gPz8gJ0FORCc7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhZGp1c3RPcGVyYXRvcklmTmVlZGVkKGN1cnJlbnRPcGVyYXRvcjogc3RyaW5nLCBuZXdUYWdWYWx1ZTogc3RyaW5nKTogc3RyaW5nIHtcbiAgY29uc3QgaXNDdXJyZW50T3BlcmF0b3JSZWdleCA9IGN1cnJlbnRPcGVyYXRvciA9PT0gJz1+JyB8fCBjdXJyZW50T3BlcmF0b3IgPT09ICchfic7XG4gIGNvbnN0IGlzTmV3VGFnVmFsdWVSZWdleCA9IGlzUmVnZXgobmV3VGFnVmFsdWUpO1xuXG4gIGlmIChpc05ld1RhZ1ZhbHVlUmVnZXgpIHtcbiAgICByZXR1cm4gaXNDdXJyZW50T3BlcmF0b3JSZWdleCA/IGN1cnJlbnRPcGVyYXRvciA6ICc9fic7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGlzQ3VycmVudE9wZXJhdG9yUmVnZXggPyAnPScgOiBjdXJyZW50T3BlcmF0b3I7XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/influxdb/components/editor/query/influxql/utils/tagUtils.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/influxdb/components/editor/query/influxql/utils/toSelectableValue.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toSelectableValue: () => (/* binding */ toSelectableValue)\n/* harmony export */ });\n\nfunction toSelectableValue(t) {\n  return { label: t, value: t };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9pbmZsdXhkYi9jb21wb25lbnRzL2VkaXRvci9xdWVyeS9pbmZsdXhxbC91dGlscy90b1NlbGVjdGFibGVWYWx1ZS50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUVPLFNBQVMsa0JBQW9DLEdBQTBCO0FBQzVFLFNBQU8sRUFBRSxPQUFPLEdBQUcsT0FBTyxFQUFFO0FBQzlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ3JhZmFuYS8uL3B1YmxpYy9hcHAvcGx1Z2lucy9kYXRhc291cmNlL2luZmx1eGRiL2NvbXBvbmVudHMvZWRpdG9yL3F1ZXJ5L2luZmx1eHFsL3V0aWxzL3RvU2VsZWN0YWJsZVZhbHVlLnRzPzkwM2MiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU2VsZWN0YWJsZVZhbHVlIH0gZnJvbSAnQGdyYWZhbmEvZGF0YSc7XG5cbmV4cG9ydCBmdW5jdGlvbiB0b1NlbGVjdGFibGVWYWx1ZTxUIGV4dGVuZHMgc3RyaW5nPih0OiBUKTogU2VsZWN0YWJsZVZhbHVlPFQ+IHtcbiAgcmV0dXJuIHsgbGFiZWw6IHQsIHZhbHVlOiB0IH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/influxdb/components/editor/query/influxql/utils/toSelectableValue.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/influxdb/components/editor/query/influxql/utils/unwrap.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   unwrap: () => (/* binding */ unwrap)\n/* harmony export */ });\n\nfunction unwrap(value) {\n  if (value == null) {\n    throw new Error(\"value must not be nullish\");\n  }\n  return value;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9pbmZsdXhkYi9jb21wb25lbnRzL2VkaXRvci9xdWVyeS9pbmZsdXhxbC91dGlscy91bndyYXAudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTyxTQUFTLE9BQVUsT0FBZ0M7QUFDeEQsTUFBSSxTQUFTLE1BQU07QUFDakIsVUFBTSxJQUFJLE1BQU0sMkJBQTJCO0FBQUEsRUFDN0M7QUFDQSxTQUFPO0FBQ1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ncmFmYW5hLy4vcHVibGljL2FwcC9wbHVnaW5zL2RhdGFzb3VyY2UvaW5mbHV4ZGIvY29tcG9uZW50cy9lZGl0b3IvcXVlcnkvaW5mbHV4cWwvdXRpbHMvdW53cmFwLnRzP2M3NDMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIHVud3JhcDxUPih2YWx1ZTogVCB8IG51bGwgfCB1bmRlZmluZWQpOiBUIHtcbiAgaWYgKHZhbHVlID09IG51bGwpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3ZhbHVlIG11c3Qgbm90IGJlIG51bGxpc2gnKTtcbiAgfVxuICByZXR1cm4gdmFsdWU7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/influxdb/components/editor/query/influxql/utils/unwrap.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/influxdb/components/editor/query/influxql/utils/withTemplateVariableOptions.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   withTemplateVariableOptions: () => (/* binding */ withTemplateVariableOptions)\n/* harmony export */ });\n/* harmony import */ var _getTemplateVariableOptions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/components/editor/query/influxql/utils/getTemplateVariableOptions.ts\");\n\n\nfunction withTemplateVariableOptions(optionsPromise, wrapper, filter) {\n  let templateVariableOptions = (0,_getTemplateVariableOptions__WEBPACK_IMPORTED_MODULE_0__.getTemplateVariableOptions)(wrapper);\n  if (filter) {\n    templateVariableOptions = templateVariableOptions.filter((tvo) => tvo.indexOf(filter) > -1);\n  }\n  return optionsPromise.then((options) => [...templateVariableOptions, ...options]);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9pbmZsdXhkYi9jb21wb25lbnRzL2VkaXRvci9xdWVyeS9pbmZsdXhxbC91dGlscy93aXRoVGVtcGxhdGVWYXJpYWJsZU9wdGlvbnMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBRzJDO0FBRXBDLFNBQVMsNEJBQ2QsZ0JBQ0EsU0FDQSxRQUNtQjtBQUNuQixNQUFJLDBCQUEwQix1RkFBMEIsQ0FBQyxPQUFPO0FBQ2hFLE1BQUksUUFBUTtBQUNWLDhCQUEwQix3QkFBd0IsT0FBTyxDQUFDLFFBQVEsSUFBSSxRQUFRLE1BQU0sSUFBSSxFQUFFO0FBQUEsRUFDNUY7QUFDQSxTQUFPLGVBQWUsS0FBSyxDQUFDLFlBQVksQ0FBQyxHQUFHLHlCQUF5QixHQUFHLE9BQU8sQ0FBQztBQUNsRiIsInNvdXJjZXMiOlsid2VicGFjazovL2dyYWZhbmEvLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9pbmZsdXhkYi9jb21wb25lbnRzL2VkaXRvci9xdWVyeS9pbmZsdXhxbC91dGlscy93aXRoVGVtcGxhdGVWYXJpYWJsZU9wdGlvbnMudHM/YThlOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBoZWxwZXIgZnVuY3Rpb24gdG8gbWFrZSBpdCBlYXN5IHRvIGNhbGwgdGhpcyBmcm9tIHRoZSB3aWRnZXQtcmVuZGVyLWNvZGVcbmltcG9ydCB7IFR5cGVkVmFyaWFibGVNb2RlbCB9IGZyb20gJ0BncmFmYW5hL2RhdGEvc3JjJztcblxuaW1wb3J0IHsgZ2V0VGVtcGxhdGVWYXJpYWJsZU9wdGlvbnMgfSBmcm9tICcuL2dldFRlbXBsYXRlVmFyaWFibGVPcHRpb25zJztcblxuZXhwb3J0IGZ1bmN0aW9uIHdpdGhUZW1wbGF0ZVZhcmlhYmxlT3B0aW9ucyhcbiAgb3B0aW9uc1Byb21pc2U6IFByb21pc2U8c3RyaW5nW10+LFxuICB3cmFwcGVyOiAodjogVHlwZWRWYXJpYWJsZU1vZGVsKSA9PiBzdHJpbmcsXG4gIGZpbHRlcj86IHN0cmluZ1xuKTogUHJvbWlzZTxzdHJpbmdbXT4ge1xuICBsZXQgdGVtcGxhdGVWYXJpYWJsZU9wdGlvbnMgPSBnZXRUZW1wbGF0ZVZhcmlhYmxlT3B0aW9ucyh3cmFwcGVyKTtcbiAgaWYgKGZpbHRlcikge1xuICAgIHRlbXBsYXRlVmFyaWFibGVPcHRpb25zID0gdGVtcGxhdGVWYXJpYWJsZU9wdGlvbnMuZmlsdGVyKCh0dm8pID0+IHR2by5pbmRleE9mKGZpbHRlcikgPiAtMSk7XG4gIH1cbiAgcmV0dXJuIG9wdGlvbnNQcm9taXNlLnRoZW4oKG9wdGlvbnMpID0+IFsuLi50ZW1wbGF0ZVZhcmlhYmxlT3B0aW9ucywgLi4ub3B0aW9uc10pO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/influxdb/components/editor/query/influxql/utils/withTemplateVariableOptions.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/influxdb/components/editor/query/influxql/utils/wrapper.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   wrapPure: () => (/* binding */ wrapPure),\n/* harmony export */   wrapRegex: () => (/* binding */ wrapRegex)\n/* harmony export */ });\n\nfunction wrapRegex(v) {\n  return `/^$${v.name}$/`;\n}\nfunction wrapPure(v) {\n  return `$${v.name}`;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9pbmZsdXhkYi9jb21wb25lbnRzL2VkaXRvci9xdWVyeS9pbmZsdXhxbC91dGlscy93cmFwcGVyLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUVPLFNBQVMsVUFBVSxHQUErQjtBQUN2RCxTQUFPLE1BQU0sRUFBRTtBQUNqQjtBQUVPLFNBQVMsU0FBUyxHQUErQjtBQUN0RCxTQUFPLElBQUksRUFBRTtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ3JhZmFuYS8uL3B1YmxpYy9hcHAvcGx1Z2lucy9kYXRhc291cmNlL2luZmx1eGRiL2NvbXBvbmVudHMvZWRpdG9yL3F1ZXJ5L2luZmx1eHFsL3V0aWxzL3dyYXBwZXIudHM/NGI2MSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUeXBlZFZhcmlhYmxlTW9kZWwgfSBmcm9tICdAZ3JhZmFuYS9kYXRhL3NyYyc7XG5cbmV4cG9ydCBmdW5jdGlvbiB3cmFwUmVnZXgodjogVHlwZWRWYXJpYWJsZU1vZGVsKTogc3RyaW5nIHtcbiAgcmV0dXJuIGAvXiQke3YubmFtZX0kL2A7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB3cmFwUHVyZSh2OiBUeXBlZFZhcmlhYmxlTW9kZWwpOiBzdHJpbmcge1xuICByZXR1cm4gYCQke3YubmFtZX1gO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/influxdb/components/editor/query/influxql/utils/wrapper.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/influxdb/components/editor/query/influxql/visual/AddButton.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AddButton: () => (/* binding */ AddButton)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils_unwrap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/components/editor/query/influxql/utils/unwrap.ts\");\n/* harmony import */ var _Seg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/components/editor/query/influxql/visual/Seg.tsx\");\n\n\n\n\nconst AddButton = ({ loadOptions, allowCustomValue, onAdd }) => {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n    _Seg__WEBPACK_IMPORTED_MODULE_2__.Seg,\n    {\n      value: \"+\",\n      loadOptions,\n      allowCustomValue,\n      onChange: (v) => {\n        onAdd((0,_utils_unwrap__WEBPACK_IMPORTED_MODULE_1__.unwrap)(v.value));\n      }\n    }\n  );\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9pbmZsdXhkYi9jb21wb25lbnRzL2VkaXRvci9xdWVyeS9pbmZsdXhxbC92aXN1YWwvQWRkQnV0dG9uLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBa0I7QUFJSztBQUVIO0FBUWIsTUFBTSxZQUFZLENBQUMsRUFBRSxhQUFhLGtCQUFrQixNQUFNLE1BQTBCO0FBQ3pGLFNBQ0U7QUFBQSxJQUFDLHFDQUFHO0FBQUg7QUFBQSxNQUNDLE9BQU07QUFBQSxNQUNOO0FBQUEsTUFDQTtBQUFBLE1BQ0EsVUFBVSxDQUFDLE1BQU07QUFDZixjQUFNLHFEQUFNLENBQUMsRUFBRSxLQUFLLENBQUM7QUFBQSxNQUN2QjtBQUFBO0FBQUEsRUFDRjtBQUVKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ3JhZmFuYS8uL3B1YmxpYy9hcHAvcGx1Z2lucy9kYXRhc291cmNlL2luZmx1eGRiL2NvbXBvbmVudHMvZWRpdG9yL3F1ZXJ5L2luZmx1eHFsL3Zpc3VhbC9BZGRCdXR0b24udHN4PzZhMjYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHsgU2VsZWN0YWJsZVZhbHVlIH0gZnJvbSAnQGdyYWZhbmEvZGF0YSc7XG5cbmltcG9ydCB7IHVud3JhcCB9IGZyb20gJy4uL3V0aWxzL3Vud3JhcCc7XG5cbmltcG9ydCB7IFNlZyB9IGZyb20gJy4vU2VnJztcblxudHlwZSBQcm9wcyA9IHtcbiAgbG9hZE9wdGlvbnM6ICgpID0+IFByb21pc2U8U2VsZWN0YWJsZVZhbHVlW10+O1xuICBhbGxvd0N1c3RvbVZhbHVlPzogYm9vbGVhbjtcbiAgb25BZGQ6ICh2OiBzdHJpbmcpID0+IHZvaWQ7XG59O1xuXG5leHBvcnQgY29uc3QgQWRkQnV0dG9uID0gKHsgbG9hZE9wdGlvbnMsIGFsbG93Q3VzdG9tVmFsdWUsIG9uQWRkIH06IFByb3BzKTogSlNYLkVsZW1lbnQgPT4ge1xuICByZXR1cm4gKFxuICAgIDxTZWdcbiAgICAgIHZhbHVlPVwiK1wiXG4gICAgICBsb2FkT3B0aW9ucz17bG9hZE9wdGlvbnN9XG4gICAgICBhbGxvd0N1c3RvbVZhbHVlPXthbGxvd0N1c3RvbVZhbHVlfVxuICAgICAgb25DaGFuZ2U9eyh2KSA9PiB7XG4gICAgICAgIG9uQWRkKHVud3JhcCh2LnZhbHVlKSk7XG4gICAgICB9fVxuICAgIC8+XG4gICk7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/influxdb/components/editor/query/influxql/visual/AddButton.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/influxdb/components/editor/query/influxql/visual/FormatAsSection.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FormatAsSection: () => (/* binding */ FormatAsSection)\n/* harmony export */ });\n/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/@emotion-css-npm-11.11.2-dbfa42cf83-1edea109df.zip/node_modules/@emotion/css/dist/emotion-css.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Select/Select.tsx\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/components/editor/constants.ts\");\n/* harmony import */ var _utils_unwrap__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/components/editor/query/influxql/utils/unwrap.ts\");\n/* harmony import */ var _styles__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/components/editor/query/influxql/visual/styles.ts\");\n\n\n\n\n\n\n\nconst className = (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.cx)(\"width-8\", _styles__WEBPACK_IMPORTED_MODULE_4__.paddingRightClass);\nconst FormatAsSection = ({ format, inputId, onChange }) => {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n    _grafana_ui__WEBPACK_IMPORTED_MODULE_5__.Select,\n    {\n      inputId,\n      className,\n      onChange: (v) => {\n        onChange((0,_utils_unwrap__WEBPACK_IMPORTED_MODULE_3__.unwrap)(v.value));\n      },\n      value: format,\n      options: _constants__WEBPACK_IMPORTED_MODULE_2__.RESULT_FORMATS\n    }\n  );\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9pbmZsdXhkYi9jb21wb25lbnRzL2VkaXRvci9xdWVyeS9pbmZsdXhxbC92aXN1YWwvRm9ybWF0QXNTZWN0aW9uLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBbUI7QUFDRDtBQUVLO0FBR1E7QUFDUjtBQUVXO0FBUWxDLE1BQU0sWUFBWSxnREFBRSxDQUFDLFdBQVcsc0RBQWlCO0FBRTFDLE1BQU0sa0JBQWtCLENBQUMsRUFBRSxRQUFRLFNBQVMsU0FBUyxNQUEwQjtBQUNwRixTQUNFO0FBQUEsSUFBQywrQ0FBTTtBQUFOO0FBQUEsTUFDQztBQUFBLE1BQ0E7QUFBQSxNQUNBLFVBQVUsQ0FBQyxNQUFNO0FBQ2YsaUJBQVMscURBQU0sQ0FBQyxFQUFFLEtBQUssQ0FBQztBQUFBLE1BQzFCO0FBQUEsTUFDQSxPQUFPO0FBQUEsTUFDUCxTQUFTLHNEQUFjO0FBQWQ7QUFBQSxFQUNYO0FBRUoiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ncmFmYW5hLy4vcHVibGljL2FwcC9wbHVnaW5zL2RhdGFzb3VyY2UvaW5mbHV4ZGIvY29tcG9uZW50cy9lZGl0b3IvcXVlcnkvaW5mbHV4cWwvdmlzdWFsL0Zvcm1hdEFzU2VjdGlvbi50c3g/ZTNmMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjeCB9IGZyb20gJ0BlbW90aW9uL2Nzcyc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgeyBTZWxlY3QgfSBmcm9tICdAZ3JhZmFuYS91aSc7XG5cbmltcG9ydCB7IFJlc3VsdEZvcm1hdCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3R5cGVzJztcbmltcG9ydCB7IFJFU1VMVF9GT1JNQVRTIH0gZnJvbSAnLi4vLi4vLi4vY29uc3RhbnRzJztcbmltcG9ydCB7IHVud3JhcCB9IGZyb20gJy4uL3V0aWxzL3Vud3JhcCc7XG5cbmltcG9ydCB7IHBhZGRpbmdSaWdodENsYXNzIH0gZnJvbSAnLi9zdHlsZXMnO1xuXG50eXBlIFByb3BzID0ge1xuICBpbnB1dElkPzogc3RyaW5nO1xuICBmb3JtYXQ6IFJlc3VsdEZvcm1hdDtcbiAgb25DaGFuZ2U6IChuZXdGb3JtYXQ6IFJlc3VsdEZvcm1hdCkgPT4gdm9pZDtcbn07XG5cbmNvbnN0IGNsYXNzTmFtZSA9IGN4KCd3aWR0aC04JywgcGFkZGluZ1JpZ2h0Q2xhc3MpO1xuXG5leHBvcnQgY29uc3QgRm9ybWF0QXNTZWN0aW9uID0gKHsgZm9ybWF0LCBpbnB1dElkLCBvbkNoYW5nZSB9OiBQcm9wcyk6IEpTWC5FbGVtZW50ID0+IHtcbiAgcmV0dXJuIChcbiAgICA8U2VsZWN0PFJlc3VsdEZvcm1hdD5cbiAgICAgIGlucHV0SWQ9e2lucHV0SWR9XG4gICAgICBjbGFzc05hbWU9e2NsYXNzTmFtZX1cbiAgICAgIG9uQ2hhbmdlPXsodikgPT4ge1xuICAgICAgICBvbkNoYW5nZSh1bndyYXAodi52YWx1ZSkpO1xuICAgICAgfX1cbiAgICAgIHZhbHVlPXtmb3JtYXR9XG4gICAgICBvcHRpb25zPXtSRVNVTFRfRk9STUFUU31cbiAgICAvPlxuICApO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/influxdb/components/editor/query/influxql/visual/FormatAsSection.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/influxdb/components/editor/query/influxql/visual/FromSection.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FromSection: () => (/* binding */ FromSection)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/types.ts\");\n/* harmony import */ var _utils_toSelectableValue__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/components/editor/query/influxql/utils/toSelectableValue.ts\");\n/* harmony import */ var _Seg__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/components/editor/query/influxql/visual/Seg.tsx\");\n\n\n\n\n\nconst FromSection = ({\n  policy,\n  measurement,\n  onChange,\n  getPolicyOptions,\n  getMeasurementOptions\n}) => {\n  const handlePolicyLoadOptions = async () => {\n    const allPolicies = await getPolicyOptions();\n    const allPoliciesWithDefault = allPolicies.some((p) => p === \"default\") ? allPolicies : [_types__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_POLICY, ...allPolicies];\n    return allPoliciesWithDefault.map(_utils_toSelectableValue__WEBPACK_IMPORTED_MODULE_2__.toSelectableValue);\n  };\n  const handleMeasurementLoadOptions = async (filter) => {\n    const allMeasurements = await getMeasurementOptions(filter);\n    return allMeasurements.map(_utils_toSelectableValue__WEBPACK_IMPORTED_MODULE_2__.toSelectableValue);\n  };\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n    _Seg__WEBPACK_IMPORTED_MODULE_3__.Seg,\n    {\n      allowCustomValue: true,\n      value: policy ?? \"using default policy\",\n      loadOptions: handlePolicyLoadOptions,\n      onChange: (v) => {\n        onChange(v.value, measurement);\n      }\n    }\n  ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n    _Seg__WEBPACK_IMPORTED_MODULE_3__.Seg,\n    {\n      allowCustomValue: true,\n      value: measurement ?? \"select measurement\",\n      loadOptions: handleMeasurementLoadOptions,\n      filterByLoadOptions: true,\n      onChange: (v) => {\n        onChange(policy, v.value);\n      }\n    }\n  ));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9pbmZsdXhkYi9jb21wb25lbnRzL2VkaXRvci9xdWVyeS9pbmZsdXhxbC92aXN1YWwvRnJvbVNlY3Rpb24udHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBa0I7QUFFYTtBQUNHO0FBRWQ7QUFxQmIsTUFBTSxjQUFjLENBQUM7QUFBQSxFQUMxQjtBQUFBLEVBQ0E7QUFBQSxFQUNBO0FBQUEsRUFDQTtBQUFBLEVBQ0E7QUFDRixNQUEwQjtBQUN4QixRQUFNLDBCQUEwQixZQUFZO0FBQzFDLFVBQU0sY0FBYyxNQUFNLGlCQUFpQjtBQUUzQyxVQUFNLHlCQUF5QixZQUFZLEtBQUssQ0FBQyxNQUFNLE1BQU0sU0FBUyxJQUNsRSxjQUNBLENBQUMsa0RBQWMsRUFBRSxHQUFHLFdBQVc7QUFFbkMsV0FBTyx1QkFBdUIsSUFBSSx1RUFBaUI7QUFBQSxFQUNyRDtBQUVBLFFBQU0sK0JBQStCLE9BQU8sV0FBbUI7QUFDN0QsVUFBTSxrQkFBa0IsTUFBTSxzQkFBc0IsTUFBTTtBQUMxRCxXQUFPLGdCQUFnQixJQUFJLHVFQUFpQjtBQUFBLEVBQzlDO0FBRUEsU0FDRSwwSUFDRTtBQUFBLElBQUMscUNBQUc7QUFBSDtBQUFBLE1BQ0Msa0JBQWdCO0FBQUEsTUFDaEIsT0FBTyxVQUFVO0FBQUEsTUFDakIsYUFBYTtBQUFBLE1BQ2IsVUFBVSxDQUFDLE1BQU07QUFDZixpQkFBUyxFQUFFLE9BQU8sV0FBVztBQUFBLE1BQy9CO0FBQUE7QUFBQSxFQUNGLEdBQ0E7QUFBQSxJQUFDLHFDQUFHO0FBQUg7QUFBQSxNQUNDLGtCQUFnQjtBQUFBLE1BQ2hCLE9BQU8sZUFBZTtBQUFBLE1BQ3RCLGFBQWE7QUFBQSxNQUNiLHFCQUFtQjtBQUFBLE1BQ25CLFVBQVUsQ0FBQyxNQUFNO0FBQ2YsaUJBQVMsUUFBUSxFQUFFLEtBQUs7QUFBQSxNQUMxQjtBQUFBO0FBQUEsRUFDRixDQUNGO0FBRUoiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ncmFmYW5hLy4vcHVibGljL2FwcC9wbHVnaW5zL2RhdGFzb3VyY2UvaW5mbHV4ZGIvY29tcG9uZW50cy9lZGl0b3IvcXVlcnkvaW5mbHV4cWwvdmlzdWFsL0Zyb21TZWN0aW9uLnRzeD85NTFiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB7IERFRkFVTFRfUE9MSUNZIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdHlwZXMnO1xuaW1wb3J0IHsgdG9TZWxlY3RhYmxlVmFsdWUgfSBmcm9tICcuLi91dGlscy90b1NlbGVjdGFibGVWYWx1ZSc7XG5cbmltcG9ydCB7IFNlZyB9IGZyb20gJy4vU2VnJztcblxuLy8gd2UgdXNlIHRoZSB2YWx1ZSBcImRlZmF1bHRcIiBhcyBhIG1hZ2ljLXZhbHVlLCBpdCBtZWFuc1xuLy8gd2UgdXNlIHRoZSBkZWZhdWx0IHJldGVudGlvbi1wb2xpY3kuXG4vLyB1bmZvcnR1bmF0ZWx5LCBJRiB0aGUgdXNlciBoYXMgYSByZXRlbnRpb24tcG9saWN5IG5hbWVkIFwiZGVmYXVsdFwiLFxuLy8gYW5kIGl0IGlzIG5vdCB0aGUgZGVmYXVsdC1yZXRlbnRpb24tcG9saWN5IGluIGluZmx1eGRiLFxuLy8gYmFkIHRoaW5ncyB3aWxsIGhhcHBlbi5cbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9ncmFmYW5hL2dyYWZhbmEvaXNzdWVzLzQzNDcgOi0oXG4vLyBGSVhNRTogd2UgY291bGQgbWF5YmUgYXQgbGVhc3QgZGV0ZWN0IGhlcmUgdGhhdCBwcm9ibGVtLWlzLWhhcHBlbmluZyxcbi8vIGFuZCBzaG93IGFuIGVycm9yIG1lc3NhZ2Ugb3Igc29tZXRoaW5nLlxuLy8gdW5mb3J0dW5hdGVseSwgY3VycmVudGx5IHRoZSBSZXNwb25zZVBhcnNlciBkb2VzIG5vdCByZXR1cm4gdGhlXG4vLyBpcy1kZWZhdWx0IGluZm8gZm9yIHRoZSByZXRlbnRpb24tcG9saWNpZXMsIHNvIHRoYXQgc2hvdWxkIGNoYW5nZSBmaXJzdC5cblxudHlwZSBQcm9wcyA9IHtcbiAgb25DaGFuZ2U6IChwb2xpY3k6IHN0cmluZyB8IHVuZGVmaW5lZCwgbWVhc3VyZW1lbnQ6IHN0cmluZyB8IHVuZGVmaW5lZCkgPT4gdm9pZDtcbiAgcG9saWN5OiBzdHJpbmcgfCB1bmRlZmluZWQ7XG4gIG1lYXN1cmVtZW50OiBzdHJpbmcgfCB1bmRlZmluZWQ7XG4gIGdldFBvbGljeU9wdGlvbnM6ICgpID0+IFByb21pc2U8c3RyaW5nW10+O1xuICBnZXRNZWFzdXJlbWVudE9wdGlvbnM6IChmaWx0ZXI6IHN0cmluZykgPT4gUHJvbWlzZTxzdHJpbmdbXT47XG59O1xuXG5leHBvcnQgY29uc3QgRnJvbVNlY3Rpb24gPSAoe1xuICBwb2xpY3ksXG4gIG1lYXN1cmVtZW50LFxuICBvbkNoYW5nZSxcbiAgZ2V0UG9saWN5T3B0aW9ucyxcbiAgZ2V0TWVhc3VyZW1lbnRPcHRpb25zLFxufTogUHJvcHMpOiBKU1guRWxlbWVudCA9PiB7XG4gIGNvbnN0IGhhbmRsZVBvbGljeUxvYWRPcHRpb25zID0gYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IGFsbFBvbGljaWVzID0gYXdhaXQgZ2V0UG9saWN5T3B0aW9ucygpO1xuICAgIC8vIGlmIGBkZWZhdWx0YCBkb2VzIG5vdCBleGlzdCBpbiB0aGUgbGlzdCBvZiBwb2xpY2llcywgd2UgYWRkIGl0XG4gICAgY29uc3QgYWxsUG9saWNpZXNXaXRoRGVmYXVsdCA9IGFsbFBvbGljaWVzLnNvbWUoKHApID0+IHAgPT09ICdkZWZhdWx0JylcbiAgICAgID8gYWxsUG9saWNpZXNcbiAgICAgIDogW0RFRkFVTFRfUE9MSUNZLCAuLi5hbGxQb2xpY2llc107XG5cbiAgICByZXR1cm4gYWxsUG9saWNpZXNXaXRoRGVmYXVsdC5tYXAodG9TZWxlY3RhYmxlVmFsdWUpO1xuICB9O1xuXG4gIGNvbnN0IGhhbmRsZU1lYXN1cmVtZW50TG9hZE9wdGlvbnMgPSBhc3luYyAoZmlsdGVyOiBzdHJpbmcpID0+IHtcbiAgICBjb25zdCBhbGxNZWFzdXJlbWVudHMgPSBhd2FpdCBnZXRNZWFzdXJlbWVudE9wdGlvbnMoZmlsdGVyKTtcbiAgICByZXR1cm4gYWxsTWVhc3VyZW1lbnRzLm1hcCh0b1NlbGVjdGFibGVWYWx1ZSk7XG4gIH07XG5cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPFNlZ1xuICAgICAgICBhbGxvd0N1c3RvbVZhbHVlXG4gICAgICAgIHZhbHVlPXtwb2xpY3kgPz8gJ3VzaW5nIGRlZmF1bHQgcG9saWN5J31cbiAgICAgICAgbG9hZE9wdGlvbnM9e2hhbmRsZVBvbGljeUxvYWRPcHRpb25zfVxuICAgICAgICBvbkNoYW5nZT17KHYpID0+IHtcbiAgICAgICAgICBvbkNoYW5nZSh2LnZhbHVlLCBtZWFzdXJlbWVudCk7XG4gICAgICAgIH19XG4gICAgICAvPlxuICAgICAgPFNlZ1xuICAgICAgICBhbGxvd0N1c3RvbVZhbHVlXG4gICAgICAgIHZhbHVlPXttZWFzdXJlbWVudCA/PyAnc2VsZWN0IG1lYXN1cmVtZW50J31cbiAgICAgICAgbG9hZE9wdGlvbnM9e2hhbmRsZU1lYXN1cmVtZW50TG9hZE9wdGlvbnN9XG4gICAgICAgIGZpbHRlckJ5TG9hZE9wdGlvbnNcbiAgICAgICAgb25DaGFuZ2U9eyh2KSA9PiB7XG4gICAgICAgICAgb25DaGFuZ2UocG9saWN5LCB2LnZhbHVlKTtcbiAgICAgICAgfX1cbiAgICAgIC8+XG4gICAgPC8+XG4gICk7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/influxdb/components/editor/query/influxql/visual/FromSection.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/influxdb/components/editor/query/influxql/visual/InputSection.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InputSection: () => (/* binding */ InputSection)\n/* harmony export */ });\n/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/@emotion-css-npm-11.11.2-dbfa42cf83-1edea109df.zip/node_modules/@emotion/css/dist/emotion-css.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Input/Input.tsx\");\n/* harmony import */ var _hooks_useShadowedState__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/components/editor/query/influxql/hooks/useShadowedState.ts\");\n/* harmony import */ var _styles__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/components/editor/query/influxql/visual/styles.ts\");\n\n\n\n\n\n\nconst InputSection = ({ value, onChange, isWide, placeholder }) => {\n  const [currentValue, setCurrentValue] = (0,_hooks_useShadowedState__WEBPACK_IMPORTED_MODULE_2__.useShadowedState)(value);\n  const onBlur = () => {\n    const newValue = currentValue === \"\" ? void 0 : currentValue;\n    onChange(newValue);\n  };\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement((react__WEBPACK_IMPORTED_MODULE_1___default().Fragment), null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n    _grafana_ui__WEBPACK_IMPORTED_MODULE_4__.Input,\n    {\n      placeholder,\n      className: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.cx)(isWide ?? false ? \"width-14\" : \"width-8\", _styles__WEBPACK_IMPORTED_MODULE_3__.paddingRightClass),\n      type: \"text\",\n      spellCheck: false,\n      onBlur,\n      onChange: (e) => {\n        setCurrentValue(e.currentTarget.value);\n      },\n      value: currentValue ?? \"\"\n    }\n  ));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9pbmZsdXhkYi9jb21wb25lbnRzL2VkaXRvci9xdWVyeS9pbmZsdXhxbC92aXN1YWwvSW5wdXRTZWN0aW9uLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFtQjtBQUNEO0FBRUk7QUFFVztBQUVDO0FBUzNCLE1BQU0sZUFBZSxDQUFDLEVBQUUsT0FBTyxVQUFVLFFBQVEsWUFBWSxNQUEwQjtBQUM1RixRQUFNLENBQUMsY0FBYyxlQUFlLElBQUkseUVBQWdCLENBQUMsS0FBSztBQUU5RCxRQUFNLFNBQVMsTUFBTTtBQUVuQixVQUFNLFdBQVcsaUJBQWlCLEtBQUssU0FBWTtBQUNuRCxhQUFTLFFBQVE7QUFBQSxFQUNuQjtBQUVBLFNBQ0UsMElBQ0U7QUFBQSxJQUFDLDhDQUFLO0FBQUw7QUFBQSxNQUNDO0FBQUEsTUFDQSxXQUFXLGdEQUFFLENBQUMsVUFBVSxRQUFRLGFBQWEsV0FBVyxzREFBaUI7QUFBQSxNQUN6RSxNQUFLO0FBQUEsTUFDTCxZQUFZO0FBQUEsTUFDWjtBQUFBLE1BQ0EsVUFBVSxDQUFDLE1BQU07QUFDZix3QkFBZ0IsRUFBRSxjQUFjLEtBQUs7QUFBQSxNQUN2QztBQUFBLE1BQ0EsT0FBTyxnQkFBZ0I7QUFBQTtBQUFBLEVBQ3pCLENBQ0Y7QUFFSiIsInNvdXJjZXMiOlsid2VicGFjazovL2dyYWZhbmEvLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9pbmZsdXhkYi9jb21wb25lbnRzL2VkaXRvci9xdWVyeS9pbmZsdXhxbC92aXN1YWwvSW5wdXRTZWN0aW9uLnRzeD9jNGFjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGN4IH0gZnJvbSAnQGVtb3Rpb24vY3NzJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB7IElucHV0IH0gZnJvbSAnQGdyYWZhbmEvdWknO1xuXG5pbXBvcnQgeyB1c2VTaGFkb3dlZFN0YXRlIH0gZnJvbSAnLi4vaG9va3MvdXNlU2hhZG93ZWRTdGF0ZSc7XG5cbmltcG9ydCB7IHBhZGRpbmdSaWdodENsYXNzIH0gZnJvbSAnLi9zdHlsZXMnO1xuXG50eXBlIFByb3BzID0ge1xuICB2YWx1ZTogc3RyaW5nIHwgdW5kZWZpbmVkO1xuICBvbkNoYW5nZTogKHZhbHVlOiBzdHJpbmcgfCB1bmRlZmluZWQpID0+IHZvaWQ7XG4gIGlzV2lkZT86IGJvb2xlYW47XG4gIHBsYWNlaG9sZGVyPzogc3RyaW5nO1xufTtcblxuZXhwb3J0IGNvbnN0IElucHV0U2VjdGlvbiA9ICh7IHZhbHVlLCBvbkNoYW5nZSwgaXNXaWRlLCBwbGFjZWhvbGRlciB9OiBQcm9wcyk6IEpTWC5FbGVtZW50ID0+IHtcbiAgY29uc3QgW2N1cnJlbnRWYWx1ZSwgc2V0Q3VycmVudFZhbHVlXSA9IHVzZVNoYWRvd2VkU3RhdGUodmFsdWUpO1xuXG4gIGNvbnN0IG9uQmx1ciA9ICgpID0+IHtcbiAgICAvLyB3ZSBzZW5kIGVtcHR5LXN0cmluZyBhcyB1bmRlZmluZWRcbiAgICBjb25zdCBuZXdWYWx1ZSA9IGN1cnJlbnRWYWx1ZSA9PT0gJycgPyB1bmRlZmluZWQgOiBjdXJyZW50VmFsdWU7XG4gICAgb25DaGFuZ2UobmV3VmFsdWUpO1xuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxJbnB1dFxuICAgICAgICBwbGFjZWhvbGRlcj17cGxhY2Vob2xkZXJ9XG4gICAgICAgIGNsYXNzTmFtZT17Y3goaXNXaWRlID8/IGZhbHNlID8gJ3dpZHRoLTE0JyA6ICd3aWR0aC04JywgcGFkZGluZ1JpZ2h0Q2xhc3MpfVxuICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgIHNwZWxsQ2hlY2s9e2ZhbHNlfVxuICAgICAgICBvbkJsdXI9e29uQmx1cn1cbiAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiB7XG4gICAgICAgICAgc2V0Q3VycmVudFZhbHVlKGUuY3VycmVudFRhcmdldC52YWx1ZSk7XG4gICAgICAgIH19XG4gICAgICAgIHZhbHVlPXtjdXJyZW50VmFsdWUgPz8gJyd9XG4gICAgICAvPlxuICAgIDwvPlxuICApO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/influxdb/components/editor/query/influxql/visual/InputSection.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/influxdb/components/editor/query/influxql/visual/OrderByTimeSection.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OrderByTimeSection: () => (/* binding */ OrderByTimeSection)\n/* harmony export */ });\n/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/@emotion-css-npm-11.11.2-dbfa42cf83-1edea109df.zip/node_modules/@emotion/css/dist/emotion-css.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Select/Select.tsx\");\n/* harmony import */ var _utils_unwrap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/components/editor/query/influxql/utils/unwrap.ts\");\n/* harmony import */ var _styles__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/components/editor/query/influxql/visual/styles.ts\");\n\n\n\n\n\n\nconst OPTIONS = [\n  { label: \"ascending\", value: \"ASC\" },\n  { label: \"descending\", value: \"DESC\" }\n];\nconst className = (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.cx)(\"width-9\", _styles__WEBPACK_IMPORTED_MODULE_3__.paddingRightClass);\nconst OrderByTimeSection = ({ value, onChange, inputId }) => {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement((react__WEBPACK_IMPORTED_MODULE_1___default().Fragment), null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n    _grafana_ui__WEBPACK_IMPORTED_MODULE_4__.Select,\n    {\n      inputId,\n      className,\n      onChange: (v) => {\n        onChange((0,_utils_unwrap__WEBPACK_IMPORTED_MODULE_2__.unwrap)(v.value));\n      },\n      value,\n      options: OPTIONS\n    }\n  ));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9pbmZsdXhkYi9jb21wb25lbnRzL2VkaXRvci9xdWVyeS9pbmZsdXhxbC92aXN1YWwvT3JkZXJCeVRpbWVTZWN0aW9uLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFtQjtBQUNEO0FBR0s7QUFFQTtBQUVXO0FBSWxDLE1BQU0sVUFBd0M7QUFBQSxFQUM1QyxFQUFFLE9BQU8sYUFBYSxPQUFPLE1BQU07QUFBQSxFQUNuQyxFQUFFLE9BQU8sY0FBYyxPQUFPLE9BQU87QUFDdkM7QUFFQSxNQUFNLFlBQVksZ0RBQUUsQ0FBQyxXQUFXLHNEQUFpQjtBQVExQyxNQUFNLHFCQUFxQixDQUFDLEVBQUUsT0FBTyxVQUFVLFFBQVEsTUFBMEI7QUFDdEYsU0FDRSwwSUFDRTtBQUFBLElBQUMsK0NBQU07QUFBTjtBQUFBLE1BQ0M7QUFBQSxNQUNBO0FBQUEsTUFDQSxVQUFVLENBQUMsTUFBTTtBQUNmLGlCQUFTLHFEQUFNLENBQUMsRUFBRSxLQUFLLENBQUM7QUFBQSxNQUMxQjtBQUFBLE1BQ0E7QUFBQSxNQUNBLFNBQVM7QUFBQTtBQUFBLEVBQ1gsQ0FDRjtBQUVKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ3JhZmFuYS8uL3B1YmxpYy9hcHAvcGx1Z2lucy9kYXRhc291cmNlL2luZmx1eGRiL2NvbXBvbmVudHMvZWRpdG9yL3F1ZXJ5L2luZmx1eHFsL3Zpc3VhbC9PcmRlckJ5VGltZVNlY3Rpb24udHN4PzdkMDEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3ggfSBmcm9tICdAZW1vdGlvbi9jc3MnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHsgU2VsZWN0YWJsZVZhbHVlIH0gZnJvbSAnQGdyYWZhbmEvZGF0YSc7XG5pbXBvcnQgeyBTZWxlY3QgfSBmcm9tICdAZ3JhZmFuYS91aSc7XG5cbmltcG9ydCB7IHVud3JhcCB9IGZyb20gJy4uL3V0aWxzL3Vud3JhcCc7XG5cbmltcG9ydCB7IHBhZGRpbmdSaWdodENsYXNzIH0gZnJvbSAnLi9zdHlsZXMnO1xuXG50eXBlIE1vZGUgPSAnQVNDJyB8ICdERVNDJztcblxuY29uc3QgT1BUSU9OUzogQXJyYXk8U2VsZWN0YWJsZVZhbHVlPE1vZGU+PiA9IFtcbiAgeyBsYWJlbDogJ2FzY2VuZGluZycsIHZhbHVlOiAnQVNDJyB9LFxuICB7IGxhYmVsOiAnZGVzY2VuZGluZycsIHZhbHVlOiAnREVTQycgfSxcbl07XG5cbmNvbnN0IGNsYXNzTmFtZSA9IGN4KCd3aWR0aC05JywgcGFkZGluZ1JpZ2h0Q2xhc3MpO1xuXG50eXBlIFByb3BzID0ge1xuICB2YWx1ZTogTW9kZTtcbiAgb25DaGFuZ2U6ICh2YWx1ZTogTW9kZSkgPT4gdm9pZDtcbiAgaW5wdXRJZD86IHN0cmluZztcbn07XG5cbmV4cG9ydCBjb25zdCBPcmRlckJ5VGltZVNlY3Rpb24gPSAoeyB2YWx1ZSwgb25DaGFuZ2UsIGlucHV0SWQgfTogUHJvcHMpOiBKU1guRWxlbWVudCA9PiB7XG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxTZWxlY3Q8TW9kZT5cbiAgICAgICAgaW5wdXRJZD17aW5wdXRJZH1cbiAgICAgICAgY2xhc3NOYW1lPXtjbGFzc05hbWV9XG4gICAgICAgIG9uQ2hhbmdlPXsodikgPT4ge1xuICAgICAgICAgIG9uQ2hhbmdlKHVud3JhcCh2LnZhbHVlKSk7XG4gICAgICAgIH19XG4gICAgICAgIHZhbHVlPXt2YWx1ZX1cbiAgICAgICAgb3B0aW9ucz17T1BUSU9OU31cbiAgICAgIC8+XG4gICAgPC8+XG4gICk7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/influxdb/components/editor/query/influxql/visual/OrderByTimeSection.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/influxdb/components/editor/query/influxql/visual/PartListSection.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PartListSection: () => (/* binding */ PartListSection)\n/* harmony export */ });\n/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/@emotion-css-npm-11.11.2-dbfa42cf83-1edea109df.zip/node_modules/@emotion/css/dist/emotion-css.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Menu/MenuGroup.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Menu/MenuItem.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/ContextMenu/WithContextMenu.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/themes/ThemeContext.tsx\");\n/* harmony import */ var _utils_toSelectableValue__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/components/editor/query/influxql/utils/toSelectableValue.ts\");\n/* harmony import */ var _utils_unwrap__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/components/editor/query/influxql/utils/unwrap.ts\");\n/* harmony import */ var _AddButton__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/components/editor/query/influxql/visual/AddButton.tsx\");\n/* harmony import */ var _Seg__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/components/editor/query/influxql/visual/Seg.tsx\");\n\n\n\n\n\n\n\n\nconst renderRemovableNameMenuItems = (onClick) => {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_6__.MenuGroup, { label: \"\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_7__.MenuItem, { label: \"remove\", onClick }));\n};\nconst noRightMarginPaddingClass = (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)({\n  paddingRight: \"0\",\n  marginRight: \"0\"\n});\nconst RemovableName = ({ name, onRemove }) => {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_8__.WithContextMenu, { renderMenuItems: () => renderRemovableNameMenuItems(onRemove) }, ({ openMenu }) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"button\", { className: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.cx)(\"gf-form-label\", noRightMarginPaddingClass), onClick: openMenu }, name));\n};\nconst noHorizMarginPaddingClass = (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)({\n  paddingLeft: \"0\",\n  paddingRight: \"0\",\n  marginLeft: \"0\",\n  marginRight: \"0\"\n});\nconst getPartClass = (theme) => {\n  return (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.cx)(\n    \"gf-form-label\",\n    (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)({\n      paddingLeft: \"0\",\n      // gf-form-label class makes certain css attributes incorrect\n      // for the selectbox-dropdown, so we have to \"reset\" them back\n      lineHeight: theme.typography.body.lineHeight,\n      fontSize: theme.typography.body.fontSize\n    })\n  );\n};\nconst Part = ({ name, params, onChange, onRemove }) => {\n  const theme = (0,_grafana_ui__WEBPACK_IMPORTED_MODULE_9__.useTheme2)();\n  const partClass = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => getPartClass(theme), [theme]);\n  const onParamChange = (par, i) => {\n    const newParams = params.map((p) => p.value);\n    newParams[i] = par;\n    onChange(newParams);\n  };\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: partClass }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(RemovableName, { name, onRemove }), \"(\", params.map((p, i) => {\n    const { value, options } = p;\n    const isLast = i === params.length - 1;\n    const loadOptions = options !== null ? () => options().then((items) => items.map(_utils_toSelectableValue__WEBPACK_IMPORTED_MODULE_2__.toSelectableValue)) : void 0;\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement((react__WEBPACK_IMPORTED_MODULE_1___default().Fragment), { key: i }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n      _Seg__WEBPACK_IMPORTED_MODULE_5__.Seg,\n      {\n        allowCustomValue: true,\n        value,\n        buttonClassName: noHorizMarginPaddingClass,\n        loadOptions,\n        onChange: (v) => {\n          onParamChange((0,_utils_unwrap__WEBPACK_IMPORTED_MODULE_3__.unwrap)(v.value), i);\n        }\n      }\n    ), !isLast && \",\");\n  }), \")\");\n};\nconst PartListSection = ({\n  parts,\n  getNewPartOptions,\n  onAddNewPart,\n  onRemovePart,\n  onChange\n}) => {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement((react__WEBPACK_IMPORTED_MODULE_1___default().Fragment), null, parts.map((part, index) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n    Part,\n    {\n      key: index,\n      name: part.name,\n      params: part.params,\n      onRemove: () => {\n        onRemovePart(index);\n      },\n      onChange: (pars) => {\n        onChange(index, pars);\n      }\n    }\n  )), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_AddButton__WEBPACK_IMPORTED_MODULE_4__.AddButton, { loadOptions: getNewPartOptions, onAdd: onAddNewPart }));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/influxdb/components/editor/query/influxql/visual/PartListSection.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/influxdb/components/editor/query/influxql/visual/Seg.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Seg: () => (/* binding */ Seg)\n/* harmony export */ });\n/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/@emotion-css-npm-11.11.2-dbfa42cf83-1edea109df.zip/node_modules/@emotion/css/dist/emotion-css.esm.js\");\n/* harmony import */ var debounce_promise__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/cache/debounce-promise-npm-3.1.2-3c185da0c7-29bac4524c.zip/node_modules/debounce-promise/dist/index.js\");\n/* harmony import */ var debounce_promise__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(debounce_promise__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react_use__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./.yarn/__virtual__/react-use-virtual-dd7926f458/0/cache/react-use-npm-17.4.0-0ef4521544-0889da919b.zip/node_modules/react-use/esm/useAsyncFn.js\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Select/Select.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Input/Input.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Forms/InlineLabel.tsx\");\n/* harmony import */ var _hooks_useShadowedState__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/components/editor/query/influxql/hooks/useShadowedState.ts\");\n\n\n\n\n\n\n\nconst selectClass = (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)({\n  minWidth: \"160px\"\n});\nconst formatCreateLabel = (v) => v;\nconst SelReload = ({ loadOptions, allowCustomValue, onChange, onClose }) => {\n  const debouncedLoadOptions = debounce_promise__WEBPACK_IMPORTED_MODULE_1___default()(loadOptions, 1e3, { leading: true });\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", { className: selectClass }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\n    _grafana_ui__WEBPACK_IMPORTED_MODULE_4__.AsyncSelect,\n    {\n      formatCreateLabel,\n      defaultOptions: true,\n      autoFocus: true,\n      isOpen: true,\n      onCloseMenu: onClose,\n      allowCustomValue,\n      loadOptions: debouncedLoadOptions,\n      onChange,\n      createOptionPosition: \"first\"\n    }\n  ));\n};\nconst SelSingleLoad = ({ loadOptions, allowCustomValue, onChange, onClose }) => {\n  const [loadState, doLoad] = (0,react_use__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(loadOptions, [loadOptions]);\n  (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(() => {\n    doLoad(\"\");\n  }, [doLoad, loadOptions]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", { className: selectClass }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\n    _grafana_ui__WEBPACK_IMPORTED_MODULE_4__.Select,\n    {\n      isLoading: loadState.loading,\n      formatCreateLabel,\n      autoFocus: true,\n      isOpen: !loadState.loading,\n      onCloseMenu: onClose,\n      allowCustomValue,\n      options: loadState.value ?? [],\n      onChange,\n      createOptionPosition: \"first\"\n    }\n  ));\n};\nconst Sel = ({ loadOptions, filterByLoadOptions, allowCustomValue, onChange, onClose }) => {\n  return filterByLoadOptions ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(SelReload, { loadOptions, allowCustomValue, onChange, onClose }) : /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\n    SelSingleLoad,\n    {\n      loadOptions,\n      allowCustomValue,\n      onChange,\n      onClose\n    }\n  );\n};\nconst Inp = ({ initialValue, onChange, onClose }) => {\n  const [currentValue, setCurrentValue] = (0,_hooks_useShadowedState__WEBPACK_IMPORTED_MODULE_3__.useShadowedState)(initialValue);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\n    _grafana_ui__WEBPACK_IMPORTED_MODULE_6__.Input,\n    {\n      autoFocus: true,\n      type: \"text\",\n      spellCheck: false,\n      onBlur: onClose,\n      onKeyDown: (e) => {\n        if (e.key === \"Enter\") {\n          onChange(currentValue);\n        }\n      },\n      onChange: (e) => {\n        setCurrentValue(e.currentTarget.value);\n      },\n      value: currentValue\n    }\n  );\n};\nconst defaultButtonClass = (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)({\n  width: \"auto\",\n  cursor: \"pointer\"\n});\nconst Seg = ({\n  value,\n  buttonClassName,\n  loadOptions,\n  filterByLoadOptions,\n  allowCustomValue,\n  onChange\n}) => {\n  const [isOpen, setOpen] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n  if (!isOpen) {\n    const className = (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.cx)(defaultButtonClass, buttonClassName);\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\n      _grafana_ui__WEBPACK_IMPORTED_MODULE_7__.InlineLabel,\n      {\n        as: \"button\",\n        className,\n        onClick: () => {\n          setOpen(true);\n        }\n      },\n      value\n    );\n  } else {\n    if (loadOptions !== void 0) {\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\n        Sel,\n        {\n          loadOptions,\n          filterByLoadOptions: filterByLoadOptions ?? false,\n          allowCustomValue,\n          onChange: (v) => {\n            setOpen(false);\n            onChange(v);\n          },\n          onClose: () => {\n            setOpen(false);\n          }\n        }\n      );\n    } else {\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\n        Inp,\n        {\n          initialValue: value,\n          onClose: () => {\n            setOpen(false);\n          },\n          onChange: (v) => {\n            setOpen(false);\n            onChange({ value: v, label: v });\n          }\n        }\n      );\n    }\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/influxdb/components/editor/query/influxql/visual/Seg.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/influxdb/components/editor/query/influxql/visual/TagsSection.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TagsSection: () => (/* binding */ TagsSection)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils_tagUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/components/editor/query/influxql/utils/tagUtils.ts\");\n/* harmony import */ var _utils_toSelectableValue__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/components/editor/query/influxql/utils/toSelectableValue.ts\");\n/* harmony import */ var _AddButton__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/components/editor/query/influxql/visual/AddButton.tsx\");\n/* harmony import */ var _Seg__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/components/editor/query/influxql/visual/Seg.tsx\");\n\n\n\n\n\n\nconst knownOperators = [\"=\", \"!=\", \"<>\", \"<\", \">\", \"=~\", \"!~\"];\nconst knownConditions = [\"AND\", \"OR\"];\nconst operatorOptions = knownOperators.map(_utils_toSelectableValue__WEBPACK_IMPORTED_MODULE_2__.toSelectableValue);\nconst condititonOptions = knownConditions.map(_utils_toSelectableValue__WEBPACK_IMPORTED_MODULE_2__.toSelectableValue);\nconst loadConditionOptions = () => Promise.resolve(condititonOptions);\nconst loadOperatorOptions = () => Promise.resolve(operatorOptions);\nconst Tag = ({ tag, isFirst, onRemove, onChange, getTagKeyOptions, getTagValueOptions }) => {\n  const operator = (0,_utils_tagUtils__WEBPACK_IMPORTED_MODULE_1__.getOperator)(tag);\n  const condition = (0,_utils_tagUtils__WEBPACK_IMPORTED_MODULE_1__.getCondition)(tag, isFirst);\n  const getTagKeySegmentOptions = () => {\n    return getTagKeyOptions().catch((err) => {\n      console.error(err);\n      return [];\n    }).then((tags) => [{ label: \"-- remove filter --\", value: void 0 }, ...tags.map(_utils_toSelectableValue__WEBPACK_IMPORTED_MODULE_2__.toSelectableValue)]);\n  };\n  const getTagValueSegmentOptions = () => {\n    return getTagValueOptions(tag.key).then((tags) => tags.map(_utils_toSelectableValue__WEBPACK_IMPORTED_MODULE_2__.toSelectableValue));\n  };\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", { className: \"gf-form\" }, condition != null && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n    _Seg__WEBPACK_IMPORTED_MODULE_4__.Seg,\n    {\n      value: condition,\n      loadOptions: loadConditionOptions,\n      onChange: (v) => {\n        onChange({ ...tag, condition: v.value });\n      }\n    }\n  ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n    _Seg__WEBPACK_IMPORTED_MODULE_4__.Seg,\n    {\n      allowCustomValue: true,\n      value: tag.key,\n      loadOptions: getTagKeySegmentOptions,\n      onChange: (v) => {\n        const { value } = v;\n        if (value === void 0) {\n          onRemove();\n        } else {\n          onChange({ ...tag, key: value ?? \"\" });\n        }\n      }\n    }\n  ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n    _Seg__WEBPACK_IMPORTED_MODULE_4__.Seg,\n    {\n      value: operator,\n      loadOptions: loadOperatorOptions,\n      onChange: (op) => {\n        onChange({ ...tag, operator: op.value });\n      }\n    }\n  ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n    _Seg__WEBPACK_IMPORTED_MODULE_4__.Seg,\n    {\n      allowCustomValue: true,\n      value: tag.value,\n      loadOptions: getTagValueSegmentOptions,\n      onChange: (v) => {\n        const value = v.value ?? \"\";\n        onChange({ ...tag, value, operator: (0,_utils_tagUtils__WEBPACK_IMPORTED_MODULE_1__.adjustOperatorIfNeeded)(operator, value) });\n      }\n    }\n  ));\n};\nconst TagsSection = ({ tags, onChange, getTagKeyOptions, getTagValueOptions }) => {\n  const onTagChange = (newTag, index) => {\n    const newTags = tags.map((tag, i) => {\n      return index === i ? newTag : tag;\n    });\n    onChange(newTags);\n  };\n  const onTagRemove = (index) => {\n    const newTags = tags.filter((t, i) => i !== index);\n    onChange(newTags);\n  };\n  const getTagKeySegmentOptions = () => {\n    return getTagKeyOptions().then((tags2) => tags2.map(_utils_toSelectableValue__WEBPACK_IMPORTED_MODULE_2__.toSelectableValue));\n  };\n  const addNewTag = (tagKey, isFirst) => {\n    const minimalTag = {\n      key: tagKey,\n      value: \"select tag value\"\n    };\n    const newTag = {\n      key: minimalTag.key,\n      value: minimalTag.value,\n      operator: (0,_utils_tagUtils__WEBPACK_IMPORTED_MODULE_1__.getOperator)(minimalTag),\n      condition: (0,_utils_tagUtils__WEBPACK_IMPORTED_MODULE_1__.getCondition)(minimalTag, isFirst)\n    };\n    onChange([...tags, newTag]);\n  };\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, tags.map((t, i) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n    Tag,\n    {\n      tag: t,\n      isFirst: i === 0,\n      key: i,\n      onChange: (newT) => {\n        onTagChange(newT, i);\n      },\n      onRemove: () => {\n        onTagRemove(i);\n      },\n      getTagKeyOptions,\n      getTagValueOptions\n    }\n  )), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n    _AddButton__WEBPACK_IMPORTED_MODULE_3__.AddButton,\n    {\n      allowCustomValue: true,\n      loadOptions: getTagKeySegmentOptions,\n      onAdd: (v) => {\n        addNewTag(v, tags.length === 0);\n      }\n    }\n  ));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/influxdb/components/editor/query/influxql/visual/TagsSection.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/influxdb/components/editor/query/influxql/visual/VisualInfluxQLEditor.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VisualInfluxQLEditor: () => (/* binding */ VisualInfluxQLEditor)\n/* harmony export */ });\n/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/@emotion-css-npm-11.11.2-dbfa42cf83-1edea109df.zip/node_modules/@emotion/css/dist/emotion-css.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/themes/ThemeContext.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Segment/SegmentSection.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Forms/InlineLabel.tsx\");\n/* harmony import */ var _influxql_metadata_query__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/influxql_metadata_query.ts\");\n/* harmony import */ var _queryUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/queryUtils.ts\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/components/editor/constants.ts\");\n/* harmony import */ var _utils_filterTags__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/components/editor/query/influxql/utils/filterTags.ts\");\n/* harmony import */ var _utils_partListUtils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/components/editor/query/influxql/utils/partListUtils.tsx\");\n/* harmony import */ var _utils_withTemplateVariableOptions__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/components/editor/query/influxql/utils/withTemplateVariableOptions.ts\");\n/* harmony import */ var _utils_wrapper__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/components/editor/query/influxql/utils/wrapper.ts\");\n/* harmony import */ var _FormatAsSection__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/components/editor/query/influxql/visual/FormatAsSection.tsx\");\n/* harmony import */ var _FromSection__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/components/editor/query/influxql/visual/FromSection.tsx\");\n/* harmony import */ var _InputSection__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/components/editor/query/influxql/visual/InputSection.tsx\");\n/* harmony import */ var _OrderByTimeSection__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/components/editor/query/influxql/visual/OrderByTimeSection.tsx\");\n/* harmony import */ var _PartListSection__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/components/editor/query/influxql/visual/PartListSection.tsx\");\n/* harmony import */ var _TagsSection__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/components/editor/query/influxql/visual/TagsSection.tsx\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst VisualInfluxQLEditor = (props) => {\n  const uniqueId = (0,react__WEBPACK_IMPORTED_MODULE_1__.useId)();\n  const formatAsId = `influxdb-qe-format-as-${uniqueId}`;\n  const orderByTimeId = `influxdb-qe-order-by${uniqueId}`;\n  const styles = (0,_grafana_ui__WEBPACK_IMPORTED_MODULE_15__.useStyles2)(getStyles);\n  const query = (0,_queryUtils__WEBPACK_IMPORTED_MODULE_3__.normalizeQuery)(props.query);\n  const { datasource } = props;\n  const { measurement, policy } = query;\n  const allTagKeys = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(async () => {\n    const tagKeys = (await (0,_influxql_metadata_query__WEBPACK_IMPORTED_MODULE_2__.getTagKeysForMeasurementAndTags)(datasource, [], measurement, policy)).map(\n      (tag) => `${tag}::tag`\n    );\n    const fieldKeys = (await (0,_influxql_metadata_query__WEBPACK_IMPORTED_MODULE_2__.getFieldKeysForMeasurement)(datasource, measurement || \"\", policy)).map(\n      (field) => `${field}::field`\n    );\n    return /* @__PURE__ */ new Set([...tagKeys, ...fieldKeys]);\n  }, [measurement, policy, datasource]);\n  const selectLists = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => {\n    const dynamicSelectPartOptions = /* @__PURE__ */ new Map([\n      [\n        \"field_0\",\n        () => {\n          return measurement !== void 0 ? (0,_influxql_metadata_query__WEBPACK_IMPORTED_MODULE_2__.getFieldKeysForMeasurement)(datasource, measurement, policy) : Promise.resolve([]);\n        }\n      ]\n    ]);\n    return (query.select ?? []).map((sel) => (0,_utils_partListUtils__WEBPACK_IMPORTED_MODULE_6__.makePartList)(sel, dynamicSelectPartOptions));\n  }, [measurement, policy, query.select, datasource]);\n  const getTagKeys = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => async () => {\n      const selectedTagKeys = new Set(query.tags?.map((tag) => tag.key));\n      return [...await allTagKeys].filter((tagKey) => !selectedTagKeys.has(tagKey));\n    },\n    [query.tags, allTagKeys]\n  );\n  const groupByList = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => {\n    const dynamicGroupByPartOptions = /* @__PURE__ */ new Map([[\"tag_0\", getTagKeys]]);\n    return (0,_utils_partListUtils__WEBPACK_IMPORTED_MODULE_6__.makePartList)(query.groupBy ?? [], dynamicGroupByPartOptions);\n  }, [getTagKeys, query.groupBy]);\n  const onAppliedChange = (newQuery) => {\n    props.onChange(newQuery);\n    props.onRunQuery();\n  };\n  const handleFromSectionChange = (p, m) => {\n    onAppliedChange({\n      ...query,\n      policy: p,\n      measurement: m\n    });\n  };\n  const handleTagsSectionChange = (tags) => {\n    onAppliedChange({\n      ...query,\n      tags: tags.length === 0 ? void 0 : tags\n    });\n  };\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_16__.SegmentSection, { label: \"FROM\", fill: true }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n    _FromSection__WEBPACK_IMPORTED_MODULE_10__.FromSection,\n    {\n      policy,\n      measurement,\n      getPolicyOptions: () => (0,_utils_withTemplateVariableOptions__WEBPACK_IMPORTED_MODULE_7__.withTemplateVariableOptions)((0,_influxql_metadata_query__WEBPACK_IMPORTED_MODULE_2__.getAllPolicies)(datasource), _utils_wrapper__WEBPACK_IMPORTED_MODULE_8__.wrapPure),\n      getMeasurementOptions: (filter) => (0,_utils_withTemplateVariableOptions__WEBPACK_IMPORTED_MODULE_7__.withTemplateVariableOptions)(\n        allTagKeys.then(\n          (keys) => (0,_influxql_metadata_query__WEBPACK_IMPORTED_MODULE_2__.getAllMeasurementsForTags)(\n            datasource,\n            (0,_utils_filterTags__WEBPACK_IMPORTED_MODULE_5__.filterTags)(query.tags ?? [], keys),\n            filter === \"\" ? void 0 : filter\n          )\n        ),\n        _utils_wrapper__WEBPACK_IMPORTED_MODULE_8__.wrapRegex,\n        filter\n      ),\n      onChange: handleFromSectionChange\n    }\n  ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_17__.InlineLabel, { width: \"auto\", className: styles.inlineLabel }, \"WHERE\"), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n    _TagsSection__WEBPACK_IMPORTED_MODULE_14__.TagsSection,\n    {\n      tags: query.tags ?? [],\n      onChange: handleTagsSectionChange,\n      getTagKeyOptions: getTagKeys,\n      getTagValueOptions: (key) => (0,_utils_withTemplateVariableOptions__WEBPACK_IMPORTED_MODULE_7__.withTemplateVariableOptions)(\n        allTagKeys.then((keys) => (0,_influxql_metadata_query__WEBPACK_IMPORTED_MODULE_2__.getTagValues)(datasource, (0,_utils_filterTags__WEBPACK_IMPORTED_MODULE_5__.filterTags)(query.tags ?? [], keys), key)),\n        _utils_wrapper__WEBPACK_IMPORTED_MODULE_8__.wrapRegex\n      )\n    }\n  )), selectLists.map((sel, index) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_16__.SegmentSection, { key: index, label: index === 0 ? \"SELECT\" : \"\", fill: true }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n    _PartListSection__WEBPACK_IMPORTED_MODULE_13__.PartListSection,\n    {\n      parts: sel,\n      getNewPartOptions: () => Promise.resolve((0,_utils_partListUtils__WEBPACK_IMPORTED_MODULE_6__.getNewSelectPartOptions)()),\n      onChange: (partIndex, newParams) => {\n        const newQuery = (0,_queryUtils__WEBPACK_IMPORTED_MODULE_3__.changeSelectPart)(query, index, partIndex, newParams);\n        onAppliedChange(newQuery);\n      },\n      onAddNewPart: (type) => {\n        onAppliedChange((0,_queryUtils__WEBPACK_IMPORTED_MODULE_3__.addNewSelectPart)(query, type, index));\n      },\n      onRemovePart: (partIndex) => {\n        onAppliedChange((0,_queryUtils__WEBPACK_IMPORTED_MODULE_3__.removeSelectPart)(query, partIndex, index));\n      }\n    }\n  ))), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_16__.SegmentSection, { label: \"GROUP BY\", fill: true }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n    _PartListSection__WEBPACK_IMPORTED_MODULE_13__.PartListSection,\n    {\n      parts: groupByList,\n      getNewPartOptions: () => (0,_utils_partListUtils__WEBPACK_IMPORTED_MODULE_6__.getNewGroupByPartOptions)(query, getTagKeys),\n      onChange: (partIndex, newParams) => {\n        const newQuery = (0,_queryUtils__WEBPACK_IMPORTED_MODULE_3__.changeGroupByPart)(query, partIndex, newParams);\n        onAppliedChange(newQuery);\n      },\n      onAddNewPart: (type) => {\n        onAppliedChange((0,_queryUtils__WEBPACK_IMPORTED_MODULE_3__.addNewGroupByPart)(query, type));\n      },\n      onRemovePart: (partIndex) => {\n        onAppliedChange((0,_queryUtils__WEBPACK_IMPORTED_MODULE_3__.removeGroupByPart)(query, partIndex));\n      }\n    }\n  )), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_16__.SegmentSection, { label: \"TIMEZONE\", fill: true }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n    _InputSection__WEBPACK_IMPORTED_MODULE_11__.InputSection,\n    {\n      placeholder: \"(optional)\",\n      value: query.tz,\n      onChange: (tz) => {\n        onAppliedChange({ ...query, tz });\n      }\n    }\n  ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_17__.InlineLabel, { htmlFor: orderByTimeId, width: \"auto\", className: styles.inlineLabel }, \"ORDER BY TIME\"), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n    _OrderByTimeSection__WEBPACK_IMPORTED_MODULE_12__.OrderByTimeSection,\n    {\n      inputId: orderByTimeId,\n      value: query.orderByTime === \"DESC\" ? \"DESC\" : \"ASC\",\n      onChange: (v) => {\n        onAppliedChange({ ...query, orderByTime: v });\n      }\n    }\n  )), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_16__.SegmentSection, { label: \"LIMIT\", fill: true }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n    _InputSection__WEBPACK_IMPORTED_MODULE_11__.InputSection,\n    {\n      placeholder: \"(optional)\",\n      value: query.limit?.toString(),\n      onChange: (limit) => {\n        onAppliedChange({ ...query, limit });\n      }\n    }\n  ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_17__.InlineLabel, { width: \"auto\", className: styles.inlineLabel }, \"SLIMIT\"), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n    _InputSection__WEBPACK_IMPORTED_MODULE_11__.InputSection,\n    {\n      placeholder: \"(optional)\",\n      value: query.slimit?.toString(),\n      onChange: (slimit) => {\n        onAppliedChange({ ...query, slimit });\n      }\n    }\n  )), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_16__.SegmentSection, { htmlFor: formatAsId, label: \"FORMAT AS\", fill: true }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n    _FormatAsSection__WEBPACK_IMPORTED_MODULE_9__.FormatAsSection,\n    {\n      inputId: formatAsId,\n      format: query.resultFormat ?? _constants__WEBPACK_IMPORTED_MODULE_4__.DEFAULT_RESULT_FORMAT,\n      onChange: (format) => {\n        onAppliedChange({ ...query, resultFormat: format });\n      }\n    }\n  ), query.resultFormat !== \"table\" && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement((react__WEBPACK_IMPORTED_MODULE_1___default().Fragment), null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_17__.InlineLabel, { width: \"auto\", className: styles.inlineLabel }, \"ALIAS\"), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n    _InputSection__WEBPACK_IMPORTED_MODULE_11__.InputSection,\n    {\n      isWide: true,\n      placeholder: \"Naming pattern\",\n      value: query.alias,\n      onChange: (alias) => {\n        onAppliedChange({ ...query, alias });\n      }\n    }\n  ))));\n};\nfunction getStyles(theme) {\n  return {\n    inlineLabel: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n      color: ${theme.colors.primary.text};\n    `\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/influxdb/components/editor/query/influxql/visual/VisualInfluxQLEditor.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/influxdb/components/editor/query/influxql/visual/styles.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   paddingRightClass: () => (/* binding */ paddingRightClass)\n/* harmony export */ });\n/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/@emotion-css-npm-11.11.2-dbfa42cf83-1edea109df.zip/node_modules/@emotion/css/dist/emotion-css.esm.js\");\n\n\nconst paddingRightClass = (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)({\n  paddingRight: \"4px\"\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9pbmZsdXhkYi9jb21wb25lbnRzL2VkaXRvci9xdWVyeS9pbmZsdXhxbC92aXN1YWwvc3R5bGVzLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFvQjtBQUViLE1BQU0sb0JBQW9CLGlEQUFHLENBQUM7QUFBQSxFQUNuQyxjQUFjO0FBQ2hCLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ncmFmYW5hLy4vcHVibGljL2FwcC9wbHVnaW5zL2RhdGFzb3VyY2UvaW5mbHV4ZGIvY29tcG9uZW50cy9lZGl0b3IvcXVlcnkvaW5mbHV4cWwvdmlzdWFsL3N0eWxlcy50cz82ZmI1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2Nzcyc7XG5cbmV4cG9ydCBjb25zdCBwYWRkaW5nUmlnaHRDbGFzcyA9IGNzcyh7XG4gIHBhZGRpbmdSaWdodDogJzRweCcsXG59KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/influxdb/components/editor/query/influxql/visual/styles.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/influxdb/components/editor/variable/VariableQueryEditor.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ VariableQueryEditor)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _grafana_ui_src__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/FormLabel/FormLabel.tsx\");\n/* harmony import */ var _grafana_ui_src__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/TextArea/TextArea.tsx\");\n/* harmony import */ var _query_flux_FluxQueryEditor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/components/editor/query/flux/FluxQueryEditor.tsx\");\n\n\n\n\nclass VariableQueryEditor extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent {\n  constructor() {\n    super(...arguments);\n    this.onRefresh = () => {\n    };\n  }\n  render() {\n    let { query, datasource, onChange } = this.props;\n    if (datasource.isFlux) {\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n        _query_flux_FluxQueryEditor__WEBPACK_IMPORTED_MODULE_1__.FluxQueryEditor,\n        {\n          datasource,\n          query: {\n            refId: \"A\",\n            query\n          },\n          onRunQuery: this.onRefresh,\n          onChange: (v) => onChange(v.query)\n        }\n      );\n    }\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", { className: \"gf-form-inline\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_grafana_ui_src__WEBPACK_IMPORTED_MODULE_2__.InlineFormLabel, { width: 10 }, \"Query\"), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", { className: \"gf-form-inline gf-form--grow\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n      _grafana_ui_src__WEBPACK_IMPORTED_MODULE_3__.TextArea,\n      {\n        defaultValue: query || \"\",\n        placeholder: \"metric name or tags query\",\n        rows: 1,\n        className: \"gf-form-input\",\n        onBlur: (e) => onChange(e.currentTarget.value)\n      }\n    )));\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9pbmZsdXhkYi9jb21wb25lbnRzL2VkaXRvci92YXJpYWJsZS9WYXJpYWJsZVF1ZXJ5RWRpdG9yLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQXFDO0FBRUs7QUFHVjtBQVFqQixNQUFNLDRCQUE0QixnREFBYSxDQUFRO0FBQUEsRUFBdEU7QUFBQTtBQUNFLHFCQUFZLE1BQU07QUFBQSxJQUVsQjtBQUFBO0FBQUEsRUFFQSxTQUFTO0FBQ1AsUUFBSSxFQUFFLE9BQU8sWUFBWSxTQUFTLElBQUksS0FBSztBQUMzQyxRQUFJLFdBQVcsUUFBUTtBQUNyQixhQUNFO0FBQUEsUUFBQyx3RUFBZTtBQUFmO0FBQUEsVUFDQztBQUFBLFVBQ0EsT0FBTztBQUFBLFlBQ0wsT0FBTztBQUFBLFlBQ1A7QUFBQSxVQUNGO0FBQUEsVUFDQSxZQUFZLEtBQUs7QUFBQSxVQUNqQixVQUFVLENBQUMsTUFBTSxTQUFTLEVBQUUsS0FBSztBQUFBO0FBQUEsTUFDbkM7QUFBQSxJQUVKO0FBRUEsV0FDRSwyRUFBQyxTQUFJLFdBQVUsb0JBQ2IsMkVBQUMsNERBQWUsSUFBQyxPQUFPLE1BQUksT0FBSyxHQUNqQywyRUFBQyxTQUFJLFdBQVUsa0NBQ2I7QUFBQSxNQUFDLHFEQUFRO0FBQVI7QUFBQSxRQUNDLGNBQWMsU0FBUztBQUFBLFFBQ3ZCLGFBQVk7QUFBQSxRQUNaLE1BQU07QUFBQSxRQUNOLFdBQVU7QUFBQSxRQUNWLFFBQVEsQ0FBQyxNQUFNLFNBQVMsRUFBRSxjQUFjLEtBQUs7QUFBQTtBQUFBLElBQy9DLENBQ0YsQ0FDRjtBQUFBLEVBRUo7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2dyYWZhbmEvLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9pbmZsdXhkYi9jb21wb25lbnRzL2VkaXRvci92YXJpYWJsZS9WYXJpYWJsZVF1ZXJ5RWRpdG9yLnRzeD9jMjczIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBQdXJlQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgeyBJbmxpbmVGb3JtTGFiZWwsIFRleHRBcmVhIH0gZnJvbSAnQGdyYWZhbmEvdWkvc3JjJztcblxuaW1wb3J0IEluZmx1eERhdGFzb3VyY2UgZnJvbSAnLi4vLi4vLi4vZGF0YXNvdXJjZSc7XG5pbXBvcnQgeyBGbHV4UXVlcnlFZGl0b3IgfSBmcm9tICcuLi9xdWVyeS9mbHV4L0ZsdXhRdWVyeUVkaXRvcic7XG5cbmludGVyZmFjZSBQcm9wcyB7XG4gIHF1ZXJ5OiBzdHJpbmc7IC8vIGJlZm9yZSBmbHV4LCBpdCB3YXMgYWx3YXlzIGEgc3RyaW5nXG4gIG9uQ2hhbmdlOiAocXVlcnk/OiBzdHJpbmcpID0+IHZvaWQ7XG4gIGRhdGFzb3VyY2U6IEluZmx1eERhdGFzb3VyY2U7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFZhcmlhYmxlUXVlcnlFZGl0b3IgZXh0ZW5kcyBQdXJlQ29tcG9uZW50PFByb3BzPiB7XG4gIG9uUmVmcmVzaCA9ICgpID0+IHtcbiAgICAvLyBub29wXG4gIH07XG5cbiAgcmVuZGVyKCkge1xuICAgIGxldCB7IHF1ZXJ5LCBkYXRhc291cmNlLCBvbkNoYW5nZSB9ID0gdGhpcy5wcm9wcztcbiAgICBpZiAoZGF0YXNvdXJjZS5pc0ZsdXgpIHtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxGbHV4UXVlcnlFZGl0b3JcbiAgICAgICAgICBkYXRhc291cmNlPXtkYXRhc291cmNlfVxuICAgICAgICAgIHF1ZXJ5PXt7XG4gICAgICAgICAgICByZWZJZDogJ0EnLFxuICAgICAgICAgICAgcXVlcnksXG4gICAgICAgICAgfX1cbiAgICAgICAgICBvblJ1blF1ZXJ5PXt0aGlzLm9uUmVmcmVzaH1cbiAgICAgICAgICBvbkNoYW5nZT17KHYpID0+IG9uQ2hhbmdlKHYucXVlcnkpfVxuICAgICAgICAvPlxuICAgICAgKTtcbiAgICB9XG5cbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJnZi1mb3JtLWlubGluZVwiPlxuICAgICAgICA8SW5saW5lRm9ybUxhYmVsIHdpZHRoPXsxMH0+UXVlcnk8L0lubGluZUZvcm1MYWJlbD5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJnZi1mb3JtLWlubGluZSBnZi1mb3JtLS1ncm93XCI+XG4gICAgICAgICAgPFRleHRBcmVhXG4gICAgICAgICAgICBkZWZhdWx0VmFsdWU9e3F1ZXJ5IHx8ICcnfVxuICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJtZXRyaWMgbmFtZSBvciB0YWdzIHF1ZXJ5XCJcbiAgICAgICAgICAgIHJvd3M9ezF9XG4gICAgICAgICAgICBjbGFzc05hbWU9XCJnZi1mb3JtLWlucHV0XCJcbiAgICAgICAgICAgIG9uQmx1cj17KGUpID0+IG9uQ2hhbmdlKGUuY3VycmVudFRhcmdldC52YWx1ZSl9XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/influxdb/components/editor/variable/VariableQueryEditor.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/influxdb/constants.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BROWSER_MODE_DISABLED_MESSAGE: () => (/* binding */ BROWSER_MODE_DISABLED_MESSAGE)\n/* harmony export */ });\n\nconst BROWSER_MODE_DISABLED_MESSAGE = \"Direct browser access in the InfluxDB datasource is no longer available. Switch to server access mode.\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9pbmZsdXhkYi9jb25zdGFudHMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTyxNQUFNLGdDQUNYIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ3JhZmFuYS8uL3B1YmxpYy9hcHAvcGx1Z2lucy9kYXRhc291cmNlL2luZmx1eGRiL2NvbnN0YW50cy50cz84NGRhIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBCUk9XU0VSX01PREVfRElTQUJMRURfTUVTU0FHRSA9XG4gICdEaXJlY3QgYnJvd3NlciBhY2Nlc3MgaW4gdGhlIEluZmx1eERCIGRhdGFzb3VyY2UgaXMgbm8gbG9uZ2VyIGF2YWlsYWJsZS4gU3dpdGNoIHRvIHNlcnZlciBhY2Nlc3MgbW9kZS4nO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/influxdb/constants.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/influxdb/datasource.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ InfluxDatasource)\n/* harmony export */ });\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/lodash-npm-4.17.21-6382451519-eb835a2e51.zip/node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(\"./.yarn/cache/rxjs-npm-7.8.0-722f1c7172-61b4d4fd32.zip/node_modules/rxjs/dist/esm5/internal/observable/throwError.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(\"./.yarn/cache/rxjs-npm-7.8.0-722f1c7172-61b4d4fd32.zip/node_modules/rxjs/dist/esm5/internal/Observable.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(\"./.yarn/cache/rxjs-npm-7.8.0-722f1c7172-61b4d4fd32.zip/node_modules/rxjs/dist/esm5/internal/observable/merge.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(\"./.yarn/cache/rxjs-npm-7.8.0-722f1c7172-61b4d4fd32.zip/node_modules/rxjs/dist/esm5/internal/lastValueFrom.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(\"./.yarn/cache/rxjs-npm-7.8.0-722f1c7172-61b4d4fd32.zip/node_modules/rxjs/dist/esm5/internal/observable/of.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(\"./.yarn/cache/rxjs-npm-7.8.0-722f1c7172-61b4d4fd32.zip/node_modules/rxjs/dist/esm5/internal/operators/map.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(\"./.yarn/cache/rxjs-npm-7.8.0-722f1c7172-61b4d4fd32.zip/node_modules/rxjs/dist/esm5/internal/operators/catchError.js\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/dataframe/processDataFrame.ts\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/datetime/datemath.ts\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/types/dataFrame.ts\");\n/* harmony import */ var _grafana_runtime__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-runtime-virtual-68c57d4c0c/1/packages/grafana-runtime/src/utils/DataSourceWithBackend.ts\");\n/* harmony import */ var _grafana_runtime__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-runtime-virtual-68c57d4c0c/1/packages/grafana-runtime/src/utils/queryResponse.ts\");\n/* harmony import */ var _grafana_runtime__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-runtime-virtual-68c57d4c0c/1/packages/grafana-runtime/src/services/backendSrv.ts\");\n/* harmony import */ var app_core_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/core/config.ts\");\n/* harmony import */ var app_features_templating_template_srv__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/features/templating/template_srv.ts\");\n/* harmony import */ var _components_editor_annotation_AnnotationEditor__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/components/editor/annotation/AnnotationEditor.tsx\");\n/* harmony import */ var _components_editor_query_flux_FluxQueryEditor__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/components/editor/query/flux/FluxQueryEditor.tsx\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/constants.ts\");\n/* harmony import */ var _influx_query_model__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/influx_query_model.ts\");\n/* harmony import */ var _influx_series__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/influx_series.ts\");\n/* harmony import */ var _influxql_query_builder__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/influxql_query_builder.ts\");\n/* harmony import */ var _migrations__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/migrations.ts\");\n/* harmony import */ var _queryUtils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/queryUtils.ts\");\n/* harmony import */ var _response_parser__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/response_parser.ts\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/types.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass InfluxDatasource extends _grafana_runtime__WEBPACK_IMPORTED_MODULE_13__.DataSourceWithBackend {\n  constructor(instanceSettings, templateSrv = (0,app_features_templating_template_srv__WEBPACK_IMPORTED_MODULE_2__.getTemplateSrv)()) {\n    super(instanceSettings);\n    this.templateSrv = templateSrv;\n    this.type = \"influxdb\";\n    this.urls = (instanceSettings.url ?? \"\").split(\",\").map((url) => {\n      return url.trim();\n    });\n    this.username = instanceSettings.username ?? \"\";\n    this.password = instanceSettings.password ?? \"\";\n    this.name = instanceSettings.name;\n    this.basicAuth = instanceSettings.basicAuth;\n    this.withCredentials = instanceSettings.withCredentials;\n    this.access = instanceSettings.access;\n    const settingsData = instanceSettings.jsonData ?? {};\n    this.database = settingsData.dbName ?? instanceSettings.database;\n    this.interval = settingsData.timeInterval;\n    this.httpMode = settingsData.httpMode || \"GET\";\n    this.responseParser = new _response_parser__WEBPACK_IMPORTED_MODULE_11__[\"default\"]();\n    this.isFlux = settingsData.version === _types__WEBPACK_IMPORTED_MODULE_12__.InfluxVersion.Flux;\n    this.isProxyAccess = instanceSettings.access === \"proxy\";\n    if (this.isFlux) {\n      this.annotations = {\n        QueryEditor: _components_editor_query_flux_FluxQueryEditor__WEBPACK_IMPORTED_MODULE_4__.FluxQueryEditor\n      };\n    } else {\n      this.annotations = {\n        QueryEditor: _components_editor_annotation_AnnotationEditor__WEBPACK_IMPORTED_MODULE_3__.AnnotationEditor,\n        prepareAnnotation: _migrations__WEBPACK_IMPORTED_MODULE_9__.prepareAnnotation\n      };\n    }\n  }\n  query(request) {\n    if (!this.isProxyAccess) {\n      const error = new Error(_constants__WEBPACK_IMPORTED_MODULE_5__.BROWSER_MODE_DISABLED_MESSAGE);\n      return (0,rxjs__WEBPACK_IMPORTED_MODULE_14__.throwError)(() => error);\n    }\n    return this._query(request);\n  }\n  _query(request) {\n    const filteredRequest = {\n      ...request,\n      targets: request.targets.filter((t) => t.hide !== true)\n    };\n    if (filteredRequest.targets.some((target) => target.fromAnnotations)) {\n      const streams = [];\n      for (const target of filteredRequest.targets) {\n        if (target.query) {\n          streams.push(\n            new rxjs__WEBPACK_IMPORTED_MODULE_15__.Observable((subscriber) => {\n              this.annotationEvents(filteredRequest, target).then((events) => subscriber.next({ data: [(0,_grafana_data__WEBPACK_IMPORTED_MODULE_16__.toDataFrame)(events)] })).catch((ex) => subscriber.error(new Error(ex))).finally(() => subscriber.complete());\n            })\n          );\n        }\n      }\n      return (0,rxjs__WEBPACK_IMPORTED_MODULE_17__.merge)(...streams);\n    }\n    if (this.isFlux) {\n      return super.query(filteredRequest);\n    }\n    if (this.isMigrationToggleOnAndIsAccessProxy()) {\n      return super.query(filteredRequest).pipe(\n        (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_18__.map)((res) => {\n          if (res.error) {\n            throw {\n              message: \"InfluxDB Error: \" + res.error.message,\n              res\n            };\n          }\n          const groupedFrames = (0,lodash__WEBPACK_IMPORTED_MODULE_0__.groupBy)(res.data, (x) => x.refId);\n          if (Object.keys(groupedFrames).length === 0) {\n            return { data: [] };\n          }\n          const seriesList = [];\n          filteredRequest.targets.forEach((target) => {\n            const filteredFrames = groupedFrames[target.refId] ?? [];\n            switch (target.resultFormat) {\n              case \"logs\":\n              case \"table\":\n                seriesList.push(\n                  this.responseParser.getTable(filteredFrames, target, {\n                    preferredVisualisationType: target.resultFormat\n                  })\n                );\n                break;\n              default: {\n                for (let i = 0; i < filteredFrames.length; i++) {\n                  seriesList.push(filteredFrames[i]);\n                }\n                break;\n              }\n            }\n          });\n          return { data: seriesList };\n        })\n      );\n    }\n    return this.classicQuery(request);\n  }\n  getQueryDisplayText(query) {\n    if (this.isFlux) {\n      return query.query;\n    }\n    return new _influx_query_model__WEBPACK_IMPORTED_MODULE_6__[\"default\"](query).render(false);\n  }\n  /**\n   * Returns false if the query should be skipped\n   */\n  filterQuery(query) {\n    if (this.isFlux) {\n      return !!query.query;\n    }\n    return true;\n  }\n  applyTemplateVariables(query, scopedVars) {\n    const { __interval, __interval_ms, ...rest } = scopedVars || {};\n    if (this.isFlux) {\n      return {\n        ...query,\n        query: this.templateSrv.replace(query.query ?? \"\", rest)\n        // The raw query text\n      };\n    }\n    if (this.isMigrationToggleOnAndIsAccessProxy()) {\n      query = this.applyVariables(query, scopedVars, rest);\n    }\n    return query;\n  }\n  targetContainsTemplate(target) {\n    const queryText = this.isFlux ? target.query : (0,_queryUtils__WEBPACK_IMPORTED_MODULE_10__.buildRawQuery)(target);\n    return this.templateSrv.containsTemplate(queryText);\n  }\n  interpolateVariablesInQueries(queries, scopedVars) {\n    if (!queries || queries.length === 0) {\n      return [];\n    }\n    return queries.map((query) => {\n      if (this.isFlux) {\n        return {\n          ...query,\n          datasource: this.getRef(),\n          query: this.templateSrv.replace(query.query ?? \"\", scopedVars, \"regex\")\n          // The raw query text\n        };\n      }\n      return {\n        ...query,\n        datasource: this.getRef(),\n        ...this.applyVariables(query, scopedVars, scopedVars)\n      };\n    });\n  }\n  applyVariables(query, scopedVars, rest) {\n    const expandedQuery = { ...query };\n    if (query.groupBy) {\n      expandedQuery.groupBy = query.groupBy.map((groupBy2) => {\n        return {\n          ...groupBy2,\n          params: groupBy2.params?.map((param) => {\n            return this.templateSrv.replace(param.toString(), void 0, \"regex\");\n          })\n        };\n      });\n    }\n    if (query.select) {\n      expandedQuery.select = query.select.map((selects) => {\n        return selects.map((select) => {\n          return {\n            ...select,\n            params: select.params?.map((param) => {\n              return this.templateSrv.replace(param.toString(), void 0, \"regex\");\n            })\n          };\n        });\n      });\n    }\n    if (query.tags) {\n      expandedQuery.tags = query.tags.map((tag) => {\n        return {\n          ...tag,\n          value: this.templateSrv.replace(tag.value, scopedVars, \"regex\")\n        };\n      });\n    }\n    return {\n      ...expandedQuery,\n      adhocFilters: this.templateSrv.getAdhocFilters(this.name) ?? [],\n      query: this.templateSrv.replace(query.query ?? \"\", rest, \"regex\"),\n      // The raw query text\n      alias: this.templateSrv.replace(query.alias ?? \"\", scopedVars),\n      limit: this.templateSrv.replace(query.limit?.toString() ?? \"\", scopedVars, \"regex\"),\n      measurement: this.templateSrv.replace(query.measurement ?? \"\", scopedVars, \"regex\"),\n      policy: this.templateSrv.replace(query.policy ?? \"\", scopedVars, \"regex\"),\n      slimit: this.templateSrv.replace(query.slimit?.toString() ?? \"\", scopedVars, \"regex\"),\n      tz: this.templateSrv.replace(query.tz ?? \"\", scopedVars)\n    };\n  }\n  async runMetadataQuery(target) {\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_19__.lastValueFrom)(\n      super.query({\n        targets: [target]\n      })\n    ).then((rsp) => {\n      if (rsp.data?.length) {\n        return (0,_grafana_runtime__WEBPACK_IMPORTED_MODULE_20__.frameToMetricFindValue)(rsp.data[0]);\n      }\n      return [];\n    });\n  }\n  async metricFindQuery(query, options) {\n    if (this.isFlux || this.isMigrationToggleOnAndIsAccessProxy()) {\n      const target = {\n        refId: \"metricFindQuery\",\n        query,\n        rawQuery: true\n      };\n      return (0,rxjs__WEBPACK_IMPORTED_MODULE_19__.lastValueFrom)(\n        super.query({\n          ...options,\n          // includes 'range'\n          targets: [target]\n        })\n      ).then((rsp) => {\n        if (rsp.data?.length) {\n          return (0,_grafana_runtime__WEBPACK_IMPORTED_MODULE_20__.frameToMetricFindValue)(rsp.data[0]);\n        }\n        return [];\n      });\n    }\n    const interpolated = new _influx_query_model__WEBPACK_IMPORTED_MODULE_6__[\"default\"](\n      {\n        refId: \"metricFindQuery\",\n        query,\n        rawQuery: true\n      },\n      this.templateSrv,\n      options.scopedVars\n    ).render(true);\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_19__.lastValueFrom)(this._seriesQuery(interpolated, options)).then((resp) => {\n      return this.responseParser.parse(query, resp);\n    });\n  }\n  // By implementing getTagKeys and getTagValues we add ad-hoc filters functionality\n  // Used in public/app/features/variables/adhoc/picker/AdHocFilterKey.tsx::fetchFilterKeys\n  getTagKeys(options) {\n    const query = (0,_influxql_query_builder__WEBPACK_IMPORTED_MODULE_8__.buildMetadataQuery)({\n      type: \"TAG_KEYS\",\n      templateService: this.templateSrv,\n      database: this.database,\n      measurement: options.measurement ?? \"\",\n      tags: []\n    });\n    return this.metricFindQuery(query, options);\n  }\n  getTagValues(options) {\n    const query = (0,_influxql_query_builder__WEBPACK_IMPORTED_MODULE_8__.buildMetadataQuery)({\n      type: \"TAG_VALUES\",\n      templateService: this.templateSrv,\n      database: this.database,\n      withKey: options.key,\n      measurement: options.measurement ?? \"\",\n      tags: []\n    });\n    return this.metricFindQuery(query, options);\n  }\n  /**\n   * @deprecated\n   */\n  _seriesQuery(query, options) {\n    if (!query) {\n      return (0,rxjs__WEBPACK_IMPORTED_MODULE_21__.of)({ results: [] });\n    }\n    if (options && options.range) {\n      const timeFilter = this.getTimeFilter({ rangeRaw: options.range, timezone: options.timezone });\n      query = query.replace(\"$timeFilter\", timeFilter);\n    }\n    return this._influxRequest(this.httpMode, \"/query\", { q: query, epoch: \"ms\" }, options);\n  }\n  /**\n   * @deprecated\n   */\n  serializeParams(params) {\n    if (!params) {\n      return \"\";\n    }\n    return (0,lodash__WEBPACK_IMPORTED_MODULE_0__.reduce)(\n      params,\n      (memo, value, key) => {\n        if (value === null || value === void 0) {\n          return memo;\n        }\n        memo.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(value));\n        return memo;\n      },\n      []\n    ).join(\"&\");\n  }\n  /**\n   * @deprecated\n   */\n  _influxRequest(method, url, data, options) {\n    const currentUrl = this.urls.shift();\n    this.urls.push(currentUrl);\n    const params = {};\n    if (this.username) {\n      params.u = this.username;\n      params.p = this.password;\n    }\n    if (options && options.database) {\n      params.db = options.database;\n    } else if (this.database) {\n      params.db = this.database;\n    }\n    if (options?.policy && options.policy !== _types__WEBPACK_IMPORTED_MODULE_12__.DEFAULT_POLICY) {\n      params.rp = options.policy;\n    }\n    const { q } = data;\n    if (method === \"POST\" && (0,lodash__WEBPACK_IMPORTED_MODULE_0__.has)(data, \"q\")) {\n      (0,lodash__WEBPACK_IMPORTED_MODULE_0__.extend)(params, (0,lodash__WEBPACK_IMPORTED_MODULE_0__.omit)(data, [\"q\"]));\n      data = this.serializeParams((0,lodash__WEBPACK_IMPORTED_MODULE_0__.pick)(data, [\"q\"]));\n    } else if (method === \"GET\" || method === \"POST\") {\n      (0,lodash__WEBPACK_IMPORTED_MODULE_0__.extend)(params, data);\n      data = null;\n    }\n    const req = {\n      method,\n      url: currentUrl + url,\n      params,\n      data,\n      precision: \"ms\",\n      inspect: { type: \"influxdb\" },\n      paramSerializer: this.serializeParams\n    };\n    req.headers = req.headers || {};\n    if (this.basicAuth || this.withCredentials) {\n      req.withCredentials = true;\n    }\n    if (this.basicAuth) {\n      req.headers.Authorization = this.basicAuth;\n    }\n    if (method === \"POST\") {\n      req.headers[\"Content-type\"] = \"application/x-www-form-urlencoded\";\n    }\n    return (0,_grafana_runtime__WEBPACK_IMPORTED_MODULE_22__.getBackendSrv)().fetch(req).pipe(\n      (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_18__.map)((result) => {\n        const { data: data2 } = result;\n        if (data2) {\n          data2.executedQueryString = q;\n          if (data2.results) {\n            const errors = result.data.results.filter((elem) => elem.error);\n            if (errors.length > 0) {\n              throw {\n                message: \"InfluxDB Error: \" + errors[0].error,\n                data: data2\n              };\n            }\n          }\n        }\n        return data2;\n      }),\n      (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_23__.catchError)((err) => {\n        if (err.cancelled) {\n          return (0,rxjs__WEBPACK_IMPORTED_MODULE_21__.of)(err);\n        }\n        return (0,rxjs__WEBPACK_IMPORTED_MODULE_14__.throwError)(this.handleErrors(err));\n      })\n    );\n  }\n  /**\n   * @deprecated\n   */\n  handleErrors(err) {\n    const error = {\n      message: err && err.status || err && err.message || \"Unknown error during query transaction. Please check JS console logs.\"\n    };\n    if (Number.isInteger(err.status) && err.status !== 0 || err.status >= 300) {\n      if (err.data && err.data.error) {\n        error.message = \"InfluxDB Error: \" + err.data.error;\n        error.data = err.data;\n        error.config = err.config;\n      } else {\n        error.message = \"Network Error: \" + err.statusText + \"(\" + err.status + \")\";\n        error.data = err.data;\n        error.config = err.config;\n      }\n    }\n    return error;\n  }\n  getTimeFilter(options) {\n    const from = this.getInfluxTime(options.rangeRaw.from, false, options.timezone);\n    const until = this.getInfluxTime(options.rangeRaw.to, true, options.timezone);\n    return \"time >= \" + from + \" and time <= \" + until;\n  }\n  getInfluxTime(date, roundUp, timezone) {\n    let outPutDate;\n    if ((0,lodash__WEBPACK_IMPORTED_MODULE_0__.isString)(date)) {\n      if (date === \"now\") {\n        return \"now()\";\n      }\n      const parts = /^now-(\\d+)([dhms])$/.exec(date);\n      if (parts) {\n        const amount = parseInt(parts[1], 10);\n        const unit = parts[2];\n        return \"now() - \" + amount + unit;\n      }\n      outPutDate = _grafana_data__WEBPACK_IMPORTED_MODULE_24__.parse(date, roundUp, timezone);\n      if (!outPutDate) {\n        throw new Error(\"unable to parse date\");\n      }\n      date = outPutDate;\n    }\n    return date.valueOf() + \"ms\";\n  }\n  // ------------------------ Legacy Code - Before Backend Migration ---------------\n  isMigrationToggleOnAndIsAccessProxy() {\n    return app_core_config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].featureToggles.influxdbBackendMigration && this.access === \"proxy\";\n  }\n  /**\n   * The unchanged pre 7.1 query implementation\n   * @deprecated\n   */\n  classicQuery(options) {\n    let timeFilter = this.getTimeFilter(options);\n    const scopedVars = options.scopedVars;\n    const targets = (0,lodash__WEBPACK_IMPORTED_MODULE_0__.cloneDeep)(options.targets);\n    const queryTargets = [];\n    let i, y;\n    let allQueries = (0,lodash__WEBPACK_IMPORTED_MODULE_0__.map)(targets, (target) => {\n      if (target.hide) {\n        return \"\";\n      }\n      queryTargets.push(target);\n      scopedVars.interval = scopedVars.__interval;\n      return new _influx_query_model__WEBPACK_IMPORTED_MODULE_6__[\"default\"](target, this.templateSrv, scopedVars).render(true);\n    }).reduce((acc, current) => {\n      if (current !== \"\") {\n        acc += \";\" + current;\n      }\n      return acc;\n    });\n    if (allQueries === \"\") {\n      return (0,rxjs__WEBPACK_IMPORTED_MODULE_21__.of)({ data: [] });\n    }\n    const adhocFilters = this.templateSrv.getAdhocFilters(this.name);\n    const adhocFiltersFromDashboard = options.targets.flatMap((target) => target.adhocFilters ?? []);\n    if (adhocFilters?.length || adhocFiltersFromDashboard?.length) {\n      const ahFilters = adhocFilters?.length ? adhocFilters : adhocFiltersFromDashboard;\n      const tmpQuery = new _influx_query_model__WEBPACK_IMPORTED_MODULE_6__[\"default\"]({ refId: \"A\" }, this.templateSrv, scopedVars);\n      timeFilter += \" AND \" + tmpQuery.renderAdhocFilters(ahFilters);\n    }\n    scopedVars.timeFilter = { value: timeFilter };\n    allQueries = this.templateSrv.replace(allQueries, scopedVars);\n    return this._seriesQuery(allQueries, options).pipe(\n      (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_18__.map)((data) => {\n        if (!data || !data.results) {\n          return { data: [] };\n        }\n        const seriesList = [];\n        for (i = 0; i < data.results.length; i++) {\n          const result = data.results[i];\n          if (!result || !result.series) {\n            continue;\n          }\n          const target = queryTargets[i];\n          let alias = target.alias;\n          if (alias) {\n            alias = this.templateSrv.replace(target.alias, options.scopedVars);\n          }\n          const meta = {\n            executedQueryString: data.executedQueryString\n          };\n          const influxSeries = new _influx_series__WEBPACK_IMPORTED_MODULE_7__[\"default\"]({\n            refId: target.refId,\n            series: data.results[i].series,\n            alias,\n            meta\n          });\n          switch (target.resultFormat) {\n            case \"logs\":\n              meta.preferredVisualisationType = \"logs\";\n            case \"table\": {\n              seriesList.push(influxSeries.getTable());\n              break;\n            }\n            default: {\n              const timeSeries = influxSeries.getTimeSeries();\n              for (y = 0; y < timeSeries.length; y++) {\n                seriesList.push(timeSeriesToDataFrame(timeSeries[y]));\n              }\n              break;\n            }\n          }\n        }\n        return { data: seriesList };\n      })\n    );\n  }\n  async annotationEvents(options, annotation) {\n    if (this.isFlux) {\n      return Promise.reject({\n        message: \"Flux requires the standard annotation query\"\n      });\n    }\n    if (!annotation.query) {\n      return Promise.reject({\n        message: \"Query missing in annotation definition\"\n      });\n    }\n    if (this.isMigrationToggleOnAndIsAccessProxy()) {\n      const target = {\n        refId: \"metricFindQuery\",\n        datasource: this.getRef(),\n        query: this.templateSrv.replace(annotation.query, void 0, \"regex\"),\n        rawQuery: true\n      };\n      return (0,rxjs__WEBPACK_IMPORTED_MODULE_19__.lastValueFrom)(\n        (0,_grafana_runtime__WEBPACK_IMPORTED_MODULE_22__.getBackendSrv)().fetch({\n          url: \"/api/ds/query\",\n          method: \"POST\",\n          headers: this.getRequestHeaders(),\n          data: {\n            from: options.range.from.valueOf().toString(),\n            to: options.range.to.valueOf().toString(),\n            queries: [target]\n          },\n          requestId: annotation.name\n        }).pipe(\n          (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_18__.map)(\n            async (res) => await this.responseParser.transformAnnotationResponse(annotation, res, target)\n          )\n        )\n      );\n    }\n    const timeFilter = this.getTimeFilter({ rangeRaw: options.range.raw, timezone: options.timezone });\n    let query = annotation.query.replace(\"$timeFilter\", timeFilter);\n    query = this.templateSrv.replace(query, void 0, \"regex\");\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_19__.lastValueFrom)(this._seriesQuery(query, options)).then((data) => {\n      if (!data || !data.results || !data.results[0]) {\n        throw { message: \"No results in response from InfluxDB\" };\n      }\n      return new _influx_series__WEBPACK_IMPORTED_MODULE_7__[\"default\"]({\n        series: data.results[0].series,\n        annotation\n      }).getAnnotations();\n    });\n  }\n}\nfunction getFieldType(values) {\n  const firstNotNull = values.find((v) => v !== null);\n  if (firstNotNull === void 0) {\n    return _grafana_data__WEBPACK_IMPORTED_MODULE_25__.FieldType.number;\n  }\n  const valueType = typeof firstNotNull;\n  switch (valueType) {\n    case \"string\":\n      return _grafana_data__WEBPACK_IMPORTED_MODULE_25__.FieldType.string;\n    case \"boolean\":\n      return _grafana_data__WEBPACK_IMPORTED_MODULE_25__.FieldType.boolean;\n    case \"number\":\n      return _grafana_data__WEBPACK_IMPORTED_MODULE_25__.FieldType.number;\n    default:\n      throw new Error(`InfluxQL: invalid value type ${valueType}`);\n  }\n}\nfunction timeSeriesToDataFrame(timeSeries) {\n  const times = [];\n  const values = [];\n  const points = timeSeries.datapoints;\n  for (const point of points) {\n    values.push(point[0]);\n    times.push(point[1]);\n  }\n  const timeField = {\n    name: _grafana_data__WEBPACK_IMPORTED_MODULE_25__.TIME_SERIES_TIME_FIELD_NAME,\n    type: _grafana_data__WEBPACK_IMPORTED_MODULE_25__.FieldType.time,\n    config: {},\n    values: times\n  };\n  const valueField = {\n    name: _grafana_data__WEBPACK_IMPORTED_MODULE_25__.TIME_SERIES_VALUE_FIELD_NAME,\n    type: getFieldType(values),\n    config: {\n      displayNameFromDS: timeSeries.title\n    },\n    values,\n    labels: timeSeries.tags\n  };\n  const fields = [timeField, valueField];\n  return {\n    name: timeSeries.target,\n    refId: timeSeries.refId,\n    meta: timeSeries.meta,\n    fields,\n    length: values.length\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/influxdb/datasource.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/influxdb/influx_query_model.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ InfluxQueryModel)\n/* harmony export */ });\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/lodash-npm-4.17.21-6382451519-eb835a2e51.zip/node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/text/string.ts\");\n/* harmony import */ var _query_part__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/query_part.ts\");\n\n\n\n\nclass InfluxQueryModel {\n  constructor(target, templateSrv, scopedVars) {\n    this.selectModels = [];\n    this.target = target;\n    this.templateSrv = templateSrv;\n    this.scopedVars = scopedVars;\n    target.policy = target.policy || \"default\";\n    target.resultFormat = target.resultFormat || \"time_series\";\n    target.orderByTime = target.orderByTime || \"ASC\";\n    target.tags = target.tags || [];\n    target.groupBy = target.groupBy || [\n      { type: \"time\", params: [\"$__interval\"] },\n      { type: \"fill\", params: [\"null\"] }\n    ];\n    target.select = target.select || [\n      [\n        { type: \"field\", params: [\"value\"] },\n        { type: \"mean\", params: [] }\n      ]\n    ];\n    this.updateProjection();\n  }\n  updateProjection() {\n    this.selectModels = (0,lodash__WEBPACK_IMPORTED_MODULE_0__.map)(this.target.select, (parts) => {\n      return (0,lodash__WEBPACK_IMPORTED_MODULE_0__.map)(parts, _query_part__WEBPACK_IMPORTED_MODULE_1__[\"default\"].create);\n    });\n    this.groupByParts = (0,lodash__WEBPACK_IMPORTED_MODULE_0__.map)(this.target.groupBy, _query_part__WEBPACK_IMPORTED_MODULE_1__[\"default\"].create);\n  }\n  updatePersistedParts() {\n    this.target.select = (0,lodash__WEBPACK_IMPORTED_MODULE_0__.map)(this.selectModels, (selectParts) => {\n      return (0,lodash__WEBPACK_IMPORTED_MODULE_0__.map)(selectParts, (part) => {\n        return { type: part.def.type, params: part.params };\n      });\n    });\n  }\n  hasGroupByTime() {\n    return (0,lodash__WEBPACK_IMPORTED_MODULE_0__.find)(this.target.groupBy, (g) => g.type === \"time\");\n  }\n  hasFill() {\n    return (0,lodash__WEBPACK_IMPORTED_MODULE_0__.find)(this.target.groupBy, (g) => g.type === \"fill\");\n  }\n  addGroupBy(value) {\n    let stringParts = value.match(/^(\\w+)\\((.*)\\)$/);\n    if (!stringParts || !this.target.groupBy) {\n      return;\n    }\n    const typePart = stringParts[1];\n    const arg = stringParts[2];\n    const partModel = _query_part__WEBPACK_IMPORTED_MODULE_1__[\"default\"].create({ type: typePart, params: [arg] });\n    const partCount = this.target.groupBy.length;\n    if (partCount === 0) {\n      this.target.groupBy.push(partModel.part);\n    } else if (typePart === \"time\") {\n      this.target.groupBy.splice(0, 0, partModel.part);\n    } else if (typePart === \"tag\") {\n      if (this.target.groupBy[partCount - 1].type === \"fill\") {\n        this.target.groupBy.splice(partCount - 1, 0, partModel.part);\n      } else {\n        this.target.groupBy.push(partModel.part);\n      }\n    } else {\n      this.target.groupBy.push(partModel.part);\n    }\n    this.updateProjection();\n  }\n  removeGroupByPart(part, index) {\n    const categories = _query_part__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getCategories();\n    if (part.def.type === \"time\") {\n      this.target.groupBy = (0,lodash__WEBPACK_IMPORTED_MODULE_0__.filter)(this.target.groupBy, (g) => g.type !== \"fill\");\n      this.target.select = (0,lodash__WEBPACK_IMPORTED_MODULE_0__.map)(this.target.select, (s) => {\n        return (0,lodash__WEBPACK_IMPORTED_MODULE_0__.filter)(s, (part2) => {\n          const partModel = _query_part__WEBPACK_IMPORTED_MODULE_1__[\"default\"].create(part2);\n          if (partModel.def.category === categories.Aggregations) {\n            return false;\n          }\n          if (partModel.def.category === categories.Selectors) {\n            return false;\n          }\n          return true;\n        });\n      });\n    }\n    this.target.groupBy.splice(index, 1);\n    this.updateProjection();\n  }\n  removeSelect(index) {\n    this.target.select.splice(index, 1);\n    this.updateProjection();\n  }\n  removeSelectPart(selectParts, part) {\n    if (part.def.type === \"field\") {\n      if (this.selectModels.length > 1) {\n        const modelsIndex = (0,lodash__WEBPACK_IMPORTED_MODULE_0__.indexOf)(this.selectModels, selectParts);\n        this.selectModels.splice(modelsIndex, 1);\n      }\n    } else {\n      const partIndex = (0,lodash__WEBPACK_IMPORTED_MODULE_0__.indexOf)(selectParts, part);\n      selectParts.splice(partIndex, 1);\n    }\n    this.updatePersistedParts();\n  }\n  addSelectPart(selectParts, type) {\n    const partModel = _query_part__WEBPACK_IMPORTED_MODULE_1__[\"default\"].create({ type });\n    partModel.def.addStrategy(selectParts, partModel, this);\n    this.updatePersistedParts();\n  }\n  renderTagCondition(tag, index, interpolate) {\n    let str = \"\";\n    let operator = tag.operator;\n    let value = tag.value;\n    if (index > 0) {\n      str = (tag.condition || \"AND\") + \" \";\n    }\n    if (!operator) {\n      if (/^\\/.*\\/$/.test(value)) {\n        operator = \"=~\";\n      } else {\n        operator = \"=\";\n      }\n    }\n    if (operator !== \"=~\" && operator !== \"!~\") {\n      if (interpolate) {\n        value = this.templateSrv.replace(value, this.scopedVars);\n      }\n      if (operator !== \">\" && operator !== \"<\") {\n        value = \"'\" + value.replace(/\\\\/g, \"\\\\\\\\\").replace(/\\'/g, \"\\\\'\") + \"'\";\n      }\n    } else if (interpolate) {\n      value = this.templateSrv.replace(value, this.scopedVars, \"regex\");\n    }\n    let escapedKey = `\"${tag.key}\"`;\n    if (tag.key.endsWith(\"::tag\")) {\n      escapedKey = `\"${tag.key.slice(0, -5)}\"::tag`;\n    }\n    if (tag.key.endsWith(\"::field\")) {\n      escapedKey = `\"${tag.key.slice(0, -7)}\"::field`;\n    }\n    return str + escapedKey + \" \" + operator + \" \" + value;\n  }\n  getMeasurementAndPolicy(interpolate) {\n    let policy = this.target.policy;\n    let measurement = this.target.measurement || \"measurement\";\n    if (!measurement.match(\"^/.*/$\")) {\n      measurement = '\"' + measurement + '\"';\n    } else if (interpolate) {\n      measurement = this.templateSrv.replace(measurement, this.scopedVars, \"regex\");\n    }\n    if (policy !== \"default\") {\n      policy = '\"' + this.target.policy + '\".';\n    } else {\n      policy = \"\";\n    }\n    return policy + measurement;\n  }\n  interpolateQueryStr(value, variable, defaultFormatFn) {\n    if (!variable.multi && !variable.includeAll) {\n      return value;\n    }\n    if (typeof value === \"string\") {\n      return (0,_grafana_data__WEBPACK_IMPORTED_MODULE_2__.escapeRegex)(value);\n    }\n    const escapedValues = (0,lodash__WEBPACK_IMPORTED_MODULE_0__.map)(value, _grafana_data__WEBPACK_IMPORTED_MODULE_2__.escapeRegex);\n    return \"(\" + escapedValues.join(\"|\") + \")\";\n  }\n  render(interpolate) {\n    const target = this.target;\n    if (target.rawQuery) {\n      if (interpolate) {\n        return this.templateSrv.replace(target.query, this.scopedVars, this.interpolateQueryStr);\n      } else {\n        return target.query;\n      }\n    }\n    let query = \"SELECT \";\n    let i, y;\n    for (i = 0; i < this.selectModels.length; i++) {\n      const parts = this.selectModels[i];\n      let selectText = \"\";\n      for (y = 0; y < parts.length; y++) {\n        const part = parts[y];\n        selectText = part.render(selectText);\n      }\n      if (i > 0) {\n        query += \", \";\n      }\n      query += selectText;\n    }\n    query += \" FROM \" + this.getMeasurementAndPolicy(interpolate) + \" WHERE \";\n    const conditions = (0,lodash__WEBPACK_IMPORTED_MODULE_0__.map)(target.tags, (tag, index) => {\n      return this.renderTagCondition(tag, index, interpolate);\n    });\n    if (conditions.length > 0) {\n      query += \"(\" + conditions.join(\" \") + \") AND \";\n    }\n    query += \"$timeFilter\";\n    let groupBySection = \"\";\n    for (i = 0; i < this.groupByParts.length; i++) {\n      const part = this.groupByParts[i];\n      if (i > 0) {\n        groupBySection += part.def.type === \"fill\" ? \" \" : \", \";\n      }\n      groupBySection += part.render(\"\");\n    }\n    if (groupBySection.length) {\n      query += \" GROUP BY \" + groupBySection;\n    }\n    if (target.fill) {\n      query += \" fill(\" + target.fill + \")\";\n    }\n    if (target.orderByTime === \"DESC\") {\n      query += \" ORDER BY time DESC\";\n    }\n    if (target.limit) {\n      query += \" LIMIT \" + target.limit;\n    }\n    if (target.slimit) {\n      query += \" SLIMIT \" + target.slimit;\n    }\n    if (target.tz) {\n      query += \" tz('\" + target.tz + \"')\";\n    }\n    return query;\n  }\n  renderAdhocFilters(filters) {\n    const conditions = (0,lodash__WEBPACK_IMPORTED_MODULE_0__.map)(filters, (tag, index) => {\n      return this.renderTagCondition(tag, index, true);\n    });\n    return conditions.join(\" \");\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/influxdb/influx_query_model.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/influxdb/influx_series.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ InfluxSeries)\n/* harmony export */ });\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/lodash-npm-4.17.21-6382451519-eb835a2e51.zip/node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/types/dataFrame.ts\");\n/* harmony import */ var app_core_TableModel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/core/TableModel.ts\");\n\n\n\n\nclass InfluxSeries {\n  constructor(options) {\n    this.series = options.series;\n    this.alias = options.alias;\n    this.annotation = options.annotation;\n    this.meta = options.meta;\n    this.refId = options.refId;\n  }\n  getTimeSeries() {\n    const output = [];\n    let i, j;\n    if (this.series.length === 0) {\n      return output;\n    }\n    (0,lodash__WEBPACK_IMPORTED_MODULE_0__.each)(this.series, (series) => {\n      const columns = series.columns.length;\n      const tags = (0,lodash__WEBPACK_IMPORTED_MODULE_0__.map)(series.tags, (value, key) => {\n        return key + \": \" + value;\n      });\n      for (j = 1; j < columns; j++) {\n        let seriesName = series.name;\n        const columnName = series.columns[j];\n        if (columnName !== \"value\") {\n          seriesName = seriesName + \".\" + columnName;\n        }\n        if (this.alias) {\n          seriesName = this._getSeriesName(series, j);\n        } else if (series.tags) {\n          seriesName = seriesName + \" {\" + tags.join(\", \") + \"}\";\n        }\n        const datapoints = [];\n        if (series.values) {\n          for (i = 0; i < series.values.length; i++) {\n            datapoints[i] = [series.values[i][j], series.values[i][0]];\n          }\n        }\n        output.push({\n          title: seriesName,\n          target: seriesName,\n          datapoints,\n          tags: series.tags,\n          meta: this.meta,\n          refId: this.refId\n        });\n      }\n    });\n    return output;\n  }\n  _getSeriesName(series, index) {\n    const regex = /\\$(\\w+)|\\[\\[([\\s\\S]+?)\\]\\]/g;\n    const segments = series.name.split(\".\");\n    return this.alias.replace(regex, (match, g1, g2) => {\n      const group = g1 || g2;\n      const segIndex = parseInt(group, 10);\n      if (group === \"m\" || group === \"measurement\") {\n        return series.name;\n      }\n      if (group === \"col\") {\n        return series.columns[index];\n      }\n      if (!isNaN(segIndex)) {\n        return segments[segIndex] ?? match;\n      }\n      if (group.indexOf(\"tag_\") !== 0) {\n        return match;\n      }\n      const tag = group.replace(\"tag_\", \"\");\n      if (!series.tags) {\n        return match;\n      }\n      return series.tags[tag];\n    });\n  }\n  getAnnotations() {\n    const list = [];\n    (0,lodash__WEBPACK_IMPORTED_MODULE_0__.each)(this.series, (series) => {\n      let titleCol = null;\n      let timeCol = null;\n      let timeEndCol = null;\n      const tagsCol = [];\n      let textCol = null;\n      (0,lodash__WEBPACK_IMPORTED_MODULE_0__.each)(series.columns, (column, index) => {\n        if (column === \"time\") {\n          timeCol = index;\n          return;\n        }\n        if (column === \"sequence_number\") {\n          return;\n        }\n        if (column === this.annotation.titleColumn) {\n          titleCol = index;\n          return;\n        }\n        if ((0,lodash__WEBPACK_IMPORTED_MODULE_0__.includes)((this.annotation.tagsColumn || \"\").replace(\" \", \"\").split(\",\"), column)) {\n          tagsCol.push(index);\n          return;\n        }\n        if (column === this.annotation.textColumn) {\n          textCol = index;\n          return;\n        }\n        if (column === this.annotation.timeEndColumn) {\n          timeEndCol = index;\n          return;\n        }\n        if (!titleCol && textCol !== index) {\n          titleCol = index;\n        }\n      });\n      (0,lodash__WEBPACK_IMPORTED_MODULE_0__.each)(series.values, (value) => {\n        const data = {\n          annotation: this.annotation,\n          time: +new Date(value[timeCol]),\n          title: value[titleCol],\n          timeEnd: value[timeEndCol],\n          // Remove empty values, then split in different tags for comma separated values\n          tags: (0,lodash__WEBPACK_IMPORTED_MODULE_0__.flatten)(\n            tagsCol.filter((t) => {\n              return value[t];\n            }).map((t) => {\n              return value[t].split(\",\");\n            })\n          ),\n          text: value[textCol]\n        };\n        list.push(data);\n      });\n    });\n    return list;\n  }\n  getTable() {\n    const table = new app_core_TableModel__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n    let i, j;\n    table.refId = this.refId;\n    table.meta = this.meta;\n    if (this.series.length === 0) {\n      return table;\n    }\n    (0,lodash__WEBPACK_IMPORTED_MODULE_0__.each)(this.series, (series, seriesIndex) => {\n      if (seriesIndex === 0) {\n        const firstCol = series.columns[0];\n        const firstTableCol = firstCol === \"time\" ? { text: \"Time\", type: _grafana_data__WEBPACK_IMPORTED_MODULE_2__.FieldType.time } : { text: firstCol };\n        table.columns.push(firstTableCol);\n        (0,lodash__WEBPACK_IMPORTED_MODULE_0__.each)((0,lodash__WEBPACK_IMPORTED_MODULE_0__.keys)(series.tags), (key) => {\n          table.columns.push({ text: key });\n        });\n        for (j = 1; j < series.columns.length; j++) {\n          table.columns.push({ text: series.columns[j] });\n        }\n      }\n      if (series.values) {\n        for (i = 0; i < series.values.length; i++) {\n          const values = series.values[i];\n          const reordered = [values[0]];\n          if (series.tags) {\n            for (const key in series.tags) {\n              if (series.tags.hasOwnProperty(key)) {\n                reordered.push(series.tags[key]);\n              }\n            }\n          }\n          for (j = 1; j < values.length; j++) {\n            reordered.push(values[j]);\n          }\n          table.rows.push(reordered);\n        }\n      }\n    });\n    return table;\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/influxdb/influx_series.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/influxdb/influxql_metadata_query.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAllMeasurementsForTags: () => (/* binding */ getAllMeasurementsForTags),\n/* harmony export */   getAllPolicies: () => (/* binding */ getAllPolicies),\n/* harmony export */   getFieldKeysForMeasurement: () => (/* binding */ getFieldKeysForMeasurement),\n/* harmony export */   getTagKeysForMeasurementAndTags: () => (/* binding */ getTagKeysForMeasurementAndTags),\n/* harmony export */   getTagValues: () => (/* binding */ getTagValues)\n/* harmony export */ });\n/* harmony import */ var app_core_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./public/app/core/config.ts\");\n/* harmony import */ var _influxql_query_builder__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/influxql_query_builder.ts\");\n\n\n\nconst runExploreQuery = async (options) => {\n  const { type, datasource, scopedVars, measurement, retentionPolicy, tags, withKey, withMeasurementFilter } = options;\n  const query = (0,_influxql_query_builder__WEBPACK_IMPORTED_MODULE_1__.buildMetadataQuery)({\n    type,\n    scopedVars,\n    measurement,\n    retentionPolicy,\n    tags,\n    withKey,\n    withMeasurementFilter,\n    templateService: datasource.templateSrv,\n    database: datasource.database\n  });\n  const policy = retentionPolicy ? datasource.templateSrv.replace(retentionPolicy, {}, \"regex\") : \"\";\n  const target = {\n    query,\n    policy,\n    rawQuery: true,\n    refId: \"metadataQuery\"\n  };\n  if (app_core_config__WEBPACK_IMPORTED_MODULE_0__[\"default\"].featureToggles.influxdbBackendMigration) {\n    return datasource.runMetadataQuery(target);\n  } else {\n    const options2 = { policy: target.policy };\n    return datasource.metricFindQuery(query, options2);\n  }\n};\nasync function getAllPolicies(datasource) {\n  const data = await runExploreQuery({ type: \"RETENTION_POLICIES\", datasource });\n  return data.map((item) => item.text);\n}\nasync function getAllMeasurementsForTags(datasource, tags, withMeasurementFilter) {\n  const data = await runExploreQuery({ type: \"MEASUREMENTS\", datasource, tags, withMeasurementFilter });\n  return data.map((item) => item.text);\n}\nasync function getTagKeysForMeasurementAndTags(datasource, tags, measurement, retentionPolicy) {\n  const data = await runExploreQuery({ type: \"TAG_KEYS\", datasource, measurement, retentionPolicy });\n  return data.map((item) => item.text);\n}\nasync function getTagValues(datasource, tags, tagKey, measurement, retentionPolicy) {\n  if (tagKey.endsWith(\"::field\")) {\n    return [];\n  }\n  const data = await runExploreQuery({\n    type: \"TAG_VALUES\",\n    withKey: tagKey,\n    datasource,\n    measurement,\n    retentionPolicy\n  });\n  return data.map((item) => item.text);\n}\nasync function getFieldKeysForMeasurement(datasource, measurement, retentionPolicy) {\n  const data = await runExploreQuery({ type: \"FIELDS\", datasource, measurement, retentionPolicy });\n  return data.map((item) => item.text);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9pbmZsdXhkYi9pbmZsdXhxbF9tZXRhZGF0YV9xdWVyeS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUNtQjtBQUdnQjtBQWNuQyxNQUFNLGtCQUFrQixPQUFPLFlBQW9FO0FBQ2pHLFFBQU0sRUFBRSxNQUFNLFlBQVksWUFBWSxhQUFhLGlCQUFpQixNQUFNLFNBQVMsc0JBQXNCLElBQUk7QUFDN0csUUFBTSxRQUFRLDJFQUFrQixDQUFDO0FBQUEsSUFDL0I7QUFBQSxJQUNBO0FBQUEsSUFDQTtBQUFBLElBQ0E7QUFBQSxJQUNBO0FBQUEsSUFDQTtBQUFBLElBQ0E7QUFBQSxJQUNBLGlCQUFpQixXQUFXO0FBQUEsSUFDNUIsVUFBVSxXQUFXO0FBQUEsRUFDdkIsQ0FBQztBQUNELFFBQU0sU0FBUyxrQkFBa0IsV0FBVyxZQUFZLFFBQVEsaUJBQWlCLENBQUMsR0FBRyxPQUFPLElBQUk7QUFDaEcsUUFBTSxTQUFzQjtBQUFBLElBQzFCO0FBQUEsSUFDQTtBQUFBLElBQ0EsVUFBVTtBQUFBLElBQ1YsT0FBTztBQUFBLEVBQ1Q7QUFDQSxNQUFJLHVEQUFNLENBQUMsZUFBZSwwQkFBMEI7QUFDbEQsV0FBTyxXQUFXLGlCQUFpQixNQUFNO0FBQUEsRUFDM0MsT0FBTztBQUNMLFVBQU1BLFdBQVUsRUFBRSxRQUFRLE9BQU8sT0FBTztBQUN4QyxXQUFPLFdBQVcsZ0JBQWdCLE9BQU9BLFFBQU87QUFBQSxFQUNsRDtBQUNGO0FBRU8sZUFBZSxlQUFlLFlBQWlEO0FBQ3BGLFFBQU0sT0FBTyxNQUFNLGdCQUFnQixFQUFFLE1BQU0sc0JBQXNCLFdBQVcsQ0FBQztBQUM3RSxTQUFPLEtBQUssSUFBSSxDQUFDLFNBQVMsS0FBSyxJQUFJO0FBQ3JDO0FBRU8sZUFBZSwwQkFDcEIsWUFDQSxNQUNBLHVCQUNtQjtBQUNuQixRQUFNLE9BQU8sTUFBTSxnQkFBZ0IsRUFBRSxNQUFNLGdCQUFnQixZQUFZLE1BQU0sc0JBQXNCLENBQUM7QUFDcEcsU0FBTyxLQUFLLElBQUksQ0FBQyxTQUFTLEtBQUssSUFBSTtBQUNyQztBQUVPLGVBQWUsZ0NBQ3BCLFlBQ0EsTUFDQSxhQUNBLGlCQUNtQjtBQUNuQixRQUFNLE9BQU8sTUFBTSxnQkFBZ0IsRUFBRSxNQUFNLFlBQVksWUFBWSxhQUFhLGdCQUFnQixDQUFDO0FBQ2pHLFNBQU8sS0FBSyxJQUFJLENBQUMsU0FBUyxLQUFLLElBQUk7QUFDckM7QUFFTyxlQUFlLGFBQ3BCLFlBQ0EsTUFDQSxRQUNBLGFBQ0EsaUJBQ21CO0FBQ25CLE1BQUksT0FBTyxTQUFTLFNBQVMsR0FBRztBQUM5QixXQUFPLENBQUM7QUFBQSxFQUNWO0FBQ0EsUUFBTSxPQUFPLE1BQU0sZ0JBQWdCO0FBQUEsSUFDakMsTUFBTTtBQUFBLElBQ04sU0FBUztBQUFBLElBQ1Q7QUFBQSxJQUNBO0FBQUEsSUFDQTtBQUFBLEVBQ0YsQ0FBQztBQUNELFNBQU8sS0FBSyxJQUFJLENBQUMsU0FBUyxLQUFLLElBQUk7QUFDckM7QUFFTyxlQUFlLDJCQUNwQixZQUNBLGFBQ0EsaUJBQ21CO0FBQ25CLFFBQU0sT0FBTyxNQUFNLGdCQUFnQixFQUFFLE1BQU0sVUFBVSxZQUFZLGFBQWEsZ0JBQWdCLENBQUM7QUFDL0YsU0FBTyxLQUFLLElBQUksQ0FBQyxTQUFTLEtBQUssSUFBSTtBQUNyQyIsInNvdXJjZXMiOlsid2VicGFjazovL2dyYWZhbmEvLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9pbmZsdXhkYi9pbmZsdXhxbF9tZXRhZGF0YV9xdWVyeS50cz9hMDk4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNjb3BlZFZhcnMgfSBmcm9tICdAZ3JhZmFuYS9kYXRhL3NyYyc7XG5pbXBvcnQgY29uZmlnIGZyb20gJ2FwcC9jb3JlL2NvbmZpZyc7XG5cbmltcG9ydCBJbmZsdXhEYXRhc291cmNlIGZyb20gJy4vZGF0YXNvdXJjZSc7XG5pbXBvcnQgeyBidWlsZE1ldGFkYXRhUXVlcnkgfSBmcm9tICcuL2luZmx1eHFsX3F1ZXJ5X2J1aWxkZXInO1xuaW1wb3J0IHsgSW5mbHV4UXVlcnksIEluZmx1eFF1ZXJ5VGFnLCBNZXRhZGF0YVF1ZXJ5VHlwZSB9IGZyb20gJy4vdHlwZXMnO1xuXG50eXBlIE1ldGFkYXRhUXVlcnlPcHRpb25zID0ge1xuICB0eXBlOiBNZXRhZGF0YVF1ZXJ5VHlwZTtcbiAgZGF0YXNvdXJjZTogSW5mbHV4RGF0YXNvdXJjZTtcbiAgc2NvcGVkVmFycz86IFNjb3BlZFZhcnM7XG4gIG1lYXN1cmVtZW50Pzogc3RyaW5nO1xuICByZXRlbnRpb25Qb2xpY3k/OiBzdHJpbmc7XG4gIHRhZ3M/OiBJbmZsdXhRdWVyeVRhZ1tdO1xuICB3aXRoS2V5Pzogc3RyaW5nO1xuICB3aXRoTWVhc3VyZW1lbnRGaWx0ZXI/OiBzdHJpbmc7XG59O1xuXG5jb25zdCBydW5FeHBsb3JlUXVlcnkgPSBhc3luYyAob3B0aW9uczogTWV0YWRhdGFRdWVyeU9wdGlvbnMpOiBQcm9taXNlPEFycmF5PHsgdGV4dDogc3RyaW5nIH0+PiA9PiB7XG4gIGNvbnN0IHsgdHlwZSwgZGF0YXNvdXJjZSwgc2NvcGVkVmFycywgbWVhc3VyZW1lbnQsIHJldGVudGlvblBvbGljeSwgdGFncywgd2l0aEtleSwgd2l0aE1lYXN1cmVtZW50RmlsdGVyIH0gPSBvcHRpb25zO1xuICBjb25zdCBxdWVyeSA9IGJ1aWxkTWV0YWRhdGFRdWVyeSh7XG4gICAgdHlwZSxcbiAgICBzY29wZWRWYXJzLFxuICAgIG1lYXN1cmVtZW50LFxuICAgIHJldGVudGlvblBvbGljeSxcbiAgICB0YWdzLFxuICAgIHdpdGhLZXksXG4gICAgd2l0aE1lYXN1cmVtZW50RmlsdGVyLFxuICAgIHRlbXBsYXRlU2VydmljZTogZGF0YXNvdXJjZS50ZW1wbGF0ZVNydixcbiAgICBkYXRhYmFzZTogZGF0YXNvdXJjZS5kYXRhYmFzZSxcbiAgfSk7XG4gIGNvbnN0IHBvbGljeSA9IHJldGVudGlvblBvbGljeSA/IGRhdGFzb3VyY2UudGVtcGxhdGVTcnYucmVwbGFjZShyZXRlbnRpb25Qb2xpY3ksIHt9LCAncmVnZXgnKSA6ICcnO1xuICBjb25zdCB0YXJnZXQ6IEluZmx1eFF1ZXJ5ID0ge1xuICAgIHF1ZXJ5LFxuICAgIHBvbGljeSxcbiAgICByYXdRdWVyeTogdHJ1ZSxcbiAgICByZWZJZDogJ21ldGFkYXRhUXVlcnknLFxuICB9O1xuICBpZiAoY29uZmlnLmZlYXR1cmVUb2dnbGVzLmluZmx1eGRiQmFja2VuZE1pZ3JhdGlvbikge1xuICAgIHJldHVybiBkYXRhc291cmNlLnJ1bk1ldGFkYXRhUXVlcnkodGFyZ2V0KTtcbiAgfSBlbHNlIHtcbiAgICBjb25zdCBvcHRpb25zID0geyBwb2xpY3k6IHRhcmdldC5wb2xpY3kgfTtcbiAgICByZXR1cm4gZGF0YXNvdXJjZS5tZXRyaWNGaW5kUXVlcnkocXVlcnksIG9wdGlvbnMpO1xuICB9XG59O1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0QWxsUG9saWNpZXMoZGF0YXNvdXJjZTogSW5mbHV4RGF0YXNvdXJjZSk6IFByb21pc2U8c3RyaW5nW10+IHtcbiAgY29uc3QgZGF0YSA9IGF3YWl0IHJ1bkV4cGxvcmVRdWVyeSh7IHR5cGU6ICdSRVRFTlRJT05fUE9MSUNJRVMnLCBkYXRhc291cmNlIH0pO1xuICByZXR1cm4gZGF0YS5tYXAoKGl0ZW0pID0+IGl0ZW0udGV4dCk7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRBbGxNZWFzdXJlbWVudHNGb3JUYWdzKFxuICBkYXRhc291cmNlOiBJbmZsdXhEYXRhc291cmNlLFxuICB0YWdzOiBJbmZsdXhRdWVyeVRhZ1tdLFxuICB3aXRoTWVhc3VyZW1lbnRGaWx0ZXI/OiBzdHJpbmdcbik6IFByb21pc2U8c3RyaW5nW10+IHtcbiAgY29uc3QgZGF0YSA9IGF3YWl0IHJ1bkV4cGxvcmVRdWVyeSh7IHR5cGU6ICdNRUFTVVJFTUVOVFMnLCBkYXRhc291cmNlLCB0YWdzLCB3aXRoTWVhc3VyZW1lbnRGaWx0ZXIgfSk7XG4gIHJldHVybiBkYXRhLm1hcCgoaXRlbSkgPT4gaXRlbS50ZXh0KTtcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFRhZ0tleXNGb3JNZWFzdXJlbWVudEFuZFRhZ3MoXG4gIGRhdGFzb3VyY2U6IEluZmx1eERhdGFzb3VyY2UsXG4gIHRhZ3M6IEluZmx1eFF1ZXJ5VGFnW10sXG4gIG1lYXN1cmVtZW50Pzogc3RyaW5nLFxuICByZXRlbnRpb25Qb2xpY3k/OiBzdHJpbmdcbik6IFByb21pc2U8c3RyaW5nW10+IHtcbiAgY29uc3QgZGF0YSA9IGF3YWl0IHJ1bkV4cGxvcmVRdWVyeSh7IHR5cGU6ICdUQUdfS0VZUycsIGRhdGFzb3VyY2UsIG1lYXN1cmVtZW50LCByZXRlbnRpb25Qb2xpY3kgfSk7XG4gIHJldHVybiBkYXRhLm1hcCgoaXRlbSkgPT4gaXRlbS50ZXh0KTtcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFRhZ1ZhbHVlcyhcbiAgZGF0YXNvdXJjZTogSW5mbHV4RGF0YXNvdXJjZSxcbiAgdGFnczogSW5mbHV4UXVlcnlUYWdbXSxcbiAgdGFnS2V5OiBzdHJpbmcsXG4gIG1lYXN1cmVtZW50Pzogc3RyaW5nLFxuICByZXRlbnRpb25Qb2xpY3k/OiBzdHJpbmdcbik6IFByb21pc2U8c3RyaW5nW10+IHtcbiAgaWYgKHRhZ0tleS5lbmRzV2l0aCgnOjpmaWVsZCcpKSB7XG4gICAgcmV0dXJuIFtdO1xuICB9XG4gIGNvbnN0IGRhdGEgPSBhd2FpdCBydW5FeHBsb3JlUXVlcnkoe1xuICAgIHR5cGU6ICdUQUdfVkFMVUVTJyxcbiAgICB3aXRoS2V5OiB0YWdLZXksXG4gICAgZGF0YXNvdXJjZSxcbiAgICBtZWFzdXJlbWVudCxcbiAgICByZXRlbnRpb25Qb2xpY3ksXG4gIH0pO1xuICByZXR1cm4gZGF0YS5tYXAoKGl0ZW0pID0+IGl0ZW0udGV4dCk7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRGaWVsZEtleXNGb3JNZWFzdXJlbWVudChcbiAgZGF0YXNvdXJjZTogSW5mbHV4RGF0YXNvdXJjZSxcbiAgbWVhc3VyZW1lbnQ6IHN0cmluZyxcbiAgcmV0ZW50aW9uUG9saWN5Pzogc3RyaW5nXG4pOiBQcm9taXNlPHN0cmluZ1tdPiB7XG4gIGNvbnN0IGRhdGEgPSBhd2FpdCBydW5FeHBsb3JlUXVlcnkoeyB0eXBlOiAnRklFTERTJywgZGF0YXNvdXJjZSwgbWVhc3VyZW1lbnQsIHJldGVudGlvblBvbGljeSB9KTtcbiAgcmV0dXJuIGRhdGEubWFwKChpdGVtKSA9PiBpdGVtLnRleHQpO1xufVxuIl0sIm5hbWVzIjpbIm9wdGlvbnMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/influxdb/influxql_metadata_query.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/influxdb/influxql_query_builder.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildMetadataQuery: () => (/* binding */ buildMetadataQuery),\n/* harmony export */   renderTagCondition: () => (/* binding */ renderTagCondition)\n/* harmony export */ });\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/lodash-npm-4.17.21-6382451519-eb835a2e51.zip/node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _grafana_data_src__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/text/string.ts\");\n\n\n\nconst buildMetadataQuery = (params) => {\n  let query = \"\";\n  let {\n    type,\n    templateService,\n    scopedVars,\n    database,\n    measurement,\n    retentionPolicy,\n    tags,\n    withKey,\n    withMeasurementFilter\n  } = params;\n  switch (type) {\n    case \"RETENTION_POLICIES\":\n      return 'SHOW RETENTION POLICIES on \"' + database + '\"';\n    case \"FIELDS\":\n      if (!measurement || measurement === \"\") {\n        return \"SHOW FIELD KEYS\";\n      }\n      if (measurement && !measurement.match(/^\\/.*\\/|^$/)) {\n        measurement = '\"' + measurement + '\"';\n        if (retentionPolicy && retentionPolicy !== \"default\") {\n          retentionPolicy = '\"' + retentionPolicy + '\"';\n          measurement = retentionPolicy + \".\" + measurement;\n        }\n      }\n      return \"SHOW FIELD KEYS FROM \" + measurement;\n    case \"TAG_KEYS\":\n      query = \"SHOW TAG KEYS\";\n      break;\n    case \"TAG_VALUES\":\n      query = \"SHOW TAG VALUES\";\n      break;\n    case \"MEASUREMENTS\":\n      query = \"SHOW MEASUREMENTS\";\n      if (withMeasurementFilter) {\n        query += \" WITH MEASUREMENT =~ /(?i)\" + (0,_grafana_data_src__WEBPACK_IMPORTED_MODULE_1__.escapeRegex)(withMeasurementFilter) + \"/\";\n      }\n      break;\n    default:\n      return query;\n  }\n  if (measurement) {\n    if (!measurement.match(\"^/.*/\") && !measurement.match(/^merge\\(.*\\)/)) {\n      measurement = '\"' + measurement + '\"';\n    }\n    if (retentionPolicy && retentionPolicy !== \"default\") {\n      retentionPolicy = '\"' + retentionPolicy + '\"';\n      measurement = retentionPolicy + \".\" + measurement;\n    }\n    if (measurement !== \"\") {\n      query += \" FROM \" + measurement;\n    }\n  }\n  if (withKey) {\n    let keyIdentifier = withKey;\n    if (keyIdentifier.endsWith(\"::tag\")) {\n      keyIdentifier = keyIdentifier.slice(0, -5);\n    }\n    query += ' WITH KEY = \"' + keyIdentifier + '\"';\n  }\n  if (tags && tags.length > 0) {\n    const whereConditions = (0,lodash__WEBPACK_IMPORTED_MODULE_0__.reduce)(\n      tags,\n      (memo, tag) => {\n        if (tag.key && tag.key === withKey) {\n          return memo;\n        }\n        if (tag.operator === \">\" || tag.operator === \"<\") {\n          return memo;\n        }\n        memo.push(renderTagCondition(tag, memo.length, templateService, scopedVars, true));\n        return memo;\n      },\n      []\n    );\n    if (whereConditions.length > 0) {\n      query += \" WHERE \" + whereConditions.join(\" \");\n    }\n  }\n  if (type === \"MEASUREMENTS\") {\n    query += \" LIMIT 100\";\n  }\n  return query;\n};\nfunction renderTagCondition(tag, index, templateSrv, scopedVars, interpolate) {\n  let str = \"\";\n  let operator = tag.operator;\n  let value = tag.value;\n  if (index > 0) {\n    str = (tag.condition || \"AND\") + \" \";\n  }\n  if (!operator) {\n    if (/^\\/.*\\/$/.test(tag.value)) {\n      operator = \"=~\";\n    } else {\n      operator = \"=\";\n    }\n  }\n  if (value === \"\" || operator !== \"=~\" && operator !== \"!~\") {\n    value = \"'\" + value.replace(/\\\\/g, \"\\\\\\\\\").replace(/\\'/g, \"\\\\'\") + \"'\";\n  }\n  if (operator !== \"=~\" && operator !== \"!~\") {\n    if (interpolate) {\n      value = templateSrv.replace(value, scopedVars);\n    } else if (operator !== \">\" && operator !== \"<\") {\n      value = \"'\" + value.replace(/\\\\/g, \"\\\\\\\\\").replace(/\\'/g, \"\\\\'\") + \"'\";\n    }\n  } else if (interpolate) {\n    value = templateSrv.replace(value, scopedVars, \"regex\");\n  }\n  let escapedKey = `\"${tag.key}\"`;\n  if (tag.key.endsWith(\"::tag\")) {\n    escapedKey = `\"${tag.key.slice(0, -5)}\"::tag`;\n  }\n  if (tag.key.endsWith(\"::field\")) {\n    escapedKey = `\"${tag.key.slice(0, -7)}\"::field`;\n  }\n  return str + escapedKey + \" \" + operator + \" \" + value;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/influxdb/influxql_query_builder.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/influxdb/migrations.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prepareAnnotation: () => (/* binding */ prepareAnnotation)\n/* harmony export */ });\n\nconst migrateLegacyAnnotation = (json) => {\n  const target = {\n    refId: \"\",\n    query: json.query ?? \"\",\n    queryType: \"tags\",\n    fromAnnotations: true,\n    tagsColumn: json.tagsColumn ?? \"\",\n    textColumn: json.textColumn ?? \"\",\n    timeEndColumn: json.timeEndColumn ?? \"\",\n    titleColumn: json.titleColumn ?? \"\",\n    name: json.name ?? \"\"\n  };\n  if (json.target && json.target.limit) {\n    target.limit = json.target.limit;\n  }\n  if (json.target && json.target.matchAny) {\n    target.matchAny = json.target.matchAny;\n  }\n  if (json.target && json.target.tags) {\n    target.tags = json.target.tags;\n  }\n  if (json.target && json.target.type) {\n    target.type = json.target.type;\n  }\n  return target;\n};\nconst prepareAnnotation = (json) => {\n  json.target = json.target && !json.target?.query ? migrateLegacyAnnotation(json) : json.target;\n  return json;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9pbmZsdXhkYi9taWdyYXRpb25zLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBb0JBLE1BQU0sMEJBQTBCLENBQUMsU0FBMkI7QUFFMUQsUUFBTSxTQUFzQjtBQUFBLElBQzFCLE9BQU87QUFBQSxJQUNQLE9BQU8sS0FBSyxTQUFTO0FBQUEsSUFDckIsV0FBVztBQUFBLElBQ1gsaUJBQWlCO0FBQUEsSUFDakIsWUFBWSxLQUFLLGNBQWM7QUFBQSxJQUMvQixZQUFZLEtBQUssY0FBYztBQUFBLElBQy9CLGVBQWUsS0FBSyxpQkFBaUI7QUFBQSxJQUNyQyxhQUFhLEtBQUssZUFBZTtBQUFBLElBQ2pDLE1BQU0sS0FBSyxRQUFRO0FBQUEsRUFDckI7QUFHQSxNQUFJLEtBQUssVUFBVSxLQUFLLE9BQU8sT0FBTztBQUNwQyxXQUFPLFFBQVEsS0FBSyxPQUFPO0FBQUEsRUFDN0I7QUFFQSxNQUFJLEtBQUssVUFBVSxLQUFLLE9BQU8sVUFBVTtBQUN2QyxXQUFPLFdBQVcsS0FBSyxPQUFPO0FBQUEsRUFDaEM7QUFFQSxNQUFJLEtBQUssVUFBVSxLQUFLLE9BQU8sTUFBTTtBQUNuQyxXQUFPLE9BQU8sS0FBSyxPQUFPO0FBQUEsRUFDNUI7QUFFQSxNQUFJLEtBQUssVUFBVSxLQUFLLE9BQU8sTUFBTTtBQUNuQyxXQUFPLE9BQU8sS0FBSyxPQUFPO0FBQUEsRUFDNUI7QUFFQSxTQUFPO0FBQ1Q7QUFHTyxNQUFNLG9CQUFvQixDQUFDLFNBQWM7QUFFOUMsT0FBSyxTQUFTLEtBQUssVUFBVSxDQUFDLEtBQUssUUFBUSxRQUFRLHdCQUF3QixJQUFJLElBQUksS0FBSztBQUV4RixTQUFPO0FBQ1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ncmFmYW5hLy4vcHVibGljL2FwcC9wbHVnaW5zL2RhdGFzb3VyY2UvaW5mbHV4ZGIvbWlncmF0aW9ucy50cz9lZGNjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluZmx1eFF1ZXJ5LCBJbmZsdXhRdWVyeVRhZyB9IGZyb20gJy4vdHlwZXMnO1xuXG50eXBlIExlZ2FjeUFubm90YXRpb24gPSB7XG4gIHF1ZXJ5Pzogc3RyaW5nO1xuICBxdWVyeVR5cGU/OiBzdHJpbmc7XG4gIGZyb21Bbm5vdGF0aW9ucz86IGJvb2xlYW47XG4gIHRhZ3NDb2x1bW4/OiBzdHJpbmc7XG4gIHRleHRDb2x1bW4/OiBzdHJpbmc7XG4gIHRpbWVFbmRDb2x1bW4/OiBzdHJpbmc7XG4gIHRpdGxlQ29sdW1uPzogc3RyaW5nO1xuICBuYW1lPzogc3RyaW5nO1xuICB0YXJnZXQ/OiB7XG4gICAgbGltaXQ/OiBzdHJpbmcgfCBudW1iZXIgfCB1bmRlZmluZWQ7XG4gICAgbWF0Y2hBbnk/OiBib29sZWFuO1xuICAgIHRhZ3M/OiBJbmZsdXhRdWVyeVRhZ1tdO1xuICAgIHR5cGU/OiBzdHJpbmc7XG4gIH07XG59O1xuXG4vLyB0aGlzIGJlY29tZXMgdGhlIHRhcmdldCBpbiB0aGUgbWlncmF0ZWQgYW5ub3RhdGlvbnNcbmNvbnN0IG1pZ3JhdGVMZWdhY3lBbm5vdGF0aW9uID0gKGpzb246IExlZ2FjeUFubm90YXRpb24pID0+IHtcbiAgLy8gZXNsaW50LWlnbm9yZS1uZXh0LWxpbmVcbiAgY29uc3QgdGFyZ2V0OiBJbmZsdXhRdWVyeSA9IHtcbiAgICByZWZJZDogJycsXG4gICAgcXVlcnk6IGpzb24ucXVlcnkgPz8gJycsXG4gICAgcXVlcnlUeXBlOiAndGFncycsXG4gICAgZnJvbUFubm90YXRpb25zOiB0cnVlLFxuICAgIHRhZ3NDb2x1bW46IGpzb24udGFnc0NvbHVtbiA/PyAnJyxcbiAgICB0ZXh0Q29sdW1uOiBqc29uLnRleHRDb2x1bW4gPz8gJycsXG4gICAgdGltZUVuZENvbHVtbjoganNvbi50aW1lRW5kQ29sdW1uID8/ICcnLFxuICAgIHRpdGxlQ29sdW1uOiBqc29uLnRpdGxlQ29sdW1uID8/ICcnLFxuICAgIG5hbWU6IGpzb24ubmFtZSA/PyAnJyxcbiAgfTtcblxuICAvLyBoYW5kbGUganNvbiB0YXJnZXQgZmllbGRzXG4gIGlmIChqc29uLnRhcmdldCAmJiBqc29uLnRhcmdldC5saW1pdCkge1xuICAgIHRhcmdldC5saW1pdCA9IGpzb24udGFyZ2V0LmxpbWl0O1xuICB9XG5cbiAgaWYgKGpzb24udGFyZ2V0ICYmIGpzb24udGFyZ2V0Lm1hdGNoQW55KSB7XG4gICAgdGFyZ2V0Lm1hdGNoQW55ID0ganNvbi50YXJnZXQubWF0Y2hBbnk7XG4gIH1cblxuICBpZiAoanNvbi50YXJnZXQgJiYganNvbi50YXJnZXQudGFncykge1xuICAgIHRhcmdldC50YWdzID0ganNvbi50YXJnZXQudGFncztcbiAgfVxuXG4gIGlmIChqc29uLnRhcmdldCAmJiBqc29uLnRhcmdldC50eXBlKSB7XG4gICAgdGFyZ2V0LnR5cGUgPSBqc29uLnRhcmdldC50eXBlO1xuICB9XG5cbiAgcmV0dXJuIHRhcmdldDtcbn07XG5cbi8vIGVzbGludC1pZ25vcmUtbmV4dC1saW5lXG5leHBvcnQgY29uc3QgcHJlcGFyZUFubm90YXRpb24gPSAoanNvbjogYW55KSA9PiB7XG4gIC8vIG1ha2Ugc3VyZSB0aGF0IGFueSBhZGRpdGlvbmFsIHRhcmdldCBmaWVsZHMgYXJlIG1pZ3JhdGVkXG4gIGpzb24udGFyZ2V0ID0ganNvbi50YXJnZXQgJiYgIWpzb24udGFyZ2V0Py5xdWVyeSA/IG1pZ3JhdGVMZWdhY3lBbm5vdGF0aW9uKGpzb24pIDoganNvbi50YXJnZXQ7XG5cbiAgcmV0dXJuIGpzb247XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/influxdb/migrations.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/influxdb/module.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   plugin: () => (/* binding */ plugin)\n/* harmony export */ });\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/types/datasource.ts\");\n/* harmony import */ var _components_editor_config_ConfigEditor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/components/editor/config/ConfigEditor.tsx\");\n/* harmony import */ var _components_editor_query_QueryEditor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/components/editor/query/QueryEditor.tsx\");\n/* harmony import */ var _components_editor_query_influxql_InfluxStartPage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/components/editor/query/influxql/InfluxStartPage.tsx\");\n/* harmony import */ var _components_editor_variable_VariableQueryEditor__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/components/editor/variable/VariableQueryEditor.tsx\");\n/* harmony import */ var _datasource__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/datasource.ts\");\n\n\n\n\n\n\n\nconst plugin = new _grafana_data__WEBPACK_IMPORTED_MODULE_5__.DataSourcePlugin(_datasource__WEBPACK_IMPORTED_MODULE_4__[\"default\"]).setConfigEditor(_components_editor_config_ConfigEditor__WEBPACK_IMPORTED_MODULE_0__[\"default\"]).setQueryEditor(_components_editor_query_QueryEditor__WEBPACK_IMPORTED_MODULE_1__.QueryEditor).setVariableQueryEditor(_components_editor_variable_VariableQueryEditor__WEBPACK_IMPORTED_MODULE_3__[\"default\"]).setQueryEditorHelp(_components_editor_query_influxql_InfluxStartPage__WEBPACK_IMPORTED_MODULE_2__.InfluxStartPage);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9pbmZsdXhkYi9tb2R1bGUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBaUM7QUFFUjtBQUNHO0FBQ0k7QUFDQTtBQUNIO0FBRXRCLE1BQU0sU0FBUyxJQUFJLDJEQUFnQixDQUFDLG1EQUFnQixFQUN4RCxnQkFBZ0IsOEVBQVksRUFDNUIsZUFBZSw2RUFBVyxFQUMxQix1QkFBdUIsdUZBQW1CLEVBQzFDLG1CQUFtQiw4RkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL2dyYWZhbmEvLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9pbmZsdXhkYi9tb2R1bGUudHM/YjI1ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEYXRhU291cmNlUGx1Z2luIH0gZnJvbSAnQGdyYWZhbmEvZGF0YSc7XG5cbmltcG9ydCBDb25maWdFZGl0b3IgZnJvbSAnLi9jb21wb25lbnRzL2VkaXRvci9jb25maWcvQ29uZmlnRWRpdG9yJztcbmltcG9ydCB7IFF1ZXJ5RWRpdG9yIH0gZnJvbSAnLi9jb21wb25lbnRzL2VkaXRvci9xdWVyeS9RdWVyeUVkaXRvcic7XG5pbXBvcnQgeyBJbmZsdXhTdGFydFBhZ2UgfSBmcm9tICcuL2NvbXBvbmVudHMvZWRpdG9yL3F1ZXJ5L2luZmx1eHFsL0luZmx1eFN0YXJ0UGFnZSc7XG5pbXBvcnQgVmFyaWFibGVRdWVyeUVkaXRvciBmcm9tICcuL2NvbXBvbmVudHMvZWRpdG9yL3ZhcmlhYmxlL1ZhcmlhYmxlUXVlcnlFZGl0b3InO1xuaW1wb3J0IEluZmx1eERhdGFzb3VyY2UgZnJvbSAnLi9kYXRhc291cmNlJztcblxuZXhwb3J0IGNvbnN0IHBsdWdpbiA9IG5ldyBEYXRhU291cmNlUGx1Z2luKEluZmx1eERhdGFzb3VyY2UpXG4gIC5zZXRDb25maWdFZGl0b3IoQ29uZmlnRWRpdG9yKVxuICAuc2V0UXVlcnlFZGl0b3IoUXVlcnlFZGl0b3IpXG4gIC5zZXRWYXJpYWJsZVF1ZXJ5RWRpdG9yKFZhcmlhYmxlUXVlcnlFZGl0b3IpXG4gIC5zZXRRdWVyeUVkaXRvckhlbHAoSW5mbHV4U3RhcnRQYWdlKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/influxdb/module.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/influxdb/queryUtils.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addNewGroupByPart: () => (/* binding */ addNewGroupByPart),\n/* harmony export */   addNewSelectPart: () => (/* binding */ addNewSelectPart),\n/* harmony export */   buildRawQuery: () => (/* binding */ buildRawQuery),\n/* harmony export */   changeGroupByPart: () => (/* binding */ changeGroupByPart),\n/* harmony export */   changeSelectPart: () => (/* binding */ changeSelectPart),\n/* harmony export */   normalizeQuery: () => (/* binding */ normalizeQuery),\n/* harmony export */   removeGroupByPart: () => (/* binding */ removeGroupByPart),\n/* harmony export */   removeSelectPart: () => (/* binding */ removeSelectPart)\n/* harmony export */ });\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/lodash-npm-4.17.21-6382451519-eb835a2e51.zip/node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _influx_query_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/plugins/datasource/influxdb/influx_query_model.ts\");\n\n\n\nfunction buildRawQuery(query) {\n  const queryCopy = (0,lodash__WEBPACK_IMPORTED_MODULE_0__.cloneDeep)(query);\n  const model = new _influx_query_model__WEBPACK_IMPORTED_MODULE_1__[\"default\"](queryCopy);\n  return model.render(false);\n}\nfunction normalizeQuery(query) {\n  if (query.policy !== void 0 && query.resultFormat !== void 0 && query.orderByTime !== void 0 && query.tags !== void 0 && query.groupBy !== void 0 && query.select !== void 0) {\n    return query;\n  }\n  const queryCopy = (0,lodash__WEBPACK_IMPORTED_MODULE_0__.cloneDeep)(query);\n  return new _influx_query_model__WEBPACK_IMPORTED_MODULE_1__[\"default\"](queryCopy).target;\n}\nfunction addNewSelectPart(query, type, index) {\n  const queryCopy = (0,lodash__WEBPACK_IMPORTED_MODULE_0__.cloneDeep)(query);\n  const model = new _influx_query_model__WEBPACK_IMPORTED_MODULE_1__[\"default\"](queryCopy);\n  model.addSelectPart(model.selectModels[index], type);\n  return model.target;\n}\nfunction removeSelectPart(query, partIndex, index) {\n  const queryCopy = (0,lodash__WEBPACK_IMPORTED_MODULE_0__.cloneDeep)(query);\n  const model = new _influx_query_model__WEBPACK_IMPORTED_MODULE_1__[\"default\"](queryCopy);\n  const selectModel = model.selectModels[index];\n  model.removeSelectPart(selectModel, selectModel[partIndex]);\n  return model.target;\n}\nfunction changeSelectPart(query, listIndex, partIndex, newParams) {\n  const newSel = [...query.select ?? []];\n  newSel[listIndex] = [...newSel[listIndex]];\n  newSel[listIndex][partIndex] = {\n    ...newSel[listIndex][partIndex],\n    params: newParams\n  };\n  return { ...query, select: newSel };\n}\nfunction addNewGroupByPart(query, type) {\n  const queryCopy = (0,lodash__WEBPACK_IMPORTED_MODULE_0__.cloneDeep)(query);\n  const model = new _influx_query_model__WEBPACK_IMPORTED_MODULE_1__[\"default\"](queryCopy);\n  model.addGroupBy(type);\n  return model.target;\n}\nfunction removeGroupByPart(query, partIndex) {\n  const queryCopy = (0,lodash__WEBPACK_IMPORTED_MODULE_0__.cloneDeep)(query);\n  const model = new _influx_query_model__WEBPACK_IMPORTED_MODULE_1__[\"default\"](queryCopy);\n  model.removeGroupByPart(model.groupByParts[partIndex], partIndex);\n  return model.target;\n}\nfunction changeGroupByPart(query, partIndex, newParams) {\n  const newGroupBy = [...query.groupBy ?? []];\n  newGroupBy[partIndex] = {\n    ...newGroupBy[partIndex],\n    params: newParams\n  };\n  return { ...query, groupBy: newGroupBy };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9pbmZsdXhkYi9xdWVyeVV0aWxzLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUEwQjtBQUVHO0FBU3RCLFNBQVMsY0FBYyxPQUE0QjtBQUN4RCxRQUFNLFlBQVksaURBQVMsQ0FBQyxLQUFLO0FBQ2pDLFFBQU0sUUFBUSxJQUFJLDJEQUFnQixDQUFDLFNBQVM7QUFDNUMsU0FBTyxNQUFNLE9BQU8sS0FBSztBQUMzQjtBQUVPLFNBQVMsZUFBZSxPQUFpQztBQUU5RCxNQUNFLE1BQU0sV0FBVyxVQUNqQixNQUFNLGlCQUFpQixVQUN2QixNQUFNLGdCQUFnQixVQUN0QixNQUFNLFNBQVMsVUFDZixNQUFNLFlBQVksVUFDbEIsTUFBTSxXQUFXLFFBQ2pCO0FBQ0EsV0FBTztBQUFBLEVBQ1Q7QUFNQSxRQUFNLFlBQVksaURBQVMsQ0FBQyxLQUFLO0FBQ2pDLFNBQU8sSUFBSSwyREFBZ0IsQ0FBQyxTQUFTLEVBQUU7QUFDekM7QUFFTyxTQUFTLGlCQUFpQixPQUFvQixNQUFjLE9BQTRCO0FBQzdGLFFBQU0sWUFBWSxpREFBUyxDQUFDLEtBQUs7QUFDakMsUUFBTSxRQUFRLElBQUksMkRBQWdCLENBQUMsU0FBUztBQUM1QyxRQUFNLGNBQWMsTUFBTSxhQUFhLEtBQUssR0FBRyxJQUFJO0FBQ25ELFNBQU8sTUFBTTtBQUNmO0FBRU8sU0FBUyxpQkFBaUIsT0FBb0IsV0FBbUIsT0FBNEI7QUFDbEcsUUFBTSxZQUFZLGlEQUFTLENBQUMsS0FBSztBQUNqQyxRQUFNLFFBQVEsSUFBSSwyREFBZ0IsQ0FBQyxTQUFTO0FBQzVDLFFBQU0sY0FBYyxNQUFNLGFBQWEsS0FBSztBQUM1QyxRQUFNLGlCQUFpQixhQUFhLFlBQVksU0FBUyxDQUFDO0FBQzFELFNBQU8sTUFBTTtBQUNmO0FBRU8sU0FBUyxpQkFDZCxPQUNBLFdBQ0EsV0FDQSxXQUNhO0FBRWIsUUFBTSxTQUFTLENBQUMsR0FBSSxNQUFNLFVBQVUsQ0FBQyxDQUFFO0FBQ3ZDLFNBQU8sU0FBUyxJQUFJLENBQUMsR0FBRyxPQUFPLFNBQVMsQ0FBQztBQUN6QyxTQUFPLFNBQVMsRUFBRSxTQUFTLElBQUk7QUFBQSxJQUM3QixHQUFHLE9BQU8sU0FBUyxFQUFFLFNBQVM7QUFBQSxJQUM5QixRQUFRO0FBQUEsRUFDVjtBQUNBLFNBQU8sRUFBRSxHQUFHLE9BQU8sUUFBUSxPQUFPO0FBQ3BDO0FBRU8sU0FBUyxrQkFBa0IsT0FBb0IsTUFBMkI7QUFDL0UsUUFBTSxZQUFZLGlEQUFTLENBQUMsS0FBSztBQUNqQyxRQUFNLFFBQVEsSUFBSSwyREFBZ0IsQ0FBQyxTQUFTO0FBQzVDLFFBQU0sV0FBVyxJQUFJO0FBQ3JCLFNBQU8sTUFBTTtBQUNmO0FBRU8sU0FBUyxrQkFBa0IsT0FBb0IsV0FBZ0M7QUFDcEYsUUFBTSxZQUFZLGlEQUFTLENBQUMsS0FBSztBQUNqQyxRQUFNLFFBQVEsSUFBSSwyREFBZ0IsQ0FBQyxTQUFTO0FBQzVDLFFBQU0sa0JBQWtCLE1BQU0sYUFBYSxTQUFTLEdBQUcsU0FBUztBQUNoRSxTQUFPLE1BQU07QUFDZjtBQUVPLFNBQVMsa0JBQWtCLE9BQW9CLFdBQW1CLFdBQWtDO0FBRXpHLFFBQU0sYUFBYSxDQUFDLEdBQUksTUFBTSxXQUFXLENBQUMsQ0FBRTtBQUM1QyxhQUFXLFNBQVMsSUFBSTtBQUFBLElBQ3RCLEdBQUcsV0FBVyxTQUFTO0FBQUEsSUFDdkIsUUFBUTtBQUFBLEVBQ1Y7QUFDQSxTQUFPLEVBQUUsR0FBRyxPQUFPLFNBQVMsV0FBVztBQUN6QyIsInNvdXJjZXMiOlsid2VicGFjazovL2dyYWZhbmEvLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9pbmZsdXhkYi9xdWVyeVV0aWxzLnRzP2E5ZGYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY2xvbmVEZWVwIH0gZnJvbSAnbG9kYXNoJztcblxuaW1wb3J0IEluZmx1eFF1ZXJ5TW9kZWwgZnJvbSAnLi9pbmZsdXhfcXVlcnlfbW9kZWwnO1xuaW1wb3J0IHsgSW5mbHV4UXVlcnkgfSBmcm9tICcuL3R5cGVzJztcblxuLy8gRklYTUU6IHRoZXNlIGZ1bmN0aW9ucyBhcmUgYSBiZWdpbm5pbmcgb2YgYSByZWZhY3RvcmluZyBvZiBpbmZsdXhfcXVlcnlfbW9kZWwudHNcbi8vIGludG8gYSBzaW1wbGVyIGFwcHJvYWNoIHdpdGggZnVsbCB0eXBlc2NyaXB0IHR5cGVzLlxuLy8gbGF0ZXIgd2Ugc2hvdWxkIGJlIGFibGUgdG8gbWlncmF0ZSB0aGUgdW5pdC10ZXN0c1xuLy8gdGhhdCByZWxhdGUgdG8gdGhlc2UgZnVuY3Rpb25zIGhlcmUsIGFuZCB0aGVuIHBlcmhhcHMgZXZlbiBtb3ZlIHRoZSBpbXBsZW1lbnRhdGlvblxuLy8gdG8gdGhpcyBwbGFjZVxuXG5leHBvcnQgZnVuY3Rpb24gYnVpbGRSYXdRdWVyeShxdWVyeTogSW5mbHV4UXVlcnkpOiBzdHJpbmcge1xuICBjb25zdCBxdWVyeUNvcHkgPSBjbG9uZURlZXAocXVlcnkpOyAvLyB0aGUgcXVlcnktbW9kZWwgbXV0YXRlcyB0aGUgcXVlcnlcbiAgY29uc3QgbW9kZWwgPSBuZXcgSW5mbHV4UXVlcnlNb2RlbChxdWVyeUNvcHkpO1xuICByZXR1cm4gbW9kZWwucmVuZGVyKGZhbHNlKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG5vcm1hbGl6ZVF1ZXJ5KHF1ZXJ5OiBJbmZsdXhRdWVyeSk6IEluZmx1eFF1ZXJ5IHtcbiAgLy8gd2UgcmV0dXJuIHRoZSBvcmlnaW5hbCBxdWVyeSBpZiB0aGVyZSBpcyBubyBuZWVkIHRvIHVwZGF0ZSBpdFxuICBpZiAoXG4gICAgcXVlcnkucG9saWN5ICE9PSB1bmRlZmluZWQgJiZcbiAgICBxdWVyeS5yZXN1bHRGb3JtYXQgIT09IHVuZGVmaW5lZCAmJlxuICAgIHF1ZXJ5Lm9yZGVyQnlUaW1lICE9PSB1bmRlZmluZWQgJiZcbiAgICBxdWVyeS50YWdzICE9PSB1bmRlZmluZWQgJiZcbiAgICBxdWVyeS5ncm91cEJ5ICE9PSB1bmRlZmluZWQgJiZcbiAgICBxdWVyeS5zZWxlY3QgIT09IHVuZGVmaW5lZFxuICApIHtcbiAgICByZXR1cm4gcXVlcnk7XG4gIH1cblxuICAvLyBGSVhNRTogd2Ugc2hvdWxkIG1vdmUgdGhlIHdob2xlIG5vcm1hbGl6ZVF1ZXJ5IGxvZ2ljIGhlcmUsXG4gIC8vIGFuZCB0aGVuIGhhdmUgaW5mbHV4UXVlcnlNb2RlbCBjYWxsIHRoaXMgZnVuY3Rpb24sXG4gIC8vIHRvIGNvbmNlbnRyYXRlIHRoZSB3aG9sZSBsb2dpYyBoZXJlXG5cbiAgY29uc3QgcXVlcnlDb3B5ID0gY2xvbmVEZWVwKHF1ZXJ5KTsgLy8gdGhlIHF1ZXJ5LW1vZGVsIG11dGF0ZXMgdGhlIHF1ZXJ5XG4gIHJldHVybiBuZXcgSW5mbHV4UXVlcnlNb2RlbChxdWVyeUNvcHkpLnRhcmdldDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFkZE5ld1NlbGVjdFBhcnQocXVlcnk6IEluZmx1eFF1ZXJ5LCB0eXBlOiBzdHJpbmcsIGluZGV4OiBudW1iZXIpOiBJbmZsdXhRdWVyeSB7XG4gIGNvbnN0IHF1ZXJ5Q29weSA9IGNsb25lRGVlcChxdWVyeSk7IC8vIHRoZSBxdWVyeS1tb2RlbCBtdXRhdGVzIHRoZSBxdWVyeVxuICBjb25zdCBtb2RlbCA9IG5ldyBJbmZsdXhRdWVyeU1vZGVsKHF1ZXJ5Q29weSk7XG4gIG1vZGVsLmFkZFNlbGVjdFBhcnQobW9kZWwuc2VsZWN0TW9kZWxzW2luZGV4XSwgdHlwZSk7XG4gIHJldHVybiBtb2RlbC50YXJnZXQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZW1vdmVTZWxlY3RQYXJ0KHF1ZXJ5OiBJbmZsdXhRdWVyeSwgcGFydEluZGV4OiBudW1iZXIsIGluZGV4OiBudW1iZXIpOiBJbmZsdXhRdWVyeSB7XG4gIGNvbnN0IHF1ZXJ5Q29weSA9IGNsb25lRGVlcChxdWVyeSk7IC8vIHRoZSBxdWVyeS1tb2RlbCBtdXRhdGVzIHRoZSBxdWVyeVxuICBjb25zdCBtb2RlbCA9IG5ldyBJbmZsdXhRdWVyeU1vZGVsKHF1ZXJ5Q29weSk7XG4gIGNvbnN0IHNlbGVjdE1vZGVsID0gbW9kZWwuc2VsZWN0TW9kZWxzW2luZGV4XTtcbiAgbW9kZWwucmVtb3ZlU2VsZWN0UGFydChzZWxlY3RNb2RlbCwgc2VsZWN0TW9kZWxbcGFydEluZGV4XSk7XG4gIHJldHVybiBtb2RlbC50YXJnZXQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjaGFuZ2VTZWxlY3RQYXJ0KFxuICBxdWVyeTogSW5mbHV4UXVlcnksXG4gIGxpc3RJbmRleDogbnVtYmVyLFxuICBwYXJ0SW5kZXg6IG51bWJlcixcbiAgbmV3UGFyYW1zOiBzdHJpbmdbXVxuKTogSW5mbHV4UXVlcnkge1xuICAvLyB3ZSBuZWVkIHRvIG1ha2Ugc2hhbGxvdyBjb3B5IG9mIGBxdWVyeS5zZWxlY3RgIGRvd24gdG8gYHF1ZXJ5LnNlbGVjdFtsaXN0SW5kZXhdW3BhcnRJbmRleF1gXG4gIGNvbnN0IG5ld1NlbCA9IFsuLi4ocXVlcnkuc2VsZWN0ID8/IFtdKV07XG4gIG5ld1NlbFtsaXN0SW5kZXhdID0gWy4uLm5ld1NlbFtsaXN0SW5kZXhdXTtcbiAgbmV3U2VsW2xpc3RJbmRleF1bcGFydEluZGV4XSA9IHtcbiAgICAuLi5uZXdTZWxbbGlzdEluZGV4XVtwYXJ0SW5kZXhdLFxuICAgIHBhcmFtczogbmV3UGFyYW1zLFxuICB9O1xuICByZXR1cm4geyAuLi5xdWVyeSwgc2VsZWN0OiBuZXdTZWwgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFkZE5ld0dyb3VwQnlQYXJ0KHF1ZXJ5OiBJbmZsdXhRdWVyeSwgdHlwZTogc3RyaW5nKTogSW5mbHV4UXVlcnkge1xuICBjb25zdCBxdWVyeUNvcHkgPSBjbG9uZURlZXAocXVlcnkpOyAvLyB0aGUgcXVlcnktbW9kZWwgbXV0YXRlcyB0aGUgcXVlcnlcbiAgY29uc3QgbW9kZWwgPSBuZXcgSW5mbHV4UXVlcnlNb2RlbChxdWVyeUNvcHkpO1xuICBtb2RlbC5hZGRHcm91cEJ5KHR5cGUpO1xuICByZXR1cm4gbW9kZWwudGFyZ2V0O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcmVtb3ZlR3JvdXBCeVBhcnQocXVlcnk6IEluZmx1eFF1ZXJ5LCBwYXJ0SW5kZXg6IG51bWJlcik6IEluZmx1eFF1ZXJ5IHtcbiAgY29uc3QgcXVlcnlDb3B5ID0gY2xvbmVEZWVwKHF1ZXJ5KTsgLy8gdGhlIHF1ZXJ5LW1vZGVsIG11dGF0ZXMgdGhlIHF1ZXJ5XG4gIGNvbnN0IG1vZGVsID0gbmV3IEluZmx1eFF1ZXJ5TW9kZWwocXVlcnlDb3B5KTtcbiAgbW9kZWwucmVtb3ZlR3JvdXBCeVBhcnQobW9kZWwuZ3JvdXBCeVBhcnRzW3BhcnRJbmRleF0sIHBhcnRJbmRleCk7XG4gIHJldHVybiBtb2RlbC50YXJnZXQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjaGFuZ2VHcm91cEJ5UGFydChxdWVyeTogSW5mbHV4UXVlcnksIHBhcnRJbmRleDogbnVtYmVyLCBuZXdQYXJhbXM6IHN0cmluZ1tdKTogSW5mbHV4UXVlcnkge1xuICAvLyB3ZSBuZWVkIHRvIG1ha2Ugc2hhbGxvdyBjb3B5IG9mIGBxdWVyeS5ncm91cEJ5YCBkb3duIHRvIGBxdWVyeS5ncm91cEJ5W3BhcnRJbmRleF1gXG4gIGNvbnN0IG5ld0dyb3VwQnkgPSBbLi4uKHF1ZXJ5Lmdyb3VwQnkgPz8gW10pXTtcbiAgbmV3R3JvdXBCeVtwYXJ0SW5kZXhdID0ge1xuICAgIC4uLm5ld0dyb3VwQnlbcGFydEluZGV4XSxcbiAgICBwYXJhbXM6IG5ld1BhcmFtcyxcbiAgfTtcbiAgcmV0dXJuIHsgLi4ucXVlcnksIGdyb3VwQnk6IG5ld0dyb3VwQnkgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/influxdb/queryUtils.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/influxdb/query_part.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/lodash-npm-4.17.21-6382451519-eb835a2e51.zip/node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var app_features_alerting_state_query_part__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/features/alerting/state/query_part.ts\");\n\n\n\nconst index = [];\nconst categories = {\n  Aggregations: [],\n  Selectors: [],\n  Transformations: [],\n  Predictors: [],\n  Math: [],\n  Aliasing: [],\n  Fields: []\n};\nfunction createPart(part) {\n  const def = index[part.type];\n  if (!def) {\n    throw { message: \"Could not find query part \" + part.type };\n  }\n  return new app_features_alerting_state_query_part__WEBPACK_IMPORTED_MODULE_1__.QueryPart(part, def);\n}\nfunction register(options) {\n  index[options.type] = new app_features_alerting_state_query_part__WEBPACK_IMPORTED_MODULE_1__.QueryPartDef(options);\n  options.category.push(index[options.type]);\n}\nconst groupByTimeFunctions = [];\nfunction aliasRenderer(part, innerExpr) {\n  return innerExpr + ' AS \"' + part.params[0] + '\"';\n}\nfunction fieldRenderer(part) {\n  const param = part.params[0];\n  if (param === \"*\") {\n    return \"*\";\n  }\n  let escapedParam = `\"${param}\"`;\n  if (param.endsWith(\"::tag\")) {\n    escapedParam = `\"${param.slice(0, -5)}\"::tag`;\n  }\n  if (param.endsWith(\"::field\")) {\n    escapedParam = `\"${param.slice(0, -7)}\"::field`;\n  }\n  return escapedParam;\n}\nfunction replaceAggregationAddStrategy(selectParts, partModel) {\n  for (let i = 0; i < selectParts.length; i++) {\n    const part = selectParts[i];\n    if (part.def.category === categories.Aggregations) {\n      if (part.def.type === partModel.def.type) {\n        return;\n      }\n      if (part.def.type === \"count\" && partModel.def.type === \"distinct\") {\n        break;\n      }\n      if (part.def.type === \"distinct\") {\n        const morePartsAvailable = selectParts.length >= i + 2;\n        if (partModel.def.type !== \"count\" && morePartsAvailable) {\n          const nextPart = selectParts[i + 1];\n          if (nextPart.def.category === categories.Aggregations) {\n            selectParts.splice(i + 1, 1);\n          }\n        } else if (partModel.def.type === \"count\") {\n          if (!morePartsAvailable || selectParts[i + 1].def.type !== \"count\") {\n            selectParts.splice(i + 1, 0, partModel);\n          }\n          return;\n        }\n      }\n      selectParts[i] = partModel;\n      return;\n    }\n    if (part.def.category === categories.Selectors) {\n      selectParts[i] = partModel;\n      return;\n    }\n  }\n  selectParts.splice(1, 0, partModel);\n}\nfunction addTransformationStrategy(selectParts, partModel) {\n  let i;\n  for (i = 0; i < selectParts.length; i++) {\n    const part = selectParts[i];\n    if (part.def.category === categories.Math || part.def.category === categories.Aliasing) {\n      break;\n    }\n  }\n  selectParts.splice(i, 0, partModel);\n}\nfunction addMathStrategy(selectParts, partModel) {\n  const partCount = selectParts.length;\n  if (partCount > 0) {\n    if (selectParts[partCount - 1].def.type === \"math\") {\n      selectParts[partCount - 1] = partModel;\n      return;\n    }\n    if (partCount > 1 && selectParts[partCount - 2].def.type === \"math\") {\n      selectParts[partCount - 2] = partModel;\n      return;\n    } else if (selectParts[partCount - 1].def.type === \"alias\") {\n      selectParts.splice(partCount - 1, 0, partModel);\n      return;\n    }\n  }\n  selectParts.push(partModel);\n}\nfunction addAliasStrategy(selectParts, partModel) {\n  const partCount = selectParts.length;\n  if (partCount > 0) {\n    if (selectParts[partCount - 1].def.type === \"alias\") {\n      selectParts[partCount - 1] = partModel;\n      return;\n    }\n  }\n  selectParts.push(partModel);\n}\nfunction addFieldStrategy(selectParts, partModel, query) {\n  const parts = (0,lodash__WEBPACK_IMPORTED_MODULE_0__.map)(selectParts, (part) => {\n    return createPart({ type: part.def.type, params: (0,lodash__WEBPACK_IMPORTED_MODULE_0__.clone)(part.params) });\n  });\n  query.selectModels.push(parts);\n}\nregister({\n  type: \"field\",\n  addStrategy: addFieldStrategy,\n  category: categories.Fields,\n  params: [{ type: \"field\", dynamicLookup: true }],\n  defaultParams: [\"value\"],\n  renderer: fieldRenderer\n});\nregister({\n  type: \"count\",\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Aggregations,\n  params: [],\n  defaultParams: [],\n  renderer: app_features_alerting_state_query_part__WEBPACK_IMPORTED_MODULE_1__.functionRenderer\n});\nregister({\n  type: \"distinct\",\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Aggregations,\n  params: [],\n  defaultParams: [],\n  renderer: app_features_alerting_state_query_part__WEBPACK_IMPORTED_MODULE_1__.functionRenderer\n});\nregister({\n  type: \"integral\",\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Aggregations,\n  params: [],\n  defaultParams: [],\n  renderer: app_features_alerting_state_query_part__WEBPACK_IMPORTED_MODULE_1__.functionRenderer\n});\nregister({\n  type: \"mean\",\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Aggregations,\n  params: [],\n  defaultParams: [],\n  renderer: app_features_alerting_state_query_part__WEBPACK_IMPORTED_MODULE_1__.functionRenderer\n});\nregister({\n  type: \"median\",\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Aggregations,\n  params: [],\n  defaultParams: [],\n  renderer: app_features_alerting_state_query_part__WEBPACK_IMPORTED_MODULE_1__.functionRenderer\n});\nregister({\n  type: \"mode\",\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Aggregations,\n  params: [],\n  defaultParams: [],\n  renderer: app_features_alerting_state_query_part__WEBPACK_IMPORTED_MODULE_1__.functionRenderer\n});\nregister({\n  type: \"sum\",\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Aggregations,\n  params: [],\n  defaultParams: [],\n  renderer: app_features_alerting_state_query_part__WEBPACK_IMPORTED_MODULE_1__.functionRenderer\n});\nregister({\n  type: \"derivative\",\n  addStrategy: addTransformationStrategy,\n  category: categories.Transformations,\n  params: [\n    {\n      name: \"duration\",\n      type: \"interval\",\n      options: [\"1s\", \"10s\", \"1m\", \"5m\", \"10m\", \"15m\", \"1h\"]\n    }\n  ],\n  defaultParams: [\"10s\"],\n  renderer: app_features_alerting_state_query_part__WEBPACK_IMPORTED_MODULE_1__.functionRenderer\n});\nregister({\n  type: \"spread\",\n  addStrategy: addTransformationStrategy,\n  category: categories.Transformations,\n  params: [],\n  defaultParams: [],\n  renderer: app_features_alerting_state_query_part__WEBPACK_IMPORTED_MODULE_1__.functionRenderer\n});\nregister({\n  type: \"non_negative_derivative\",\n  addStrategy: addTransformationStrategy,\n  category: categories.Transformations,\n  params: [\n    {\n      name: \"duration\",\n      type: \"interval\",\n      options: [\"1s\", \"10s\", \"1m\", \"5m\", \"10m\", \"15m\", \"1h\"]\n    }\n  ],\n  defaultParams: [\"10s\"],\n  renderer: app_features_alerting_state_query_part__WEBPACK_IMPORTED_MODULE_1__.functionRenderer\n});\nregister({\n  type: \"difference\",\n  addStrategy: addTransformationStrategy,\n  category: categories.Transformations,\n  params: [],\n  defaultParams: [],\n  renderer: app_features_alerting_state_query_part__WEBPACK_IMPORTED_MODULE_1__.functionRenderer\n});\nregister({\n  type: \"non_negative_difference\",\n  addStrategy: addTransformationStrategy,\n  category: categories.Transformations,\n  params: [],\n  defaultParams: [],\n  renderer: app_features_alerting_state_query_part__WEBPACK_IMPORTED_MODULE_1__.functionRenderer\n});\nregister({\n  type: \"moving_average\",\n  addStrategy: addTransformationStrategy,\n  category: categories.Transformations,\n  params: [{ name: \"window\", type: \"int\", options: [5, 10, 20, 30, 40] }],\n  defaultParams: [10],\n  renderer: app_features_alerting_state_query_part__WEBPACK_IMPORTED_MODULE_1__.functionRenderer\n});\nregister({\n  type: \"cumulative_sum\",\n  addStrategy: addTransformationStrategy,\n  category: categories.Transformations,\n  params: [],\n  defaultParams: [],\n  renderer: app_features_alerting_state_query_part__WEBPACK_IMPORTED_MODULE_1__.functionRenderer\n});\nregister({\n  type: \"stddev\",\n  addStrategy: addTransformationStrategy,\n  category: categories.Transformations,\n  params: [],\n  defaultParams: [],\n  renderer: app_features_alerting_state_query_part__WEBPACK_IMPORTED_MODULE_1__.functionRenderer\n});\nregister({\n  type: \"time\",\n  category: groupByTimeFunctions,\n  params: [\n    {\n      name: \"interval\",\n      type: \"time\",\n      options: [\"$__interval\", \"1s\", \"10s\", \"1m\", \"5m\", \"10m\", \"15m\", \"1h\"]\n    }\n  ],\n  defaultParams: [\"$__interval\"],\n  renderer: app_features_alerting_state_query_part__WEBPACK_IMPORTED_MODULE_1__.functionRenderer\n});\nregister({\n  type: \"fill\",\n  category: groupByTimeFunctions,\n  params: [\n    {\n      name: \"fill\",\n      type: \"string\",\n      options: [\"none\", \"null\", \"0\", \"previous\", \"linear\"]\n    }\n  ],\n  defaultParams: [\"null\"],\n  renderer: app_features_alerting_state_query_part__WEBPACK_IMPORTED_MODULE_1__.functionRenderer\n});\nregister({\n  type: \"elapsed\",\n  addStrategy: addTransformationStrategy,\n  category: categories.Transformations,\n  params: [\n    {\n      name: \"duration\",\n      type: \"interval\",\n      options: [\"1s\", \"10s\", \"1m\", \"5m\", \"10m\", \"15m\", \"1h\"]\n    }\n  ],\n  defaultParams: [\"10s\"],\n  renderer: app_features_alerting_state_query_part__WEBPACK_IMPORTED_MODULE_1__.functionRenderer\n});\nregister({\n  type: \"holt_winters\",\n  addStrategy: addTransformationStrategy,\n  category: categories.Predictors,\n  params: [\n    { name: \"number\", type: \"int\", options: [5, 10, 20, 30, 40] },\n    { name: \"season\", type: \"int\", options: [0, 1, 2, 5, 10] }\n  ],\n  defaultParams: [10, 2],\n  renderer: app_features_alerting_state_query_part__WEBPACK_IMPORTED_MODULE_1__.functionRenderer\n});\nregister({\n  type: \"holt_winters_with_fit\",\n  addStrategy: addTransformationStrategy,\n  category: categories.Predictors,\n  params: [\n    { name: \"number\", type: \"int\", options: [5, 10, 20, 30, 40] },\n    { name: \"season\", type: \"int\", options: [0, 1, 2, 5, 10] }\n  ],\n  defaultParams: [10, 2],\n  renderer: app_features_alerting_state_query_part__WEBPACK_IMPORTED_MODULE_1__.functionRenderer\n});\nregister({\n  type: \"bottom\",\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Selectors,\n  params: [{ name: \"count\", type: \"int\" }],\n  defaultParams: [3],\n  renderer: app_features_alerting_state_query_part__WEBPACK_IMPORTED_MODULE_1__.functionRenderer\n});\nregister({\n  type: \"first\",\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Selectors,\n  params: [],\n  defaultParams: [],\n  renderer: app_features_alerting_state_query_part__WEBPACK_IMPORTED_MODULE_1__.functionRenderer\n});\nregister({\n  type: \"last\",\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Selectors,\n  params: [],\n  defaultParams: [],\n  renderer: app_features_alerting_state_query_part__WEBPACK_IMPORTED_MODULE_1__.functionRenderer\n});\nregister({\n  type: \"max\",\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Selectors,\n  params: [],\n  defaultParams: [],\n  renderer: app_features_alerting_state_query_part__WEBPACK_IMPORTED_MODULE_1__.functionRenderer\n});\nregister({\n  type: \"min\",\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Selectors,\n  params: [],\n  defaultParams: [],\n  renderer: app_features_alerting_state_query_part__WEBPACK_IMPORTED_MODULE_1__.functionRenderer\n});\nregister({\n  type: \"percentile\",\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Selectors,\n  params: [{ name: \"nth\", type: \"int\" }],\n  defaultParams: [95],\n  renderer: app_features_alerting_state_query_part__WEBPACK_IMPORTED_MODULE_1__.functionRenderer\n});\nregister({\n  type: \"top\",\n  addStrategy: replaceAggregationAddStrategy,\n  category: categories.Selectors,\n  params: [{ name: \"count\", type: \"int\" }],\n  defaultParams: [3],\n  renderer: app_features_alerting_state_query_part__WEBPACK_IMPORTED_MODULE_1__.functionRenderer\n});\nregister({\n  type: \"tag\",\n  category: groupByTimeFunctions,\n  params: [{ name: \"tag\", type: \"string\", dynamicLookup: true }],\n  defaultParams: [\"tag\"],\n  renderer: fieldRenderer\n});\nregister({\n  type: \"math\",\n  addStrategy: addMathStrategy,\n  category: categories.Math,\n  params: [{ name: \"expr\", type: \"string\" }],\n  defaultParams: [\" / 100\"],\n  renderer: app_features_alerting_state_query_part__WEBPACK_IMPORTED_MODULE_1__.suffixRenderer\n});\nregister({\n  type: \"alias\",\n  addStrategy: addAliasStrategy,\n  category: categories.Aliasing,\n  params: [{ name: \"name\", type: \"string\", quote: \"double\" }],\n  defaultParams: [\"alias\"],\n  renderMode: \"suffix\",\n  renderer: aliasRenderer\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  create: createPart,\n  getCategories: () => {\n    return categories;\n  },\n  replaceAggregationAdd: replaceAggregationAddStrategy\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/influxdb/query_part.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/influxdb/response_parser.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ResponseParser),\n/* harmony export */   getSelectedParams: () => (/* binding */ getSelectedParams)\n/* harmony export */ });\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/lodash-npm-4.17.21-6382451519-eb835a2e51.zip/node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/types/dataFrame.ts\");\n/* harmony import */ var _grafana_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-runtime-virtual-68c57d4c0c/1/packages/grafana-runtime/src/utils/queryResponse.ts\");\n/* harmony import */ var app_core_TableModel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/core/TableModel.ts\");\n\n\n\n\n\nclass ResponseParser {\n  parse(query, results) {\n    if (!results?.results || results.results.length === 0) {\n      return [];\n    }\n    const influxResults = results.results[0];\n    if (!influxResults.series) {\n      return [];\n    }\n    const normalizedQuery = query.toLowerCase();\n    const isRetentionPolicyQuery = normalizedQuery.indexOf(\"show retention policies\") >= 0;\n    const isValueFirst = normalizedQuery.indexOf(\"show field keys\") >= 0 || isRetentionPolicyQuery;\n    const res = /* @__PURE__ */ new Set();\n    (0,lodash__WEBPACK_IMPORTED_MODULE_0__.each)(influxResults.series, (serie) => {\n      (0,lodash__WEBPACK_IMPORTED_MODULE_0__.each)(serie.values, (value) => {\n        if ((0,lodash__WEBPACK_IMPORTED_MODULE_0__.isArray)(value)) {\n          if (isValueFirst) {\n            res.add(value[0].toString());\n          } else if (value[1] !== void 0) {\n            res.add(value[1].toString());\n          } else {\n            res.add(value[0].toString());\n          }\n        } else {\n          res.add(value.toString());\n        }\n      });\n    });\n    return Array.from(res).map((v) => ({ text: v }));\n  }\n  getTable(dfs, target, meta) {\n    let table = new app_core_TableModel__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n    if (dfs.length > 0) {\n      table.meta = {\n        ...meta,\n        executedQueryString: dfs[0].meta?.executedQueryString\n      };\n      table.refId = target.refId;\n      table = getTableCols(dfs, table, target);\n      if (dfs[0].fields[1] && dfs[0].fields[1].labels) {\n        let dfsByLabels = (0,lodash__WEBPACK_IMPORTED_MODULE_0__.groupBy)(\n          dfs,\n          (df) => df.fields[1].labels ? Object.values(df.fields[1].labels) : null\n        );\n        const labels = Object.keys(dfsByLabels);\n        const dfsByLabelValues = Object.values(dfsByLabels);\n        for (let i = 0; i < dfsByLabelValues.length; i++) {\n          table = getTableRows(dfsByLabelValues[i], table, [...labels[i].split(\",\")]);\n        }\n      } else {\n        table = getTableRows(dfs, table, []);\n      }\n    }\n    return table;\n  }\n  async transformAnnotationResponse(annotation, data, target) {\n    const rsp = (0,_grafana_runtime__WEBPACK_IMPORTED_MODULE_2__.toDataQueryResponse)(data, [target]);\n    if (!rsp) {\n      return [];\n    }\n    const table = this.getTable(rsp.data, target, {});\n    const list = [];\n    let titleColIndex = 0;\n    let timeColIndex = 0;\n    let timeEndColIndex = 0;\n    let textColIndex = 0;\n    const tagsColIndexes = [];\n    (0,lodash__WEBPACK_IMPORTED_MODULE_0__.each)(table.columns, (column, index) => {\n      if (column.text.toLowerCase() === \"time\") {\n        timeColIndex = index;\n        return;\n      }\n      if (column.text === annotation.titleColumn) {\n        titleColIndex = index;\n        return;\n      }\n      if (colContainsTag(column.text, annotation.tagsColumn)) {\n        tagsColIndexes.push(index);\n        return;\n      }\n      if (annotation.textColumn && column.text.includes(annotation.textColumn)) {\n        textColIndex = index;\n        return;\n      }\n      if (column.text === annotation.timeEndColumn) {\n        timeEndColIndex = index;\n        return;\n      }\n      if (!titleColIndex && textColIndex !== index) {\n        titleColIndex = index;\n      }\n    });\n    (0,lodash__WEBPACK_IMPORTED_MODULE_0__.each)(table.rows, (value) => {\n      const data2 = {\n        annotation,\n        time: +new Date(value[timeColIndex]),\n        title: value[titleColIndex],\n        timeEnd: value[timeEndColIndex],\n        // Remove empty values, then split in different tags for comma separated values\n        tags: (0,lodash__WEBPACK_IMPORTED_MODULE_0__.flatten)(\n          tagsColIndexes.filter((t) => {\n            return value[t];\n          }).map((t) => {\n            return value[t].split(\",\");\n          })\n        ),\n        text: value[textColIndex]\n      };\n      list.push(data2);\n    });\n    return list;\n  }\n}\nfunction colContainsTag(colText, tagsColumn) {\n  const tags = (tagsColumn || \"\").replace(\" \", \"\").split(\",\");\n  for (const tag of tags) {\n    if (tag !== \"\" && colText.includes(tag)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction getTableCols(dfs, table, target) {\n  const selectedParams = getSelectedParams(target);\n  dfs[0].fields.forEach((field) => {\n    if (field.name.toLowerCase() === \"time\") {\n      table.columns.push({ text: \"Time\", type: _grafana_data__WEBPACK_IMPORTED_MODULE_3__.FieldType.time });\n    } else if (field.name.toLowerCase() === \"value\") {\n      if (field.labels) {\n        Object.keys(field.labels).forEach((key) => {\n          table.columns.push({ text: key });\n        });\n      }\n    }\n  });\n  if (dfs[0].refId === \"metricFindQuery\") {\n    dfs.forEach((field) => {\n      if (field.name) {\n        table.columns.push({ text: field.name });\n      }\n    });\n  }\n  for (let i = 0; i < selectedParams.length; i++) {\n    table.columns.push({ text: selectedParams[i] });\n  }\n  if (target.rawQuery && selectedParams.length === 0 && rawQuerySelectedFieldsInDataframe(target.query, dfs) && dfs[0].refId !== \"metricFindQuery\") {\n    dfs.map((df) => {\n      if (df.name) {\n        table.columns.push({ text: df.name });\n      }\n    });\n  }\n  return table;\n}\nfunction getTableRows(dfs, table, labels) {\n  const values = dfs[0].fields[0].values;\n  for (let i = 0; i < values.length; i++) {\n    const time = values[i];\n    const metrics = dfs.map((df) => {\n      return df.fields[1] ? df.fields[1].values[i] : null;\n    });\n    if (metrics.indexOf(null) < 0) {\n      table.rows.push([time, ...labels, ...metrics]);\n    }\n  }\n  return table;\n}\nfunction getSelectedParams(target) {\n  let allParams = [];\n  target.select?.forEach((select) => {\n    const selector = select.filter((x) => x.type !== \"field\");\n    if (selector.length > 0) {\n      const aliasIfExist = selector.find((s) => s.type === \"alias\");\n      if (aliasIfExist) {\n        allParams.push(aliasIfExist.params?.[0].toString() ?? \"\");\n      } else {\n        allParams.push(selector[0].type);\n      }\n    } else {\n      if (select[0] && select[0].params && select[0].params[0]) {\n        allParams.push(select[0].params[0].toString());\n      }\n    }\n  });\n  let uniqueParams = [];\n  allParams.forEach((param) => {\n    uniqueParams.push(incrementName(param, param, uniqueParams, 0));\n  });\n  return uniqueParams;\n}\nfunction incrementName(name, nameIncrement, params, index) {\n  if (params.indexOf(nameIncrement) > -1) {\n    index++;\n    return incrementName(name, name + \"_\" + index, params, index);\n  }\n  return nameIncrement;\n}\nfunction rawQuerySelectedFieldsInDataframe(query, dfs) {\n  const names = dfs.map((df) => df.name);\n  const colsInRawQuery = names.every((name) => {\n    if (name && query) {\n      const nameParts = name.split(\".\");\n      return nameParts.every((np) => query.toLowerCase().includes(np.toLowerCase()));\n    }\n    return false;\n  });\n  const queryChecks = [\"*\", \"SHOW\"];\n  const otherChecks = queryChecks.some((qc) => {\n    if (query) {\n      return query.toLowerCase().includes(qc.toLowerCase());\n    }\n    return false;\n  });\n  return colsInRawQuery || otherChecks;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9pbmZsdXhkYi9yZXNwb25zZV9wYXJzZXIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBZ0Q7QUFFdUI7QUFDTztBQUN2RDtBQUlSLE1BQU0sZUFBZTtBQUFBLEVBQ2xDLE1BQU0sT0FBZSxTQUEyQjtBQUM5QyxRQUFJLENBQUMsU0FBUyxXQUFXLFFBQVEsUUFBUSxXQUFXLEdBQUc7QUFDckQsYUFBTyxDQUFDO0FBQUEsSUFDVjtBQUVBLFVBQU0sZ0JBQWdCLFFBQVEsUUFBUSxDQUFDO0FBQ3ZDLFFBQUksQ0FBQyxjQUFjLFFBQVE7QUFDekIsYUFBTyxDQUFDO0FBQUEsSUFDVjtBQUVBLFVBQU0sa0JBQWtCLE1BQU0sWUFBWTtBQUMxQyxVQUFNLHlCQUF5QixnQkFBZ0IsUUFBUSx5QkFBeUIsS0FBSztBQUNyRixVQUFNLGVBQWUsZ0JBQWdCLFFBQVEsaUJBQWlCLEtBQUssS0FBSztBQUV4RSxVQUFNLE1BQU0sb0JBQUksSUFBWTtBQUM1QixnREFBSSxDQUFDLGNBQWMsUUFBUSxDQUFDLFVBQVU7QUFDcEMsa0RBQUksQ0FBQyxNQUFNLFFBQVEsQ0FBQyxVQUFVO0FBQzVCLFlBQUksK0NBQU8sQ0FBQyxLQUFLLEdBQUc7QUFhbEIsY0FBSSxjQUFjO0FBQ2hCLGdCQUFJLElBQUksTUFBTSxDQUFDLEVBQUUsU0FBUyxDQUFDO0FBQUEsVUFDN0IsV0FBVyxNQUFNLENBQUMsTUFBTSxRQUFXO0FBQ2pDLGdCQUFJLElBQUksTUFBTSxDQUFDLEVBQUUsU0FBUyxDQUFDO0FBQUEsVUFDN0IsT0FBTztBQUNMLGdCQUFJLElBQUksTUFBTSxDQUFDLEVBQUUsU0FBUyxDQUFDO0FBQUEsVUFDN0I7QUFBQSxRQUNGLE9BQU87QUFDTCxjQUFJLElBQUksTUFBTSxTQUFTLENBQUM7QUFBQSxRQUMxQjtBQUFBLE1BQ0YsQ0FBQztBQUFBLElBQ0gsQ0FBQztBQU1ELFdBQU8sTUFBTSxLQUFLLEdBQUcsRUFBRSxJQUFJLENBQUMsT0FBTyxFQUFFLE1BQU0sRUFBRSxFQUFFO0FBQUEsRUFDakQ7QUFBQSxFQUVBLFNBQVMsS0FBa0IsUUFBcUIsTUFBbUM7QUFDakYsUUFBSSxRQUFRLElBQUksMkRBQVUsQ0FBQztBQUUzQixRQUFJLElBQUksU0FBUyxHQUFHO0FBQ2xCLFlBQU0sT0FBTztBQUFBLFFBQ1gsR0FBRztBQUFBLFFBQ0gscUJBQXFCLElBQUksQ0FBQyxFQUFFLE1BQU07QUFBQSxNQUNwQztBQUVBLFlBQU0sUUFBUSxPQUFPO0FBQ3JCLGNBQVEsYUFBYSxLQUFLLE9BQU8sTUFBTTtBQUd2QyxVQUFJLElBQUksQ0FBQyxFQUFFLE9BQU8sQ0FBQyxLQUFLLElBQUksQ0FBQyxFQUFFLE9BQU8sQ0FBQyxFQUFFLFFBQVE7QUFDL0MsWUFBSSxjQUFjLCtDQUFPO0FBQVAsVUFBUTtBQUFBLFVBQUssQ0FBQyxPQUM5QixHQUFHLE9BQU8sQ0FBQyxFQUFFLFNBQVMsT0FBTyxPQUFPLEdBQUcsT0FBTyxDQUFDLEVBQUUsTUFBTyxJQUFJO0FBQUEsUUFDOUQ7QUFDQSxjQUFNLFNBQVMsT0FBTyxLQUFLLFdBQVc7QUFDdEMsY0FBTSxtQkFBbUIsT0FBTyxPQUFPLFdBQVc7QUFFbEQsaUJBQVMsSUFBSSxHQUFHLElBQUksaUJBQWlCLFFBQVEsS0FBSztBQUNoRCxrQkFBUSxhQUFhLGlCQUFpQixDQUFDLEdBQUcsT0FBTyxDQUFDLEdBQUcsT0FBTyxDQUFDLEVBQUUsTUFBTSxHQUFHLENBQUMsQ0FBQztBQUFBLFFBQzVFO0FBQUEsTUFDRixPQUFPO0FBQ0wsZ0JBQVEsYUFBYSxLQUFLLE9BQU8sQ0FBQyxDQUFDO0FBQUEsTUFDckM7QUFBQSxJQUNGO0FBRUEsV0FBTztBQUFBLEVBQ1Q7QUFBQSxFQUVBLE1BQU0sNEJBQ0osWUFDQSxNQUNBLFFBQzRCO0FBQzVCLFVBQU0sTUFBTSxxRUFBbUIsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDO0FBRTlDLFFBQUksQ0FBQyxLQUFLO0FBQ1IsYUFBTyxDQUFDO0FBQUEsSUFDVjtBQUVBLFVBQU0sUUFBUSxLQUFLLFNBQVMsSUFBSSxNQUFNLFFBQVEsQ0FBQyxDQUFDO0FBQ2hELFVBQU0sT0FBYyxDQUFDO0FBQ3JCLFFBQUksZ0JBQWdCO0FBQ3BCLFFBQUksZUFBZTtBQUNuQixRQUFJLGtCQUFrQjtBQUN0QixRQUFJLGVBQWU7QUFDbkIsVUFBTSxpQkFBMkIsQ0FBQztBQUVsQyxnREFBSSxDQUFDLE1BQU0sU0FBUyxDQUFDLFFBQVEsVUFBVTtBQUNyQyxVQUFJLE9BQU8sS0FBSyxZQUFZLE1BQU0sUUFBUTtBQUN4Qyx1QkFBZTtBQUNmO0FBQUEsTUFDRjtBQUNBLFVBQUksT0FBTyxTQUFTLFdBQVcsYUFBYTtBQUMxQyx3QkFBZ0I7QUFDaEI7QUFBQSxNQUNGO0FBQ0EsVUFBSSxlQUFlLE9BQU8sTUFBTSxXQUFXLFVBQVUsR0FBRztBQUN0RCx1QkFBZSxLQUFLLEtBQUs7QUFDekI7QUFBQSxNQUNGO0FBQ0EsVUFBSSxXQUFXLGNBQWMsT0FBTyxLQUFLLFNBQVMsV0FBVyxVQUFVLEdBQUc7QUFDeEUsdUJBQWU7QUFDZjtBQUFBLE1BQ0Y7QUFDQSxVQUFJLE9BQU8sU0FBUyxXQUFXLGVBQWU7QUFDNUMsMEJBQWtCO0FBQ2xCO0FBQUEsTUFDRjtBQUVBLFVBQUksQ0FBQyxpQkFBaUIsaUJBQWlCLE9BQU87QUFDNUMsd0JBQWdCO0FBQUEsTUFDbEI7QUFBQSxJQUNGLENBQUM7QUFFRCxnREFBSSxDQUFDLE1BQU0sTUFBTSxDQUFDLFVBQVU7QUFDMUIsWUFBTUEsUUFBTztBQUFBLFFBQ1g7QUFBQSxRQUNBLE1BQU0sQ0FBQyxJQUFJLEtBQUssTUFBTSxZQUFZLENBQUM7QUFBQSxRQUNuQyxPQUFPLE1BQU0sYUFBYTtBQUFBLFFBQzFCLFNBQVMsTUFBTSxlQUFlO0FBQUE7QUFBQSxRQUU5QixNQUFNLCtDQUFPO0FBQVAsVUFDSixlQUNHLE9BQU8sQ0FBQyxNQUFNO0FBQ2IsbUJBQU8sTUFBTSxDQUFDO0FBQUEsVUFDaEIsQ0FBQyxFQUNBLElBQUksQ0FBQyxNQUFNO0FBQ1YsbUJBQU8sTUFBTSxDQUFDLEVBQUUsTUFBTSxHQUFHO0FBQUEsVUFDM0IsQ0FBQztBQUFBLFFBQ0w7QUFBQSxRQUNBLE1BQU0sTUFBTSxZQUFZO0FBQUEsTUFDMUI7QUFFQSxXQUFLLEtBQUtBLEtBQUk7QUFBQSxJQUNoQixDQUFDO0FBRUQsV0FBTztBQUFBLEVBQ1Q7QUFDRjtBQUVBLFNBQVMsZUFBZSxTQUFpQixZQUE4QjtBQUNyRSxRQUFNLFFBQVEsY0FBYyxJQUFJLFFBQVEsS0FBSyxFQUFFLEVBQUUsTUFBTSxHQUFHO0FBQzFELGFBQVcsT0FBTyxNQUFNO0FBQ3RCLFFBQUksUUFBUSxNQUFNLFFBQVEsU0FBUyxHQUFHLEdBQUc7QUFDdkMsYUFBTztBQUFBLElBQ1Q7QUFBQSxFQUNGO0FBQ0EsU0FBTztBQUNUO0FBRUEsU0FBUyxhQUFhLEtBQWtCLE9BQW1CLFFBQWlDO0FBQzFGLFFBQU0saUJBQWlCLGtCQUFrQixNQUFNO0FBRS9DLE1BQUksQ0FBQyxFQUFFLE9BQU8sUUFBUSxDQUFDLFVBQVU7QUFFL0IsUUFBSSxNQUFNLEtBQUssWUFBWSxNQUFNLFFBQVE7QUFDdkMsWUFBTSxRQUFRLEtBQUssRUFBRSxNQUFNLFFBQVEsTUFBTSxvREFBUyxDQUFDLEtBQUssQ0FBQztBQUFBLElBQzNELFdBR1MsTUFBTSxLQUFLLFlBQVksTUFBTSxTQUFTO0FBQzdDLFVBQUksTUFBTSxRQUFRO0FBQ2hCLGVBQU8sS0FBSyxNQUFNLE1BQU0sRUFBRSxRQUFRLENBQUMsUUFBUTtBQUN6QyxnQkFBTSxRQUFRLEtBQUssRUFBRSxNQUFNLElBQUksQ0FBQztBQUFBLFFBQ2xDLENBQUM7QUFBQSxNQUNIO0FBQUEsSUFDRjtBQUFBLEVBQ0YsQ0FBQztBQUdELE1BQUksSUFBSSxDQUFDLEVBQUUsVUFBVSxtQkFBbUI7QUFDdEMsUUFBSSxRQUFRLENBQUMsVUFBVTtBQUNyQixVQUFJLE1BQU0sTUFBTTtBQUNkLGNBQU0sUUFBUSxLQUFLLEVBQUUsTUFBTSxNQUFNLEtBQUssQ0FBQztBQUFBLE1BQ3pDO0FBQUEsSUFDRixDQUFDO0FBQUEsRUFDSDtBQUdBLFdBQVMsSUFBSSxHQUFHLElBQUksZUFBZSxRQUFRLEtBQUs7QUFDOUMsVUFBTSxRQUFRLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQyxFQUFFLENBQUM7QUFBQSxFQUNoRDtBQVFBLE1BQ0UsT0FBTyxZQUNQLGVBQWUsV0FBVyxLQUMxQixrQ0FBa0MsT0FBTyxPQUFPLEdBQUcsS0FDbkQsSUFBSSxDQUFDLEVBQUUsVUFBVSxtQkFDakI7QUFDQSxRQUFJLElBQUksQ0FBQyxPQUFPO0FBQ2QsVUFBSSxHQUFHLE1BQU07QUFDWCxjQUFNLFFBQVEsS0FBSyxFQUFFLE1BQU0sR0FBRyxLQUFLLENBQUM7QUFBQSxNQUN0QztBQUFBLElBQ0YsQ0FBQztBQUFBLEVBQ0g7QUFFQSxTQUFPO0FBQ1Q7QUFFQSxTQUFTLGFBQWEsS0FBa0IsT0FBbUIsUUFBOEI7QUFDdkYsUUFBTSxTQUFTLElBQUksQ0FBQyxFQUFFLE9BQU8sQ0FBQyxFQUFFO0FBRWhDLFdBQVMsSUFBSSxHQUFHLElBQUksT0FBTyxRQUFRLEtBQUs7QUFDdEMsVUFBTSxPQUFPLE9BQU8sQ0FBQztBQUNyQixVQUFNLFVBQVUsSUFBSSxJQUFJLENBQUMsT0FBa0I7QUFDekMsYUFBTyxHQUFHLE9BQU8sQ0FBQyxJQUFJLEdBQUcsT0FBTyxDQUFDLEVBQUUsT0FBTyxDQUFDLElBQUk7QUFBQSxJQUNqRCxDQUFDO0FBQ0QsUUFBSSxRQUFRLFFBQVEsSUFBSSxJQUFJLEdBQUc7QUFDN0IsWUFBTSxLQUFLLEtBQUssQ0FBQyxNQUFNLEdBQUcsUUFBUSxHQUFHLE9BQU8sQ0FBQztBQUFBLElBQy9DO0FBQUEsRUFDRjtBQUNBLFNBQU87QUFDVDtBQUVPLFNBQVMsa0JBQWtCLFFBQStCO0FBQy9ELE1BQUksWUFBc0IsQ0FBQztBQUMzQixTQUFPLFFBQVEsUUFBUSxDQUFDLFdBQVc7QUFDakMsVUFBTSxXQUFXLE9BQU8sT0FBTyxDQUFDLE1BQU0sRUFBRSxTQUFTLE9BQU87QUFDeEQsUUFBSSxTQUFTLFNBQVMsR0FBRztBQUN2QixZQUFNLGVBQWUsU0FBUyxLQUFLLENBQUMsTUFBTSxFQUFFLFNBQVMsT0FBTztBQUM1RCxVQUFJLGNBQWM7QUFDaEIsa0JBQVUsS0FBSyxhQUFhLFNBQVMsQ0FBQyxFQUFFLFNBQVMsS0FBSyxFQUFFO0FBQUEsTUFDMUQsT0FBTztBQUNMLGtCQUFVLEtBQUssU0FBUyxDQUFDLEVBQUUsSUFBSTtBQUFBLE1BQ2pDO0FBQUEsSUFDRixPQUFPO0FBQ0wsVUFBSSxPQUFPLENBQUMsS0FBSyxPQUFPLENBQUMsRUFBRSxVQUFVLE9BQU8sQ0FBQyxFQUFFLE9BQU8sQ0FBQyxHQUFHO0FBQ3hELGtCQUFVLEtBQUssT0FBTyxDQUFDLEVBQUUsT0FBTyxDQUFDLEVBQUUsU0FBUyxDQUFDO0FBQUEsTUFDL0M7QUFBQSxJQUNGO0FBQUEsRUFDRixDQUFDO0FBRUQsTUFBSSxlQUF5QixDQUFDO0FBQzlCLFlBQVUsUUFBUSxDQUFDLFVBQVU7QUFDM0IsaUJBQWEsS0FBSyxjQUFjLE9BQU8sT0FBTyxjQUFjLENBQUMsQ0FBQztBQUFBLEVBQ2hFLENBQUM7QUFFRCxTQUFPO0FBQ1Q7QUFFQSxTQUFTLGNBQWMsTUFBYyxlQUF1QixRQUFrQixPQUF1QjtBQUNuRyxNQUFJLE9BQU8sUUFBUSxhQUFhLElBQUksSUFBSTtBQUN0QztBQUNBLFdBQU8sY0FBYyxNQUFNLE9BQU8sTUFBTSxPQUFPLFFBQVEsS0FBSztBQUFBLEVBQzlEO0FBQ0EsU0FBTztBQUNUO0FBRUEsU0FBUyxrQ0FBa0MsT0FBMkIsS0FBa0I7QUFDdEYsUUFBTSxRQUFtQyxJQUFJLElBQUksQ0FBQyxPQUFrQixHQUFHLElBQUk7QUFFM0UsUUFBTSxpQkFBaUIsTUFBTSxNQUFNLENBQUMsU0FBNkI7QUFDL0QsUUFBSSxRQUFRLE9BQU87QUFFakIsWUFBTSxZQUFZLEtBQUssTUFBTSxHQUFHO0FBRWhDLGFBQU8sVUFBVSxNQUFNLENBQUMsT0FBTyxNQUFNLFlBQVksRUFBRSxTQUFTLEdBQUcsWUFBWSxDQUFDLENBQUM7QUFBQSxJQUMvRTtBQUVBLFdBQU87QUFBQSxFQUNULENBQUM7QUFFRCxRQUFNLGNBQWMsQ0FBQyxLQUFLLE1BQU07QUFFaEMsUUFBTSxjQUF1QixZQUFZLEtBQUssQ0FBQyxPQUFlO0FBQzVELFFBQUksT0FBTztBQUNULGFBQU8sTUFBTSxZQUFZLEVBQUUsU0FBUyxHQUFHLFlBQVksQ0FBQztBQUFBLElBQ3REO0FBRUEsV0FBTztBQUFBLEVBQ1QsQ0FBQztBQUVELFNBQU8sa0JBQWtCO0FBQzNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ3JhZmFuYS8uL3B1YmxpYy9hcHAvcGx1Z2lucy9kYXRhc291cmNlL2luZmx1eGRiL3Jlc3BvbnNlX3BhcnNlci50cz81MjhjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGVhY2gsIGZsYXR0ZW4sIGdyb3VwQnksIGlzQXJyYXkgfSBmcm9tICdsb2Rhc2gnO1xuXG5pbXBvcnQgeyBBbm5vdGF0aW9uRXZlbnQsIERhdGFGcmFtZSwgRmllbGRUeXBlLCBRdWVyeVJlc3VsdE1ldGEgfSBmcm9tICdAZ3JhZmFuYS9kYXRhJztcbmltcG9ydCB7IEJhY2tlbmREYXRhU291cmNlUmVzcG9uc2UsIEZldGNoUmVzcG9uc2UsIHRvRGF0YVF1ZXJ5UmVzcG9uc2UgfSBmcm9tICdAZ3JhZmFuYS9ydW50aW1lJztcbmltcG9ydCBUYWJsZU1vZGVsIGZyb20gJ2FwcC9jb3JlL1RhYmxlTW9kZWwnO1xuXG5pbXBvcnQgeyBJbmZsdXhRdWVyeSB9IGZyb20gJy4vdHlwZXMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBSZXNwb25zZVBhcnNlciB7XG4gIHBhcnNlKHF1ZXJ5OiBzdHJpbmcsIHJlc3VsdHM6IHsgcmVzdWx0czogYW55IH0pIHtcbiAgICBpZiAoIXJlc3VsdHM/LnJlc3VsdHMgfHwgcmVzdWx0cy5yZXN1bHRzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgcmV0dXJuIFtdO1xuICAgIH1cblxuICAgIGNvbnN0IGluZmx1eFJlc3VsdHMgPSByZXN1bHRzLnJlc3VsdHNbMF07XG4gICAgaWYgKCFpbmZsdXhSZXN1bHRzLnNlcmllcykge1xuICAgICAgcmV0dXJuIFtdO1xuICAgIH1cblxuICAgIGNvbnN0IG5vcm1hbGl6ZWRRdWVyeSA9IHF1ZXJ5LnRvTG93ZXJDYXNlKCk7XG4gICAgY29uc3QgaXNSZXRlbnRpb25Qb2xpY3lRdWVyeSA9IG5vcm1hbGl6ZWRRdWVyeS5pbmRleE9mKCdzaG93IHJldGVudGlvbiBwb2xpY2llcycpID49IDA7XG4gICAgY29uc3QgaXNWYWx1ZUZpcnN0ID0gbm9ybWFsaXplZFF1ZXJ5LmluZGV4T2YoJ3Nob3cgZmllbGQga2V5cycpID49IDAgfHwgaXNSZXRlbnRpb25Qb2xpY3lRdWVyeTtcblxuICAgIGNvbnN0IHJlcyA9IG5ldyBTZXQ8c3RyaW5nPigpO1xuICAgIGVhY2goaW5mbHV4UmVzdWx0cy5zZXJpZXMsIChzZXJpZSkgPT4ge1xuICAgICAgZWFjaChzZXJpZS52YWx1ZXMsICh2YWx1ZSkgPT4ge1xuICAgICAgICBpZiAoaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgICAvLyBJbiBnZW5lcmFsLCB0aGVyZSBhcmUgMiBwb3NzaWJsZSBzaGFwZXMgZm9yIHRoZSByZXR1cm5lZCB2YWx1ZS5cbiAgICAgICAgICAvLyBUaGUgZmlyc3Qgb25lIGlzIGEgdHdvLWVsZW1lbnQgYXJyYXksXG4gICAgICAgICAgLy8gd2hlcmUgdGhlIGZpcnN0IGVsZW1lbnQgaXMgc29tZXdoYXQgYSBtZXRhZGF0YSB2YWx1ZTpcbiAgICAgICAgICAvLyB0aGUgdGFnIG5hbWUgZm9yIFNIT1cgVEFHIFZBTFVFUyBxdWVyaWVzLFxuICAgICAgICAgIC8vIHRoZSB0aW1lIGZpZWxkIGZvciBTRUxFQ1QgcXVlcmllcywgZXRjLlxuICAgICAgICAgIC8vIFRoZSBzZWNvbmQgc2hhcGUgaXMgYW4gb25lLWVsZW1lbnQgYXJyYXksXG4gICAgICAgICAgLy8gdGhhdCBpcyBjb250YWluaW5nIGFuIGltbWVkaWF0ZSB2YWx1ZS5cbiAgICAgICAgICAvLyBGb3IgZXhhbXBsZSwgU0hPVyBGSUVMRCBLRVlTIHF1ZXJpZXMgcmV0dXJuIHN1Y2ggc2hhcGUuXG4gICAgICAgICAgLy8gTm90ZSwgcHJlLTAuMTEgdmVyc2lvbnMgcmV0dXJuXG4gICAgICAgICAgLy8gdGhlIHNlY29uZCBzaGFwZSBmb3IgU0hPVyBUQUcgVkFMVUVTIHF1ZXJpZXNcbiAgICAgICAgICAvLyAod2hpbGUgdGhlIG5ld2VyIHZlcnNpb25z4oCUZmlyc3QpLlxuXG4gICAgICAgICAgaWYgKGlzVmFsdWVGaXJzdCkge1xuICAgICAgICAgICAgcmVzLmFkZCh2YWx1ZVswXS50b1N0cmluZygpKTtcbiAgICAgICAgICB9IGVsc2UgaWYgKHZhbHVlWzFdICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHJlcy5hZGQodmFsdWVbMV0udG9TdHJpbmcoKSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlcy5hZGQodmFsdWVbMF0udG9TdHJpbmcoKSk7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJlcy5hZGQodmFsdWUudG9TdHJpbmcoKSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgLy8gTk9URTogaXQgaXMgaW1wb3J0YW50IHRvIGtlZXAgdGhlIG9yZGVyIG9mIGl0ZW1zIGluIHRoZSBwYXJzZWQgb3V0cHV0XG4gICAgLy8gdGhlIHNhbWUgYXMgaXQgd2FzIGluIHRoZSBpbmZsdXhkYi1yZXNwb25zZS5cbiAgICAvLyB3ZSB1c2UgYSBgU2V0YCB0byBjb2xsZWN0IHRoZSB1bmlxdWUtcmVzdWx0cywgYW5kIGBTZXRgIGl0ZXJhdGlvblxuICAgIC8vIG9yZGVyIGlzIGluc2VydGlvbi1vcmRlciwgc28gdGhpcyBzaG91bGQgYmUgb2suXG4gICAgcmV0dXJuIEFycmF5LmZyb20ocmVzKS5tYXAoKHYpID0+ICh7IHRleHQ6IHYgfSkpO1xuICB9XG5cbiAgZ2V0VGFibGUoZGZzOiBEYXRhRnJhbWVbXSwgdGFyZ2V0OiBJbmZsdXhRdWVyeSwgbWV0YTogUXVlcnlSZXN1bHRNZXRhKTogVGFibGVNb2RlbCB7XG4gICAgbGV0IHRhYmxlID0gbmV3IFRhYmxlTW9kZWwoKTtcblxuICAgIGlmIChkZnMubGVuZ3RoID4gMCkge1xuICAgICAgdGFibGUubWV0YSA9IHtcbiAgICAgICAgLi4ubWV0YSxcbiAgICAgICAgZXhlY3V0ZWRRdWVyeVN0cmluZzogZGZzWzBdLm1ldGE/LmV4ZWN1dGVkUXVlcnlTdHJpbmcsXG4gICAgICB9O1xuXG4gICAgICB0YWJsZS5yZWZJZCA9IHRhcmdldC5yZWZJZDtcbiAgICAgIHRhYmxlID0gZ2V0VGFibGVDb2xzKGRmcywgdGFibGUsIHRhcmdldCk7XG5cbiAgICAgIC8vIGlmIGdyb3VwIGJ5IHRhZyhzKSBhZGRlZFxuICAgICAgaWYgKGRmc1swXS5maWVsZHNbMV0gJiYgZGZzWzBdLmZpZWxkc1sxXS5sYWJlbHMpIHtcbiAgICAgICAgbGV0IGRmc0J5TGFiZWxzID0gZ3JvdXBCeShkZnMsIChkZjogRGF0YUZyYW1lKSA9PlxuICAgICAgICAgIGRmLmZpZWxkc1sxXS5sYWJlbHMgPyBPYmplY3QudmFsdWVzKGRmLmZpZWxkc1sxXS5sYWJlbHMhKSA6IG51bGxcbiAgICAgICAgKTtcbiAgICAgICAgY29uc3QgbGFiZWxzID0gT2JqZWN0LmtleXMoZGZzQnlMYWJlbHMpO1xuICAgICAgICBjb25zdCBkZnNCeUxhYmVsVmFsdWVzID0gT2JqZWN0LnZhbHVlcyhkZnNCeUxhYmVscyk7XG5cbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBkZnNCeUxhYmVsVmFsdWVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgdGFibGUgPSBnZXRUYWJsZVJvd3MoZGZzQnlMYWJlbFZhbHVlc1tpXSwgdGFibGUsIFsuLi5sYWJlbHNbaV0uc3BsaXQoJywnKV0pO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0YWJsZSA9IGdldFRhYmxlUm93cyhkZnMsIHRhYmxlLCBbXSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHRhYmxlO1xuICB9XG5cbiAgYXN5bmMgdHJhbnNmb3JtQW5ub3RhdGlvblJlc3BvbnNlKFxuICAgIGFubm90YXRpb246IEluZmx1eFF1ZXJ5LFxuICAgIGRhdGE6IEZldGNoUmVzcG9uc2U8QmFja2VuZERhdGFTb3VyY2VSZXNwb25zZT4sXG4gICAgdGFyZ2V0OiBJbmZsdXhRdWVyeVxuICApOiBQcm9taXNlPEFubm90YXRpb25FdmVudFtdPiB7XG4gICAgY29uc3QgcnNwID0gdG9EYXRhUXVlcnlSZXNwb25zZShkYXRhLCBbdGFyZ2V0XSk7XG5cbiAgICBpZiAoIXJzcCkge1xuICAgICAgcmV0dXJuIFtdO1xuICAgIH1cblxuICAgIGNvbnN0IHRhYmxlID0gdGhpcy5nZXRUYWJsZShyc3AuZGF0YSwgdGFyZ2V0LCB7fSk7XG4gICAgY29uc3QgbGlzdDogYW55W10gPSBbXTtcbiAgICBsZXQgdGl0bGVDb2xJbmRleCA9IDA7XG4gICAgbGV0IHRpbWVDb2xJbmRleCA9IDA7XG4gICAgbGV0IHRpbWVFbmRDb2xJbmRleCA9IDA7XG4gICAgbGV0IHRleHRDb2xJbmRleCA9IDA7XG4gICAgY29uc3QgdGFnc0NvbEluZGV4ZXM6IG51bWJlcltdID0gW107XG5cbiAgICBlYWNoKHRhYmxlLmNvbHVtbnMsIChjb2x1bW4sIGluZGV4KSA9PiB7XG4gICAgICBpZiAoY29sdW1uLnRleHQudG9Mb3dlckNhc2UoKSA9PT0gJ3RpbWUnKSB7XG4gICAgICAgIHRpbWVDb2xJbmRleCA9IGluZGV4O1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBpZiAoY29sdW1uLnRleHQgPT09IGFubm90YXRpb24udGl0bGVDb2x1bW4pIHtcbiAgICAgICAgdGl0bGVDb2xJbmRleCA9IGluZGV4O1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBpZiAoY29sQ29udGFpbnNUYWcoY29sdW1uLnRleHQsIGFubm90YXRpb24udGFnc0NvbHVtbikpIHtcbiAgICAgICAgdGFnc0NvbEluZGV4ZXMucHVzaChpbmRleCk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGlmIChhbm5vdGF0aW9uLnRleHRDb2x1bW4gJiYgY29sdW1uLnRleHQuaW5jbHVkZXMoYW5ub3RhdGlvbi50ZXh0Q29sdW1uKSkge1xuICAgICAgICB0ZXh0Q29sSW5kZXggPSBpbmRleDtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgaWYgKGNvbHVtbi50ZXh0ID09PSBhbm5vdGF0aW9uLnRpbWVFbmRDb2x1bW4pIHtcbiAgICAgICAgdGltZUVuZENvbEluZGV4ID0gaW5kZXg7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIC8vIGxlZ2FjeSBjYXNlXG4gICAgICBpZiAoIXRpdGxlQ29sSW5kZXggJiYgdGV4dENvbEluZGV4ICE9PSBpbmRleCkge1xuICAgICAgICB0aXRsZUNvbEluZGV4ID0gaW5kZXg7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBlYWNoKHRhYmxlLnJvd3MsICh2YWx1ZSkgPT4ge1xuICAgICAgY29uc3QgZGF0YSA9IHtcbiAgICAgICAgYW5ub3RhdGlvbjogYW5ub3RhdGlvbixcbiAgICAgICAgdGltZTogK25ldyBEYXRlKHZhbHVlW3RpbWVDb2xJbmRleF0pLFxuICAgICAgICB0aXRsZTogdmFsdWVbdGl0bGVDb2xJbmRleF0sXG4gICAgICAgIHRpbWVFbmQ6IHZhbHVlW3RpbWVFbmRDb2xJbmRleF0sXG4gICAgICAgIC8vIFJlbW92ZSBlbXB0eSB2YWx1ZXMsIHRoZW4gc3BsaXQgaW4gZGlmZmVyZW50IHRhZ3MgZm9yIGNvbW1hIHNlcGFyYXRlZCB2YWx1ZXNcbiAgICAgICAgdGFnczogZmxhdHRlbihcbiAgICAgICAgICB0YWdzQ29sSW5kZXhlc1xuICAgICAgICAgICAgLmZpbHRlcigodCkgPT4ge1xuICAgICAgICAgICAgICByZXR1cm4gdmFsdWVbdF07XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLm1hcCgodCkgPT4ge1xuICAgICAgICAgICAgICByZXR1cm4gdmFsdWVbdF0uc3BsaXQoJywnKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICksXG4gICAgICAgIHRleHQ6IHZhbHVlW3RleHRDb2xJbmRleF0sXG4gICAgICB9O1xuXG4gICAgICBsaXN0LnB1c2goZGF0YSk7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gbGlzdDtcbiAgfVxufVxuXG5mdW5jdGlvbiBjb2xDb250YWluc1RhZyhjb2xUZXh0OiBzdHJpbmcsIHRhZ3NDb2x1bW4/OiBzdHJpbmcpOiBib29sZWFuIHtcbiAgY29uc3QgdGFncyA9ICh0YWdzQ29sdW1uIHx8ICcnKS5yZXBsYWNlKCcgJywgJycpLnNwbGl0KCcsJyk7XG4gIGZvciAoY29uc3QgdGFnIG9mIHRhZ3MpIHtcbiAgICBpZiAodGFnICE9PSAnJyAmJiBjb2xUZXh0LmluY2x1ZGVzKHRhZykpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfVxuICByZXR1cm4gZmFsc2U7XG59XG5cbmZ1bmN0aW9uIGdldFRhYmxlQ29scyhkZnM6IERhdGFGcmFtZVtdLCB0YWJsZTogVGFibGVNb2RlbCwgdGFyZ2V0OiBJbmZsdXhRdWVyeSk6IFRhYmxlTW9kZWwge1xuICBjb25zdCBzZWxlY3RlZFBhcmFtcyA9IGdldFNlbGVjdGVkUGFyYW1zKHRhcmdldCk7XG5cbiAgZGZzWzBdLmZpZWxkcy5mb3JFYWNoKChmaWVsZCkgPT4ge1xuICAgIC8vIFRpbWUgY29sXG4gICAgaWYgKGZpZWxkLm5hbWUudG9Mb3dlckNhc2UoKSA9PT0gJ3RpbWUnKSB7XG4gICAgICB0YWJsZS5jb2x1bW5zLnB1c2goeyB0ZXh0OiAnVGltZScsIHR5cGU6IEZpZWxkVHlwZS50aW1lIH0pO1xuICAgIH1cblxuICAgIC8vIEdyb3VwIGJ5IChsYWJlbCkgY29sdW1uKHMpXG4gICAgZWxzZSBpZiAoZmllbGQubmFtZS50b0xvd2VyQ2FzZSgpID09PSAndmFsdWUnKSB7XG4gICAgICBpZiAoZmllbGQubGFiZWxzKSB7XG4gICAgICAgIE9iamVjdC5rZXlzKGZpZWxkLmxhYmVscykuZm9yRWFjaCgoa2V5KSA9PiB7XG4gICAgICAgICAgdGFibGUuY29sdW1ucy5wdXNoKHsgdGV4dDoga2V5IH0pO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH0pO1xuXG4gIC8vIEdldCBjb2xzIGZvciBhbm5vdGF0aW9uUXVlcnlcbiAgaWYgKGRmc1swXS5yZWZJZCA9PT0gJ21ldHJpY0ZpbmRRdWVyeScpIHtcbiAgICBkZnMuZm9yRWFjaCgoZmllbGQpID0+IHtcbiAgICAgIGlmIChmaWVsZC5uYW1lKSB7XG4gICAgICAgIHRhYmxlLmNvbHVtbnMucHVzaCh7IHRleHQ6IGZpZWxkLm5hbWUgfSk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICAvLyBTZWxlY3QgKG1ldHJpYykgY29sdW1uKHMpXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgc2VsZWN0ZWRQYXJhbXMubGVuZ3RoOyBpKyspIHtcbiAgICB0YWJsZS5jb2x1bW5zLnB1c2goeyB0ZXh0OiBzZWxlY3RlZFBhcmFtc1tpXSB9KTtcbiAgfVxuXG4gIC8vIElTU1VFOiBodHRwczovL2dpdGh1Yi5jb20vZ3JhZmFuYS9ncmFmYW5hL2lzc3Vlcy82Mzg0MlxuICAvLyBpZiByYXdRdWVyeSBhbmRcbiAgLy8gaGFzIG90aGVyIHNlbGVjdGVkIGZpZWxkcyBpbiB0aGUgcXVlcnkgYW5kXG4gIC8vIGRmcyBmaWVsZCBuYW1lcyBhcmUgaW4gdGhlIHJhd1F1ZXJ5IGJ1dFxuICAvLyB0aGUgc2VsZWN0ZWQgcGFyYW1zIG9iamVjdCBkb2Vzbid0IGV4aXN0IGluIHRoZSBxdWVyeSB0aGVuXG4gIC8vIGFkZCBjb2x1bW5zIHRvIHRoZSB0YWJsZVxuICBpZiAoXG4gICAgdGFyZ2V0LnJhd1F1ZXJ5ICYmXG4gICAgc2VsZWN0ZWRQYXJhbXMubGVuZ3RoID09PSAwICYmXG4gICAgcmF3UXVlcnlTZWxlY3RlZEZpZWxkc0luRGF0YWZyYW1lKHRhcmdldC5xdWVyeSwgZGZzKSAmJlxuICAgIGRmc1swXS5yZWZJZCAhPT0gJ21ldHJpY0ZpbmRRdWVyeSdcbiAgKSB7XG4gICAgZGZzLm1hcCgoZGYpID0+IHtcbiAgICAgIGlmIChkZi5uYW1lKSB7XG4gICAgICAgIHRhYmxlLmNvbHVtbnMucHVzaCh7IHRleHQ6IGRmLm5hbWUgfSk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gdGFibGU7XG59XG5cbmZ1bmN0aW9uIGdldFRhYmxlUm93cyhkZnM6IERhdGFGcmFtZVtdLCB0YWJsZTogVGFibGVNb2RlbCwgbGFiZWxzOiBzdHJpbmdbXSk6IFRhYmxlTW9kZWwge1xuICBjb25zdCB2YWx1ZXMgPSBkZnNbMF0uZmllbGRzWzBdLnZhbHVlcztcblxuICBmb3IgKGxldCBpID0gMDsgaSA8IHZhbHVlcy5sZW5ndGg7IGkrKykge1xuICAgIGNvbnN0IHRpbWUgPSB2YWx1ZXNbaV07XG4gICAgY29uc3QgbWV0cmljcyA9IGRmcy5tYXAoKGRmOiBEYXRhRnJhbWUpID0+IHtcbiAgICAgIHJldHVybiBkZi5maWVsZHNbMV0gPyBkZi5maWVsZHNbMV0udmFsdWVzW2ldIDogbnVsbDtcbiAgICB9KTtcbiAgICBpZiAobWV0cmljcy5pbmRleE9mKG51bGwpIDwgMCkge1xuICAgICAgdGFibGUucm93cy5wdXNoKFt0aW1lLCAuLi5sYWJlbHMsIC4uLm1ldHJpY3NdKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHRhYmxlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0U2VsZWN0ZWRQYXJhbXModGFyZ2V0OiBJbmZsdXhRdWVyeSk6IHN0cmluZ1tdIHtcbiAgbGV0IGFsbFBhcmFtczogc3RyaW5nW10gPSBbXTtcbiAgdGFyZ2V0LnNlbGVjdD8uZm9yRWFjaCgoc2VsZWN0KSA9PiB7XG4gICAgY29uc3Qgc2VsZWN0b3IgPSBzZWxlY3QuZmlsdGVyKCh4KSA9PiB4LnR5cGUgIT09ICdmaWVsZCcpO1xuICAgIGlmIChzZWxlY3Rvci5sZW5ndGggPiAwKSB7XG4gICAgICBjb25zdCBhbGlhc0lmRXhpc3QgPSBzZWxlY3Rvci5maW5kKChzKSA9PiBzLnR5cGUgPT09ICdhbGlhcycpO1xuICAgICAgaWYgKGFsaWFzSWZFeGlzdCkge1xuICAgICAgICBhbGxQYXJhbXMucHVzaChhbGlhc0lmRXhpc3QucGFyYW1zPy5bMF0udG9TdHJpbmcoKSA/PyAnJyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBhbGxQYXJhbXMucHVzaChzZWxlY3RvclswXS50eXBlKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKHNlbGVjdFswXSAmJiBzZWxlY3RbMF0ucGFyYW1zICYmIHNlbGVjdFswXS5wYXJhbXNbMF0pIHtcbiAgICAgICAgYWxsUGFyYW1zLnB1c2goc2VsZWN0WzBdLnBhcmFtc1swXS50b1N0cmluZygpKTtcbiAgICAgIH1cbiAgICB9XG4gIH0pO1xuXG4gIGxldCB1bmlxdWVQYXJhbXM6IHN0cmluZ1tdID0gW107XG4gIGFsbFBhcmFtcy5mb3JFYWNoKChwYXJhbSkgPT4ge1xuICAgIHVuaXF1ZVBhcmFtcy5wdXNoKGluY3JlbWVudE5hbWUocGFyYW0sIHBhcmFtLCB1bmlxdWVQYXJhbXMsIDApKTtcbiAgfSk7XG5cbiAgcmV0dXJuIHVuaXF1ZVBhcmFtcztcbn1cblxuZnVuY3Rpb24gaW5jcmVtZW50TmFtZShuYW1lOiBzdHJpbmcsIG5hbWVJbmNyZW1lbnQ6IHN0cmluZywgcGFyYW1zOiBzdHJpbmdbXSwgaW5kZXg6IG51bWJlcik6IHN0cmluZyB7XG4gIGlmIChwYXJhbXMuaW5kZXhPZihuYW1lSW5jcmVtZW50KSA+IC0xKSB7XG4gICAgaW5kZXgrKztcbiAgICByZXR1cm4gaW5jcmVtZW50TmFtZShuYW1lLCBuYW1lICsgJ18nICsgaW5kZXgsIHBhcmFtcywgaW5kZXgpO1xuICB9XG4gIHJldHVybiBuYW1lSW5jcmVtZW50O1xufVxuXG5mdW5jdGlvbiByYXdRdWVyeVNlbGVjdGVkRmllbGRzSW5EYXRhZnJhbWUocXVlcnk6IHN0cmluZyB8IHVuZGVmaW5lZCwgZGZzOiBEYXRhRnJhbWVbXSkge1xuICBjb25zdCBuYW1lczogQXJyYXk8c3RyaW5nIHwgdW5kZWZpbmVkPiA9IGRmcy5tYXAoKGRmOiBEYXRhRnJhbWUpID0+IGRmLm5hbWUpO1xuXG4gIGNvbnN0IGNvbHNJblJhd1F1ZXJ5ID0gbmFtZXMuZXZlcnkoKG5hbWU6IHN0cmluZyB8IHVuZGVmaW5lZCkgPT4ge1xuICAgIGlmIChuYW1lICYmIHF1ZXJ5KSB7XG4gICAgICAvLyB0YWJsZSBuYW1lIGFuZCBmaWVsZCwgaS5lLiBjcHUudXNhZ2VfZ3Vlc3RfbmljZSBiZWNvbWVzIFsnY3B1JywgJ3VzYWdlX2d1ZXN0X25pY2UnXVxuICAgICAgY29uc3QgbmFtZVBhcnRzID0gbmFtZS5zcGxpdCgnLicpO1xuXG4gICAgICByZXR1cm4gbmFtZVBhcnRzLmV2ZXJ5KChucCkgPT4gcXVlcnkudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhucC50b0xvd2VyQ2FzZSgpKSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZhbHNlO1xuICB9KTtcblxuICBjb25zdCBxdWVyeUNoZWNrcyA9IFsnKicsICdTSE9XJ107XG5cbiAgY29uc3Qgb3RoZXJDaGVja3M6IGJvb2xlYW4gPSBxdWVyeUNoZWNrcy5zb21lKChxYzogc3RyaW5nKSA9PiB7XG4gICAgaWYgKHF1ZXJ5KSB7XG4gICAgICByZXR1cm4gcXVlcnkudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhxYy50b0xvd2VyQ2FzZSgpKTtcbiAgICB9XG5cbiAgICByZXR1cm4gZmFsc2U7XG4gIH0pO1xuXG4gIHJldHVybiBjb2xzSW5SYXdRdWVyeSB8fCBvdGhlckNoZWNrcztcbn1cbiJdLCJuYW1lcyI6WyJkYXRhIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/influxdb/response_parser.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/influxdb/types.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_POLICY: () => (/* binding */ DEFAULT_POLICY),\n/* harmony export */   InfluxVersion: () => (/* binding */ InfluxVersion)\n/* harmony export */ });\n\nconst DEFAULT_POLICY = \"default\";\nvar InfluxVersion = /* @__PURE__ */ ((InfluxVersion2) => {\n  InfluxVersion2[\"InfluxQL\"] = \"InfluxQL\";\n  InfluxVersion2[\"Flux\"] = \"Flux\";\n  return InfluxVersion2;\n})(InfluxVersion || {});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9pbmZsdXhkYi90eXBlcy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFFTyxNQUFNLGlCQUFpQjtBQUV2QixJQUFLLGdCQUFMLGtCQUFLQSxtQkFBTDtBQUNMLEVBQUFBLGVBQUEsY0FBVztBQUNYLEVBQUFBLGVBQUEsVUFBTztBQUZHLFNBQUFBO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ncmFmYW5hLy4vcHVibGljL2FwcC9wbHVnaW5zL2RhdGFzb3VyY2UvaW5mbHV4ZGIvdHlwZXMudHM/M2M4ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBZEhvY1ZhcmlhYmxlRmlsdGVyLCBEYXRhUXVlcnksIERhdGFTb3VyY2VKc29uRGF0YSB9IGZyb20gJ0BncmFmYW5hL2RhdGEnO1xuXG5leHBvcnQgY29uc3QgREVGQVVMVF9QT0xJQ1kgPSAnZGVmYXVsdCc7XG5cbmV4cG9ydCBlbnVtIEluZmx1eFZlcnNpb24ge1xuICBJbmZsdXhRTCA9ICdJbmZsdXhRTCcsXG4gIEZsdXggPSAnRmx1eCcsXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSW5mbHV4T3B0aW9ucyBleHRlbmRzIERhdGFTb3VyY2VKc29uRGF0YSB7XG4gIHZlcnNpb24/OiBJbmZsdXhWZXJzaW9uO1xuXG4gIHRpbWVJbnRlcnZhbD86IHN0cmluZztcbiAgaHR0cE1vZGU/OiBzdHJpbmc7XG5cbiAgZGJOYW1lPzogc3RyaW5nO1xuXG4gIC8vIFdpdGggRmx1eFxuICBvcmdhbml6YXRpb24/OiBzdHJpbmc7XG4gIGRlZmF1bHRCdWNrZXQ/OiBzdHJpbmc7XG4gIG1heFNlcmllcz86IG51bWJlcjtcbn1cblxuLyoqXG4gKiBAZGVwcmVjYXRlZFxuICovXG5leHBvcnQgaW50ZXJmYWNlIEluZmx1eE9wdGlvbnNWMSBleHRlbmRzIEluZmx1eE9wdGlvbnMge1xuICB1c2VyPzogc3RyaW5nO1xuICBkYXRhYmFzZT86IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBJbmZsdXhTZWN1cmVKc29uRGF0YSB7XG4gIC8vIEZvciBGbHV4XG4gIHRva2VuPzogc3RyaW5nO1xuXG4gIC8vIEluIDF4IGEgZGlmZmVyZW50IHBhc3N3b3JkIGNhbiBiZSBzZW50IHRoYW4gdGhlbiBIVFRQIGF1dGhcbiAgcGFzc3dvcmQ/OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSW5mbHV4UXVlcnlQYXJ0IHtcbiAgdHlwZTogc3RyaW5nO1xuICBwYXJhbXM/OiBBcnJheTxzdHJpbmcgfCBudW1iZXI+O1xuICAvLyBGSVhNRTogYGludGVydmFsYCBkb2VzIG5vdCBzZWVtIHRvIGJlIHVzZWQuXG4gIC8vIGNoZWNrIGFsbCB0aGUgaW5mbHV4ZGIgcGFydHMgKHF1ZXJ5LWdlbmVyYXRpb24gZXRjLiksXG4gIC8vIGlmIGl0IGlzIHJlYWxseSBzbywgYW5kIGlmIHllcywgcmVtb3ZlIGl0XG4gIGludGVydmFsPzogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEluZmx1eFF1ZXJ5VGFnIHtcbiAga2V5OiBzdHJpbmc7XG4gIG9wZXJhdG9yPzogc3RyaW5nO1xuICBjb25kaXRpb24/OiBzdHJpbmc7XG4gIHZhbHVlOiBzdHJpbmc7XG59XG5cbmV4cG9ydCB0eXBlIFJlc3VsdEZvcm1hdCA9ICd0aW1lX3NlcmllcycgfCAndGFibGUnIHwgJ2xvZ3MnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEluZmx1eFF1ZXJ5IGV4dGVuZHMgRGF0YVF1ZXJ5IHtcbiAgcG9saWN5Pzogc3RyaW5nO1xuICBtZWFzdXJlbWVudD86IHN0cmluZztcbiAgcmVzdWx0Rm9ybWF0PzogUmVzdWx0Rm9ybWF0O1xuICBvcmRlckJ5VGltZT86IHN0cmluZztcbiAgdGFncz86IEluZmx1eFF1ZXJ5VGFnW107XG4gIGdyb3VwQnk/OiBJbmZsdXhRdWVyeVBhcnRbXTtcbiAgc2VsZWN0PzogSW5mbHV4UXVlcnlQYXJ0W11bXTtcbiAgbGltaXQ/OiBzdHJpbmcgfCBudW1iZXI7XG4gIHNsaW1pdD86IHN0cmluZyB8IG51bWJlcjtcbiAgdHo/OiBzdHJpbmc7XG4gIC8vIE5PVEU6IGBmaWxsYCBpcyBub3QgdXNlZCBpbiB0aGUgcXVlcnktZWRpdG9yIGFueW1vcmUsIGFuZCBpcyByZW1vdmVkXG4gIC8vIGlmIGFueSBjaGFuZ2UgaGFwcGVucyBpbiB0aGUgcXVlcnktZWRpdG9yLiB0aGUgcXVlcnktZ2VuZXJhdGlvbiBzdGlsbFxuICAvLyBzdXBwb3J0cyBpdCBmb3Igbm93LlxuICBmaWxsPzogc3RyaW5nO1xuICByYXdRdWVyeT86IGJvb2xlYW47XG4gIHF1ZXJ5Pzogc3RyaW5nO1xuICBhbGlhcz86IHN0cmluZztcbiAgLy8gZm9yIG1pZ3JhdGVkIEluZmx1eFFMIGFubm90YXRpb25zXG4gIHF1ZXJ5VHlwZT86IHN0cmluZztcbiAgZnJvbUFubm90YXRpb25zPzogYm9vbGVhbjtcbiAgdGFnc0NvbHVtbj86IHN0cmluZztcbiAgdGV4dENvbHVtbj86IHN0cmluZztcbiAgdGltZUVuZENvbHVtbj86IHN0cmluZztcbiAgdGl0bGVDb2x1bW4/OiBzdHJpbmc7XG4gIG5hbWU/OiBzdHJpbmc7XG4gIG1hdGNoQW55PzogYm9vbGVhbjtcbiAgdHlwZT86IHN0cmluZztcblxuICB0ZXh0RWRpdG9yPzogYm9vbGVhbjtcbiAgYWRob2NGaWx0ZXJzPzogQWRIb2NWYXJpYWJsZUZpbHRlcltdO1xufVxuXG5leHBvcnQgdHlwZSBNZXRhZGF0YVF1ZXJ5VHlwZSA9ICdUQUdfS0VZUycgfCAnVEFHX1ZBTFVFUycgfCAnTUVBU1VSRU1FTlRTJyB8ICdGSUVMRFMnIHwgJ1JFVEVOVElPTl9QT0xJQ0lFUyc7XG4iXSwibmFtZXMiOlsiSW5mbHV4VmVyc2lvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/influxdb/types.ts\n");

/***/ })

}]);