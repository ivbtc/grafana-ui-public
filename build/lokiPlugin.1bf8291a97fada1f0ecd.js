"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkgrafana"] = self["webpackChunkgrafana"] || []).push([["lokiPlugin"],{

/***/ "./.yarn/__virtual__/@grafana-experimental-virtual-ba767552fe/0/cache/@grafana-experimental-npm-1.6.1-f052d2ae51-64c32bc9e3.zip/node_modules/@grafana/experimental/dist/esm/QueryEditor/EditorHeader.js":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EditorHeader: () => (/* binding */ EditorHeader)\n/* harmony export */ });\n/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/@emotion-css-npm-11.11.2-dbfa42cf83-1edea109df.zip/node_modules/@emotion/css/dist/emotion-css.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/themes/ThemeContext.tsx\");\n\n\n\n\nconst EditorHeader = ({ children }) => {\n  const styles = (0,_grafana_ui__WEBPACK_IMPORTED_MODULE_2__.useStyles2)(getStyles);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: styles.root }, children);\n};\nconst getStyles = (theme) => ({\n  root: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)({\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    alignItems: \"center\",\n    gap: theme.spacing(3),\n    minHeight: theme.spacing(4)\n  })\n});\n\n\n//# sourceMappingURL=EditorHeader.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi8ueWFybi9fX3ZpcnR1YWxfXy9AZ3JhZmFuYS1leHBlcmltZW50YWwtdmlydHVhbC1iYTc2NzU1MmZlLzAvY2FjaGUvQGdyYWZhbmEtZXhwZXJpbWVudGFsLW5wbS0xLjYuMS1mMDUyZDJhZTUxLTY0YzMyYmM5ZTMuemlwL25vZGVfbW9kdWxlcy9AZ3JhZmFuYS9leHBlcmltZW50YWwvZGlzdC9lc20vUXVlcnlFZGl0b3IvRWRpdG9ySGVhZGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQW1DO0FBQ0E7QUFDTTs7QUFFekMsd0JBQXdCLFVBQVU7QUFDbEMsaUJBQWlCLHVEQUFVO0FBQzNCLHlCQUF5QiwwREFBNEIsVUFBVSx3QkFBd0I7QUFDdkY7QUFDQTtBQUNBLFFBQVEsaURBQUc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILENBQUM7O0FBRXVCO0FBQ3hCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ3JhZmFuYS8uLy55YXJuL19fdmlydHVhbF9fL0BncmFmYW5hLWV4cGVyaW1lbnRhbC12aXJ0dWFsLWJhNzY3NTUyZmUvMC9jYWNoZS9AZ3JhZmFuYS1leHBlcmltZW50YWwtbnBtLTEuNi4xLWYwNTJkMmFlNTEtNjRjMzJiYzllMy56aXAvbm9kZV9tb2R1bGVzL0BncmFmYW5hL2V4cGVyaW1lbnRhbC9kaXN0L2VzbS9RdWVyeUVkaXRvci9FZGl0b3JIZWFkZXIuanM/MDRjNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9jc3MnO1xuaW1wb3J0IFJlYWN0X19kZWZhdWx0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZVN0eWxlczIgfSBmcm9tICdAZ3JhZmFuYS91aSc7XG5cbmNvbnN0IEVkaXRvckhlYWRlciA9ICh7IGNoaWxkcmVuIH0pID0+IHtcbiAgY29uc3Qgc3R5bGVzID0gdXNlU3R5bGVzMihnZXRTdHlsZXMpO1xuICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0X19kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6IHN0eWxlcy5yb290IH0sIGNoaWxkcmVuKTtcbn07XG5jb25zdCBnZXRTdHlsZXMgPSAodGhlbWUpID0+ICh7XG4gIHJvb3Q6IGNzcyh7XG4gICAgZGlzcGxheTogXCJmbGV4XCIsXG4gICAgZmxleFdyYXA6IFwid3JhcFwiLFxuICAgIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gICAgZ2FwOiB0aGVtZS5zcGFjaW5nKDMpLFxuICAgIG1pbkhlaWdodDogdGhlbWUuc3BhY2luZyg0KVxuICB9KVxufSk7XG5cbmV4cG9ydCB7IEVkaXRvckhlYWRlciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RWRpdG9ySGVhZGVyLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./.yarn/__virtual__/@grafana-experimental-virtual-ba767552fe/0/cache/@grafana-experimental-npm-1.6.1-f052d2ae51-64c32bc9e3.zip/node_modules/@grafana/experimental/dist/esm/QueryEditor/EditorHeader.js\n");

/***/ }),

/***/ "./.yarn/__virtual__/@grafana-experimental-virtual-ba767552fe/0/cache/@grafana-experimental-npm-1.6.1-f052d2ae51-64c32bc9e3.zip/node_modules/@grafana/experimental/dist/esm/QueryEditor/FlexItem.js":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FlexItem: () => (/* binding */ FlexItem)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nconst FlexItem = ({ grow, shrink }) => {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", { style: { display: \"block\", flexGrow: grow, flexShrink: shrink } });\n};\n\n\n//# sourceMappingURL=FlexItem.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi8ueWFybi9fX3ZpcnR1YWxfXy9AZ3JhZmFuYS1leHBlcmltZW50YWwtdmlydHVhbC1iYTc2NzU1MmZlLzAvY2FjaGUvQGdyYWZhbmEtZXhwZXJpbWVudGFsLW5wbS0xLjYuMS1mMDUyZDJhZTUxLTY0YzMyYmM5ZTMuemlwL25vZGVfbW9kdWxlcy9AZ3JhZmFuYS9leHBlcmltZW50YWwvZGlzdC9lc20vUXVlcnlFZGl0b3IvRmxleEl0ZW0uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQW1DOztBQUVuQyxvQkFBb0IsY0FBYztBQUNsQyx5QkFBeUIsMERBQTRCLFVBQVUsU0FBUyx3REFBd0Q7QUFDaEk7O0FBRW9CO0FBQ3BCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ3JhZmFuYS8uLy55YXJuL19fdmlydHVhbF9fL0BncmFmYW5hLWV4cGVyaW1lbnRhbC12aXJ0dWFsLWJhNzY3NTUyZmUvMC9jYWNoZS9AZ3JhZmFuYS1leHBlcmltZW50YWwtbnBtLTEuNi4xLWYwNTJkMmFlNTEtNjRjMzJiYzllMy56aXAvbm9kZV9tb2R1bGVzL0BncmFmYW5hL2V4cGVyaW1lbnRhbC9kaXN0L2VzbS9RdWVyeUVkaXRvci9GbGV4SXRlbS5qcz9lOWM5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdF9fZGVmYXVsdCBmcm9tICdyZWFjdCc7XG5cbmNvbnN0IEZsZXhJdGVtID0gKHsgZ3Jvdywgc2hyaW5rIH0pID0+IHtcbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdF9fZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgc3R5bGU6IHsgZGlzcGxheTogXCJibG9ja1wiLCBmbGV4R3JvdzogZ3JvdywgZmxleFNocmluazogc2hyaW5rIH0gfSk7XG59O1xuXG5leHBvcnQgeyBGbGV4SXRlbSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RmxleEl0ZW0uanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./.yarn/__virtual__/@grafana-experimental-virtual-ba767552fe/0/cache/@grafana-experimental-npm-1.6.1-f052d2ae51-64c32bc9e3.zip/node_modules/@grafana/experimental/dist/esm/QueryEditor/FlexItem.js\n");

/***/ }),

/***/ "./public/app/core/components/Divider.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Divider: () => (/* binding */ Divider)\n/* harmony export */ });\n/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/@emotion-css-npm-11.11.2-dbfa42cf83-1edea109df.zip/node_modules/@emotion/css/dist/emotion-css.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/themes/ThemeContext.tsx\");\n\n\n\n\nconst Divider = ({ hideLine = false }) => {\n  const styles = (0,_grafana_ui__WEBPACK_IMPORTED_MODULE_2__.useStyles2)(getStyles);\n  if (hideLine) {\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"hr\", { className: styles.dividerHideLine });\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"hr\", { className: styles.divider });\n};\nconst getStyles = (theme) => ({\n  divider: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n    margin: ${theme.spacing(4, 0)};\n  `,\n  dividerHideLine: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n    border: none;\n    margin: ${theme.spacing(3, 0)};\n  `\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL2NvcmUvY29tcG9uZW50cy9EaXZpZGVyLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBb0I7QUFDRjtBQUdTO0FBRXBCLE1BQU0sVUFBVSxDQUFDLEVBQUUsV0FBVyxNQUFNLE1BQU07QUFDL0MsUUFBTSxTQUFTLHVEQUFVLENBQUMsU0FBUztBQUVuQyxNQUFJLFVBQVU7QUFDWixXQUFPLDJFQUFDLFFBQUcsV0FBVyxPQUFPLGlCQUFpQjtBQUFBLEVBQ2hEO0FBRUEsU0FBTywyRUFBQyxRQUFHLFdBQVcsT0FBTyxTQUFTO0FBQ3hDO0FBRUEsTUFBTSxZQUFZLENBQUMsV0FBMEI7QUFBQSxFQUMzQyxTQUFTLGlEQUFHO0FBQUgsY0FDRyxNQUFNLFFBQVEsR0FBRyxDQUFDO0FBQUE7QUFBQSxFQUU5QixpQkFBaUIsaURBQUc7QUFBSDtBQUFBLGNBRUwsTUFBTSxRQUFRLEdBQUcsQ0FBQztBQUFBO0FBRWhDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ3JhZmFuYS8uL3B1YmxpYy9hcHAvY29yZS9jb21wb25lbnRzL0RpdmlkZXIudHN4Pzc1NGUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vY3NzJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB7IEdyYWZhbmFUaGVtZTIgfSBmcm9tICdAZ3JhZmFuYS9kYXRhJztcbmltcG9ydCB7IHVzZVN0eWxlczIgfSBmcm9tICdAZ3JhZmFuYS91aSc7XG5cbmV4cG9ydCBjb25zdCBEaXZpZGVyID0gKHsgaGlkZUxpbmUgPSBmYWxzZSB9KSA9PiB7XG4gIGNvbnN0IHN0eWxlcyA9IHVzZVN0eWxlczIoZ2V0U3R5bGVzKTtcblxuICBpZiAoaGlkZUxpbmUpIHtcbiAgICByZXR1cm4gPGhyIGNsYXNzTmFtZT17c3R5bGVzLmRpdmlkZXJIaWRlTGluZX0gLz47XG4gIH1cblxuICByZXR1cm4gPGhyIGNsYXNzTmFtZT17c3R5bGVzLmRpdmlkZXJ9IC8+O1xufTtcblxuY29uc3QgZ2V0U3R5bGVzID0gKHRoZW1lOiBHcmFmYW5hVGhlbWUyKSA9PiAoe1xuICBkaXZpZGVyOiBjc3NgXG4gICAgbWFyZ2luOiAke3RoZW1lLnNwYWNpbmcoNCwgMCl9O1xuICBgLFxuICBkaXZpZGVySGlkZUxpbmU6IGNzc2BcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgbWFyZ2luOiAke3RoZW1lLnNwYWNpbmcoMywgMCl9O1xuICBgLFxufSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./public/app/core/components/Divider.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/LanguageProvider.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LABEL_REFRESH_INTERVAL: () => (/* binding */ LABEL_REFRESH_INTERVAL),\n/* harmony export */   addHistoryMetadata: () => (/* binding */ addHistoryMetadata),\n/* harmony export */   \"default\": () => (/* binding */ LokiLanguageProvider)\n/* harmony export */ });\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/lodash-npm-4.17.21-6382451519-eb835a2e51.zip/node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lru_cache__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/cache/lru-cache-npm-10.0.0-256d74bb20-18f101675f.zip/node_modules/lru-cache/dist/mjs/index.js\");\n/* harmony import */ var prismjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./.yarn/cache/prismjs-npm-1.29.0-6faa5b04b8-007a8869d4.zip/node_modules/prismjs/prism.js\");\n/* harmony import */ var prismjs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(prismjs__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/datetime/moment_wrapper.ts\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/types/datasource.ts\");\n/* harmony import */ var app_plugins_datasource_prometheus_language_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./public/app/plugins/datasource/prometheus/language_utils.ts\");\n/* harmony import */ var _responseUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./public/app/plugins/datasource/loki/responseUtils.ts\");\n/* harmony import */ var _syntax__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./public/app/plugins/datasource/loki/syntax.ts\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./public/app/plugins/datasource/loki/types.ts\");\n\n\n\n\n\n\n\n\n\nconst DEFAULT_KEYS = [\"job\", \"namespace\"];\nconst EMPTY_SELECTOR = \"{}\";\nconst HISTORY_ITEM_COUNT = 10;\nconst HISTORY_COUNT_CUTOFF = 1e3 * 60 * 60 * 24;\nconst NS_IN_MS = 1e6;\nconst RATE_RANGES = [\n  { label: \"$__interval\", sortValue: \"$__interval\" },\n  { label: \"$__range\", sortValue: \"$__range\" },\n  { label: \"1m\", sortValue: \"00:01:00\" },\n  { label: \"5m\", sortValue: \"00:05:00\" },\n  { label: \"10m\", sortValue: \"00:10:00\" },\n  { label: \"30m\", sortValue: \"00:30:00\" },\n  { label: \"1h\", sortValue: \"01:00:00\" },\n  { label: \"1d\", sortValue: \"24:00:00\" }\n];\nconst LABEL_REFRESH_INTERVAL = 1e3 * 30;\nconst wrapLabel = (label) => ({ label, filterText: `\"${label}\"` });\nfunction addHistoryMetadata(item, history) {\n  const cutoffTs = Date.now() - HISTORY_COUNT_CUTOFF;\n  const historyForItem = history.filter((h) => h.ts > cutoffTs && h.query.expr === item.label);\n  let hint = `Queried ${historyForItem.length} times in the last 24h.`;\n  const recent = historyForItem[0];\n  if (recent) {\n    const lastQueried = (0,_grafana_data__WEBPACK_IMPORTED_MODULE_7__.dateTime)(recent.ts).fromNow();\n    hint = `${hint} Last queried ${lastQueried}.`;\n  }\n  return {\n    ...item,\n    documentation: hint\n  };\n}\nclass LokiLanguageProvider extends _grafana_data__WEBPACK_IMPORTED_MODULE_8__.LanguageProvider {\n  constructor(datasource, initialValues) {\n    super();\n    this.started = false;\n    this.lookupsDisabled = false;\n    // Dynamically set to true for big/slow instances\n    /**\n     *  Cache for labels of series. This is bit simplistic in the sense that it just counts responses each as a 1 and does\n     *  not account for different size of a response. If that is needed a `length` function can be added in the options.\n     *  10 as a max size is totally arbitrary right now.\n     */\n    this.seriesCache = new lru_cache__WEBPACK_IMPORTED_MODULE_1__.LRUCache({ max: 10 });\n    this.labelsCache = new lru_cache__WEBPACK_IMPORTED_MODULE_1__.LRUCache({ max: 10 });\n    // Strip syntax chars\n    this.cleanText = (s) => s.replace(/[{}[\\]=\"(),!~+\\-*/^%\\|]/g, \"\").trim();\n    this.request = async (url, params) => {\n      try {\n        return await this.datasource.metadataRequest(url, params);\n      } catch (error) {\n        console.error(error);\n      }\n      return void 0;\n    };\n    /**\n     * Initialise the language provider by fetching set of labels. Without this initialisation the provider would return\n     * just a set of hardcoded default labels on provideCompletionItems or a recent queries from history.\n     */\n    this.start = () => {\n      if (!this.startTask) {\n        this.startTask = this.fetchLabels().then(() => {\n          this.started = true;\n          return [];\n        });\n      }\n      return this.startTask;\n    };\n    this.getBeginningCompletionItems = (context) => {\n      return {\n        suggestions: [...this.getEmptyCompletionItems(context).suggestions, ...this.getTermCompletionItems().suggestions]\n      };\n    };\n    this.getTermCompletionItems = () => {\n      const suggestions = [];\n      suggestions.push({\n        prefixMatch: true,\n        label: \"Functions\",\n        items: _syntax__WEBPACK_IMPORTED_MODULE_5__.FUNCTIONS.map((suggestion) => ({ ...suggestion, kind: \"function\" }))\n      });\n      return { suggestions };\n    };\n    this.getPipeCompletionItem = () => {\n      const suggestions = [];\n      suggestions.push({\n        label: \"Operators\",\n        items: _syntax__WEBPACK_IMPORTED_MODULE_5__.PIPE_OPERATORS.map((suggestion) => ({ ...suggestion, kind: \"operators\" }))\n      });\n      suggestions.push({\n        label: \"Parsers\",\n        items: _syntax__WEBPACK_IMPORTED_MODULE_5__.PIPE_PARSERS.map((suggestion) => ({ ...suggestion, kind: \"parsers\" }))\n      });\n      return { suggestions };\n    };\n    /**\n     * Fetch labels for a selector. This is cached by its args but also by the global timeRange currently selected as\n     * they can change over requested time.\n     * @param name\n     */\n    this.fetchSeriesLabels = async (match) => {\n      const interpolatedMatch = this.datasource.interpolateString(match);\n      const url = \"series\";\n      const { start, end } = this.datasource.getTimeRangeParams();\n      const cacheKey = this.generateCacheKey(url, start, end, interpolatedMatch);\n      let value = this.seriesCache.get(cacheKey);\n      if (!value) {\n        const params = { \"match[]\": interpolatedMatch, start, end };\n        const data = await this.request(url, params);\n        const { values } = (0,app_plugins_datasource_prometheus_language_utils__WEBPACK_IMPORTED_MODULE_3__.processLabels)(data);\n        value = values;\n        this.seriesCache.set(cacheKey, value);\n      }\n      return value;\n    };\n    /**\n     * Fetch series for a selector. Use this for raw results. Use fetchSeriesLabels() to get labels.\n     * @param match\n     */\n    this.fetchSeries = async (match) => {\n      const url = \"series\";\n      const { start, end } = this.datasource.getTimeRangeParams();\n      const params = { \"match[]\": match, start, end };\n      return await this.request(url, params);\n    };\n    this.datasource = datasource;\n    this.labelKeys = [];\n    this.labelFetchTs = 0;\n    Object.assign(this, initialValues);\n  }\n  getSyntax() {\n    return _syntax__WEBPACK_IMPORTED_MODULE_5__[\"default\"];\n  }\n  getLabelKeys() {\n    return this.labelKeys;\n  }\n  /**\n   * Return suggestions based on input that can be then plugged into a typeahead dropdown.\n   * Keep this DOM-free for testing\n   * @param input\n   * @param context Is optional in types but is required in case we are doing getLabelCompletionItems\n   * @param context.absoluteRange Required in case we are doing getLabelCompletionItems\n   * @param context.history Optional used only in getEmptyCompletionItems\n   */\n  async provideCompletionItems(input, context) {\n    const { wrapperClasses, value, prefix, text } = input;\n    const emptyResult = { suggestions: [] };\n    if (!value) {\n      return emptyResult;\n    }\n    const empty = value?.document.text.length === 0;\n    const selectedLines = value.document.getTextsAtRange(value.selection);\n    const currentLine = selectedLines.size === 1 ? selectedLines.first().getText() : null;\n    const nextCharacter = currentLine ? currentLine[value.selection.anchor.offset] : null;\n    const tokenRecognized = wrapperClasses.length > 3;\n    const prefixUnrecognized = prefix && !tokenRecognized;\n    const noSuffix = !nextCharacter || nextCharacter === \")\";\n    const safePrefix = prefix && !text.match(/^['\"~=\\]})\\s]+$/) && noSuffix;\n    const operatorsPattern = /[+\\-*/^%]/;\n    const isNextOperand = text.match(operatorsPattern);\n    if (wrapperClasses.includes(\"context-range\")) {\n      return this.getRangeCompletionItems();\n    } else if (wrapperClasses.includes(\"context-labels\")) {\n      return await this.getLabelCompletionItems(input);\n    } else if (wrapperClasses.includes(\"context-pipe\")) {\n      return this.getPipeCompletionItem();\n    } else if (empty) {\n      return this.getEmptyCompletionItems(context);\n    } else if (prefixUnrecognized && noSuffix && !isNextOperand) {\n      return this.getBeginningCompletionItems(context);\n    } else if (prefixUnrecognized && safePrefix) {\n      return this.getTermCompletionItems();\n    }\n    return emptyResult;\n  }\n  getEmptyCompletionItems(context) {\n    const history = context?.history;\n    const suggestions = [];\n    if (history?.length) {\n      const historyItems = (0,lodash__WEBPACK_IMPORTED_MODULE_0__.chain)(history).map((h) => h.query.expr).filter().uniq().take(HISTORY_ITEM_COUNT).map(wrapLabel).map((item) => addHistoryMetadata(item, history)).value();\n      suggestions.push({\n        prefixMatch: true,\n        skipSort: true,\n        label: \"History\",\n        items: historyItems\n      });\n    }\n    return { suggestions };\n  }\n  getRangeCompletionItems() {\n    return {\n      context: \"context-range\",\n      suggestions: [\n        {\n          label: \"Range vector\",\n          items: [...RATE_RANGES]\n        }\n      ]\n    };\n  }\n  async getLabelCompletionItems({ text, wrapperClasses, labelKey, value }) {\n    let context = \"context-labels\";\n    const suggestions = [];\n    if (!value) {\n      return { context, suggestions: [] };\n    }\n    const line = value.anchorBlock.getText();\n    const cursorOffset = value.selection.anchor.offset;\n    const isValueStart = text.match(/^(=|=~|!=|!~)/);\n    let selector;\n    let parsedSelector;\n    try {\n      parsedSelector = (0,app_plugins_datasource_prometheus_language_utils__WEBPACK_IMPORTED_MODULE_3__.parseSelector)(line, cursorOffset);\n      selector = parsedSelector.selector;\n    } catch {\n      selector = EMPTY_SELECTOR;\n    }\n    if (!labelKey && selector === EMPTY_SELECTOR) {\n      await this.start();\n      const allLabels = this.getLabelKeys();\n      return { context, suggestions: [{ label: `Labels`, items: allLabels.map(wrapLabel) }] };\n    }\n    const existingKeys = parsedSelector ? parsedSelector.labelKeys : [];\n    let labelValues;\n    if (selector) {\n      if (selector === EMPTY_SELECTOR && labelKey) {\n        const labelValuesForKey = await this.getLabelValues(labelKey);\n        labelValues = { [labelKey]: labelValuesForKey };\n      } else {\n        labelValues = await this.getSeriesLabels(selector);\n      }\n    }\n    if (!labelValues) {\n      console.warn(`Server did not return any values for selector = ${selector}`);\n      return { context, suggestions };\n    }\n    if (text && isValueStart || wrapperClasses.includes(\"attr-value\")) {\n      if (labelKey && labelValues[labelKey]) {\n        context = \"context-label-values\";\n        suggestions.push({\n          label: `Label values for \"${labelKey}\"`,\n          // Filter to prevent previously selected values from being repeatedly suggested\n          items: labelValues[labelKey].map(wrapLabel).filter(({ filterText }) => filterText !== text)\n        });\n      }\n    } else {\n      const labelKeys = labelValues ? Object.keys(labelValues) : DEFAULT_KEYS;\n      if (labelKeys) {\n        const possibleKeys = (0,lodash__WEBPACK_IMPORTED_MODULE_0__.difference)(labelKeys, existingKeys);\n        if (possibleKeys.length) {\n          const newItems = possibleKeys.map((key) => ({ label: key }));\n          const newSuggestion = { label: `Labels`, items: newItems };\n          suggestions.push(newSuggestion);\n        }\n      }\n    }\n    return { context, suggestions };\n  }\n  importFromAbstractQuery(labelBasedQuery) {\n    return {\n      refId: labelBasedQuery.refId,\n      expr: (0,app_plugins_datasource_prometheus_language_utils__WEBPACK_IMPORTED_MODULE_3__.toPromLikeExpr)(labelBasedQuery),\n      queryType: _types__WEBPACK_IMPORTED_MODULE_6__.LokiQueryType.Range\n    };\n  }\n  exportToAbstractQuery(query) {\n    const lokiQuery = query.expr;\n    if (!lokiQuery || lokiQuery.length === 0) {\n      return { refId: query.refId, labelMatchers: [] };\n    }\n    const tokens = prismjs__WEBPACK_IMPORTED_MODULE_2___default().tokenize(lokiQuery, _syntax__WEBPACK_IMPORTED_MODULE_5__[\"default\"]);\n    return {\n      refId: query.refId,\n      labelMatchers: (0,app_plugins_datasource_prometheus_language_utils__WEBPACK_IMPORTED_MODULE_3__.extractLabelMatchers)(tokens)\n    };\n  }\n  async getSeriesLabels(selector) {\n    if (this.lookupsDisabled) {\n      return void 0;\n    }\n    try {\n      return await this.fetchSeriesLabels(selector);\n    } catch (error) {\n      console.error(error);\n      return void 0;\n    }\n  }\n  /**\n   * Fetches all label keys\n   */\n  async fetchLabels() {\n    const url = \"labels\";\n    const timeRange = this.datasource.getTimeRangeParams();\n    this.labelFetchTs = Date.now().valueOf();\n    const res = await this.request(url, timeRange);\n    if (Array.isArray(res)) {\n      const labels = res.slice().sort().filter((label) => label !== \"__name__\");\n      this.labelKeys = labels;\n      return this.labelKeys;\n    }\n    return [];\n  }\n  // Cache key is a bit different here. We round up to a minute the intervals.\n  // The rounding may seem strange but makes relative intervals like now-1h less prone to need separate request every\n  // millisecond while still actually getting all the keys for the correct interval. This still can create problems\n  // when user does not the newest values for a minute if already cached.\n  generateCacheKey(url, start, end, param) {\n    return [url, this.roundTime(start), this.roundTime(end), param].join();\n  }\n  // Round nanos epoch to nearest 5 minute interval\n  roundTime(nanos) {\n    return nanos ? Math.floor(nanos / NS_IN_MS / 1e3 / 60 / 5) : 0;\n  }\n  async getLabelValues(key) {\n    return await this.fetchLabelValues(key);\n  }\n  async fetchLabelValues(key) {\n    const interpolatedKey = encodeURIComponent(this.datasource.interpolateString(key));\n    const url = `label/${interpolatedKey}/values`;\n    const rangeParams = this.datasource.getTimeRangeParams();\n    const { start, end } = rangeParams;\n    const cacheKey = this.generateCacheKey(url, start, end, interpolatedKey);\n    const params = { start, end };\n    let labelValues = this.labelsCache.get(cacheKey);\n    if (!labelValues) {\n      this.labelsCache.set(cacheKey, []);\n      const res = await this.request(url, params);\n      if (Array.isArray(res)) {\n        labelValues = res.slice().sort();\n        this.labelsCache.set(cacheKey, labelValues);\n      }\n    }\n    return labelValues ?? [];\n  }\n  async getParserAndLabelKeys(selector) {\n    const series = await this.datasource.getDataSamples({ expr: selector, refId: \"data-samples\" });\n    if (!series.length) {\n      return { extractedLabelKeys: [], unwrapLabelKeys: [], hasJSON: false, hasLogfmt: false, hasPack: false };\n    }\n    const { hasLogfmt, hasJSON, hasPack } = (0,_responseUtils__WEBPACK_IMPORTED_MODULE_4__.extractLogParserFromDataFrame)(series[0]);\n    return {\n      extractedLabelKeys: (0,_responseUtils__WEBPACK_IMPORTED_MODULE_4__.extractLabelKeysFromDataFrame)(series[0]),\n      unwrapLabelKeys: (0,_responseUtils__WEBPACK_IMPORTED_MODULE_4__.extractUnwrapLabelKeysFromDataFrame)(series[0]),\n      hasJSON,\n      hasPack,\n      hasLogfmt\n    };\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/LanguageProvider.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/LiveStreams.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LiveStreams: () => (/* binding */ LiveStreams)\n/* harmony export */ });\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\"./.yarn/cache/rxjs-npm-7.8.0-722f1c7172-61b4d4fd32.zip/node_modules/rxjs/dist/esm5/internal/observable/timer.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(\"./.yarn/cache/rxjs-npm-7.8.0-722f1c7172-61b4d4fd32.zip/node_modules/rxjs/dist/esm5/internal/observable/throwError.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./.yarn/cache/rxjs-npm-7.8.0-722f1c7172-61b4d4fd32.zip/node_modules/rxjs/dist/esm5/internal/operators/map.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./.yarn/cache/rxjs-npm-7.8.0-722f1c7172-61b4d4fd32.zip/node_modules/rxjs/dist/esm5/internal/operators/retryWhen.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./.yarn/cache/rxjs-npm-7.8.0-722f1c7172-61b4d4fd32.zip/node_modules/rxjs/dist/esm5/internal/operators/mergeMap.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(\"./.yarn/cache/rxjs-npm-7.8.0-722f1c7172-61b4d4fd32.zip/node_modules/rxjs/dist/esm5/internal/operators/finalize.js\");\n/* harmony import */ var rxjs_webSocket__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./.yarn/cache/rxjs-npm-7.8.0-722f1c7172-61b4d4fd32.zip/node_modules/rxjs/dist/esm5/internal/observable/dom/webSocket.js\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/dataframe/CircularDataFrame.ts\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/types/dataFrame.ts\");\n/* harmony import */ var _liveStreamsResultTransformer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./public/app/plugins/datasource/loki/liveStreamsResultTransformer.ts\");\n\n\n\n\n\n\nclass LiveStreams {\n  constructor() {\n    this.streams = {};\n  }\n  getStream(target, retryInterval = 5e3) {\n    let stream = this.streams[target.url];\n    if (stream) {\n      return stream;\n    }\n    const data = new _grafana_data__WEBPACK_IMPORTED_MODULE_1__.CircularDataFrame({ capacity: target.size });\n    data.addField({ name: \"Time\", type: _grafana_data__WEBPACK_IMPORTED_MODULE_2__.FieldType.time, config: {} });\n    data.addField({ name: \"Line\", type: _grafana_data__WEBPACK_IMPORTED_MODULE_2__.FieldType.string });\n    data.addField({ name: \"id\", type: _grafana_data__WEBPACK_IMPORTED_MODULE_2__.FieldType.string });\n    data.meta = { ...data.meta, preferredVisualisationType: \"logs\" };\n    data.refId = target.refId;\n    stream = (0,rxjs_webSocket__WEBPACK_IMPORTED_MODULE_3__.webSocket)(target.url).pipe(\n      (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.map)((response) => {\n        (0,_liveStreamsResultTransformer__WEBPACK_IMPORTED_MODULE_0__.appendResponseToBufferedData)(response, data);\n        return [data];\n      }),\n      (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.retryWhen)(\n        (attempts) => attempts.pipe(\n          (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.mergeMap)((error, i) => {\n            const retryAttempt = i + 1;\n            if (error.code === 1006 && retryAttempt < 30) {\n              if (retryAttempt > 10) {\n                console.warn(\n                  `Websocket connection is being disrupted. We keep reconnecting but consider starting new live tailing again. Error: ${error.reason}`\n                );\n              }\n              return (0,rxjs__WEBPACK_IMPORTED_MODULE_7__.timer)(retryInterval);\n            }\n            return (0,rxjs__WEBPACK_IMPORTED_MODULE_8__.throwError)(error);\n          })\n        )\n      ),\n      (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.finalize)(() => {\n        delete this.streams[target.url];\n      })\n    );\n    this.streams[target.url] = stream;\n    return stream;\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL0xpdmVTdHJlYW1zLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUE4QztBQUNLO0FBQ3pCO0FBRXdDO0FBRXJCO0FBaUJ0QyxNQUFNLFlBQVk7QUFBQSxFQUFsQjtBQUNMLFNBQVEsVUFBNkMsQ0FBQztBQUFBO0FBQUEsRUFFdEQsVUFBVSxRQUF3QixnQkFBZ0IsS0FBK0I7QUFDL0UsUUFBSSxTQUFTLEtBQUssUUFBUSxPQUFPLEdBQUc7QUFFcEMsUUFBSSxRQUFRO0FBQ1YsYUFBTztBQUFBLElBQ1Q7QUFFQSxVQUFNLE9BQU8sSUFBSSw0REFBaUIsQ0FBQyxFQUFFLFVBQVUsT0FBTyxLQUFLLENBQUM7QUFDNUQsU0FBSyxTQUFTLEVBQUUsTUFBTSxRQUFRLE1BQU0sb0RBQVMsQ0FBQyxNQUFNLFFBQVEsQ0FBQyxFQUFFLENBQUM7QUFDaEUsU0FBSyxTQUFTLEVBQUUsTUFBTSxRQUFRLE1BQU0sb0RBQVMsQ0FBQyxPQUFPLENBQUM7QUFDdEQsU0FBSyxTQUFTLEVBQUUsTUFBTSxNQUFNLE1BQU0sb0RBQVMsQ0FBQyxPQUFPLENBQUM7QUFDcEQsU0FBSyxPQUFPLEVBQUUsR0FBRyxLQUFLLE1BQU0sNEJBQTRCLE9BQU87QUFDL0QsU0FBSyxRQUFRLE9BQU87QUFFcEIsYUFBUyx5REFBUyxDQUFtQixPQUFPLEdBQUcsRUFBRTtBQUFBLE1BQy9DLG1EQUFHLENBQUMsQ0FBQyxhQUErQjtBQUNsQyxtR0FBNEIsQ0FBQyxVQUFVLElBQUk7QUFDM0MsZUFBTyxDQUFDLElBQUk7QUFBQSxNQUNkLENBQUM7QUFBQSxNQUNELHlEQUFTO0FBQVQsUUFBVSxDQUFDLGFBQ1QsU0FBUztBQUFBLFVBQ1Asd0RBQVEsQ0FBQyxDQUFDLE9BQU8sTUFBTTtBQUNyQixrQkFBTSxlQUFlLElBQUk7QUFJekIsZ0JBQUksTUFBTSxTQUFTLFFBQVEsZUFBZSxJQUFJO0FBQzVDLGtCQUFJLGVBQWUsSUFBSTtBQUVyQix3QkFBUTtBQUFBLGtCQUNOLHNIQUFzSCxNQUFNO0FBQUEsZ0JBQzlIO0FBQUEsY0FDRjtBQUVBLHFCQUFPLDJDQUFLLENBQUMsYUFBYTtBQUFBLFlBQzVCO0FBQ0EsbUJBQU8sZ0RBQVUsQ0FBQyxLQUFLO0FBQUEsVUFDekIsQ0FBQztBQUFBLFFBQ0g7QUFBQSxNQUNGO0FBQUEsTUFDQSx3REFBUSxDQUFDLE1BQU07QUFDYixlQUFPLEtBQUssUUFBUSxPQUFPLEdBQUc7QUFBQSxNQUNoQyxDQUFDO0FBQUEsSUFDSDtBQUNBLFNBQUssUUFBUSxPQUFPLEdBQUcsSUFBSTtBQUUzQixXQUFPO0FBQUEsRUFDVDtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ3JhZmFuYS8uL3B1YmxpYy9hcHAvcGx1Z2lucy9kYXRhc291cmNlL2xva2kvTGl2ZVN0cmVhbXMudHM/YWJiMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPYnNlcnZhYmxlLCB0aHJvd0Vycm9yLCB0aW1lciB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgZmluYWxpemUsIG1hcCwgcmV0cnlXaGVuLCBtZXJnZU1hcCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcbmltcG9ydCB7IHdlYlNvY2tldCB9IGZyb20gJ3J4anMvd2ViU29ja2V0JztcblxuaW1wb3J0IHsgRGF0YUZyYW1lLCBGaWVsZFR5cGUsIEtleVZhbHVlLCBDaXJjdWxhckRhdGFGcmFtZSB9IGZyb20gJ0BncmFmYW5hL2RhdGEnO1xuXG5pbXBvcnQgeyBhcHBlbmRSZXNwb25zZVRvQnVmZmVyZWREYXRhIH0gZnJvbSAnLi9saXZlU3RyZWFtc1Jlc3VsdFRyYW5zZm9ybWVyJztcbmltcG9ydCB7IExva2lUYWlsUmVzcG9uc2UgfSBmcm9tICcuL3R5cGVzJztcblxuLyoqXG4gKiBNYXBzIGRpcmVjdGx5IHRvIGEgcXVlcnkgaW4gdGhlIFVJIChyZWZJZCBpcyBrZXkpXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgTG9raUxpdmVUYXJnZXQge1xuICBxdWVyeTogc3RyaW5nO1xuICB1cmw6IHN0cmluZztcbiAgcmVmSWQ6IHN0cmluZztcbiAgc2l6ZTogbnVtYmVyO1xufVxuXG4vKipcbiAqIENhY2hlIG9mIHdlYnNvY2tldCBzdHJlYW1zIHRoYXQgY2FuIGJlIHJldHVybmVkIGFzIG9ic2VydmFibGUuIEluIGNhc2UgdGhlcmUgYWxyZWFkeSBpcyBhIHN0cmVhbSBmb3IgcGFydGljdWxhclxuICogdGFyZ2V0IGl0IGlzIHJldHVybmVkIGFuZCBvbiBzdWJzY3JpcHRpb24gcmV0dXJucyB0aGUgbGF0ZXN0IGRhdGFGcmFtZS5cbiAqL1xuZXhwb3J0IGNsYXNzIExpdmVTdHJlYW1zIHtcbiAgcHJpdmF0ZSBzdHJlYW1zOiBLZXlWYWx1ZTxPYnNlcnZhYmxlPERhdGFGcmFtZVtdPj4gPSB7fTtcblxuICBnZXRTdHJlYW0odGFyZ2V0OiBMb2tpTGl2ZVRhcmdldCwgcmV0cnlJbnRlcnZhbCA9IDUwMDApOiBPYnNlcnZhYmxlPERhdGFGcmFtZVtdPiB7XG4gICAgbGV0IHN0cmVhbSA9IHRoaXMuc3RyZWFtc1t0YXJnZXQudXJsXTtcblxuICAgIGlmIChzdHJlYW0pIHtcbiAgICAgIHJldHVybiBzdHJlYW07XG4gICAgfVxuXG4gICAgY29uc3QgZGF0YSA9IG5ldyBDaXJjdWxhckRhdGFGcmFtZSh7IGNhcGFjaXR5OiB0YXJnZXQuc2l6ZSB9KTtcbiAgICBkYXRhLmFkZEZpZWxkKHsgbmFtZTogJ1RpbWUnLCB0eXBlOiBGaWVsZFR5cGUudGltZSwgY29uZmlnOiB7fSB9KTtcbiAgICBkYXRhLmFkZEZpZWxkKHsgbmFtZTogJ0xpbmUnLCB0eXBlOiBGaWVsZFR5cGUuc3RyaW5nIH0pO1xuICAgIGRhdGEuYWRkRmllbGQoeyBuYW1lOiAnaWQnLCB0eXBlOiBGaWVsZFR5cGUuc3RyaW5nIH0pO1xuICAgIGRhdGEubWV0YSA9IHsgLi4uZGF0YS5tZXRhLCBwcmVmZXJyZWRWaXN1YWxpc2F0aW9uVHlwZTogJ2xvZ3MnIH07XG4gICAgZGF0YS5yZWZJZCA9IHRhcmdldC5yZWZJZDtcblxuICAgIHN0cmVhbSA9IHdlYlNvY2tldDxMb2tpVGFpbFJlc3BvbnNlPih0YXJnZXQudXJsKS5waXBlKFxuICAgICAgbWFwKChyZXNwb25zZTogTG9raVRhaWxSZXNwb25zZSkgPT4ge1xuICAgICAgICBhcHBlbmRSZXNwb25zZVRvQnVmZmVyZWREYXRhKHJlc3BvbnNlLCBkYXRhKTtcbiAgICAgICAgcmV0dXJuIFtkYXRhXTtcbiAgICAgIH0pLFxuICAgICAgcmV0cnlXaGVuKChhdHRlbXB0czogT2JzZXJ2YWJsZTxhbnk+KSA9PlxuICAgICAgICBhdHRlbXB0cy5waXBlKFxuICAgICAgICAgIG1lcmdlTWFwKChlcnJvciwgaSkgPT4ge1xuICAgICAgICAgICAgY29uc3QgcmV0cnlBdHRlbXB0ID0gaSArIDE7XG4gICAgICAgICAgICAvLyBDb2RlIDEwMDYgaXMgdXNlZCB0byBpbmRpY2F0ZSB0aGF0IGEgY29ubmVjdGlvbiB3YXMgY2xvc2VkIGFibm9ybWFsbHkuXG4gICAgICAgICAgICAvLyBBZGRlZCBoYXJkIGxpbWl0IG9mIDMwIG9uIG51bWJlciBvZiByZXRyaWVzLlxuICAgICAgICAgICAgLy8gSWYgY29ubmVjdGlvbiB3YXMgY2xvc2VkIGFibm9ybWFsbHksIGFuZCB3ZSB3aXNoIHRvIHJldHJ5LCBvdGhlcndpc2UgdGhyb3cgZXJyb3IuXG4gICAgICAgICAgICBpZiAoZXJyb3IuY29kZSA9PT0gMTAwNiAmJiByZXRyeUF0dGVtcHQgPCAzMCkge1xuICAgICAgICAgICAgICBpZiAocmV0cnlBdHRlbXB0ID4gMTApIHtcbiAgICAgICAgICAgICAgICAvLyBJZiBtb3JlIHRoYW4gMTAgdGltZXMgcmV0cmllZCwgY29uc29sLndhcm4sIGJ1dCBrZWVwIHJlY29ubmVjdGluZ1xuICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybihcbiAgICAgICAgICAgICAgICAgIGBXZWJzb2NrZXQgY29ubmVjdGlvbiBpcyBiZWluZyBkaXNydXB0ZWQuIFdlIGtlZXAgcmVjb25uZWN0aW5nIGJ1dCBjb25zaWRlciBzdGFydGluZyBuZXcgbGl2ZSB0YWlsaW5nIGFnYWluLiBFcnJvcjogJHtlcnJvci5yZWFzb259YFxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgLy8gUmV0cnkgZXZlcnkgNXNcbiAgICAgICAgICAgICAgcmV0dXJuIHRpbWVyKHJldHJ5SW50ZXJ2YWwpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHRocm93RXJyb3IoZXJyb3IpO1xuICAgICAgICAgIH0pXG4gICAgICAgIClcbiAgICAgICksXG4gICAgICBmaW5hbGl6ZSgoKSA9PiB7XG4gICAgICAgIGRlbGV0ZSB0aGlzLnN0cmVhbXNbdGFyZ2V0LnVybF07XG4gICAgICB9KVxuICAgICk7XG4gICAgdGhpcy5zdHJlYW1zW3RhcmdldC51cmxdID0gc3RyZWFtO1xuXG4gICAgcmV0dXJuIHN0cmVhbTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/LiveStreams.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/LogContextProvider.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LOKI_LOG_CONTEXT_PRESERVED_LABELS: () => (/* binding */ LOKI_LOG_CONTEXT_PRESERVED_LABELS),\n/* harmony export */   LogContextProvider: () => (/* binding */ LogContextProvider),\n/* harmony export */   SHOULD_INCLUDE_PIPELINE_OPERATIONS: () => (/* binding */ SHOULD_INCLUDE_PIPELINE_OPERATIONS)\n/* harmony export */ });\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/lodash-npm-4.17.21-6382451519-eb835a2e51.zip/node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(\"./.yarn/cache/rxjs-npm-7.8.0-722f1c7172-61b4d4fd32.zip/node_modules/rxjs/dist/esm5/internal/lastValueFrom.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(\"./.yarn/cache/rxjs-npm-7.8.0-722f1c7172-61b4d4fd32.zip/node_modules/rxjs/dist/esm5/internal/operators/catchError.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(\"./.yarn/cache/rxjs-npm-7.8.0-722f1c7172-61b4d4fd32.zip/node_modules/rxjs/dist/esm5/internal/operators/switchMap.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(\"./.yarn/cache/rxjs-npm-7.8.0-722f1c7172-61b4d4fd32.zip/node_modules/rxjs/dist/esm5/internal/observable/of.js\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/types/logs.ts\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/types/app.ts\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/dataframe/FieldCache.ts\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/types/dataFrame.ts\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/datetime/moment_wrapper.ts\");\n/* harmony import */ var _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-lezer-logql-virtual-0b75aafe9e/0/cache/@grafana-lezer-logql-npm-0.1.11-91e9d74a76-6a624b9a8d.zip/node_modules/@grafana/lezer-logql/index.es.js\");\n/* harmony import */ var app_core_actions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/core/actions/index.ts\");\n/* harmony import */ var app_core_copy_appNotification__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./public/app/core/copy/appNotification.ts\");\n/* harmony import */ var app_core_store__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./public/app/core/store.ts\");\n/* harmony import */ var app_store_store__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./public/app/store/store.ts\");\n/* harmony import */ var _components_LokiContextUi__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./public/app/plugins/datasource/loki/components/LokiContextUi.tsx\");\n/* harmony import */ var _datasource__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\"./public/app/plugins/datasource/loki/datasource.ts\");\n/* harmony import */ var _languageUtils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(\"./public/app/plugins/datasource/loki/languageUtils.ts\");\n/* harmony import */ var _modifyQuery__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(\"./public/app/plugins/datasource/loki/modifyQuery.ts\");\n/* harmony import */ var _queryUtils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(\"./public/app/plugins/datasource/loki/queryUtils.ts\");\n/* harmony import */ var _sortDataFrame__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(\"./public/app/plugins/datasource/loki/sortDataFrame.ts\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(\"./public/app/plugins/datasource/loki/types.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst LOKI_LOG_CONTEXT_PRESERVED_LABELS = \"lokiLogContextPreservedLabels\";\nconst SHOULD_INCLUDE_PIPELINE_OPERATIONS = \"lokiLogContextShouldIncludePipelineOperations\";\nclass LogContextProvider {\n  constructor(datasource) {\n    this.getLogRowContextQuery = async (row, options, origQuery) => {\n      const { query } = await this.getQueryAndRange(row, options, origQuery);\n      return query;\n    };\n    this.getLogRowContext = async (row, options, origQuery) => {\n      const direction = options && options.direction || _grafana_data__WEBPACK_IMPORTED_MODULE_13__.LogRowContextQueryDirection.Backward;\n      const { query, range } = await this.getQueryAndRange(row, options, origQuery);\n      const processResults = (result) => {\n        const frames = result.data;\n        const processedFrames = frames.map((frame) => (0,_sortDataFrame__WEBPACK_IMPORTED_MODULE_11__.sortDataFrameByTime)(frame, _sortDataFrame__WEBPACK_IMPORTED_MODULE_11__.SortDirection.Descending));\n        return {\n          ...result,\n          data: processedFrames\n        };\n      };\n      const app = _grafana_data__WEBPACK_IMPORTED_MODULE_14__.CoreApp.Explore;\n      return (0,rxjs__WEBPACK_IMPORTED_MODULE_15__.lastValueFrom)(\n        this.datasource.query((0,_datasource__WEBPACK_IMPORTED_MODULE_7__.makeRequest)(query, range, app, `${_datasource__WEBPACK_IMPORTED_MODULE_7__.REF_ID_STARTER_LOG_ROW_CONTEXT}${direction}`)).pipe(\n          (0,rxjs__WEBPACK_IMPORTED_MODULE_16__.catchError)((err) => {\n            const error = {\n              message: \"Error during context query. Please check JS console logs.\",\n              status: err.status,\n              statusText: err.statusText\n            };\n            throw error;\n          }),\n          (0,rxjs__WEBPACK_IMPORTED_MODULE_17__.switchMap)((res) => (0,rxjs__WEBPACK_IMPORTED_MODULE_18__.of)(processResults(res)))\n        )\n      );\n    };\n    this.processContextFiltersToExpr = (contextFilters, query) => {\n      const labelFilters = contextFilters.map((filter) => {\n        if (!filter.fromParser && filter.enabled) {\n          return `${filter.label}=\"${(0,_languageUtils__WEBPACK_IMPORTED_MODULE_8__.escapeLabelValueInExactSelector)(filter.value)}\"`;\n        }\n        return \"\";\n      }).filter((label) => !!label).join(\",\");\n      let expr = `{${labelFilters}}`;\n      if (query && (0,_queryUtils__WEBPACK_IMPORTED_MODULE_10__.isQueryWithParser)(query.expr).parserCount === 1) {\n        const parser = (0,_queryUtils__WEBPACK_IMPORTED_MODULE_10__.getParserFromQuery)(query.expr);\n        if (parser) {\n          expr = (0,_modifyQuery__WEBPACK_IMPORTED_MODULE_9__.addParserToQuery)(expr, parser);\n          const parsedLabels = contextFilters.filter((filter) => filter.fromParser && filter.enabled);\n          for (const parsedLabel of parsedLabels) {\n            if (parsedLabel.enabled) {\n              expr = (0,_modifyQuery__WEBPACK_IMPORTED_MODULE_9__.addLabelToQuery)(expr, parsedLabel.label, \"=\", parsedLabel.value);\n            }\n          }\n        }\n      }\n      return expr;\n    };\n    this.processPipelineStagesToExpr = (currentExpr, query) => {\n      let newExpr = currentExpr;\n      const origExpr = query?.expr ?? \"\";\n      if ((0,_queryUtils__WEBPACK_IMPORTED_MODULE_10__.isQueryWithParser)(origExpr).parserCount > 1) {\n        return newExpr;\n      }\n      const allNodePositions = (0,_queryUtils__WEBPACK_IMPORTED_MODULE_10__.getNodePositionsFromQuery)(origExpr, [\n        _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.PipelineStage,\n        _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.LabelParser,\n        _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.LineFilters,\n        _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.LabelFilter\n      ]);\n      const pipelineStagePositions = allNodePositions.filter((position) => position.type?.id === _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.PipelineStage);\n      const otherNodePositions = allNodePositions.filter((position) => position.type?.id !== _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.PipelineStage);\n      for (const pipelineStagePosition of pipelineStagePositions) {\n        if (otherNodePositions.some((position) => pipelineStagePosition.contains(position))) {\n          continue;\n        }\n        newExpr += ` ${pipelineStagePosition.getExpression(origExpr)}`;\n      }\n      return newExpr;\n    };\n    this.queryContainsValidPipelineStages = (query) => {\n      const origExpr = query?.expr ?? \"\";\n      const allNodePositions = (0,_queryUtils__WEBPACK_IMPORTED_MODULE_10__.getNodePositionsFromQuery)(origExpr, [\n        _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.PipelineStage,\n        _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.LabelParser,\n        _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.LineFilters,\n        _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.LabelFilter\n      ]);\n      const pipelineStagePositions = allNodePositions.filter((position) => position.type?.id === _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.PipelineStage);\n      const otherNodePositions = allNodePositions.filter((position) => position.type?.id !== _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.PipelineStage);\n      return pipelineStagePositions.some(\n        (pipelineStagePosition) => otherNodePositions.every((position) => pipelineStagePosition.contains(position) === false)\n      );\n    };\n    this.getInitContextFilters = async (labels, query) => {\n      if (!query || (0,lodash__WEBPACK_IMPORTED_MODULE_0__.isEmpty)(labels)) {\n        return [];\n      }\n      let allLabels = [];\n      if (!(0,_queryUtils__WEBPACK_IMPORTED_MODULE_10__.isQueryWithParser)(query.expr).queryWithParser) {\n        await this.datasource.languageProvider.start();\n        allLabels = this.datasource.languageProvider.getLabelKeys();\n      } else {\n        const stream = (0,_queryUtils__WEBPACK_IMPORTED_MODULE_10__.getStreamSelectorsFromQuery)(query.expr);\n        const series = await this.datasource.languageProvider.fetchSeriesLabels(stream[0]);\n        allLabels = Object.keys(series);\n      }\n      const contextFilters = [];\n      Object.entries(labels).forEach(([label, value]) => {\n        const filter = {\n          label,\n          value,\n          enabled: allLabels.includes(label),\n          fromParser: !allLabels.includes(label)\n        };\n        contextFilters.push(filter);\n      });\n      let preservedLabels = void 0;\n      try {\n        preservedLabels = JSON.parse(app_core_store__WEBPACK_IMPORTED_MODULE_4__[\"default\"].get(LOKI_LOG_CONTEXT_PRESERVED_LABELS));\n      } catch (e) {\n      }\n      if (!preservedLabels) {\n        return contextFilters;\n      } else {\n        let arePreservedLabelsUsed = false;\n        const newContextFilters = contextFilters.map((contextFilter) => {\n          if (preservedLabels.removedLabels.includes(contextFilter.label)) {\n            arePreservedLabelsUsed = true;\n            return { ...contextFilter, enabled: false };\n          }\n          if (preservedLabels.selectedExtractedLabels.includes(contextFilter.label)) {\n            arePreservedLabelsUsed = true;\n            return { ...contextFilter, enabled: true };\n          }\n          return { ...contextFilter };\n        });\n        const isAtLeastOneRealLabelEnabled = newContextFilters.some(({ enabled, fromParser }) => enabled && !fromParser);\n        if (!isAtLeastOneRealLabelEnabled) {\n          return contextFilters;\n        } else {\n          if (arePreservedLabelsUsed) {\n            (0,app_store_store__WEBPACK_IMPORTED_MODULE_5__.dispatch)((0,app_core_actions__WEBPACK_IMPORTED_MODULE_2__.notifyApp)((0,app_core_copy_appNotification__WEBPACK_IMPORTED_MODULE_3__.createSuccessNotification)(\"Previously used log context filters have been applied.\")));\n          }\n          return newContextFilters;\n        }\n      }\n    };\n    this.datasource = datasource;\n    this.appliedContextFilters = [];\n  }\n  async getQueryAndRange(row, options, origQuery) {\n    const direction = options && options.direction || _grafana_data__WEBPACK_IMPORTED_MODULE_13__.LogRowContextQueryDirection.Backward;\n    const limit = options && options.limit || this.datasource.maxLines;\n    if (this.appliedContextFilters.length === 0) {\n      const filters = (await this.getInitContextFilters(row.labels, origQuery)).filter((filter) => filter.enabled);\n      this.appliedContextFilters = filters;\n    }\n    return await this.prepareLogRowContextQueryTarget(row, limit, direction, origQuery);\n  }\n  async prepareLogRowContextQueryTarget(row, limit, direction, origQuery) {\n    const expr = this.prepareExpression(this.appliedContextFilters, origQuery);\n    const contextTimeBuffer = 2 * 60 * 60 * 1e3;\n    const queryDirection = direction === _grafana_data__WEBPACK_IMPORTED_MODULE_13__.LogRowContextQueryDirection.Forward ? _types__WEBPACK_IMPORTED_MODULE_12__.LokiQueryDirection.Forward : _types__WEBPACK_IMPORTED_MODULE_12__.LokiQueryDirection.Backward;\n    const query = {\n      expr,\n      queryType: _types__WEBPACK_IMPORTED_MODULE_12__.LokiQueryType.Range,\n      // refId has to be:\n      // - always different (temporarily, will be fixed later)\n      // - not increase in size\n      // because it may be called many times from logs-context\n      refId: `${_datasource__WEBPACK_IMPORTED_MODULE_7__.REF_ID_STARTER_LOG_ROW_CONTEXT}_${Math.random().toString()}`,\n      maxLines: limit,\n      direction: queryDirection,\n      datasource: { uid: this.datasource.uid, type: this.datasource.type }\n    };\n    const fieldCache = new _grafana_data__WEBPACK_IMPORTED_MODULE_19__.FieldCache(row.dataFrame);\n    const tsField = fieldCache.getFirstFieldOfType(_grafana_data__WEBPACK_IMPORTED_MODULE_20__.FieldType.time);\n    if (tsField === void 0) {\n      throw new Error(\"loki: data frame missing time-field, should never happen\");\n    }\n    const tsValue = tsField.values[row.rowIndex];\n    const timestamp = (0,_grafana_data__WEBPACK_IMPORTED_MODULE_21__.toUtc)(tsValue);\n    const range = queryDirection === _types__WEBPACK_IMPORTED_MODULE_12__.LokiQueryDirection.Forward ? {\n      // start param in Loki API is inclusive so we'll have to filter out the row that this request is based from\n      // and any other that were logged in the same ns but before the row. Right now these rows will be lost\n      // because the are before but came it he response that should return only rows after.\n      from: timestamp,\n      // convert to ns, we lose some precision here but it is not that important at the far points of the context\n      to: (0,_grafana_data__WEBPACK_IMPORTED_MODULE_21__.toUtc)(row.timeEpochMs + contextTimeBuffer)\n    } : {\n      // convert to ns, we lose some precision here but it is not that important at the far points of the context\n      from: (0,_grafana_data__WEBPACK_IMPORTED_MODULE_21__.toUtc)(row.timeEpochMs - contextTimeBuffer),\n      to: timestamp\n    };\n    return {\n      query,\n      range: {\n        from: range.from,\n        to: range.to,\n        raw: range\n      }\n    };\n  }\n  getLogRowContextUi(row, runContextQuery, origQuery) {\n    const updateFilter = (contextFilters) => {\n      this.appliedContextFilters = contextFilters;\n      if (runContextQuery) {\n        runContextQuery();\n      }\n    };\n    this.onContextClose = this.onContextClose ?? (() => {\n      this.appliedContextFilters = [];\n    });\n    return (0,_components_LokiContextUi__WEBPACK_IMPORTED_MODULE_6__.LokiContextUi)({\n      row,\n      origQuery,\n      updateFilter,\n      onClose: this.onContextClose,\n      logContextProvider: this,\n      runContextQuery\n    });\n  }\n  prepareExpression(contextFilters, query) {\n    let preparedExpression = this.processContextFiltersToExpr(contextFilters, query);\n    if (app_core_store__WEBPACK_IMPORTED_MODULE_4__[\"default\"].getBool(SHOULD_INCLUDE_PIPELINE_OPERATIONS, false)) {\n      preparedExpression = this.processPipelineStagesToExpr(preparedExpression, query);\n    }\n    return preparedExpression;\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/LogContextProvider.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/backendResultTransformer.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   transformBackendResult: () => (/* binding */ transformBackendResult)\n/* harmony export */ });\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/types/dataFrame.ts\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/dataframe/processDataFrame.ts\");\n/* harmony import */ var _getDerivedFields__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./public/app/plugins/datasource/loki/getDerivedFields.ts\");\n/* harmony import */ var _makeTableFrames__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/plugins/datasource/loki/makeTableFrames.ts\");\n/* harmony import */ var _queryUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/plugins/datasource/loki/queryUtils.ts\");\n/* harmony import */ var _responseUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./public/app/plugins/datasource/loki/responseUtils.ts\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./public/app/plugins/datasource/loki/types.ts\");\n\n\n\n\n\n\n\nfunction isMetricFrame(frame) {\n  return frame.fields.every((field) => field.type === _grafana_data__WEBPACK_IMPORTED_MODULE_5__.FieldType.time || field.type === _grafana_data__WEBPACK_IMPORTED_MODULE_5__.FieldType.number);\n}\nfunction setFrameMeta(frame, meta) {\n  const { meta: oldMeta, ...rest } = frame;\n  const newMeta = { ...oldMeta, ...meta };\n  return {\n    ...rest,\n    meta: newMeta\n  };\n}\nfunction processStreamFrame(frame, query, derivedFieldConfigs) {\n  const custom = {\n    ...frame.meta?.custom,\n    // keep the original meta.custom\n    // used by logsModel\n    lokiQueryStatKey: \"Summary: total bytes processed\"\n  };\n  if ((0,_responseUtils__WEBPACK_IMPORTED_MODULE_3__.dataFrameHasLokiError)(frame)) {\n    custom.error = \"Error when parsing some of the logs\";\n  }\n  const meta = {\n    preferredVisualisationType: \"logs\",\n    limit: query?.maxLines,\n    searchWords: query !== void 0 ? (0,_queryUtils__WEBPACK_IMPORTED_MODULE_2__.getHighlighterExpressionsFromQuery)((0,_queryUtils__WEBPACK_IMPORTED_MODULE_2__.formatQuery)(query.expr)) : void 0,\n    custom\n  };\n  const newFrame = setFrameMeta(frame, meta);\n  const derivedFields = (0,_getDerivedFields__WEBPACK_IMPORTED_MODULE_0__.getDerivedFields)(newFrame, derivedFieldConfigs);\n  return {\n    ...newFrame,\n    fields: [...newFrame.fields, ...derivedFields]\n  };\n}\nfunction processStreamsFrames(frames, queryMap, derivedFieldConfigs) {\n  return frames.map((frame) => {\n    const query = frame.refId !== void 0 ? queryMap.get(frame.refId) : void 0;\n    return processStreamFrame(frame, query, derivedFieldConfigs);\n  });\n}\nfunction processMetricInstantFrames(frames) {\n  return frames.length > 0 ? (0,_makeTableFrames__WEBPACK_IMPORTED_MODULE_1__.makeTableFrames)(frames) : [];\n}\nfunction processMetricRangeFrames(frames) {\n  const meta = { preferredVisualisationType: \"graph\" };\n  return frames.map((frame) => setFrameMeta(frame, meta));\n}\nfunction groupFrames(frames, queryMap) {\n  const streamsFrames = [];\n  const metricInstantFrames = [];\n  const metricRangeFrames = [];\n  frames.forEach((frame) => {\n    if (!isMetricFrame(frame)) {\n      streamsFrames.push(frame);\n    } else {\n      const isInstantFrame = frame.refId != null && queryMap.get(frame.refId)?.queryType === _types__WEBPACK_IMPORTED_MODULE_4__.LokiQueryType.Instant;\n      if (isInstantFrame) {\n        metricInstantFrames.push(frame);\n      } else {\n        metricRangeFrames.push(frame);\n      }\n    }\n  });\n  return { streamsFrames, metricInstantFrames, metricRangeFrames };\n}\nfunction improveError(error, queryMap) {\n  if (error === void 0) {\n    return error;\n  }\n  const { refId, message } = error;\n  if (refId === void 0 || message === void 0) {\n    return error;\n  }\n  const query = queryMap.get(refId);\n  if (query === void 0) {\n    return error;\n  }\n  if (message.includes(\"escape\") && query.expr.includes(\"\\\\\")) {\n    return {\n      ...error,\n      message: `${message}. Make sure that all special characters are escaped with \\\\. For more information on escaping of special characters visit LogQL documentation at https://grafana.com/docs/loki/latest/logql/.`\n    };\n  }\n  return error;\n}\nfunction transformBackendResult(response, queries, derivedFieldConfigs) {\n  const { data, error, ...rest } = response;\n  const dataFrames = data.map((d) => {\n    if (!(0,_grafana_data__WEBPACK_IMPORTED_MODULE_6__.isDataFrame)(d)) {\n      throw new Error(\"transformation only supports dataframe responses\");\n    }\n    return d;\n  });\n  const queryMap = new Map(queries.map((query) => [query.refId, query]));\n  const { streamsFrames, metricInstantFrames, metricRangeFrames } = groupFrames(dataFrames, queryMap);\n  return {\n    ...rest,\n    error: improveError(error, queryMap),\n    data: [\n      ...processMetricRangeFrames(metricRangeFrames),\n      ...processMetricInstantFrames(metricInstantFrames),\n      ...processStreamsFrames(streamsFrames, queryMap, derivedFieldConfigs)\n    ]\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/backendResultTransformer.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/components/AnnotationsQueryEditor.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LokiAnnotationsQueryEditor: () => (/* binding */ LokiAnnotationsQueryEditor)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _grafana_experimental__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-experimental-virtual-ba767552fe/0/cache/@grafana-experimental-npm-1.6.1-f052d2ae51-64c32bc9e3.zip/node_modules/@grafana/experimental/dist/esm/QueryEditor/EditorRow.js\");\n/* harmony import */ var _grafana_experimental__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-experimental-virtual-ba767552fe/0/cache/@grafana-experimental-npm-1.6.1-f052d2ae51-64c32bc9e3.zip/node_modules/@grafana/experimental/dist/esm/QueryEditor/EditorField.js\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Input/Input.tsx\");\n/* harmony import */ var _queryUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/plugins/datasource/loki/queryUtils.ts\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/plugins/datasource/loki/types.ts\");\n/* harmony import */ var _LokiOptionFields__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./public/app/plugins/datasource/loki/components/LokiOptionFields.tsx\");\n/* harmony import */ var _LokiQueryField__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./public/app/plugins/datasource/loki/components/LokiQueryField.tsx\");\n\n\n\n\n\n\n\n\nconst LokiAnnotationsQueryEditor = (0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(function LokiAnnotationQueryEditor(props) {\n  const { annotation, onAnnotationChange, history } = props;\n  if (annotation === void 0 || onAnnotationChange === void 0) {\n    return null;\n  }\n  const onChangeQuery = (query) => {\n    const instant = (0,_queryUtils__WEBPACK_IMPORTED_MODULE_1__.getNormalizedLokiQuery)(query).queryType === _types__WEBPACK_IMPORTED_MODULE_2__.LokiQueryType.Instant;\n    onAnnotationChange({\n      ...annotation,\n      expr: query.expr,\n      maxLines: query.maxLines,\n      instant\n    });\n  };\n  const queryWithRefId = {\n    refId: \"\",\n    expr: annotation.expr,\n    maxLines: annotation.maxLines,\n    instant: annotation.instant,\n    queryType: annotation.queryType\n  };\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", { className: \"gf-form-group\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n    _LokiQueryField__WEBPACK_IMPORTED_MODULE_4__.LokiQueryField,\n    {\n      datasource: props.datasource,\n      query: queryWithRefId,\n      onChange: onChangeQuery,\n      onRunQuery: () => {\n      },\n      history,\n      ExtraFieldElement: /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n        _LokiOptionFields__WEBPACK_IMPORTED_MODULE_3__.LokiOptionFields,\n        {\n          lineLimitValue: queryWithRefId?.maxLines?.toString() || \"\",\n          resolution: queryWithRefId.resolution || 1,\n          query: queryWithRefId,\n          onRunQuery: () => {\n          },\n          onChange: onChangeQuery\n        }\n      )\n    }\n  )), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_grafana_experimental__WEBPACK_IMPORTED_MODULE_5__.EditorRow, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n    _grafana_experimental__WEBPACK_IMPORTED_MODULE_6__.EditorField,\n    {\n      label: \"Title\",\n      tooltip: \"Use either the name or a pattern. For example, {{instance}} is replaced with label value for the label instance.\"\n    },\n    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n      _grafana_ui__WEBPACK_IMPORTED_MODULE_7__.Input,\n      {\n        type: \"text\",\n        placeholder: \"alertname\",\n        value: annotation.titleFormat,\n        onChange: (event) => {\n          onAnnotationChange({\n            ...annotation,\n            titleFormat: event.currentTarget.value\n          });\n        }\n      }\n    )\n  ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_grafana_experimental__WEBPACK_IMPORTED_MODULE_6__.EditorField, { label: \"Tags\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n    _grafana_ui__WEBPACK_IMPORTED_MODULE_7__.Input,\n    {\n      type: \"text\",\n      placeholder: \"label1,label2\",\n      value: annotation.tagKeys,\n      onChange: (event) => {\n        onAnnotationChange({\n          ...annotation,\n          tagKeys: event.currentTarget.value\n        });\n      }\n    }\n  )), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n    _grafana_experimental__WEBPACK_IMPORTED_MODULE_6__.EditorField,\n    {\n      label: \"Text\",\n      tooltip: \"Use either the name or a pattern. For example, {{instance}} is replaced with label value for the label instance.\"\n    },\n    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n      _grafana_ui__WEBPACK_IMPORTED_MODULE_7__.Input,\n      {\n        type: \"text\",\n        placeholder: \"instance\",\n        value: annotation.textFormat,\n        onChange: (event) => {\n          onAnnotationChange({\n            ...annotation,\n            textFormat: event.currentTarget.value\n          });\n        }\n      }\n    )\n  )));\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL2NvbXBvbmVudHMvQW5ub3RhdGlvbnNRdWVyeUVkaXRvci50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFDNEI7QUFHVztBQUNqQjtBQUdpQjtBQUNFO0FBRVI7QUFDRjtBQVF4QixNQUFNLDZCQUE2QiwyQ0FBSSxDQUFDLFNBQVMsMEJBQTBCLE9BQWM7QUFDOUYsUUFBTSxFQUFFLFlBQVksb0JBQW9CLFFBQVEsSUFBSTtBQUdwRCxNQUFJLGVBQWUsVUFBYSx1QkFBdUIsUUFBVztBQUNoRSxXQUFPO0FBQUEsRUFDVDtBQUVBLFFBQU0sZ0JBQWdCLENBQUMsVUFBcUI7QUFNMUMsVUFBTSxVQUFVLG1FQUFzQixDQUFDLEtBQUssRUFBRSxjQUFjLGlEQUFhLENBQUM7QUFDMUUsdUJBQW1CO0FBQUEsTUFDakIsR0FBRztBQUFBLE1BQ0gsTUFBTSxNQUFNO0FBQUEsTUFDWixVQUFVLE1BQU07QUFBQSxNQUNoQjtBQUFBLElBQ0YsQ0FBQztBQUFBLEVBQ0g7QUFFQSxRQUFNLGlCQUE0QjtBQUFBLElBQ2hDLE9BQU87QUFBQSxJQUNQLE1BQU0sV0FBVztBQUFBLElBQ2pCLFVBQVUsV0FBVztBQUFBLElBQ3JCLFNBQVMsV0FBVztBQUFBLElBQ3BCLFdBQVcsV0FBVztBQUFBLEVBQ3hCO0FBQ0EsU0FDRSwwSUFDRSwyRUFBQyxTQUFJLFdBQVUsbUJBQ2I7QUFBQSxJQUFDLDJEQUFjO0FBQWQ7QUFBQSxNQUNDLFlBQVksTUFBTTtBQUFBLE1BQ2xCLE9BQU87QUFBQSxNQUNQLFVBQVU7QUFBQSxNQUNWLFlBQVksTUFBTTtBQUFBLE1BQUM7QUFBQSxNQUNuQjtBQUFBLE1BQ0EsbUJBQ0U7QUFBQSxRQUFDLCtEQUFnQjtBQUFoQjtBQUFBLFVBQ0MsZ0JBQWdCLGdCQUFnQixVQUFVLFNBQVMsS0FBSztBQUFBLFVBQ3hELFlBQVksZUFBZSxjQUFjO0FBQUEsVUFDekMsT0FBTztBQUFBLFVBQ1AsWUFBWSxNQUFNO0FBQUEsVUFBQztBQUFBLFVBQ25CLFVBQVU7QUFBQTtBQUFBLE1BQ1o7QUFBQTtBQUFBLEVBRUosQ0FDRixHQUVBLDJFQUFDLDREQUFTLFFBQ1I7QUFBQSxJQUFDLDhEQUFXO0FBQVg7QUFBQSxNQUNDLE9BQU07QUFBQSxNQUNOLFNBQ0U7QUFBQTtBQUFBLElBR0Y7QUFBQSxNQUFDLDhDQUFLO0FBQUw7QUFBQSxRQUNDLE1BQUs7QUFBQSxRQUNMLGFBQVk7QUFBQSxRQUNaLE9BQU8sV0FBVztBQUFBLFFBQ2xCLFVBQVUsQ0FBQyxVQUFVO0FBQ25CLDZCQUFtQjtBQUFBLFlBQ2pCLEdBQUc7QUFBQSxZQUNILGFBQWEsTUFBTSxjQUFjO0FBQUEsVUFDbkMsQ0FBQztBQUFBLFFBQ0g7QUFBQTtBQUFBLElBQ0Y7QUFBQSxFQUNGLEdBQ0EsMkVBQUMsOERBQVcsSUFBQyxPQUFNLFVBQ2pCO0FBQUEsSUFBQyw4Q0FBSztBQUFMO0FBQUEsTUFDQyxNQUFLO0FBQUEsTUFDTCxhQUFZO0FBQUEsTUFDWixPQUFPLFdBQVc7QUFBQSxNQUNsQixVQUFVLENBQUMsVUFBVTtBQUNuQiwyQkFBbUI7QUFBQSxVQUNqQixHQUFHO0FBQUEsVUFDSCxTQUFTLE1BQU0sY0FBYztBQUFBLFFBQy9CLENBQUM7QUFBQSxNQUNIO0FBQUE7QUFBQSxFQUNGLENBQ0YsR0FDQTtBQUFBLElBQUMsOERBQVc7QUFBWDtBQUFBLE1BQ0MsT0FBTTtBQUFBLE1BQ04sU0FDRTtBQUFBO0FBQUEsSUFHRjtBQUFBLE1BQUMsOENBQUs7QUFBTDtBQUFBLFFBQ0MsTUFBSztBQUFBLFFBQ0wsYUFBWTtBQUFBLFFBQ1osT0FBTyxXQUFXO0FBQUEsUUFDbEIsVUFBVSxDQUFDLFVBQVU7QUFDbkIsNkJBQW1CO0FBQUEsWUFDakIsR0FBRztBQUFBLFlBQ0gsWUFBWSxNQUFNLGNBQWM7QUFBQSxVQUNsQyxDQUFDO0FBQUEsUUFDSDtBQUFBO0FBQUEsSUFDRjtBQUFBLEVBQ0YsQ0FDRixDQUNGO0FBRUosQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2dyYWZhbmEvLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL2NvbXBvbmVudHMvQW5ub3RhdGlvbnNRdWVyeUVkaXRvci50c3g/YjJmMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBMaWJyYXJpZXNcbmltcG9ydCBSZWFjdCwgeyBtZW1vIH0gZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgeyBBbm5vdGF0aW9uUXVlcnkgfSBmcm9tICdAZ3JhZmFuYS9kYXRhJztcbmltcG9ydCB7IEVkaXRvckZpZWxkLCBFZGl0b3JSb3cgfSBmcm9tICdAZ3JhZmFuYS9leHBlcmltZW50YWwnO1xuaW1wb3J0IHsgSW5wdXQgfSBmcm9tICdAZ3JhZmFuYS91aSc7XG5cbi8vIFR5cGVzXG5pbXBvcnQgeyBnZXROb3JtYWxpemVkTG9raVF1ZXJ5IH0gZnJvbSAnLi4vcXVlcnlVdGlscyc7XG5pbXBvcnQgeyBMb2tpUXVlcnksIExva2lRdWVyeVR5cGUgfSBmcm9tICcuLi90eXBlcyc7XG5cbmltcG9ydCB7IExva2lPcHRpb25GaWVsZHMgfSBmcm9tICcuL0xva2lPcHRpb25GaWVsZHMnO1xuaW1wb3J0IHsgTG9raVF1ZXJ5RmllbGQgfSBmcm9tICcuL0xva2lRdWVyeUZpZWxkJztcbmltcG9ydCB7IExva2lRdWVyeUVkaXRvclByb3BzIH0gZnJvbSAnLi90eXBlcyc7XG5cbnR5cGUgUHJvcHMgPSBMb2tpUXVlcnlFZGl0b3JQcm9wcyAmIHtcbiAgYW5ub3RhdGlvbj86IEFubm90YXRpb25RdWVyeTxMb2tpUXVlcnk+O1xuICBvbkFubm90YXRpb25DaGFuZ2U/OiAoYW5ub3RhdGlvbjogQW5ub3RhdGlvblF1ZXJ5PExva2lRdWVyeT4pID0+IHZvaWQ7XG59O1xuXG5leHBvcnQgY29uc3QgTG9raUFubm90YXRpb25zUXVlcnlFZGl0b3IgPSBtZW1vKGZ1bmN0aW9uIExva2lBbm5vdGF0aW9uUXVlcnlFZGl0b3IocHJvcHM6IFByb3BzKSB7XG4gIGNvbnN0IHsgYW5ub3RhdGlvbiwgb25Bbm5vdGF0aW9uQ2hhbmdlLCBoaXN0b3J5IH0gPSBwcm9wcztcblxuICAvLyB0aGlzIHNob3VsZCBuZXZlciBoYXBwZW4sIGJ1dCB3ZSB3YW50IHRvIGtlZXAgdHlwZXNjcmlwdCBoYXBweVxuICBpZiAoYW5ub3RhdGlvbiA9PT0gdW5kZWZpbmVkIHx8IG9uQW5ub3RhdGlvbkNoYW5nZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICBjb25zdCBvbkNoYW5nZVF1ZXJ5ID0gKHF1ZXJ5OiBMb2tpUXVlcnkpID0+IHtcbiAgICAvLyB0aGUgY3VycmVudCB2ZXJzaW9uIG9mIGFubm90YXRpb25zIG9ubHkgc3RvcmVzIGFuIG9wdGlvbmFsIGJvb2xlYW5cbiAgICAvLyBmaWVsZCBgaW5zdGFudGAgdG8gaGFuZGxlIHRoZSBpbnN0YW50L3JhbmdlIHN3aXRjaC5cbiAgICAvLyB3ZSBuZWVkIHRvIG1haW50YWluIGNvbXBhdGliaWxpdHkgZm9yIG5vdywgc28gd2UgZG8gdGhlIHNhbWUuXG4gICAgLy8gd2UgZXhwbGljaXRseSBjYWxsIGBnZXROb3JtYWxpemVkTG9raVF1ZXJ5YCB0byBtYWtlIHN1cmUgYHF1ZXJ5VHlwZWBcbiAgICAvLyBpcyBzZXQgdXAgY29ycmVjdGx5LlxuICAgIGNvbnN0IGluc3RhbnQgPSBnZXROb3JtYWxpemVkTG9raVF1ZXJ5KHF1ZXJ5KS5xdWVyeVR5cGUgPT09IExva2lRdWVyeVR5cGUuSW5zdGFudDtcbiAgICBvbkFubm90YXRpb25DaGFuZ2Uoe1xuICAgICAgLi4uYW5ub3RhdGlvbixcbiAgICAgIGV4cHI6IHF1ZXJ5LmV4cHIsXG4gICAgICBtYXhMaW5lczogcXVlcnkubWF4TGluZXMsXG4gICAgICBpbnN0YW50LFxuICAgIH0pO1xuICB9O1xuXG4gIGNvbnN0IHF1ZXJ5V2l0aFJlZklkOiBMb2tpUXVlcnkgPSB7XG4gICAgcmVmSWQ6ICcnLFxuICAgIGV4cHI6IGFubm90YXRpb24uZXhwcixcbiAgICBtYXhMaW5lczogYW5ub3RhdGlvbi5tYXhMaW5lcyxcbiAgICBpbnN0YW50OiBhbm5vdGF0aW9uLmluc3RhbnQsXG4gICAgcXVlcnlUeXBlOiBhbm5vdGF0aW9uLnF1ZXJ5VHlwZSxcbiAgfTtcbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJnZi1mb3JtLWdyb3VwXCI+XG4gICAgICAgIDxMb2tpUXVlcnlGaWVsZFxuICAgICAgICAgIGRhdGFzb3VyY2U9e3Byb3BzLmRhdGFzb3VyY2V9XG4gICAgICAgICAgcXVlcnk9e3F1ZXJ5V2l0aFJlZklkfVxuICAgICAgICAgIG9uQ2hhbmdlPXtvbkNoYW5nZVF1ZXJ5fVxuICAgICAgICAgIG9uUnVuUXVlcnk9eygpID0+IHt9fVxuICAgICAgICAgIGhpc3Rvcnk9e2hpc3Rvcnl9XG4gICAgICAgICAgRXh0cmFGaWVsZEVsZW1lbnQ9e1xuICAgICAgICAgICAgPExva2lPcHRpb25GaWVsZHNcbiAgICAgICAgICAgICAgbGluZUxpbWl0VmFsdWU9e3F1ZXJ5V2l0aFJlZklkPy5tYXhMaW5lcz8udG9TdHJpbmcoKSB8fCAnJ31cbiAgICAgICAgICAgICAgcmVzb2x1dGlvbj17cXVlcnlXaXRoUmVmSWQucmVzb2x1dGlvbiB8fCAxfVxuICAgICAgICAgICAgICBxdWVyeT17cXVlcnlXaXRoUmVmSWR9XG4gICAgICAgICAgICAgIG9uUnVuUXVlcnk9eygpID0+IHt9fVxuICAgICAgICAgICAgICBvbkNoYW5nZT17b25DaGFuZ2VRdWVyeX1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgfVxuICAgICAgICAvPlxuICAgICAgPC9kaXY+XG5cbiAgICAgIDxFZGl0b3JSb3c+XG4gICAgICAgIDxFZGl0b3JGaWVsZFxuICAgICAgICAgIGxhYmVsPVwiVGl0bGVcIlxuICAgICAgICAgIHRvb2x0aXA9e1xuICAgICAgICAgICAgJ1VzZSBlaXRoZXIgdGhlIG5hbWUgb3IgYSBwYXR0ZXJuLiBGb3IgZXhhbXBsZSwge3tpbnN0YW5jZX19IGlzIHJlcGxhY2VkIHdpdGggbGFiZWwgdmFsdWUgZm9yIHRoZSBsYWJlbCBpbnN0YW5jZS4nXG4gICAgICAgICAgfVxuICAgICAgICA+XG4gICAgICAgICAgPElucHV0XG4gICAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICBwbGFjZWhvbGRlcj1cImFsZXJ0bmFtZVwiXG4gICAgICAgICAgICB2YWx1ZT17YW5ub3RhdGlvbi50aXRsZUZvcm1hdH1cbiAgICAgICAgICAgIG9uQ2hhbmdlPXsoZXZlbnQpID0+IHtcbiAgICAgICAgICAgICAgb25Bbm5vdGF0aW9uQ2hhbmdlKHtcbiAgICAgICAgICAgICAgICAuLi5hbm5vdGF0aW9uLFxuICAgICAgICAgICAgICAgIHRpdGxlRm9ybWF0OiBldmVudC5jdXJyZW50VGFyZ2V0LnZhbHVlLFxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH19XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9FZGl0b3JGaWVsZD5cbiAgICAgICAgPEVkaXRvckZpZWxkIGxhYmVsPVwiVGFnc1wiPlxuICAgICAgICAgIDxJbnB1dFxuICAgICAgICAgICAgdHlwZT1cInRleHRcIlxuICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJsYWJlbDEsbGFiZWwyXCJcbiAgICAgICAgICAgIHZhbHVlPXthbm5vdGF0aW9uLnRhZ0tleXN9XG4gICAgICAgICAgICBvbkNoYW5nZT17KGV2ZW50KSA9PiB7XG4gICAgICAgICAgICAgIG9uQW5ub3RhdGlvbkNoYW5nZSh7XG4gICAgICAgICAgICAgICAgLi4uYW5ub3RhdGlvbixcbiAgICAgICAgICAgICAgICB0YWdLZXlzOiBldmVudC5jdXJyZW50VGFyZ2V0LnZhbHVlLFxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH19XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9FZGl0b3JGaWVsZD5cbiAgICAgICAgPEVkaXRvckZpZWxkXG4gICAgICAgICAgbGFiZWw9XCJUZXh0XCJcbiAgICAgICAgICB0b29sdGlwPXtcbiAgICAgICAgICAgICdVc2UgZWl0aGVyIHRoZSBuYW1lIG9yIGEgcGF0dGVybi4gRm9yIGV4YW1wbGUsIHt7aW5zdGFuY2V9fSBpcyByZXBsYWNlZCB3aXRoIGxhYmVsIHZhbHVlIGZvciB0aGUgbGFiZWwgaW5zdGFuY2UuJ1xuICAgICAgICAgIH1cbiAgICAgICAgPlxuICAgICAgICAgIDxJbnB1dFxuICAgICAgICAgICAgdHlwZT1cInRleHRcIlxuICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJpbnN0YW5jZVwiXG4gICAgICAgICAgICB2YWx1ZT17YW5ub3RhdGlvbi50ZXh0Rm9ybWF0fVxuICAgICAgICAgICAgb25DaGFuZ2U9eyhldmVudCkgPT4ge1xuICAgICAgICAgICAgICBvbkFubm90YXRpb25DaGFuZ2Uoe1xuICAgICAgICAgICAgICAgIC4uLmFubm90YXRpb24sXG4gICAgICAgICAgICAgICAgdGV4dEZvcm1hdDogZXZlbnQuY3VycmVudFRhcmdldC52YWx1ZSxcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9fVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvRWRpdG9yRmllbGQ+XG4gICAgICA8L0VkaXRvclJvdz5cbiAgICA8Lz5cbiAgKTtcbn0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/components/AnnotationsQueryEditor.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/components/LokiCheatSheet.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ LokiCheatSheet)\n/* harmony export */ });\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/lodash-npm-4.17.21-6382451519-eb835a2e51.zip/node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _grafana_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-runtime-virtual-68c57d4c0c/1/packages/grafana-runtime/src/analytics/utils.ts\");\n\n\n\n\nconst DEFAULT_EXAMPLES = ['{job=\"default/prometheus\"}'];\nconst PREFERRED_LABELS = [\"job\", \"app\", \"k8s_app\"];\nconst EXAMPLES_LIMIT = 5;\nconst LOGQL_EXAMPLES = [\n  {\n    title: \"Log pipeline\",\n    expression: '{job=\"mysql\"} |= \"metrics\" | logfmt | duration > 10s',\n    label: 'This query targets the MySQL job, keeps logs that contain the substring \"metrics\", and then parses and filters the logs further.'\n  },\n  {\n    title: \"Count over time\",\n    expression: 'count_over_time({job=\"mysql\"}[5m])',\n    label: \"This query counts all the log lines within the last five minutes for the MySQL job.\"\n  },\n  {\n    title: \"Rate\",\n    expression: 'rate(({job=\"mysql\"} |= \"error\" != \"timeout\")[10s])',\n    label: \"This query gets the per-second rate of all non-timeout errors within the last ten seconds for the MySQL job.\"\n  },\n  {\n    title: \"Aggregate, count, and group\",\n    expression: 'sum(count_over_time({job=\"mysql\"}[5m])) by (level)',\n    label: \"Get the count of logs during the last five minutes, grouping by level.\"\n  }\n];\nclass LokiCheatSheet extends react__WEBPACK_IMPORTED_MODULE_1__.PureComponent {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      userExamples: []\n    };\n    this.checkUserLabels = async () => {\n      const provider = this.props.datasource?.languageProvider;\n      if (provider.started) {\n        const labels = provider.getLabelKeys() || [];\n        const preferredLabel = PREFERRED_LABELS.find((l) => labels.includes(l));\n        if (preferredLabel) {\n          const values = await provider.getLabelValues(preferredLabel);\n          const userExamples = (0,lodash__WEBPACK_IMPORTED_MODULE_0__.shuffle)(values).slice(0, EXAMPLES_LIMIT).map((value) => `{${preferredLabel}=\"${value}\"}`);\n          this.setState({ userExamples });\n        }\n      } else {\n        this.scheduleUserLabelChecking();\n      }\n    };\n  }\n  componentDidMount() {\n    this.scheduleUserLabelChecking();\n    (0,_grafana_runtime__WEBPACK_IMPORTED_MODULE_2__.reportInteraction)(\"grafana_loki_cheatsheet_opened\", {});\n  }\n  componentWillUnmount() {\n    clearTimeout(this.userLabelTimer);\n  }\n  scheduleUserLabelChecking() {\n    this.userLabelTimer = setTimeout(this.checkUserLabels, 1e3);\n  }\n  renderExpression(expr) {\n    const { onClickExample } = this.props;\n    const onClick = (query) => {\n      onClickExample(query);\n      (0,_grafana_runtime__WEBPACK_IMPORTED_MODULE_2__.reportInteraction)(\"grafana_loki_cheatsheet_example_clicked\", {});\n    };\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n      \"button\",\n      {\n        type: \"button\",\n        className: \"cheat-sheet-item__example\",\n        key: expr,\n        onClick: (e) => onClick({ refId: \"A\", expr })\n      },\n      /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"code\", null, expr)\n    );\n  }\n  render() {\n    const { userExamples } = this.state;\n    const hasUserExamples = userExamples.length > 0;\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"h2\", null, \"Loki Cheat Sheet\"), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"cheat-sheet-item\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"cheat-sheet-item__title\" }, \"See your logs\"), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"cheat-sheet-item__label\" }, \"Start by selecting a log stream from the Label browser, or alternatively you can write a stream selector into the query field.\"), hasUserExamples ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"cheat-sheet-item__label\" }, \"Here are some example streams from your logs:\"), userExamples.map((example) => this.renderExpression(example))) : /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"cheat-sheet-item__label\" }, \"Here is an example of a log stream:\"), this.renderExpression(DEFAULT_EXAMPLES[0]))), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"cheat-sheet-item\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"cheat-sheet-item__title\" }, \"Combine stream selectors\"), this.renderExpression('{app=\"cassandra\",namespace=\"prod\"}'), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"cheat-sheet-item__label\" }, \"Returns all log lines from streams that have both labels.\")), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"cheat-sheet-item\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"cheat-sheet-item__title\" }, \"Filtering for search terms.\"), this.renderExpression('{app=\"cassandra\"} |~ \"(duration|latency)s*(=|is|of)s*[d.]+\"'), this.renderExpression('{app=\"cassandra\"} |= \"exact match\"'), this.renderExpression('{app=\"cassandra\"} != \"do not match\"'), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"cheat-sheet-item__label\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"a\", { href: \"https://grafana.com/docs/loki/latest/logql/#log-pipeline\", target: \"logql\" }, \"LogQL\"), \" \", \"supports exact and regular expression filters.\")), LOGQL_EXAMPLES.map((item) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"cheat-sheet-item\", key: item.expression }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"cheat-sheet-item__title\" }, item.title), this.renderExpression(item.expression), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"cheat-sheet-item__label\" }, item.label))));\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/components/LokiCheatSheet.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/components/LokiContextUi.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IS_LOKI_LOG_CONTEXT_UI_OPEN: () => (/* binding */ IS_LOKI_LOG_CONTEXT_UI_OPEN),\n/* harmony export */   LokiContextUi: () => (/* binding */ LokiContextUi)\n/* harmony export */ });\n/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/@emotion-css-npm-11.11.2-dbfa42cf83-1edea109df.zip/node_modules/@emotion/css/dist/emotion-css.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_use__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(\"./.yarn/__virtual__/react-use-virtual-dd7926f458/0/cache/react-use-npm-17.4.0-0ef4521544-0889da919b.zip/node_modules/react-use/esm/useAsync.js\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/text/markdown.ts\");\n/* harmony import */ var _grafana_runtime__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-runtime-virtual-68c57d4c0c/1/packages/grafana-runtime/src/analytics/utils.ts\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/themes/ThemeContext.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Tooltip/Tooltip.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Button/Button.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Collapse/Collapse.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Icon/Icon.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Spinner/Spinner.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Forms/Label.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Select/Select.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Forms/InlineFieldRow.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Forms/InlineField.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/RenderUserContentAsHTML/RenderUserContentAsHTML.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Switch/Switch.tsx\");\n/* harmony import */ var app_core_store__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/core/store.ts\");\n/* harmony import */ var _prometheus_querybuilder_shared_RawQuery__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./public/app/plugins/datasource/prometheus/querybuilder/shared/RawQuery.tsx\");\n/* harmony import */ var _LogContextProvider__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./public/app/plugins/datasource/loki/LogContextProvider.ts\");\n/* harmony import */ var _languageUtils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./public/app/plugins/datasource/loki/languageUtils.ts\");\n/* harmony import */ var _queryUtils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./public/app/plugins/datasource/loki/queryUtils.ts\");\n/* harmony import */ var _syntax__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\"./public/app/plugins/datasource/loki/syntax.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction getStyles(theme) {\n  return {\n    labels: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n      display: flex;\n      gap: ${theme.spacing(0.5)};\n    `,\n    wrapper: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n      display: flex;\n      flex-direction: column;\n      flex: 1;\n      gap: ${theme.spacing(0.5)};\n      position: relative;\n    `,\n    textWrapper: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n      display: flex;\n      align-items: center;\n    `,\n    hidden: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n      visibility: hidden;\n    `,\n    label: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n      max-width: 100%;\n      &:first-of-type {\n        margin-bottom: ${theme.spacing(2)};\n      }\n      &:not(:first-of-type) {\n        margin: ${theme.spacing(2)} 0;\n      }\n    `,\n    rawQueryContainer: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n      text-align: start;\n      line-break: anywhere;\n      margin-top: -${theme.spacing(0.25)};\n      margin-right: ${theme.spacing(6)};\n      min-height: ${theme.spacing(4)};\n    `,\n    ui: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n      background-color: ${theme.colors.background.secondary};\n      padding: ${theme.spacing(2)};\n    `,\n    rawQuery: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n      display: inline;\n    `,\n    queryDescription: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n      margin-left: ${theme.spacing(0.5)};\n    `,\n    iconButton: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n      position: absolute;\n      top: ${theme.spacing(1)};\n      right: ${theme.spacing(1)};\n      z-index: ${theme.zIndex.navbarFixed};\n    `,\n    operationsToggle: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n      margin: ${theme.spacing(1)} 0 ${theme.spacing(-1)} 0;\n      & > div {\n        margin: 0;\n        & > label {\n          padding: 0;\n        }\n      }\n    `\n  };\n}\nconst IS_LOKI_LOG_CONTEXT_UI_OPEN = \"isLogContextQueryUiOpen\";\nfunction LokiContextUi(props) {\n  const { row, logContextProvider, updateFilter, onClose, origQuery, runContextQuery } = props;\n  const styles = (0,_grafana_ui__WEBPACK_IMPORTED_MODULE_8__.useStyles2)(getStyles);\n  const [contextFilters, setContextFilters] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n  const [initialized, setInitialized] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n  const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n  const [isOpen, setIsOpen] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(app_core_store__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getBool(IS_LOKI_LOG_CONTEXT_UI_OPEN, false));\n  const [includePipelineOperations, setIncludePipelineOperations] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\n    app_core_store__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getBool(_LogContextProvider__WEBPACK_IMPORTED_MODULE_4__.SHOULD_INCLUDE_PIPELINE_OPERATIONS, false)\n  );\n  const timerHandle = react__WEBPACK_IMPORTED_MODULE_1___default().useRef();\n  const previousInitialized = react__WEBPACK_IMPORTED_MODULE_1___default().useRef(false);\n  const previousContextFilters = react__WEBPACK_IMPORTED_MODULE_1___default().useRef([]);\n  const isInitialState = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => {\n    if (initialized && contextFilters.some((filter) => filter.fromParser === filter.enabled)) {\n      return false;\n    }\n    if (includePipelineOperations && logContextProvider.queryContainsValidPipelineStages(origQuery)) {\n      return false;\n    }\n    return true;\n  }, [contextFilters, includePipelineOperations, initialized, logContextProvider, origQuery]);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (!initialized) {\n      return;\n    }\n    if (!previousInitialized.current) {\n      previousInitialized.current = initialized;\n      return;\n    }\n    if (contextFilters.filter(({ enabled, fromParser }) => enabled && !fromParser).length === 0) {\n      setContextFilters(previousContextFilters.current);\n      return;\n    }\n    previousContextFilters.current = structuredClone(contextFilters);\n    if (timerHandle.current) {\n      clearTimeout(timerHandle.current);\n    }\n    setLoading(true);\n    timerHandle.current = window.setTimeout(() => {\n      updateFilter(contextFilters.filter(({ enabled }) => enabled));\n      const preservedLabels = {\n        removedLabels: [],\n        selectedExtractedLabels: []\n      };\n      contextFilters.forEach(({ enabled, fromParser, label }) => {\n        if (!enabled && !fromParser) {\n          preservedLabels.removedLabels.push(label);\n        }\n        if (enabled && fromParser) {\n          preservedLabels.selectedExtractedLabels.push(label);\n        }\n      });\n      app_core_store__WEBPACK_IMPORTED_MODULE_2__[\"default\"].set(_LogContextProvider__WEBPACK_IMPORTED_MODULE_4__.LOKI_LOG_CONTEXT_PRESERVED_LABELS, JSON.stringify(preservedLabels));\n      setLoading(false);\n    }, 1500);\n    return () => {\n      clearTimeout(timerHandle.current);\n    };\n  }, [contextFilters, initialized]);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    return () => {\n      clearTimeout(timerHandle.current);\n      onClose();\n    };\n  }, [onClose]);\n  (0,react_use__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(async () => {\n    setLoading(true);\n    const initContextFilters = await logContextProvider.getInitContextFilters(row.labels, origQuery);\n    setContextFilters(initContextFilters);\n    setInitialized(true);\n    setLoading(false);\n  });\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    (0,_grafana_runtime__WEBPACK_IMPORTED_MODULE_10__.reportInteraction)(\"grafana_explore_logs_loki_log_context_loaded\", {\n      logRowUid: row.uid,\n      type: \"load\"\n    });\n    return () => {\n      (0,_grafana_runtime__WEBPACK_IMPORTED_MODULE_10__.reportInteraction)(\"grafana_explore_logs_loki_log_context_loaded\", {\n        logRowUid: row.uid,\n        type: \"unload\"\n      });\n    };\n  }, [row.uid]);\n  const realLabels = contextFilters.filter(({ fromParser }) => !fromParser);\n  const realLabelsEnabled = realLabels.filter(({ enabled }) => enabled);\n  const parsedLabels = contextFilters.filter(({ fromParser }) => fromParser);\n  const parsedLabelsEnabled = parsedLabels.filter(({ enabled }) => enabled);\n  const contextFilterToSelectFilter = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((contextFilter) => {\n    return {\n      label: `${contextFilter.label}=\"${(0,_languageUtils__WEBPACK_IMPORTED_MODULE_5__.escapeLabelValueInSelector)(contextFilter.value)}\"`,\n      value: contextFilter.label\n    };\n  }, []);\n  const showParsedLabels = origQuery && (0,_queryUtils__WEBPACK_IMPORTED_MODULE_6__.isQueryWithParser)(origQuery.expr).parserCount === 1 && parsedLabels.length > 0;\n  let queryExpr = logContextProvider.prepareExpression(\n    contextFilters.filter(({ enabled }) => enabled),\n    origQuery\n  );\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: styles.wrapper }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_11__.Tooltip, { content: \"Revert to initial log context query.\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: styles.iconButton }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n    _grafana_ui__WEBPACK_IMPORTED_MODULE_12__.Button,\n    {\n      \"data-testid\": \"revert-button\",\n      icon: \"history-alt\",\n      variant: \"secondary\",\n      disabled: isInitialState,\n      onClick: (e) => {\n        (0,_grafana_runtime__WEBPACK_IMPORTED_MODULE_10__.reportInteraction)(\"grafana_explore_logs_loki_log_context_reverted\", {\n          logRowUid: row.uid\n        });\n        setContextFilters((contextFilters2) => {\n          return contextFilters2.map((contextFilter) => ({\n            ...contextFilter,\n            // For revert to initial query we need to enable all labels and disable all parsed labels\n            enabled: !contextFilter.fromParser\n          }));\n        });\n        app_core_store__WEBPACK_IMPORTED_MODULE_2__[\"default\"].delete(_LogContextProvider__WEBPACK_IMPORTED_MODULE_4__.LOKI_LOG_CONTEXT_PRESERVED_LABELS);\n        app_core_store__WEBPACK_IMPORTED_MODULE_2__[\"default\"].delete(_LogContextProvider__WEBPACK_IMPORTED_MODULE_4__.SHOULD_INCLUDE_PIPELINE_OPERATIONS);\n        setIncludePipelineOperations(false);\n      }\n    }\n  ))), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n    _grafana_ui__WEBPACK_IMPORTED_MODULE_13__.Collapse,\n    {\n      collapsible: true,\n      isOpen,\n      onToggle: () => {\n        app_core_store__WEBPACK_IMPORTED_MODULE_2__[\"default\"].set(IS_LOKI_LOG_CONTEXT_UI_OPEN, !isOpen);\n        setIsOpen((isOpen2) => !isOpen2);\n        (0,_grafana_runtime__WEBPACK_IMPORTED_MODULE_10__.reportInteraction)(\"grafana_explore_logs_loki_log_context_toggled\", {\n          logRowUid: row.uid,\n          action: !isOpen ? \"open\" : \"close\"\n        });\n      },\n      label: /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: styles.rawQueryContainer }, initialized ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement((react__WEBPACK_IMPORTED_MODULE_1___default().Fragment), null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_prometheus_querybuilder_shared_RawQuery__WEBPACK_IMPORTED_MODULE_3__.RawQuery, { lang: { grammar: _syntax__WEBPACK_IMPORTED_MODULE_7__.lokiGrammar, name: \"loki\" }, query: queryExpr, className: styles.rawQuery }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_11__.Tooltip, { content: \"The initial log context query is created from all labels defining the stream for the selected log line. Use the editor below to customize the log context query.\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_14__.Icon, { name: \"info-circle\", size: \"sm\", className: styles.queryDescription }))) : /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_15__.Spinner, null))\n    },\n    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: styles.ui }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n      _grafana_ui__WEBPACK_IMPORTED_MODULE_16__.Label,\n      {\n        className: styles.label,\n        description: \"The initial log context query is created from all labels defining the stream for the selected log line. You can broaden your search by removing one or more of the label filters.\"\n      },\n      \"Widen the search\"\n    ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n      _grafana_ui__WEBPACK_IMPORTED_MODULE_17__.MultiSelect,\n      {\n        isLoading: loading,\n        options: realLabels.map(contextFilterToSelectFilter),\n        value: realLabelsEnabled.map(contextFilterToSelectFilter),\n        closeMenuOnSelect: true,\n        maxMenuHeight: 200,\n        noOptionsMessage: \"No further labels available\",\n        onChange: (keys, actionMeta) => {\n          if (actionMeta.action === \"select-option\") {\n            (0,_grafana_runtime__WEBPACK_IMPORTED_MODULE_10__.reportInteraction)(\"grafana_explore_logs_loki_log_context_filtered\", {\n              logRowUid: row.uid,\n              type: \"label\",\n              action: \"select\"\n            });\n          }\n          if (actionMeta.action === \"remove-value\") {\n            (0,_grafana_runtime__WEBPACK_IMPORTED_MODULE_10__.reportInteraction)(\"grafana_explore_logs_loki_log_context_filtered\", {\n              logRowUid: row.uid,\n              type: \"label\",\n              action: \"remove\"\n            });\n          }\n          return setContextFilters(\n            contextFilters.map((filter) => {\n              if (filter.fromParser) {\n                return filter;\n              }\n              filter.enabled = keys.some((key) => key.value === filter.label);\n              return filter;\n            })\n          );\n        }\n      }\n    ), showParsedLabels && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement((react__WEBPACK_IMPORTED_MODULE_1___default().Fragment), null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n      _grafana_ui__WEBPACK_IMPORTED_MODULE_16__.Label,\n      {\n        className: styles.label,\n        description: `By using a parser in your original query, you can use filters for extracted labels. Refine your search by applying extracted labels created from the selected log line.`\n      },\n      \"Refine the search\"\n    ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n      _grafana_ui__WEBPACK_IMPORTED_MODULE_17__.MultiSelect,\n      {\n        isLoading: loading,\n        options: parsedLabels.map(contextFilterToSelectFilter),\n        value: parsedLabelsEnabled.map(contextFilterToSelectFilter),\n        closeMenuOnSelect: true,\n        maxMenuHeight: 200,\n        noOptionsMessage: \"No further labels available\",\n        isClearable: true,\n        onChange: (keys, actionMeta) => {\n          if (actionMeta.action === \"select-option\") {\n            (0,_grafana_runtime__WEBPACK_IMPORTED_MODULE_10__.reportInteraction)(\"grafana_explore_logs_loki_log_context_filtered\", {\n              logRowUid: row.uid,\n              type: \"parsed_label\",\n              action: \"select\"\n            });\n          }\n          if (actionMeta.action === \"remove-value\") {\n            (0,_grafana_runtime__WEBPACK_IMPORTED_MODULE_10__.reportInteraction)(\"grafana_explore_logs_loki_log_context_filtered\", {\n              logRowUid: row.uid,\n              type: \"parsed_label\",\n              action: \"remove\"\n            });\n          }\n          setContextFilters(\n            contextFilters.map((filter) => {\n              if (!filter.fromParser) {\n                return filter;\n              }\n              filter.enabled = keys.some((key) => key.value === filter.label);\n              return filter;\n            })\n          );\n        }\n      }\n    )), logContextProvider.queryContainsValidPipelineStages(origQuery) && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_18__.InlineFieldRow, { className: styles.operationsToggle }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n      _grafana_ui__WEBPACK_IMPORTED_MODULE_19__.InlineField,\n      {\n        label: \"Include LogQL pipeline operations\",\n        tooltip: /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n          _grafana_ui__WEBPACK_IMPORTED_MODULE_20__.RenderUserContentAsHTML,\n          {\n            content: (0,_grafana_data__WEBPACK_IMPORTED_MODULE_21__.renderMarkdown)(\n              \"This will include LogQL operations such as `line_format` or `label_format`. It won't include line or label filter operations.\"\n            )\n          }\n        )\n      },\n      /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n        _grafana_ui__WEBPACK_IMPORTED_MODULE_22__.InlineSwitch,\n        {\n          value: includePipelineOperations,\n          showLabel: true,\n          transparent: true,\n          onChange: (e) => {\n            (0,_grafana_runtime__WEBPACK_IMPORTED_MODULE_10__.reportInteraction)(\"grafana_explore_logs_loki_log_context_pipeline_toggled\", {\n              logRowUid: row.uid,\n              action: e.currentTarget.checked ? \"enable\" : \"disable\"\n            });\n            app_core_store__WEBPACK_IMPORTED_MODULE_2__[\"default\"].set(_LogContextProvider__WEBPACK_IMPORTED_MODULE_4__.SHOULD_INCLUDE_PIPELINE_OPERATIONS, e.currentTarget.checked);\n            setIncludePipelineOperations(e.currentTarget.checked);\n            if (runContextQuery) {\n              runContextQuery();\n            }\n          }\n        }\n      )\n    )))\n  ));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/components/LokiContextUi.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/components/LokiLabelBrowser.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LokiLabelBrowser: () => (/* binding */ LokiLabelBrowser),\n/* harmony export */   UnthemedLokiLabelBrowser: () => (/* binding */ UnthemedLokiLabelBrowser),\n/* harmony export */   buildSelector: () => (/* binding */ buildSelector),\n/* harmony export */   facetLabels: () => (/* binding */ facetLabels)\n/* harmony export */ });\n/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/@emotion-css-npm-11.11.2-dbfa42cf83-1edea109df.zip/node_modules/@emotion/css/dist/emotion-css.esm.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/cache/lodash-npm-4.17.21-6382451519-eb835a2e51.zip/node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react_window__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(\"./.yarn/__virtual__/react-window-virtual-54bb5b53bf/0/cache/react-window-npm-1.8.8-1f85a45c48-a19f43b901.zip/node_modules/react-window/dist/index.esm.js\");\n/* harmony import */ var _grafana_runtime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-runtime-virtual-68c57d4c0c/1/packages/grafana-runtime/src/analytics/utils.ts\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/LoadingPlaceholder/LoadingPlaceholder.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/utils/fuzzy.ts\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Forms/Label.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/BrowserLabel/Label.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Input/Input.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Layout/Layout.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Button/Button.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/themes/ThemeContext.tsx\");\n/* harmony import */ var _languageUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./public/app/plugins/datasource/loki/languageUtils.ts\");\n\n\n\n\n\n\n\n\nconst MAX_LABEL_COUNT = 1e3;\nconst MAX_VALUE_COUNT = 1e4;\nconst MAX_AUTO_SELECT = 4;\nconst EMPTY_SELECTOR = \"{}\";\nfunction buildSelector(labels) {\n  const selectedLabels = [];\n  for (const label of labels) {\n    if (label.selected && label.values && label.values.length > 0) {\n      const selectedValues = label.values.filter((value) => value.selected).map((value) => value.name);\n      if (selectedValues.length > 1) {\n        selectedLabels.push(`${label.name}=~\"${selectedValues.map(_languageUtils__WEBPACK_IMPORTED_MODULE_3__.escapeLabelValueInRegexSelector).join(\"|\")}\"`);\n      } else if (selectedValues.length === 1) {\n        selectedLabels.push(`${label.name}=\"${(0,_languageUtils__WEBPACK_IMPORTED_MODULE_3__.escapeLabelValueInExactSelector)(selectedValues[0])}\"`);\n      }\n    }\n  }\n  return [\"{\", selectedLabels.join(\",\"), \"}\"].join(\"\");\n}\nfunction facetLabels(labels, possibleLabels, lastFacetted) {\n  return labels.map((label) => {\n    const possibleValues = possibleLabels[label.name];\n    if (possibleValues) {\n      let existingValues;\n      if (label.name === lastFacetted && label.values) {\n        existingValues = label.values;\n      } else {\n        const selectedValues = new Set(\n          label.values?.filter((value) => value.selected).map((value) => value.name) || []\n        );\n        existingValues = possibleValues.map((value) => ({ name: value, selected: selectedValues.has(value) }));\n      }\n      return { ...label, loading: false, values: existingValues, facets: existingValues.length };\n    }\n    return { ...label, loading: false, hidden: !possibleValues, values: void 0, facets: 0 };\n  });\n}\nconst getStyles = (theme) => ({\n  wrapper: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n    background-color: ${theme.colors.background.secondary};\n    padding: ${theme.spacing(2)};\n    width: 100%;\n  `,\n  list: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n    margin-top: ${theme.spacing(1)};\n    display: flex;\n    flex-wrap: wrap;\n    max-height: 200px;\n    overflow: auto;\n  `,\n  section: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n    & + & {\n      margin: ${theme.spacing(2, 0)};\n    }\n    position: relative;\n  `,\n  selector: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n    font-family: ${theme.typography.fontFamilyMonospace};\n    margin-bottom: ${theme.spacing(1)};\n  `,\n  status: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n    margin-bottom: ${theme.spacing(1)};\n    color: ${theme.colors.text.secondary};\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    transition: opacity 100ms linear;\n    opacity: 0;\n  `,\n  statusShowing: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n    opacity: 1;\n  `,\n  error: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n    color: ${theme.colors.error.main};\n  `,\n  valueList: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n    margin-right: ${theme.spacing(1)};\n    resize: horizontal;\n  `,\n  valueListWrapper: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n    border-left: 1px solid ${theme.colors.border.medium};\n    margin: ${theme.spacing(1, 0)};\n    padding: ${theme.spacing(1, 0, 1, 1)};\n  `,\n  valueListArea: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n    display: flex;\n    flex-wrap: wrap;\n    margin-top: ${theme.spacing(1)};\n  `,\n  valueTitle: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n    margin-left: -${theme.spacing(0.5)};\n    margin-bottom: ${theme.spacing(1)};\n  `,\n  validationStatus: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n    padding: ${theme.spacing(0.5)};\n    margin-bottom: ${theme.spacing(1)};\n    color: ${theme.colors.text.maxContrast};\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  `\n});\nclass UnthemedLokiLabelBrowser extends (react__WEBPACK_IMPORTED_MODULE_2___default().Component) {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      labels: [],\n      searchTerm: \"\",\n      status: \"Ready\",\n      error: \"\",\n      validationStatus: \"\"\n    };\n    this.onChangeSearch = (event) => {\n      this.setState({ searchTerm: event.target.value });\n    };\n    this.onClickRunLogsQuery = () => {\n      (0,_grafana_runtime__WEBPACK_IMPORTED_MODULE_4__.reportInteraction)(\"grafana_loki_label_browser_closed\", {\n        app: this.props.app,\n        closeType: \"showLogsButton\"\n      });\n      const selector = buildSelector(this.state.labels);\n      this.props.onChange(selector);\n    };\n    this.onClickRunMetricsQuery = () => {\n      (0,_grafana_runtime__WEBPACK_IMPORTED_MODULE_4__.reportInteraction)(\"grafana_loki_label_browser_closed\", {\n        app: this.props.app,\n        closeType: \"showLogsRateButton\"\n      });\n      const selector = buildSelector(this.state.labels);\n      const query = `rate(${selector}[$__interval])`;\n      this.props.onChange(query);\n    };\n    this.onClickClear = () => {\n      this.setState((state) => {\n        const labels = state.labels.map((label) => ({\n          ...label,\n          values: void 0,\n          selected: false,\n          loading: false,\n          hidden: false,\n          facets: void 0\n        }));\n        return { labels, searchTerm: \"\", status: \"\", error: \"\", validationStatus: \"\" };\n      });\n      this.props.deleteLastUsedLabels();\n    };\n    this.onClickLabel = (name, value, event) => {\n      const label = this.state.labels.find((l) => l.name === name);\n      if (!label) {\n        return;\n      }\n      const selected = !label.selected;\n      let nextValue = { selected };\n      if (label.values && !selected) {\n        const values = label.values.map((value2) => ({ ...value2, selected: false }));\n        nextValue = { ...nextValue, facets: 0, values };\n      }\n      this.setState({ searchTerm: \"\" });\n      this.updateLabelState(name, nextValue, \"\", () => this.doFacettingForLabel(name));\n    };\n    this.onClickValue = (name, value, event) => {\n      const label = this.state.labels.find((l) => l.name === name);\n      if (!label || !label.values) {\n        return;\n      }\n      this.setState({ searchTerm: \"\" });\n      const values = label.values.map((v) => ({ ...v, selected: v.name === value ? !v.selected : v.selected }));\n      this.updateLabelState(name, { values }, \"\", () => this.doFacetting(name));\n    };\n    this.onClickValidate = () => {\n      const selector = buildSelector(this.state.labels);\n      this.validateSelector(selector);\n    };\n    this.doFacetting = (lastFacetted) => {\n      const selector = buildSelector(this.state.labels);\n      if (selector === EMPTY_SELECTOR) {\n        const labels = this.state.labels.map((label) => {\n          return { ...label, facets: 0, values: void 0, hidden: false };\n        });\n        this.setState({ labels }, () => {\n          this.state.labels.forEach((label) => label.selected && this.fetchValues(label.name, selector));\n        });\n      } else {\n        this.fetchSeries(selector, lastFacetted);\n      }\n    };\n  }\n  updateLabelState(name, updatedFields, status = \"\", cb) {\n    this.setState((state) => {\n      const labels = state.labels.map((label) => {\n        if (label.name === name) {\n          return { ...label, ...updatedFields };\n        }\n        return label;\n      });\n      const error = status ? \"\" : state.error;\n      return { labels, status, error, validationStatus: \"\" };\n    }, cb);\n  }\n  componentDidMount() {\n    const { languageProvider, autoSelect = MAX_AUTO_SELECT, lastUsedLabels } = this.props;\n    if (languageProvider) {\n      const selectedLabels = lastUsedLabels;\n      languageProvider.start().then(() => {\n        let rawLabels = languageProvider.getLabelKeys();\n        if (rawLabels.length > MAX_LABEL_COUNT) {\n          const error = `Too many labels found (showing only ${MAX_LABEL_COUNT} of ${rawLabels.length})`;\n          rawLabels = rawLabels.slice(0, MAX_LABEL_COUNT);\n          this.setState({ error });\n        }\n        const labels = rawLabels.map((label, i, arr) => ({\n          name: label,\n          selected: arr.length <= autoSelect && selectedLabels.length === 0 || selectedLabels.includes(label),\n          loading: false\n        }));\n        this.setState({ labels }, () => {\n          this.state.labels.forEach((label) => {\n            if (label.selected) {\n              this.fetchValues(label.name, EMPTY_SELECTOR);\n            }\n          });\n        });\n      });\n    }\n  }\n  doFacettingForLabel(name) {\n    const label = this.state.labels.find((l) => l.name === name);\n    if (!label) {\n      return;\n    }\n    const selectedLabels = this.state.labels.filter((label2) => label2.selected).map((label2) => label2.name);\n    this.props.storeLastUsedLabels(selectedLabels);\n    if (label.selected) {\n      if (!label.values) {\n        this.fetchValues(name, buildSelector(this.state.labels));\n      }\n    } else {\n      this.doFacetting();\n    }\n  }\n  async fetchValues(name, selector) {\n    const { languageProvider } = this.props;\n    this.updateLabelState(name, { loading: true }, `Fetching values for ${name}`);\n    try {\n      let rawValues = await languageProvider.getLabelValues(name);\n      if (selector !== buildSelector(this.state.labels)) {\n        this.updateLabelState(name, { loading: false }, \"\");\n        return;\n      }\n      if (rawValues.length > MAX_VALUE_COUNT) {\n        const error = `Too many values for ${name} (showing only ${MAX_VALUE_COUNT} of ${rawValues.length})`;\n        rawValues = rawValues.slice(0, MAX_VALUE_COUNT);\n        this.setState({ error });\n      }\n      const values = rawValues.map((value) => ({ name: value }));\n      this.updateLabelState(name, { values, loading: false });\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  async fetchSeries(selector, lastFacetted) {\n    const { languageProvider } = this.props;\n    if (lastFacetted) {\n      this.updateLabelState(lastFacetted, { loading: true }, `Loading labels for ${selector}`);\n    }\n    try {\n      const possibleLabels = await languageProvider.fetchSeriesLabels(selector, true);\n      if (selector !== buildSelector(this.state.labels)) {\n        if (lastFacetted) {\n          this.updateLabelState(lastFacetted, { loading: false });\n        }\n        return;\n      }\n      if (Object.keys(possibleLabels).length === 0) {\n        this.setState({ error: `Empty results, no matching label for ${selector}` });\n        return;\n      }\n      const labels = facetLabels(this.state.labels, possibleLabels, lastFacetted);\n      this.setState({ labels, error: \"\" });\n      if (lastFacetted) {\n        this.updateLabelState(lastFacetted, { loading: false });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  async validateSelector(selector) {\n    const { languageProvider } = this.props;\n    this.setState({ validationStatus: `Validating selector ${selector}`, error: \"\" });\n    const streams = await languageProvider.fetchSeries(selector);\n    this.setState({ validationStatus: `Selector is valid (${streams.length} streams found)` });\n  }\n  render() {\n    const { theme } = this.props;\n    const { labels, searchTerm, status, error, validationStatus } = this.state;\n    if (labels.length === 0) {\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_5__.LoadingPlaceholder, { text: \"Loading labels...\" });\n    }\n    const styles = getStyles(theme);\n    const selector = buildSelector(this.state.labels);\n    const empty = selector === EMPTY_SELECTOR;\n    let selectedLabels = labels.filter((label) => label.selected && label.values);\n    if (searchTerm) {\n      selectedLabels = selectedLabels.map((label) => {\n        const searchResults = label.values.filter((value) => {\n          if (value.selected) {\n            value.highlightParts = void 0;\n            return true;\n          }\n          const fuzzyMatchResult = (0,_grafana_ui__WEBPACK_IMPORTED_MODULE_6__.fuzzyMatch)(value.name.toLowerCase(), searchTerm.toLowerCase());\n          if (fuzzyMatchResult.found) {\n            value.highlightParts = fuzzyMatchResult.ranges;\n            value.order = fuzzyMatchResult.distance;\n            return true;\n          } else {\n            return false;\n          }\n        });\n        return {\n          ...label,\n          values: (0,lodash__WEBPACK_IMPORTED_MODULE_1__.sortBy)(searchResults, (value) => value.selected ? -Infinity : value.order)\n        };\n      });\n    } else {\n      selectedLabels = this.state.labels.filter((label) => label.selected && label.values).map((label) => ({\n        ...label,\n        values: label?.values ? label.values.map((value) => ({ ...value, highlightParts: void 0 })) : []\n      }));\n    }\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", { className: styles.wrapper }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", { className: styles.section }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_7__.Label, { description: \"Which labels would you like to consider for your search?\" }, \"1. Select labels to search in\"), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", { className: styles.list }, labels.map((label) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\n      _grafana_ui__WEBPACK_IMPORTED_MODULE_8__.Label,\n      {\n        key: label.name,\n        name: label.name,\n        loading: label.loading,\n        active: label.selected,\n        hidden: label.hidden,\n        facets: label.facets,\n        onClick: this.onClickLabel\n      }\n    )))), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", { className: styles.section }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_7__.Label, { description: \"Choose the label values that you would like to use for the query. Use the search field to find values across selected labels.\" }, \"2. Find values for the selected labels\"), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\n      _grafana_ui__WEBPACK_IMPORTED_MODULE_9__.Input,\n      {\n        onChange: this.onChangeSearch,\n        \"aria-label\": \"Filter expression for values\",\n        value: searchTerm,\n        placeholder: \"Enter a label value\"\n      }\n    )), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", { className: styles.valueListArea }, selectedLabels.map((label) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", { role: \"list\", key: label.name, className: styles.valueListWrapper }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", { className: styles.valueTitle, \"aria-label\": `Values for ${label.name}` }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\n      _grafana_ui__WEBPACK_IMPORTED_MODULE_8__.Label,\n      {\n        name: label.name,\n        loading: label.loading,\n        active: label.selected,\n        hidden: label.hidden,\n        facets: label.facets || label.values?.length,\n        onClick: this.onClickLabel\n      }\n    )), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\n      react_window__WEBPACK_IMPORTED_MODULE_10__.FixedSizeList,\n      {\n        height: 200,\n        itemCount: label.values?.length || 0,\n        itemSize: 28,\n        itemKey: (i) => label.values[i].name,\n        width: 200,\n        className: styles.valueList\n      },\n      ({ index, style }) => {\n        const value = label.values?.[index];\n        if (!value) {\n          return null;\n        }\n        return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", { style }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\n          _grafana_ui__WEBPACK_IMPORTED_MODULE_8__.Label,\n          {\n            name: label.name,\n            value: value?.name,\n            active: value?.selected,\n            highlightParts: value?.highlightParts,\n            onClick: this.onClickValue,\n            searchTerm\n          }\n        ));\n      }\n    ))))), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", { className: styles.section }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_7__.Label, null, \"3. Resulting selector\"), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", { \"aria-label\": \"selector\", className: styles.selector }, selector), validationStatus && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", { className: styles.validationStatus }, validationStatus), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", { className: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.cx)(styles.status, (status || error) && styles.statusShowing) }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"span\", { className: error ? styles.error : \"\" }, error || status)), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_11__.HorizontalGroup, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_12__.Button, { \"aria-label\": \"Use selector as logs button\", disabled: empty, onClick: this.onClickRunLogsQuery }, \"Show logs\"), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\n      _grafana_ui__WEBPACK_IMPORTED_MODULE_12__.Button,\n      {\n        \"aria-label\": \"Use selector as metrics button\",\n        variant: \"secondary\",\n        disabled: empty,\n        onClick: this.onClickRunMetricsQuery\n      },\n      \"Show logs rate\"\n    ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\n      _grafana_ui__WEBPACK_IMPORTED_MODULE_12__.Button,\n      {\n        \"aria-label\": \"Validate submit button\",\n        variant: \"secondary\",\n        disabled: empty,\n        onClick: this.onClickValidate\n      },\n      \"Validate selector\"\n    ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_12__.Button, { \"aria-label\": \"Selector clear button\", variant: \"secondary\", onClick: this.onClickClear }, \"Clear\"))));\n  }\n}\nconst LokiLabelBrowser = (0,_grafana_ui__WEBPACK_IMPORTED_MODULE_13__.withTheme2)(UnthemedLokiLabelBrowser);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/components/LokiLabelBrowser.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/components/LokiOptionFields.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_RESOLUTION: () => (/* binding */ DEFAULT_RESOLUTION),\n/* harmony export */   LokiOptionFields: () => (/* binding */ LokiOptionFields),\n/* harmony export */   RESOLUTION_OPTIONS: () => (/* binding */ RESOLUTION_OPTIONS),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   preprocessMaxLines: () => (/* binding */ preprocessMaxLines),\n/* harmony export */   queryTypeOptions: () => (/* binding */ queryTypeOptions)\n/* harmony export */ });\n/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/@emotion-css-npm-11.11.2-dbfa42cf83-1edea109df.zip/node_modules/@emotion/css/dist/emotion-css.esm.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/cache/lodash-npm-4.17.21-6382451519-eb835a2e51.zip/node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _grafana_runtime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-runtime-virtual-68c57d4c0c/1/packages/grafana-runtime/src/config.ts\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/FormLabel/FormLabel.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Forms/RadioButtonGroup/RadioButtonGroup.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Forms/InlineField.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Input/Input.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Select/Select.tsx\");\n/* harmony import */ var _queryUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./public/app/plugins/datasource/loki/queryUtils.ts\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./public/app/plugins/datasource/loki/types.ts\");\n\n\n\n\n\n\n\n\nconst queryTypeOptions = [\n  { value: _types__WEBPACK_IMPORTED_MODULE_4__.LokiQueryType.Range, label: \"Range\", description: \"Run query over a range of time.\" },\n  {\n    value: _types__WEBPACK_IMPORTED_MODULE_4__.LokiQueryType.Instant,\n    label: \"Instant\",\n    description: 'Run query against a single point in time. For this query, the \"To\" time is used.'\n  }\n];\nif (_grafana_runtime__WEBPACK_IMPORTED_MODULE_5__.config.featureToggles.lokiExperimentalStreaming) {\n  queryTypeOptions.push({\n    value: _types__WEBPACK_IMPORTED_MODULE_4__.LokiQueryType.Stream,\n    label: \"Stream\",\n    description: \"Run a query and keep sending results on an interval\"\n  });\n}\nconst DEFAULT_RESOLUTION = {\n  value: 1,\n  label: \"1/1\"\n};\nconst RESOLUTION_OPTIONS = [DEFAULT_RESOLUTION].concat(\n  (0,lodash__WEBPACK_IMPORTED_MODULE_1__.map)([2, 3, 4, 5, 10], (value) => ({\n    value,\n    label: \"1/\" + value\n  }))\n);\nfunction LokiOptionFields(props) {\n  const { lineLimitValue, resolution, onRunQuery, runOnBlur, onChange } = props;\n  const query = props.query ?? {};\n  const queryType = (0,_queryUtils__WEBPACK_IMPORTED_MODULE_3__.getLokiQueryType)(query);\n  function onChangeQueryLimit(value) {\n    const nextQuery = { ...query, maxLines: preprocessMaxLines(value) };\n    onChange(nextQuery);\n  }\n  function onQueryTypeChange(queryType2) {\n    const { instant, range, ...rest } = query;\n    onChange({ ...rest, queryType: queryType2 });\n  }\n  function onMaxLinesChange(e) {\n    if (query.maxLines !== preprocessMaxLines(e.currentTarget.value)) {\n      onChangeQueryLimit(e.currentTarget.value);\n    }\n  }\n  function onReturnKeyDown(e) {\n    if (e.key === \"Enter\") {\n      onRunQuery();\n    }\n  }\n  function onResolutionChange(option) {\n    const nextQuery = { ...query, resolution: option.value };\n    onChange(nextQuery);\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", { \"aria-label\": \"Loki extra field\", className: \"gf-form-inline\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\n    \"div\",\n    {\n      \"data-testid\": \"queryTypeField\",\n      className: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.cx)(\n        \"gf-form explore-input-margin\",\n        (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n            flex-wrap: nowrap;\n          `\n      ),\n      \"aria-label\": \"Query type field\"\n    },\n    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_6__.InlineFormLabel, { width: \"auto\" }, \"Query type\"),\n    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\n      _grafana_ui__WEBPACK_IMPORTED_MODULE_7__.RadioButtonGroup,\n      {\n        options: queryTypeOptions,\n        value: queryType,\n        onChange: (type) => {\n          onQueryTypeChange(type);\n          if (runOnBlur) {\n            onRunQuery();\n          }\n        }\n      }\n    )\n  ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\n    \"div\",\n    {\n      \"data-testid\": \"lineLimitField\",\n      className: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.cx)(\n        \"gf-form\",\n        (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n            flex-wrap: nowrap;\n          `\n      ),\n      \"aria-label\": \"Line limit field\"\n    },\n    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_8__.InlineField, { label: \"Line limit\", tooltip: \"Upper limit for number of log lines returned by query.\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\n      _grafana_ui__WEBPACK_IMPORTED_MODULE_9__.Input,\n      {\n        className: \"width-4\",\n        placeholder: \"auto\",\n        type: \"number\",\n        min: 0,\n        onChange: onMaxLinesChange,\n        onKeyDown: onReturnKeyDown,\n        value: lineLimitValue,\n        onBlur: () => {\n          if (runOnBlur) {\n            onRunQuery();\n          }\n        }\n      }\n    )),\n    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\n      _grafana_ui__WEBPACK_IMPORTED_MODULE_8__.InlineField,\n      {\n        label: \"Resolution\",\n        tooltip: \"Resolution 1/1 sets step parameter of Loki metrics range queries such that each pixel corresponds to one data point. For better performance, lower resolutions can be picked. 1/2 only retrieves a data point for every other pixel, and 1/10 retrieves one data point per 10 pixels.\"\n      },\n      /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\n        _grafana_ui__WEBPACK_IMPORTED_MODULE_10__.Select,\n        {\n          isSearchable: false,\n          onChange: onResolutionChange,\n          options: RESOLUTION_OPTIONS,\n          value: resolution,\n          \"aria-label\": \"Select resolution\"\n        }\n      )\n    )\n  ));\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,react__WEBPACK_IMPORTED_MODULE_2__.memo)(LokiOptionFields));\nfunction preprocessMaxLines(value) {\n  const maxLines = parseInt(value, 10);\n  if (isNaN(maxLines) || maxLines < 0) {\n    return void 0;\n  }\n  return maxLines;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/components/LokiOptionFields.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/components/LokiQueryEditor.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LokiQueryEditor: () => (/* binding */ LokiQueryEditor),\n/* harmony export */   testIds: () => (/* binding */ testIds)\n/* harmony export */ });\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/lodash-npm-4.17.21-6382451519-eb835a2e51.zip/node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_use__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(\"./.yarn/__virtual__/react-use-virtual-dd7926f458/0/cache/react-use-npm-17.4.0-0ef4521544-0889da919b.zip/node_modules/react-use/esm/usePrevious.js\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/types/app.ts\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/types/data.ts\");\n/* harmony import */ var _grafana_e2e_selectors__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(\"./packages/grafana-e2e-selectors/src/selectors/index.ts\");\n/* harmony import */ var _grafana_experimental__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-experimental-virtual-ba767552fe/0/cache/@grafana-experimental-npm-1.6.1-f052d2ae51-64c32bc9e3.zip/node_modules/@grafana/experimental/dist/esm/QueryEditor/EditorHeader.js\");\n/* harmony import */ var _grafana_experimental__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-experimental-virtual-ba767552fe/0/cache/@grafana-experimental-npm-1.6.1-f052d2ae51-64c32bc9e3.zip/node_modules/@grafana/experimental/dist/esm/QueryEditor/Stack.js\");\n/* harmony import */ var _grafana_experimental__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-experimental-virtual-ba767552fe/0/cache/@grafana-experimental-npm-1.6.1-f052d2ae51-64c32bc9e3.zip/node_modules/@grafana/experimental/dist/esm/QueryEditor/FlexItem.js\");\n/* harmony import */ var _grafana_experimental__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-experimental-virtual-ba767552fe/0/cache/@grafana-experimental-npm-1.6.1-f052d2ae51-64c32bc9e3.zip/node_modules/@grafana/experimental/dist/esm/QueryEditor/Space.js\");\n/* harmony import */ var _grafana_experimental__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-experimental-virtual-ba767552fe/0/cache/@grafana-experimental-npm-1.6.1-f052d2ae51-64c32bc9e3.zip/node_modules/@grafana/experimental/dist/esm/QueryEditor/EditorRows.js\");\n/* harmony import */ var _grafana_runtime__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-runtime-virtual-68c57d4c0c/1/packages/grafana-runtime/src/config.ts\");\n/* harmony import */ var _grafana_runtime__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-runtime-virtual-68c57d4c0c/1/packages/grafana-runtime/src/analytics/utils.ts\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/ConfirmModal/ConfirmModal.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Button/Button.tsx\");\n/* harmony import */ var app_plugins_datasource_prometheus_querybuilder_shared_QueryEditorModeToggle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/plugins/datasource/prometheus/querybuilder/shared/QueryEditorModeToggle.tsx\");\n/* harmony import */ var app_plugins_datasource_prometheus_querybuilder_shared_QueryHeaderSwitch__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./public/app/plugins/datasource/prometheus/querybuilder/shared/QueryHeaderSwitch.tsx\");\n/* harmony import */ var app_plugins_datasource_prometheus_querybuilder_shared_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./public/app/plugins/datasource/prometheus/querybuilder/shared/types.ts\");\n/* harmony import */ var _prometheus_querybuilder_shared_hooks_useFlag__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./public/app/plugins/datasource/prometheus/querybuilder/shared/hooks/useFlag.ts\");\n/* harmony import */ var _querybuilder_components_LabelBrowserModal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./public/app/plugins/datasource/loki/querybuilder/components/LabelBrowserModal.tsx\");\n/* harmony import */ var _querybuilder_components_LokiQueryBuilderContainer__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\"./public/app/plugins/datasource/loki/querybuilder/components/LokiQueryBuilderContainer.tsx\");\n/* harmony import */ var _querybuilder_components_LokiQueryBuilderOptions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(\"./public/app/plugins/datasource/loki/querybuilder/components/LokiQueryBuilderOptions.tsx\");\n/* harmony import */ var _querybuilder_components_LokiQueryCodeEditor__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(\"./public/app/plugins/datasource/loki/querybuilder/components/LokiQueryCodeEditor.tsx\");\n/* harmony import */ var _querybuilder_components_QueryPatternsModal__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(\"./public/app/plugins/datasource/loki/querybuilder/components/QueryPatternsModal.tsx\");\n/* harmony import */ var _querybuilder_parsing__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(\"./public/app/plugins/datasource/loki/querybuilder/parsing.ts\");\n/* harmony import */ var _querybuilder_state__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(\"./public/app/plugins/datasource/loki/querybuilder/state.ts\");\n/* harmony import */ var _stats__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(\"./public/app/plugins/datasource/loki/components/stats.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst testIds = {\n  editor: \"loki-editor\"\n};\nconst LokiQueryEditor = react__WEBPACK_IMPORTED_MODULE_1___default().memo((props) => {\n  const { onChange, onRunQuery, onAddQuery, data, app, queries, datasource } = props;\n  const [parseModalOpen, setParseModalOpen] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n  const [queryPatternsModalOpen, setQueryPatternsModalOpen] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n  const [dataIsStale, setDataIsStale] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n  const [labelBrowserVisible, setLabelBrowserVisible] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n  const [queryStats, setQueryStats] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n  const { flag: explain, setFlag: setExplain } = (0,_prometheus_querybuilder_shared_hooks_useFlag__WEBPACK_IMPORTED_MODULE_5__.useFlag)(_prometheus_querybuilder_shared_hooks_useFlag__WEBPACK_IMPORTED_MODULE_5__.lokiQueryEditorExplainKey);\n  const timerange = datasource.getTimeRange();\n  const predefinedOperations = datasource.predefinedOperations;\n  const previousTimerange = (0,react_use__WEBPACK_IMPORTED_MODULE_14__[\"default\"])(timerange);\n  const query = (0,_querybuilder_state__WEBPACK_IMPORTED_MODULE_12__.getQueryWithDefaults)(props.query);\n  if (_grafana_runtime__WEBPACK_IMPORTED_MODULE_15__.config.featureToggles.lokiPredefinedOperations && !query.expr && predefinedOperations) {\n    query.expr = `{} ${predefinedOperations}`;\n  }\n  const previousQuery = (0,react_use__WEBPACK_IMPORTED_MODULE_14__[\"default\"])(query.expr);\n  const editorMode = query.editorMode;\n  const onExplainChange = (event) => {\n    setExplain(event.currentTarget.checked);\n  };\n  const onEditorModeChange = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (newEditorMode) => {\n      (0,_grafana_runtime__WEBPACK_IMPORTED_MODULE_16__.reportInteraction)(\"grafana_loki_editor_mode_clicked\", {\n        newEditor: newEditorMode,\n        previousEditor: query.editorMode ?? \"\",\n        newQuery: !query.expr,\n        app: app ?? \"\"\n      });\n      if (newEditorMode === app_plugins_datasource_prometheus_querybuilder_shared_types__WEBPACK_IMPORTED_MODULE_4__.QueryEditorMode.Builder) {\n        const result = (0,_querybuilder_parsing__WEBPACK_IMPORTED_MODULE_11__.buildVisualQueryFromString)(query.expr || \"\");\n        if (result.errors.length) {\n          setParseModalOpen(true);\n          return;\n        }\n      }\n      (0,_querybuilder_state__WEBPACK_IMPORTED_MODULE_12__.changeEditorMode)(query, newEditorMode, onChange);\n    },\n    [onChange, query, app]\n  );\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    setDataIsStale(false);\n  }, [data]);\n  const onChangeInternal = (query2) => {\n    if (!(0,lodash__WEBPACK_IMPORTED_MODULE_0__.isEqual)(query2, props.query)) {\n      setDataIsStale(true);\n    }\n    onChange(query2);\n  };\n  const onClickLabelBrowserButton = () => {\n    (0,_grafana_runtime__WEBPACK_IMPORTED_MODULE_16__.reportInteraction)(\"grafana_loki_label_browser_opened\", {\n      app\n    });\n    setLabelBrowserVisible((visible) => !visible);\n  };\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    const update = (0,_stats__WEBPACK_IMPORTED_MODULE_13__.shouldUpdateStats)(query.expr, previousQuery, timerange, previousTimerange);\n    if (update) {\n      const makeAsyncRequest = async () => {\n        const stats = await (0,_stats__WEBPACK_IMPORTED_MODULE_13__.getStats)(datasource, query.expr);\n        setQueryStats(stats);\n      };\n      makeAsyncRequest();\n    }\n  }, [datasource, timerange, previousTimerange, query, previousQuery, setQueryStats]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement((react__WEBPACK_IMPORTED_MODULE_1___default().Fragment), null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n    _grafana_ui__WEBPACK_IMPORTED_MODULE_17__.ConfirmModal,\n    {\n      isOpen: parseModalOpen,\n      title: \"Query parsing\",\n      body: \"There were errors while trying to parse the query. Continuing to visual builder may lose some parts of the query.\",\n      confirmText: \"Continue\",\n      onConfirm: () => {\n        onChange({ ...query, editorMode: app_plugins_datasource_prometheus_querybuilder_shared_types__WEBPACK_IMPORTED_MODULE_4__.QueryEditorMode.Builder });\n        setParseModalOpen(false);\n      },\n      onDismiss: () => setParseModalOpen(false)\n    }\n  ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n    _querybuilder_components_QueryPatternsModal__WEBPACK_IMPORTED_MODULE_10__.QueryPatternsModal,\n    {\n      isOpen: queryPatternsModalOpen,\n      onClose: () => setQueryPatternsModalOpen(false),\n      query,\n      queries,\n      app,\n      onChange,\n      onAddQuery\n    }\n  ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n    _querybuilder_components_LabelBrowserModal__WEBPACK_IMPORTED_MODULE_6__.LabelBrowserModal,\n    {\n      isOpen: labelBrowserVisible,\n      datasource,\n      query,\n      app,\n      onClose: () => setLabelBrowserVisible(false),\n      onChange: onChangeInternal,\n      onRunQuery\n    }\n  ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_experimental__WEBPACK_IMPORTED_MODULE_18__.EditorHeader, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_experimental__WEBPACK_IMPORTED_MODULE_19__.Stack, { gap: 1 }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n    _grafana_ui__WEBPACK_IMPORTED_MODULE_20__.Button,\n    {\n      \"aria-label\": _grafana_e2e_selectors__WEBPACK_IMPORTED_MODULE_21__.selectors.components.QueryBuilder.queryPatterns,\n      variant: \"secondary\",\n      size: \"sm\",\n      onClick: () => {\n        setQueryPatternsModalOpen((prevValue) => !prevValue);\n        const visualQuery = (0,_querybuilder_parsing__WEBPACK_IMPORTED_MODULE_11__.buildVisualQueryFromString)(query.expr || \"\");\n        (0,_grafana_runtime__WEBPACK_IMPORTED_MODULE_16__.reportInteraction)(\"grafana_loki_query_patterns_opened\", {\n          version: \"v2\",\n          app: app ?? \"\",\n          editorMode: query.editorMode,\n          preSelectedOperationsCount: visualQuery.query.operations.length,\n          preSelectedLabelsCount: visualQuery.query.labels.length\n        });\n      }\n    },\n    \"Kick start your query\"\n  ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_20__.Button, { variant: \"secondary\", size: \"sm\", onClick: onClickLabelBrowserButton, \"data-testid\": \"label-browser-button\" }, \"Label browser\")), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(app_plugins_datasource_prometheus_querybuilder_shared_QueryHeaderSwitch__WEBPACK_IMPORTED_MODULE_3__.QueryHeaderSwitch, { label: \"Explain query\", value: explain, onChange: onExplainChange }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_experimental__WEBPACK_IMPORTED_MODULE_22__.FlexItem, { grow: 1 }), app !== _grafana_data__WEBPACK_IMPORTED_MODULE_23__.CoreApp.Explore && app !== _grafana_data__WEBPACK_IMPORTED_MODULE_23__.CoreApp.Correlations && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n    _grafana_ui__WEBPACK_IMPORTED_MODULE_20__.Button,\n    {\n      variant: dataIsStale ? \"primary\" : \"secondary\",\n      size: \"sm\",\n      onClick: onRunQuery,\n      icon: data?.state === _grafana_data__WEBPACK_IMPORTED_MODULE_24__.LoadingState.Loading ? \"fa fa-spinner\" : void 0,\n      disabled: data?.state === _grafana_data__WEBPACK_IMPORTED_MODULE_24__.LoadingState.Loading\n    },\n    \"Run queries\"\n  ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(app_plugins_datasource_prometheus_querybuilder_shared_QueryEditorModeToggle__WEBPACK_IMPORTED_MODULE_2__.QueryEditorModeToggle, { mode: editorMode, onChange: onEditorModeChange })), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_experimental__WEBPACK_IMPORTED_MODULE_25__.Space, { v: 0.5 }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_experimental__WEBPACK_IMPORTED_MODULE_26__.EditorRows, null, editorMode === app_plugins_datasource_prometheus_querybuilder_shared_types__WEBPACK_IMPORTED_MODULE_4__.QueryEditorMode.Code && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n    _querybuilder_components_LokiQueryCodeEditor__WEBPACK_IMPORTED_MODULE_9__.LokiQueryCodeEditor,\n    {\n      ...props,\n      query,\n      onChange: onChangeInternal,\n      showExplain: explain,\n      setQueryStats\n    }\n  ), editorMode === app_plugins_datasource_prometheus_querybuilder_shared_types__WEBPACK_IMPORTED_MODULE_4__.QueryEditorMode.Builder && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n    _querybuilder_components_LokiQueryBuilderContainer__WEBPACK_IMPORTED_MODULE_7__.LokiQueryBuilderContainer,\n    {\n      datasource: props.datasource,\n      query,\n      onChange: onChangeInternal,\n      onRunQuery: props.onRunQuery,\n      showExplain: explain\n    }\n  ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n    _querybuilder_components_LokiQueryBuilderOptions__WEBPACK_IMPORTED_MODULE_8__.LokiQueryBuilderOptions,\n    {\n      query,\n      onChange,\n      onRunQuery,\n      app,\n      maxLines: datasource.maxLines,\n      queryStats\n    }\n  )));\n});\nLokiQueryEditor.displayName = \"LokiQueryEditor\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/components/LokiQueryEditor.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/components/LokiQueryEditorByApp.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LokiQueryEditorByApp: () => (/* binding */ LokiQueryEditorByApp),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   testIds: () => (/* binding */ testIds)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/types/app.ts\");\n/* harmony import */ var _LokiQueryEditor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/plugins/datasource/loki/components/LokiQueryEditor.tsx\");\n/* harmony import */ var _LokiQueryEditorForAlerting__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/plugins/datasource/loki/components/LokiQueryEditorForAlerting.tsx\");\n\n\n\n\n\nfunction LokiQueryEditorByApp(props) {\n  const { app } = props;\n  switch (app) {\n    case _grafana_data__WEBPACK_IMPORTED_MODULE_3__.CoreApp.CloudAlerting:\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_LokiQueryEditorForAlerting__WEBPACK_IMPORTED_MODULE_2__.LokiQueryEditorForAlerting, { ...props });\n    default:\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_LokiQueryEditor__WEBPACK_IMPORTED_MODULE_1__.LokiQueryEditor, { ...props });\n  }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(LokiQueryEditorByApp));\nconst testIds = {\n  editor: \"loki-editor\"\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL2NvbXBvbmVudHMvTG9raVF1ZXJ5RWRpdG9yQnlBcHAudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUE0QjtBQUVKO0FBRVE7QUFDVztBQUdwQyxTQUFTLHFCQUFxQixPQUE2QjtBQUNoRSxRQUFNLEVBQUUsSUFBSSxJQUFJO0FBRWhCLFVBQVEsS0FBSztBQUFBLElBQ1gsS0FBSyxrREFBTyxDQUFDO0FBQ1gsYUFBTywyRUFBQyxtRkFBMEIsSUFBRSxHQUFHLE9BQU87QUFBQSxJQUNoRDtBQUNFLGFBQU8sMkVBQUMsNkRBQWUsSUFBRSxHQUFHLE9BQU87QUFBQSxFQUN2QztBQUNGO0FBRUEsaUVBQWUsMkNBQUksQ0FBQyxvQkFBb0IsQ0FBQyxFQUFDO0FBRW5DLE1BQU0sVUFBVTtBQUFBLEVBQ3JCLFFBQVE7QUFDViIsInNvdXJjZXMiOlsid2VicGFjazovL2dyYWZhbmEvLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL2NvbXBvbmVudHMvTG9raVF1ZXJ5RWRpdG9yQnlBcHAudHN4P2ZhMTkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IG1lbW8gfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB7IENvcmVBcHAgfSBmcm9tICdAZ3JhZmFuYS9kYXRhJztcblxuaW1wb3J0IHsgTG9raVF1ZXJ5RWRpdG9yIH0gZnJvbSAnLi9Mb2tpUXVlcnlFZGl0b3InO1xuaW1wb3J0IHsgTG9raVF1ZXJ5RWRpdG9yRm9yQWxlcnRpbmcgfSBmcm9tICcuL0xva2lRdWVyeUVkaXRvckZvckFsZXJ0aW5nJztcbmltcG9ydCB7IExva2lRdWVyeUVkaXRvclByb3BzIH0gZnJvbSAnLi90eXBlcyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBMb2tpUXVlcnlFZGl0b3JCeUFwcChwcm9wczogTG9raVF1ZXJ5RWRpdG9yUHJvcHMpIHtcbiAgY29uc3QgeyBhcHAgfSA9IHByb3BzO1xuXG4gIHN3aXRjaCAoYXBwKSB7XG4gICAgY2FzZSBDb3JlQXBwLkNsb3VkQWxlcnRpbmc6XG4gICAgICByZXR1cm4gPExva2lRdWVyeUVkaXRvckZvckFsZXJ0aW5nIHsuLi5wcm9wc30gLz47XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiA8TG9raVF1ZXJ5RWRpdG9yIHsuLi5wcm9wc30gLz47XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgbWVtbyhMb2tpUXVlcnlFZGl0b3JCeUFwcCk7XG5cbmV4cG9ydCBjb25zdCB0ZXN0SWRzID0ge1xuICBlZGl0b3I6ICdsb2tpLWVkaXRvcicsXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/components/LokiQueryEditorByApp.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/components/LokiQueryEditorForAlerting.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LokiQueryEditorForAlerting: () => (/* binding */ LokiQueryEditorForAlerting),\n/* harmony export */   testIds: () => (/* binding */ testIds)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _LokiQueryField__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/plugins/datasource/loki/components/LokiQueryField.tsx\");\n\n\n\nfunction LokiQueryEditorForAlerting(props) {\n  const { query, data, datasource, onChange, onRunQuery, history } = props;\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n    _LokiQueryField__WEBPACK_IMPORTED_MODULE_1__.LokiQueryField,\n    {\n      datasource,\n      query,\n      onChange,\n      onRunQuery,\n      history,\n      data,\n      placeholder: \"Enter a Loki query\",\n      \"data-testid\": testIds.editor\n    }\n  );\n}\nconst testIds = {\n  editor: \"loki-editor-cloud-alerting\"\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL2NvbXBvbmVudHMvTG9raVF1ZXJ5RWRpdG9yRm9yQWxlcnRpbmcudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFrQjtBQUVhO0FBR3hCLFNBQVMsMkJBQTJCLE9BQTZCO0FBQ3RFLFFBQU0sRUFBRSxPQUFPLE1BQU0sWUFBWSxVQUFVLFlBQVksUUFBUSxJQUFJO0FBRW5FLFNBQ0U7QUFBQSxJQUFDLDJEQUFjO0FBQWQ7QUFBQSxNQUNDO0FBQUEsTUFDQTtBQUFBLE1BQ0E7QUFBQSxNQUNBO0FBQUEsTUFDQTtBQUFBLE1BQ0E7QUFBQSxNQUNBLGFBQVk7QUFBQSxNQUNaLGVBQWEsUUFBUTtBQUFBO0FBQUEsRUFDdkI7QUFFSjtBQUVPLE1BQU0sVUFBVTtBQUFBLEVBQ3JCLFFBQVE7QUFDViIsInNvdXJjZXMiOlsid2VicGFjazovL2dyYWZhbmEvLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL2NvbXBvbmVudHMvTG9raVF1ZXJ5RWRpdG9yRm9yQWxlcnRpbmcudHN4P2E3NTYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHsgTG9raVF1ZXJ5RmllbGQgfSBmcm9tICcuL0xva2lRdWVyeUZpZWxkJztcbmltcG9ydCB7IExva2lRdWVyeUVkaXRvclByb3BzIH0gZnJvbSAnLi90eXBlcyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBMb2tpUXVlcnlFZGl0b3JGb3JBbGVydGluZyhwcm9wczogTG9raVF1ZXJ5RWRpdG9yUHJvcHMpIHtcbiAgY29uc3QgeyBxdWVyeSwgZGF0YSwgZGF0YXNvdXJjZSwgb25DaGFuZ2UsIG9uUnVuUXVlcnksIGhpc3RvcnkgfSA9IHByb3BzO1xuXG4gIHJldHVybiAoXG4gICAgPExva2lRdWVyeUZpZWxkXG4gICAgICBkYXRhc291cmNlPXtkYXRhc291cmNlfVxuICAgICAgcXVlcnk9e3F1ZXJ5fVxuICAgICAgb25DaGFuZ2U9e29uQ2hhbmdlfVxuICAgICAgb25SdW5RdWVyeT17b25SdW5RdWVyeX1cbiAgICAgIGhpc3Rvcnk9e2hpc3Rvcnl9XG4gICAgICBkYXRhPXtkYXRhfVxuICAgICAgcGxhY2Vob2xkZXI9XCJFbnRlciBhIExva2kgcXVlcnlcIlxuICAgICAgZGF0YS10ZXN0aWQ9e3Rlc3RJZHMuZWRpdG9yfVxuICAgIC8+XG4gICk7XG59XG5cbmV4cG9ydCBjb25zdCB0ZXN0SWRzID0ge1xuICBlZGl0b3I6ICdsb2tpLWVkaXRvci1jbG91ZC1hbGVydGluZycsXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/components/LokiQueryEditorForAlerting.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/components/LokiQueryField.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LokiQueryField: () => (/* binding */ LokiQueryField)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _languageUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/plugins/datasource/loki/languageUtils.ts\");\n/* harmony import */ var _monaco_query_field_MonacoQueryFieldWrapper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/plugins/datasource/loki/components/monaco-query-field/MonacoQueryFieldWrapper.tsx\");\n\n\n\n\nclass LokiQueryField extends (react__WEBPACK_IMPORTED_MODULE_0___default().PureComponent) {\n  constructor(props) {\n    super(props);\n    this._isMounted = false;\n    this.onChangeQuery = (value, override) => {\n      const { query, onChange, onRunQuery } = this.props;\n      if (onChange) {\n        const nextQuery = { ...query, expr: value };\n        onChange(nextQuery);\n        if (override && onRunQuery) {\n          onRunQuery();\n        }\n      }\n    };\n    this.state = { labelsLoaded: false };\n  }\n  async componentDidMount() {\n    this._isMounted = true;\n    await this.props.datasource.languageProvider.start();\n    if (this._isMounted) {\n      this.setState({ labelsLoaded: true });\n    }\n  }\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n  componentDidUpdate(prevProps) {\n    const {\n      range,\n      datasource: { languageProvider }\n    } = this.props;\n    const refreshLabels = (0,_languageUtils__WEBPACK_IMPORTED_MODULE_1__.shouldRefreshLabels)(range, prevProps.range);\n    if (refreshLabels) {\n      languageProvider.fetchLabels();\n    }\n  }\n  render() {\n    const { ExtraFieldElement, query, datasource, history, onRunQuery, onQueryType } = this.props;\n    const placeholder = this.props.placeholder ?? \"Enter a Loki query (run with Shift+Enter)\";\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n      \"div\",\n      {\n        className: \"gf-form-inline gf-form-inline--xs-view-flex-column flex-grow-1\",\n        \"data-testid\": this.props[\"data-testid\"]\n      },\n      /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", { className: \"gf-form--grow flex-shrink-1 min-width-15\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n        _monaco_query_field_MonacoQueryFieldWrapper__WEBPACK_IMPORTED_MODULE_2__.MonacoQueryFieldWrapper,\n        {\n          datasource,\n          history: history ?? [],\n          onChange: this.onChangeQuery,\n          onRunQuery,\n          initialValue: query.expr ?? \"\",\n          placeholder,\n          onQueryType\n        }\n      ))\n    ), ExtraFieldElement);\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL2NvbXBvbmVudHMvTG9raVF1ZXJ5RmllbGQudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFpQztBQUtHO0FBR0k7QUFhakMsTUFBTSx1QkFBdUIsNERBQW1CLENBQTJDO0FBQUEsRUFHaEcsWUFBWSxPQUE0QjtBQUN0QyxVQUFNLEtBQUs7QUFIYixzQkFBYTtBQWdDYix5QkFBZ0IsQ0FBQyxPQUFlLGFBQXVCO0FBRXJELFlBQU0sRUFBRSxPQUFPLFVBQVUsV0FBVyxJQUFJLEtBQUs7QUFDN0MsVUFBSSxVQUFVO0FBQ1osY0FBTSxZQUFZLEVBQUUsR0FBRyxPQUFPLE1BQU0sTUFBTTtBQUMxQyxpQkFBUyxTQUFTO0FBRWxCLFlBQUksWUFBWSxZQUFZO0FBQzFCLHFCQUFXO0FBQUEsUUFDYjtBQUFBLE1BQ0Y7QUFBQSxJQUNGO0FBdENFLFNBQUssUUFBUSxFQUFFLGNBQWMsTUFBTTtBQUFBLEVBQ3JDO0FBQUEsRUFFQSxNQUFNLG9CQUFvQjtBQUN4QixTQUFLLGFBQWE7QUFDbEIsVUFBTSxLQUFLLE1BQU0sV0FBVyxpQkFBaUIsTUFBTTtBQUNuRCxRQUFJLEtBQUssWUFBWTtBQUNuQixXQUFLLFNBQVMsRUFBRSxjQUFjLEtBQUssQ0FBQztBQUFBLElBQ3RDO0FBQUEsRUFDRjtBQUFBLEVBRUEsdUJBQXVCO0FBQ3JCLFNBQUssYUFBYTtBQUFBLEVBQ3BCO0FBQUEsRUFFQSxtQkFBbUIsV0FBZ0M7QUFDakQsVUFBTTtBQUFBLE1BQ0o7QUFBQSxNQUNBLFlBQVksRUFBRSxpQkFBaUI7QUFBQSxJQUNqQyxJQUFJLEtBQUs7QUFDVCxVQUFNLGdCQUFnQixtRUFBbUIsQ0FBQyxPQUFPLFVBQVUsS0FBSztBQUVoRSxRQUFJLGVBQWU7QUFDakIsdUJBQWlCLFlBQVk7QUFBQSxJQUMvQjtBQUFBLEVBQ0Y7QUFBQSxFQWVBLFNBQVM7QUFDUCxVQUFNLEVBQUUsbUJBQW1CLE9BQU8sWUFBWSxTQUFTLFlBQVksWUFBWSxJQUFJLEtBQUs7QUFDeEYsVUFBTSxjQUFjLEtBQUssTUFBTSxlQUFlO0FBRTlDLFdBQ0UsMElBQ0U7QUFBQSxNQUFDO0FBQUE7QUFBQSxRQUNDLFdBQVU7QUFBQSxRQUNWLGVBQWEsS0FBSyxNQUFNLGFBQWE7QUFBQTtBQUFBLE1BRXJDLDJFQUFDLFNBQUksV0FBVSw4Q0FDYjtBQUFBLFFBQUMsZ0dBQXVCO0FBQXZCO0FBQUEsVUFDQztBQUFBLFVBQ0EsU0FBUyxXQUFXLENBQUM7QUFBQSxVQUNyQixVQUFVLEtBQUs7QUFBQSxVQUNmO0FBQUEsVUFDQSxjQUFjLE1BQU0sUUFBUTtBQUFBLFVBQzVCO0FBQUEsVUFDQTtBQUFBO0FBQUEsTUFDRixDQUNGO0FBQUEsSUFDRixHQUNDLGlCQUNIO0FBQUEsRUFFSjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ3JhZmFuYS8uL3B1YmxpYy9hcHAvcGx1Z2lucy9kYXRhc291cmNlL2xva2kvY29tcG9uZW50cy9Mb2tpUXVlcnlGaWVsZC50c3g/NzJjNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgUmVhY3ROb2RlIH0gZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgeyBRdWVyeUVkaXRvclByb3BzIH0gZnJvbSAnQGdyYWZhbmEvZGF0YSc7XG5cbmltcG9ydCB7IExva2lEYXRhc291cmNlIH0gZnJvbSAnLi4vZGF0YXNvdXJjZSc7XG5pbXBvcnQgeyBzaG91bGRSZWZyZXNoTGFiZWxzIH0gZnJvbSAnLi4vbGFuZ3VhZ2VVdGlscyc7XG5pbXBvcnQgeyBMb2tpUXVlcnksIExva2lPcHRpb25zIH0gZnJvbSAnLi4vdHlwZXMnO1xuXG5pbXBvcnQgeyBNb25hY29RdWVyeUZpZWxkV3JhcHBlciB9IGZyb20gJy4vbW9uYWNvLXF1ZXJ5LWZpZWxkL01vbmFjb1F1ZXJ5RmllbGRXcmFwcGVyJztcblxuZXhwb3J0IGludGVyZmFjZSBMb2tpUXVlcnlGaWVsZFByb3BzIGV4dGVuZHMgUXVlcnlFZGl0b3JQcm9wczxMb2tpRGF0YXNvdXJjZSwgTG9raVF1ZXJ5LCBMb2tpT3B0aW9ucz4ge1xuICBFeHRyYUZpZWxkRWxlbWVudD86IFJlYWN0Tm9kZTtcbiAgcGxhY2Vob2xkZXI/OiBzdHJpbmc7XG4gICdkYXRhLXRlc3RpZCc/OiBzdHJpbmc7XG4gIG9uUXVlcnlUeXBlPzogKHF1ZXJ5OiBzdHJpbmcpID0+IHZvaWQ7XG59XG5cbmludGVyZmFjZSBMb2tpUXVlcnlGaWVsZFN0YXRlIHtcbiAgbGFiZWxzTG9hZGVkOiBib29sZWFuO1xufVxuXG5leHBvcnQgY2xhc3MgTG9raVF1ZXJ5RmllbGQgZXh0ZW5kcyBSZWFjdC5QdXJlQ29tcG9uZW50PExva2lRdWVyeUZpZWxkUHJvcHMsIExva2lRdWVyeUZpZWxkU3RhdGU+IHtcbiAgX2lzTW91bnRlZCA9IGZhbHNlO1xuXG4gIGNvbnN0cnVjdG9yKHByb3BzOiBMb2tpUXVlcnlGaWVsZFByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuXG4gICAgdGhpcy5zdGF0ZSA9IHsgbGFiZWxzTG9hZGVkOiBmYWxzZSB9O1xuICB9XG5cbiAgYXN5bmMgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgdGhpcy5faXNNb3VudGVkID0gdHJ1ZTtcbiAgICBhd2FpdCB0aGlzLnByb3BzLmRhdGFzb3VyY2UubGFuZ3VhZ2VQcm92aWRlci5zdGFydCgpO1xuICAgIGlmICh0aGlzLl9pc01vdW50ZWQpIHtcbiAgICAgIHRoaXMuc2V0U3RhdGUoeyBsYWJlbHNMb2FkZWQ6IHRydWUgfSk7XG4gICAgfVxuICB9XG5cbiAgY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgdGhpcy5faXNNb3VudGVkID0gZmFsc2U7XG4gIH1cblxuICBjb21wb25lbnREaWRVcGRhdGUocHJldlByb3BzOiBMb2tpUXVlcnlGaWVsZFByb3BzKSB7XG4gICAgY29uc3Qge1xuICAgICAgcmFuZ2UsXG4gICAgICBkYXRhc291cmNlOiB7IGxhbmd1YWdlUHJvdmlkZXIgfSxcbiAgICB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCByZWZyZXNoTGFiZWxzID0gc2hvdWxkUmVmcmVzaExhYmVscyhyYW5nZSwgcHJldlByb3BzLnJhbmdlKTtcbiAgICAvLyBXZSB3YW50IHRvIHJlZnJlc2ggbGFiZWxzIHdoZW4gcmFuZ2UgY2hhbmdlcyAod2Ugcm91bmQgdXAgaW50ZXJ2YWxzIHRvIGEgbWludXRlKVxuICAgIGlmIChyZWZyZXNoTGFiZWxzKSB7XG4gICAgICBsYW5ndWFnZVByb3ZpZGVyLmZldGNoTGFiZWxzKCk7XG4gICAgfVxuICB9XG5cbiAgb25DaGFuZ2VRdWVyeSA9ICh2YWx1ZTogc3RyaW5nLCBvdmVycmlkZT86IGJvb2xlYW4pID0+IHtcbiAgICAvLyBTZW5kIHRleHQgY2hhbmdlIHRvIHBhcmVudFxuICAgIGNvbnN0IHsgcXVlcnksIG9uQ2hhbmdlLCBvblJ1blF1ZXJ5IH0gPSB0aGlzLnByb3BzO1xuICAgIGlmIChvbkNoYW5nZSkge1xuICAgICAgY29uc3QgbmV4dFF1ZXJ5ID0geyAuLi5xdWVyeSwgZXhwcjogdmFsdWUgfTtcbiAgICAgIG9uQ2hhbmdlKG5leHRRdWVyeSk7XG5cbiAgICAgIGlmIChvdmVycmlkZSAmJiBvblJ1blF1ZXJ5KSB7XG4gICAgICAgIG9uUnVuUXVlcnkoKTtcbiAgICAgIH1cbiAgICB9XG4gIH07XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgRXh0cmFGaWVsZEVsZW1lbnQsIHF1ZXJ5LCBkYXRhc291cmNlLCBoaXN0b3J5LCBvblJ1blF1ZXJ5LCBvblF1ZXJ5VHlwZSB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCBwbGFjZWhvbGRlciA9IHRoaXMucHJvcHMucGxhY2Vob2xkZXIgPz8gJ0VudGVyIGEgTG9raSBxdWVyeSAocnVuIHdpdGggU2hpZnQrRW50ZXIpJztcblxuICAgIHJldHVybiAoXG4gICAgICA8PlxuICAgICAgICA8ZGl2XG4gICAgICAgICAgY2xhc3NOYW1lPVwiZ2YtZm9ybS1pbmxpbmUgZ2YtZm9ybS1pbmxpbmUtLXhzLXZpZXctZmxleC1jb2x1bW4gZmxleC1ncm93LTFcIlxuICAgICAgICAgIGRhdGEtdGVzdGlkPXt0aGlzLnByb3BzWydkYXRhLXRlc3RpZCddfVxuICAgICAgICA+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJnZi1mb3JtLS1ncm93IGZsZXgtc2hyaW5rLTEgbWluLXdpZHRoLTE1XCI+XG4gICAgICAgICAgICA8TW9uYWNvUXVlcnlGaWVsZFdyYXBwZXJcbiAgICAgICAgICAgICAgZGF0YXNvdXJjZT17ZGF0YXNvdXJjZX1cbiAgICAgICAgICAgICAgaGlzdG9yeT17aGlzdG9yeSA/PyBbXX1cbiAgICAgICAgICAgICAgb25DaGFuZ2U9e3RoaXMub25DaGFuZ2VRdWVyeX1cbiAgICAgICAgICAgICAgb25SdW5RdWVyeT17b25SdW5RdWVyeX1cbiAgICAgICAgICAgICAgaW5pdGlhbFZhbHVlPXtxdWVyeS5leHByID8/ICcnfVxuICAgICAgICAgICAgICBwbGFjZWhvbGRlcj17cGxhY2Vob2xkZXJ9XG4gICAgICAgICAgICAgIG9uUXVlcnlUeXBlPXtvblF1ZXJ5VHlwZX1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICB7RXh0cmFGaWVsZEVsZW1lbnR9XG4gICAgICA8Lz5cbiAgICApO1xuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/components/LokiQueryField.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/components/VariableQueryEditor.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LokiVariableQueryEditor: () => (/* binding */ LokiVariableQueryEditor)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Forms/InlineFieldRow.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Forms/InlineField.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Select/Select.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Input/Input.tsx\");\n/* harmony import */ var _migrations_variableQueryMigrations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/plugins/datasource/loki/migrations/variableQueryMigrations.ts\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/plugins/datasource/loki/types.ts\");\n\n\n\n\n\nconst variableOptions = [\n  { label: \"Label names\", value: _types__WEBPACK_IMPORTED_MODULE_2__.LokiVariableQueryType.LabelNames },\n  { label: \"Label values\", value: _types__WEBPACK_IMPORTED_MODULE_2__.LokiVariableQueryType.LabelValues }\n];\nconst refId = \"LokiVariableQueryEditor-VariableQuery\";\nconst LokiVariableQueryEditor = ({ onChange, query, datasource }) => {\n  const [type, setType] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(void 0);\n  const [label, setLabel] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\");\n  const [labelOptions, setLabelOptions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n  const [stream, setStream] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\");\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (!query) {\n      return;\n    }\n    const variableQuery = typeof query === \"string\" ? (0,_migrations_variableQueryMigrations__WEBPACK_IMPORTED_MODULE_1__.migrateVariableQuery)(query) : query;\n    setType(variableQuery.type);\n    setLabel(variableQuery.label || \"\");\n    setStream(variableQuery.stream || \"\");\n  }, [query]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (type !== _types__WEBPACK_IMPORTED_MODULE_2__.LokiVariableQueryType.LabelValues) {\n      return;\n    }\n    datasource.labelNamesQuery().then((labelNames) => {\n      setLabelOptions(labelNames.map(({ text }) => ({ label: text, value: text })));\n    });\n  }, [datasource, type]);\n  const onQueryTypeChange = (newType) => {\n    setType(newType.value);\n    if (newType.value !== void 0) {\n      onChange({\n        type: newType.value,\n        label,\n        stream,\n        refId\n      });\n    }\n  };\n  const onLabelChange = (newLabel) => {\n    setLabel(newLabel.value || \"\");\n  };\n  const onStreamChange = (e) => {\n    setStream(e.currentTarget.value);\n  };\n  const handleBlur = () => {\n    if (type !== void 0) {\n      onChange({ type, label, stream, refId: \"LokiVariableQueryEditor-VariableQuery\" });\n    }\n  };\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_3__.InlineFieldRow, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_4__.InlineField, { label: \"Query type\", labelWidth: 20 }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n    _grafana_ui__WEBPACK_IMPORTED_MODULE_5__.Select,\n    {\n      \"aria-label\": \"Query type\",\n      onChange: onQueryTypeChange,\n      onBlur: handleBlur,\n      value: type,\n      options: variableOptions,\n      width: 16\n    }\n  )), type === _types__WEBPACK_IMPORTED_MODULE_2__.LokiVariableQueryType.LabelValues && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_4__.InlineField, { label: \"Label\", labelWidth: 20 }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n    _grafana_ui__WEBPACK_IMPORTED_MODULE_5__.Select,\n    {\n      \"aria-label\": \"Label\",\n      onChange: onLabelChange,\n      onBlur: handleBlur,\n      value: { label, value: label },\n      options: labelOptions,\n      width: 16,\n      allowCustomValue: true\n    }\n  )))), type === _types__WEBPACK_IMPORTED_MODULE_2__.LokiVariableQueryType.LabelValues && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_3__.InlineFieldRow, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n    _grafana_ui__WEBPACK_IMPORTED_MODULE_4__.InlineField,\n    {\n      label: \"Stream selector\",\n      labelWidth: 20,\n      grow: true,\n      tooltip: /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", null, 'Optional. If defined, a list of values for the specified log stream selector is returned. For example: {label=\"value\"} or {label=\"$variable\"}')\n    },\n    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n      _grafana_ui__WEBPACK_IMPORTED_MODULE_6__.Input,\n      {\n        type: \"text\",\n        \"aria-label\": \"Stream selector\",\n        placeholder: \"Optional stream selector\",\n        value: stream,\n        onChange: onStreamChange,\n        onBlur: handleBlur\n      }\n    )\n  )));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL2NvbXBvbmVudHMvVmFyaWFibGVRdWVyeUVkaXRvci50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFzRDtBQUdLO0FBR3RCO0FBQ3lEO0FBRTlGLE1BQU0sa0JBQWtCO0FBQUEsRUFDdEIsRUFBRSxPQUFPLGVBQWUsT0FBTyx5REFBUyxDQUFDLFdBQVc7QUFBQSxFQUNwRCxFQUFFLE9BQU8sZ0JBQWdCLE9BQU8seURBQVMsQ0FBQyxZQUFZO0FBQ3hEO0FBSUEsTUFBTSxRQUFRO0FBRVAsTUFBTSwwQkFBMEIsQ0FBQyxFQUFFLFVBQVUsT0FBTyxXQUFXLE1BQWE7QUFDakYsUUFBTSxDQUFDLE1BQU0sT0FBTyxJQUFJLCtDQUFRLENBQXFCLE1BQVM7QUFDOUQsUUFBTSxDQUFDLE9BQU8sUUFBUSxJQUFJLCtDQUFRLENBQUMsRUFBRTtBQUNyQyxRQUFNLENBQUMsY0FBYyxlQUFlLElBQUksK0NBQVEsQ0FBaUMsQ0FBQyxDQUFDO0FBQ25GLFFBQU0sQ0FBQyxRQUFRLFNBQVMsSUFBSSwrQ0FBUSxDQUFDLEVBQUU7QUFFdkMsa0RBQVMsQ0FBQyxNQUFNO0FBQ2QsUUFBSSxDQUFDLE9BQU87QUFDVjtBQUFBLElBQ0Y7QUFFQSxVQUFNLGdCQUFnQixPQUFPLFVBQVUsV0FBVyx5RkFBb0IsQ0FBQyxLQUFLLElBQUk7QUFDaEYsWUFBUSxjQUFjLElBQUk7QUFDMUIsYUFBUyxjQUFjLFNBQVMsRUFBRTtBQUNsQyxjQUFVLGNBQWMsVUFBVSxFQUFFO0FBQUEsRUFDdEMsR0FBRyxDQUFDLEtBQUssQ0FBQztBQUVWLGtEQUFTLENBQUMsTUFBTTtBQUNkLFFBQUksU0FBUyx5REFBUyxDQUFDLGFBQWE7QUFDbEM7QUFBQSxJQUNGO0FBRUEsZUFBVyxnQkFBZ0IsRUFBRSxLQUFLLENBQUMsZUFBd0M7QUFDekUsc0JBQWdCLFdBQVcsSUFBSSxDQUFDLEVBQUUsS0FBSyxPQUFPLEVBQUUsT0FBTyxNQUFNLE9BQU8sS0FBSyxFQUFFLENBQUM7QUFBQSxJQUM5RSxDQUFDO0FBQUEsRUFDSCxHQUFHLENBQUMsWUFBWSxJQUFJLENBQUM7QUFFckIsUUFBTSxvQkFBb0IsQ0FBQyxZQUF3QztBQUNqRSxZQUFRLFFBQVEsS0FBSztBQUNyQixRQUFJLFFBQVEsVUFBVSxRQUFXO0FBQy9CLGVBQVM7QUFBQSxRQUNQLE1BQU0sUUFBUTtBQUFBLFFBQ2Q7QUFBQSxRQUNBO0FBQUEsUUFDQTtBQUFBLE1BQ0YsQ0FBQztBQUFBLElBQ0g7QUFBQSxFQUNGO0FBRUEsUUFBTSxnQkFBZ0IsQ0FBQyxhQUFzQztBQUMzRCxhQUFTLFNBQVMsU0FBUyxFQUFFO0FBQUEsRUFDL0I7QUFFQSxRQUFNLGlCQUFpQixDQUFDLE1BQW1DO0FBQ3pELGNBQVUsRUFBRSxjQUFjLEtBQUs7QUFBQSxFQUNqQztBQUVBLFFBQU0sYUFBYSxNQUFNO0FBQ3ZCLFFBQUksU0FBUyxRQUFXO0FBQ3RCLGVBQVMsRUFBRSxNQUFNLE9BQU8sUUFBUSxPQUFPLHdDQUF3QyxDQUFDO0FBQUEsSUFDbEY7QUFBQSxFQUNGO0FBRUEsU0FDRSwwSUFDRSwyRUFBQyx1REFBYyxRQUNiLDJFQUFDLG9EQUFXLElBQUMsT0FBTSxjQUFhLFlBQVksTUFDMUM7QUFBQSxJQUFDLCtDQUFNO0FBQU47QUFBQSxNQUNDLGNBQVc7QUFBQSxNQUNYLFVBQVU7QUFBQSxNQUNWLFFBQVE7QUFBQSxNQUNSLE9BQU87QUFBQSxNQUNQLFNBQVM7QUFBQSxNQUNULE9BQU87QUFBQTtBQUFBLEVBQ1QsQ0FDRixHQUNDLFNBQVMseURBQVMsQ0FBQyxlQUNsQiwwSUFDRSwyRUFBQyxvREFBVyxJQUFDLE9BQU0sU0FBUSxZQUFZLE1BQ3JDO0FBQUEsSUFBQywrQ0FBTTtBQUFOO0FBQUEsTUFDQyxjQUFXO0FBQUEsTUFDWCxVQUFVO0FBQUEsTUFDVixRQUFRO0FBQUEsTUFDUixPQUFPLEVBQUUsT0FBYyxPQUFPLE1BQU07QUFBQSxNQUNwQyxTQUFTO0FBQUEsTUFDVCxPQUFPO0FBQUEsTUFDUCxrQkFBZ0I7QUFBQTtBQUFBLEVBQ2xCLENBQ0YsQ0FDRixDQUVKLEdBQ0MsU0FBUyx5REFBUyxDQUFDLGVBQ2xCLDJFQUFDLHVEQUFjLFFBQ2I7QUFBQSxJQUFDLG9EQUFXO0FBQVg7QUFBQSxNQUNDLE9BQU07QUFBQSxNQUNOLFlBQVk7QUFBQSxNQUNaLE1BQU07QUFBQSxNQUNOLFNBQ0UsMkVBQUMsYUFFRywrSUFFSjtBQUFBO0FBQUEsSUFHRjtBQUFBLE1BQUMsOENBQUs7QUFBTDtBQUFBLFFBQ0MsTUFBSztBQUFBLFFBQ0wsY0FBVztBQUFBLFFBQ1gsYUFBWTtBQUFBLFFBQ1osT0FBTztBQUFBLFFBQ1AsVUFBVTtBQUFBLFFBQ1YsUUFBUTtBQUFBO0FBQUEsSUFDVjtBQUFBLEVBQ0YsQ0FDRixDQUVKO0FBRUoiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ncmFmYW5hLy4vcHVibGljL2FwcC9wbHVnaW5zL2RhdGFzb3VyY2UvbG9raS9jb21wb25lbnRzL1ZhcmlhYmxlUXVlcnlFZGl0b3IudHN4PzNlZTEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IEZvcm1FdmVudCwgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHsgUXVlcnlFZGl0b3JQcm9wcywgU2VsZWN0YWJsZVZhbHVlIH0gZnJvbSAnQGdyYWZhbmEvZGF0YSc7XG5pbXBvcnQgeyBJbmxpbmVGaWVsZCwgSW5saW5lRmllbGRSb3csIElucHV0LCBTZWxlY3QgfSBmcm9tICdAZ3JhZmFuYS91aSc7XG5cbmltcG9ydCB7IExva2lEYXRhc291cmNlIH0gZnJvbSAnLi4vZGF0YXNvdXJjZSc7XG5pbXBvcnQgeyBtaWdyYXRlVmFyaWFibGVRdWVyeSB9IGZyb20gJy4uL21pZ3JhdGlvbnMvdmFyaWFibGVRdWVyeU1pZ3JhdGlvbnMnO1xuaW1wb3J0IHsgTG9raU9wdGlvbnMsIExva2lRdWVyeSwgTG9raVZhcmlhYmxlUXVlcnksIExva2lWYXJpYWJsZVF1ZXJ5VHlwZSBhcyBRdWVyeVR5cGUgfSBmcm9tICcuLi90eXBlcyc7XG5cbmNvbnN0IHZhcmlhYmxlT3B0aW9ucyA9IFtcbiAgeyBsYWJlbDogJ0xhYmVsIG5hbWVzJywgdmFsdWU6IFF1ZXJ5VHlwZS5MYWJlbE5hbWVzIH0sXG4gIHsgbGFiZWw6ICdMYWJlbCB2YWx1ZXMnLCB2YWx1ZTogUXVlcnlUeXBlLkxhYmVsVmFsdWVzIH0sXG5dO1xuXG5leHBvcnQgdHlwZSBQcm9wcyA9IFF1ZXJ5RWRpdG9yUHJvcHM8TG9raURhdGFzb3VyY2UsIExva2lRdWVyeSwgTG9raU9wdGlvbnMsIExva2lWYXJpYWJsZVF1ZXJ5PjtcblxuY29uc3QgcmVmSWQgPSAnTG9raVZhcmlhYmxlUXVlcnlFZGl0b3ItVmFyaWFibGVRdWVyeSc7XG5cbmV4cG9ydCBjb25zdCBMb2tpVmFyaWFibGVRdWVyeUVkaXRvciA9ICh7IG9uQ2hhbmdlLCBxdWVyeSwgZGF0YXNvdXJjZSB9OiBQcm9wcykgPT4ge1xuICBjb25zdCBbdHlwZSwgc2V0VHlwZV0gPSB1c2VTdGF0ZTxudW1iZXIgfCB1bmRlZmluZWQ+KHVuZGVmaW5lZCk7XG4gIGNvbnN0IFtsYWJlbCwgc2V0TGFiZWxdID0gdXNlU3RhdGUoJycpO1xuICBjb25zdCBbbGFiZWxPcHRpb25zLCBzZXRMYWJlbE9wdGlvbnNdID0gdXNlU3RhdGU8QXJyYXk8U2VsZWN0YWJsZVZhbHVlPHN0cmluZz4+PihbXSk7XG4gIGNvbnN0IFtzdHJlYW0sIHNldFN0cmVhbV0gPSB1c2VTdGF0ZSgnJyk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoIXF1ZXJ5KSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgdmFyaWFibGVRdWVyeSA9IHR5cGVvZiBxdWVyeSA9PT0gJ3N0cmluZycgPyBtaWdyYXRlVmFyaWFibGVRdWVyeShxdWVyeSkgOiBxdWVyeTtcbiAgICBzZXRUeXBlKHZhcmlhYmxlUXVlcnkudHlwZSk7XG4gICAgc2V0TGFiZWwodmFyaWFibGVRdWVyeS5sYWJlbCB8fCAnJyk7XG4gICAgc2V0U3RyZWFtKHZhcmlhYmxlUXVlcnkuc3RyZWFtIHx8ICcnKTtcbiAgfSwgW3F1ZXJ5XSk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAodHlwZSAhPT0gUXVlcnlUeXBlLkxhYmVsVmFsdWVzKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgZGF0YXNvdXJjZS5sYWJlbE5hbWVzUXVlcnkoKS50aGVuKChsYWJlbE5hbWVzOiBBcnJheTx7IHRleHQ6IHN0cmluZyB9PikgPT4ge1xuICAgICAgc2V0TGFiZWxPcHRpb25zKGxhYmVsTmFtZXMubWFwKCh7IHRleHQgfSkgPT4gKHsgbGFiZWw6IHRleHQsIHZhbHVlOiB0ZXh0IH0pKSk7XG4gICAgfSk7XG4gIH0sIFtkYXRhc291cmNlLCB0eXBlXSk7XG5cbiAgY29uc3Qgb25RdWVyeVR5cGVDaGFuZ2UgPSAobmV3VHlwZTogU2VsZWN0YWJsZVZhbHVlPFF1ZXJ5VHlwZT4pID0+IHtcbiAgICBzZXRUeXBlKG5ld1R5cGUudmFsdWUpO1xuICAgIGlmIChuZXdUeXBlLnZhbHVlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIG9uQ2hhbmdlKHtcbiAgICAgICAgdHlwZTogbmV3VHlwZS52YWx1ZSxcbiAgICAgICAgbGFiZWwsXG4gICAgICAgIHN0cmVhbSxcbiAgICAgICAgcmVmSWQsXG4gICAgICB9KTtcbiAgICB9XG4gIH07XG5cbiAgY29uc3Qgb25MYWJlbENoYW5nZSA9IChuZXdMYWJlbDogU2VsZWN0YWJsZVZhbHVlPHN0cmluZz4pID0+IHtcbiAgICBzZXRMYWJlbChuZXdMYWJlbC52YWx1ZSB8fCAnJyk7XG4gIH07XG5cbiAgY29uc3Qgb25TdHJlYW1DaGFuZ2UgPSAoZTogRm9ybUV2ZW50PEhUTUxJbnB1dEVsZW1lbnQ+KSA9PiB7XG4gICAgc2V0U3RyZWFtKGUuY3VycmVudFRhcmdldC52YWx1ZSk7XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlQmx1ciA9ICgpID0+IHtcbiAgICBpZiAodHlwZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICBvbkNoYW5nZSh7IHR5cGUsIGxhYmVsLCBzdHJlYW0sIHJlZklkOiAnTG9raVZhcmlhYmxlUXVlcnlFZGl0b3ItVmFyaWFibGVRdWVyeScgfSk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxJbmxpbmVGaWVsZFJvdz5cbiAgICAgICAgPElubGluZUZpZWxkIGxhYmVsPVwiUXVlcnkgdHlwZVwiIGxhYmVsV2lkdGg9ezIwfT5cbiAgICAgICAgICA8U2VsZWN0XG4gICAgICAgICAgICBhcmlhLWxhYmVsPVwiUXVlcnkgdHlwZVwiXG4gICAgICAgICAgICBvbkNoYW5nZT17b25RdWVyeVR5cGVDaGFuZ2V9XG4gICAgICAgICAgICBvbkJsdXI9e2hhbmRsZUJsdXJ9XG4gICAgICAgICAgICB2YWx1ZT17dHlwZX1cbiAgICAgICAgICAgIG9wdGlvbnM9e3ZhcmlhYmxlT3B0aW9uc31cbiAgICAgICAgICAgIHdpZHRoPXsxNn1cbiAgICAgICAgICAvPlxuICAgICAgICA8L0lubGluZUZpZWxkPlxuICAgICAgICB7dHlwZSA9PT0gUXVlcnlUeXBlLkxhYmVsVmFsdWVzICYmIChcbiAgICAgICAgICA8PlxuICAgICAgICAgICAgPElubGluZUZpZWxkIGxhYmVsPVwiTGFiZWxcIiBsYWJlbFdpZHRoPXsyMH0+XG4gICAgICAgICAgICAgIDxTZWxlY3RcbiAgICAgICAgICAgICAgICBhcmlhLWxhYmVsPVwiTGFiZWxcIlxuICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtvbkxhYmVsQ2hhbmdlfVxuICAgICAgICAgICAgICAgIG9uQmx1cj17aGFuZGxlQmx1cn1cbiAgICAgICAgICAgICAgICB2YWx1ZT17eyBsYWJlbDogbGFiZWwsIHZhbHVlOiBsYWJlbCB9fVxuICAgICAgICAgICAgICAgIG9wdGlvbnM9e2xhYmVsT3B0aW9uc31cbiAgICAgICAgICAgICAgICB3aWR0aD17MTZ9XG4gICAgICAgICAgICAgICAgYWxsb3dDdXN0b21WYWx1ZVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9JbmxpbmVGaWVsZD5cbiAgICAgICAgICA8Lz5cbiAgICAgICAgKX1cbiAgICAgIDwvSW5saW5lRmllbGRSb3c+XG4gICAgICB7dHlwZSA9PT0gUXVlcnlUeXBlLkxhYmVsVmFsdWVzICYmIChcbiAgICAgICAgPElubGluZUZpZWxkUm93PlxuICAgICAgICAgIDxJbmxpbmVGaWVsZFxuICAgICAgICAgICAgbGFiZWw9XCJTdHJlYW0gc2VsZWN0b3JcIlxuICAgICAgICAgICAgbGFiZWxXaWR0aD17MjB9XG4gICAgICAgICAgICBncm93PXt0cnVlfVxuICAgICAgICAgICAgdG9vbHRpcD17XG4gICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgJ09wdGlvbmFsLiBJZiBkZWZpbmVkLCBhIGxpc3Qgb2YgdmFsdWVzIGZvciB0aGUgc3BlY2lmaWVkIGxvZyBzdHJlYW0gc2VsZWN0b3IgaXMgcmV0dXJuZWQuIEZvciBleGFtcGxlOiB7bGFiZWw9XCJ2YWx1ZVwifSBvciB7bGFiZWw9XCIkdmFyaWFibGVcIn0nXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICA8SW5wdXRcbiAgICAgICAgICAgICAgdHlwZT1cInRleHRcIlxuICAgICAgICAgICAgICBhcmlhLWxhYmVsPVwiU3RyZWFtIHNlbGVjdG9yXCJcbiAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJPcHRpb25hbCBzdHJlYW0gc2VsZWN0b3JcIlxuICAgICAgICAgICAgICB2YWx1ZT17c3RyZWFtfVxuICAgICAgICAgICAgICBvbkNoYW5nZT17b25TdHJlYW1DaGFuZ2V9XG4gICAgICAgICAgICAgIG9uQmx1cj17aGFuZGxlQmx1cn1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9JbmxpbmVGaWVsZD5cbiAgICAgICAgPC9JbmxpbmVGaWVsZFJvdz5cbiAgICAgICl9XG4gICAgPC8+XG4gICk7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/components/VariableQueryEditor.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/components/monaco-query-field/MonacoQueryFieldLazy.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MonacoQueryFieldLazy: () => (/* binding */ MonacoQueryFieldLazy)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nconst Field = react__WEBPACK_IMPORTED_MODULE_0___default().lazy(() => __webpack_require__.e(/* import() | loki-query-field */ \"loki-query-field\").then(__webpack_require__.bind(__webpack_require__, \"./public/app/plugins/datasource/loki/components/monaco-query-field/MonacoQueryField.tsx\")));\nconst MonacoQueryFieldLazy = (props) => {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(react__WEBPACK_IMPORTED_MODULE_0__.Suspense, { fallback: null }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Field, { ...props }));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL2NvbXBvbmVudHMvbW9uYWNvLXF1ZXJ5LWZpZWxkL01vbmFjb1F1ZXJ5RmllbGRMYXp5LnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWdDO0FBSWhDLE1BQU0sUUFBUSxpREFBVSxDQUFDLE1BQU0sME5BQXVFO0FBRS9GLE1BQU0sdUJBQXVCLENBQUMsVUFBaUI7QUFDcEQsU0FDRSwyRUFBQywyQ0FBUSxJQUFDLFVBQVUsUUFDbEIsMkVBQUMsU0FBTyxHQUFHLE9BQU8sQ0FDcEI7QUFFSiIsInNvdXJjZXMiOlsid2VicGFjazovL2dyYWZhbmEvLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL2NvbXBvbmVudHMvbW9uYWNvLXF1ZXJ5LWZpZWxkL01vbmFjb1F1ZXJ5RmllbGRMYXp5LnRzeD8yM2ExIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBTdXNwZW5zZSB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHsgUHJvcHMgfSBmcm9tICcuL01vbmFjb1F1ZXJ5RmllbGRQcm9wcyc7XG5cbmNvbnN0IEZpZWxkID0gUmVhY3QubGF6eSgoKSA9PiBpbXBvcnQoLyogd2VicGFja0NodW5rTmFtZTogXCJsb2tpLXF1ZXJ5LWZpZWxkXCIgKi8gJy4vTW9uYWNvUXVlcnlGaWVsZCcpKTtcblxuZXhwb3J0IGNvbnN0IE1vbmFjb1F1ZXJ5RmllbGRMYXp5ID0gKHByb3BzOiBQcm9wcykgPT4ge1xuICByZXR1cm4gKFxuICAgIDxTdXNwZW5zZSBmYWxsYmFjaz17bnVsbH0+XG4gICAgICA8RmllbGQgey4uLnByb3BzfSAvPlxuICAgIDwvU3VzcGVuc2U+XG4gICk7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/components/monaco-query-field/MonacoQueryFieldLazy.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/components/monaco-query-field/MonacoQueryFieldWrapper.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MonacoQueryFieldWrapper: () => (/* binding */ MonacoQueryFieldWrapper)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _MonacoQueryFieldLazy__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/plugins/datasource/loki/components/monaco-query-field/MonacoQueryFieldLazy.tsx\");\n\n\n\nconst MonacoQueryFieldWrapper = (props) => {\n  const lastRunValueRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  const { onRunQuery, onChange, ...rest } = props;\n  const handleRunQuery = (value) => {\n    lastRunValueRef.current = value;\n    onChange(value);\n    onRunQuery();\n  };\n  const handleBlur = (value) => {\n    onChange(value);\n  };\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_MonacoQueryFieldLazy__WEBPACK_IMPORTED_MODULE_1__.MonacoQueryFieldLazy, { onRunQuery: handleRunQuery, onBlur: handleBlur, ...rest });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL2NvbXBvbmVudHMvbW9uYWNvLXF1ZXJ5LWZpZWxkL01vbmFjb1F1ZXJ5RmllbGRXcmFwcGVyLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUE4QjtBQUVPO0FBUzlCLE1BQU0sMEJBQTBCLENBQUMsVUFBaUI7QUFDdkQsUUFBTSxrQkFBa0IsNkNBQU0sQ0FBZ0IsSUFBSTtBQUNsRCxRQUFNLEVBQUUsWUFBWSxVQUFVLEdBQUcsS0FBSyxJQUFJO0FBRTFDLFFBQU0saUJBQWlCLENBQUMsVUFBa0I7QUFDeEMsb0JBQWdCLFVBQVU7QUFDMUIsYUFBUyxLQUFLO0FBQ2QsZUFBVztBQUFBLEVBQ2I7QUFFQSxRQUFNLGFBQWEsQ0FBQyxVQUFrQjtBQUNwQyxhQUFTLEtBQUs7QUFBQSxFQUNoQjtBQUVBLFNBQU8sMkVBQUMsdUVBQW9CLElBQUMsWUFBWSxnQkFBZ0IsUUFBUSxZQUFhLEdBQUcsTUFBTTtBQUN6RiIsInNvdXJjZXMiOlsid2VicGFjazovL2dyYWZhbmEvLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL2NvbXBvbmVudHMvbW9uYWNvLXF1ZXJ5LWZpZWxkL01vbmFjb1F1ZXJ5RmllbGRXcmFwcGVyLnRzeD8zMWM3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VSZWYgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB7IE1vbmFjb1F1ZXJ5RmllbGRMYXp5IH0gZnJvbSAnLi9Nb25hY29RdWVyeUZpZWxkTGF6eSc7XG5pbXBvcnQgeyBQcm9wcyBhcyBNb25hY29Qcm9wcyB9IGZyb20gJy4vTW9uYWNvUXVlcnlGaWVsZFByb3BzJztcblxuZXhwb3J0IHR5cGUgUHJvcHMgPSBPbWl0PE1vbmFjb1Byb3BzLCAnb25SdW5RdWVyeScgfCAnb25CbHVyJz4gJiB7XG4gIG9uQ2hhbmdlOiAocXVlcnk6IHN0cmluZykgPT4gdm9pZDtcbiAgb25SdW5RdWVyeTogKCkgPT4gdm9pZDtcbiAgb25RdWVyeVR5cGU/OiAocXVlcnk6IHN0cmluZykgPT4gdm9pZDtcbn07XG5cbmV4cG9ydCBjb25zdCBNb25hY29RdWVyeUZpZWxkV3JhcHBlciA9IChwcm9wczogUHJvcHMpID0+IHtcbiAgY29uc3QgbGFzdFJ1blZhbHVlUmVmID0gdXNlUmVmPHN0cmluZyB8IG51bGw+KG51bGwpO1xuICBjb25zdCB7IG9uUnVuUXVlcnksIG9uQ2hhbmdlLCAuLi5yZXN0IH0gPSBwcm9wcztcblxuICBjb25zdCBoYW5kbGVSdW5RdWVyeSA9ICh2YWx1ZTogc3RyaW5nKSA9PiB7XG4gICAgbGFzdFJ1blZhbHVlUmVmLmN1cnJlbnQgPSB2YWx1ZTtcbiAgICBvbkNoYW5nZSh2YWx1ZSk7XG4gICAgb25SdW5RdWVyeSgpO1xuICB9O1xuXG4gIGNvbnN0IGhhbmRsZUJsdXIgPSAodmFsdWU6IHN0cmluZykgPT4ge1xuICAgIG9uQ2hhbmdlKHZhbHVlKTtcbiAgfTtcblxuICByZXR1cm4gPE1vbmFjb1F1ZXJ5RmllbGRMYXp5IG9uUnVuUXVlcnk9e2hhbmRsZVJ1blF1ZXJ5fSBvbkJsdXI9e2hhbmRsZUJsdXJ9IHsuLi5yZXN0fSAvPjtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/components/monaco-query-field/MonacoQueryFieldWrapper.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/components/monaco-query-field/monaco-completion-provider/validation.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   placeHolderScopedVars: () => (/* binding */ placeHolderScopedVars),\n/* harmony export */   validateQuery: () => (/* binding */ validateQuery)\n/* harmony export */ });\n/* harmony import */ var _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-lezer-logql-virtual-0b75aafe9e/0/cache/@grafana-lezer-logql-npm-0.1.11-91e9d74a76-6a624b9a8d.zip/node_modules/@grafana/lezer-logql/index.es.js\");\n/* harmony import */ var app_plugins_datasource_prometheus_querybuilder_shared_parsingUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/plugins/datasource/prometheus/querybuilder/shared/parsingUtils.ts\");\n\n\n\nfunction validateQuery(query, interpolatedQuery, queryLines) {\n  if (!query) {\n    return false;\n  }\n  const interpolatedErrors = parseQuery(interpolatedQuery);\n  if (!interpolatedErrors.length) {\n    return false;\n  }\n  let parseErrors = interpolatedErrors;\n  if (query !== interpolatedQuery) {\n    const queryErrors = parseQuery(query);\n    parseErrors = interpolatedErrors.flatMap(\n      (interpolatedError) => queryErrors.filter((queryError) => interpolatedError.text === queryError.text) || interpolatedError\n    );\n  }\n  return parseErrors.map((parseError) => findErrorBoundary(query, queryLines, parseError)).filter(isErrorBoundary);\n}\nfunction parseQuery(query) {\n  const parseErrors = [];\n  const tree = _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_0__.parser.parse(query);\n  tree.iterate({\n    enter: (nodeRef) => {\n      if (nodeRef.type.id === app_plugins_datasource_prometheus_querybuilder_shared_parsingUtils__WEBPACK_IMPORTED_MODULE_1__.ErrorId) {\n        const node = nodeRef.node;\n        parseErrors.push({\n          node,\n          text: query.substring(node.from, node.to)\n        });\n      }\n    }\n  });\n  return parseErrors;\n}\nfunction findErrorBoundary(query, queryLines, parseError) {\n  if (queryLines.length === 1) {\n    const isEmptyString = parseError.node.from === parseError.node.to;\n    const errorNode = isEmptyString && parseError.node.parent ? parseError.node.parent : parseError.node;\n    const error = isEmptyString ? query.substring(errorNode.from, errorNode.to) : parseError.text;\n    return {\n      startLineNumber: 1,\n      startColumn: errorNode.from + 1,\n      endLineNumber: 1,\n      endColumn: errorNode.to + 1,\n      error\n    };\n  }\n  let startPos = 0, endPos = 0;\n  for (let line = 0; line < queryLines.length; line++) {\n    endPos = startPos + queryLines[line].length;\n    if (parseError.node.from > endPos) {\n      startPos += queryLines[line].length + 1;\n      continue;\n    }\n    return {\n      startLineNumber: line + 1,\n      startColumn: parseError.node.from - startPos + 1,\n      endLineNumber: line + 1,\n      endColumn: parseError.node.to - startPos + 1,\n      error: parseError.text\n    };\n  }\n  return null;\n}\nfunction isErrorBoundary(boundary) {\n  return boundary !== null;\n}\nconst placeHolderScopedVars = {\n  __interval: { text: \"1s\", value: \"1s\" },\n  __interval_ms: { text: \"1000\", value: 1e3 },\n  __range_ms: { text: \"1000\", value: 1e3 },\n  __range_s: { text: \"1\", value: 1 },\n  __range: { text: \"1s\", value: \"1s\" }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/components/monaco-query-field/monaco-completion-provider/validation.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/components/stats.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getStats: () => (/* binding */ getStats),\n/* harmony export */   shouldUpdateStats: () => (/* binding */ shouldUpdateStats)\n/* harmony export */ });\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/datetime/moment_wrapper.ts\");\n\n\nasync function getStats(datasource, query) {\n  if (!query) {\n    return null;\n  }\n  const response = await datasource.getQueryStats(query);\n  if (!response) {\n    return null;\n  }\n  return Object.values(response).every((v) => v === 0) ? null : response;\n}\nfunction compareTime(time1, time2) {\n  const isAbsolute = (0,_grafana_data__WEBPACK_IMPORTED_MODULE_0__.isDateTime)(time1);\n  if (isAbsolute) {\n    return time1.isSame(time2);\n  }\n  return time1 === time2;\n}\nfunction shouldUpdateStats(query, prevQuery, timerange, prevTimerange) {\n  if (prevQuery === void 0 || query.trim() !== prevQuery.trim()) {\n    return true;\n  }\n  if (compareTime(timerange.raw.from, prevTimerange?.raw.from) && compareTime(timerange.raw.to, prevTimerange?.raw.to)) {\n    return false;\n  }\n  return true;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL2NvbXBvbmVudHMvc3RhdHMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFnRDtBQUt6QyxlQUFlLFNBQVMsWUFBNEIsT0FBMkM7QUFDcEcsTUFBSSxDQUFDLE9BQU87QUFDVixXQUFPO0FBQUEsRUFDVDtBQUVBLFFBQU0sV0FBVyxNQUFNLFdBQVcsY0FBYyxLQUFLO0FBRXJELE1BQUksQ0FBQyxVQUFVO0FBQ2IsV0FBTztBQUFBLEVBQ1Q7QUFFQSxTQUFPLE9BQU8sT0FBTyxRQUFRLEVBQUUsTUFBTSxDQUFDLE1BQU0sTUFBTSxDQUFDLElBQUksT0FBTztBQUNoRTtBQVFBLFNBQVMsWUFBWSxPQUEwQixPQUFzQztBQUNuRixRQUFNLGFBQWEseURBQVUsQ0FBQyxLQUFLO0FBRW5DLE1BQUksWUFBWTtBQUNkLFdBQU8sTUFBTSxPQUFPLEtBQUs7QUFBQSxFQUMzQjtBQUVBLFNBQU8sVUFBVTtBQUNuQjtBQUVPLFNBQVMsa0JBQ2QsT0FDQSxXQUNBLFdBQ0EsZUFDUztBQUNULE1BQUksY0FBYyxVQUFhLE1BQU0sS0FBSyxNQUFNLFVBQVUsS0FBSyxHQUFHO0FBQ2hFLFdBQU87QUFBQSxFQUNUO0FBRUEsTUFDRSxZQUFZLFVBQVUsSUFBSSxNQUFNLGVBQWUsSUFBSSxJQUFJLEtBQ3ZELFlBQVksVUFBVSxJQUFJLElBQUksZUFBZSxJQUFJLEVBQUUsR0FDbkQ7QUFDQSxXQUFPO0FBQUEsRUFDVDtBQUVBLFNBQU87QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL2dyYWZhbmEvLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL2NvbXBvbmVudHMvc3RhdHMudHM/ZDY1NiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEYXRlVGltZSwgaXNEYXRlVGltZSwgVGltZVJhbmdlIH0gZnJvbSAnQGdyYWZhbmEvZGF0YSc7XG5cbmltcG9ydCB7IExva2lEYXRhc291cmNlIH0gZnJvbSAnLi4vZGF0YXNvdXJjZSc7XG5pbXBvcnQgeyBRdWVyeVN0YXRzIH0gZnJvbSAnLi4vdHlwZXMnO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0U3RhdHMoZGF0YXNvdXJjZTogTG9raURhdGFzb3VyY2UsIHF1ZXJ5OiBzdHJpbmcpOiBQcm9taXNlPFF1ZXJ5U3RhdHMgfCBudWxsPiB7XG4gIGlmICghcXVlcnkpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZGF0YXNvdXJjZS5nZXRRdWVyeVN0YXRzKHF1ZXJ5KTtcblxuICBpZiAoIXJlc3BvbnNlKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICByZXR1cm4gT2JqZWN0LnZhbHVlcyhyZXNwb25zZSkuZXZlcnkoKHYpID0+IHYgPT09IDApID8gbnVsbCA6IHJlc3BvbnNlO1xufVxuXG4vKipcbiAqIFRoaXMgZnVuY3Rpb24gY29tcGFyZXMgdHdvIHRpbWUgdmFsdWVzLiBJZiB0aGUgZmlyc3QgaXMgYWJzb2x1dGUsIGl0IGNvbXBhcmVzIHRoZW0gdXNpbmcgYERhdGVUaW1lLmlzU2FtZWAuXG4gKlxuICogQHBhcmFtIHsoRGF0ZVRpbWUgfCBzdHJpbmcpfSB0aW1lMVxuICogQHBhcmFtIHsoRGF0ZVRpbWUgfCBzdHJpbmcgfCB1bmRlZmluZWQpfSB0aW1lMlxuICovXG5mdW5jdGlvbiBjb21wYXJlVGltZSh0aW1lMTogRGF0ZVRpbWUgfCBzdHJpbmcsIHRpbWUyOiBEYXRlVGltZSB8IHN0cmluZyB8IHVuZGVmaW5lZCkge1xuICBjb25zdCBpc0Fic29sdXRlID0gaXNEYXRlVGltZSh0aW1lMSk7XG5cbiAgaWYgKGlzQWJzb2x1dGUpIHtcbiAgICByZXR1cm4gdGltZTEuaXNTYW1lKHRpbWUyKTtcbiAgfVxuXG4gIHJldHVybiB0aW1lMSA9PT0gdGltZTI7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzaG91bGRVcGRhdGVTdGF0cyhcbiAgcXVlcnk6IHN0cmluZyxcbiAgcHJldlF1ZXJ5OiBzdHJpbmcgfCB1bmRlZmluZWQsXG4gIHRpbWVyYW5nZTogVGltZVJhbmdlLFxuICBwcmV2VGltZXJhbmdlOiBUaW1lUmFuZ2UgfCB1bmRlZmluZWRcbik6IGJvb2xlYW4ge1xuICBpZiAocHJldlF1ZXJ5ID09PSB1bmRlZmluZWQgfHwgcXVlcnkudHJpbSgpICE9PSBwcmV2UXVlcnkudHJpbSgpKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICBpZiAoXG4gICAgY29tcGFyZVRpbWUodGltZXJhbmdlLnJhdy5mcm9tLCBwcmV2VGltZXJhbmdlPy5yYXcuZnJvbSkgJiZcbiAgICBjb21wYXJlVGltZSh0aW1lcmFuZ2UucmF3LnRvLCBwcmV2VGltZXJhbmdlPy5yYXcudG8pXG4gICkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHJldHVybiB0cnVlO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/components/stats.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/configuration/AlertingSettings.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AlertingSettings: () => (/* binding */ AlertingSettings)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _grafana_experimental__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-experimental-virtual-ba767552fe/0/cache/@grafana-experimental-npm-1.6.1-f052d2ae51-64c32bc9e3.zip/node_modules/@grafana/experimental/dist/esm/ConfigEditor/ConfigSection/ConfigSubSection.js\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Forms/InlineField.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Switch/Switch.tsx\");\n\n\n\n\nfunction AlertingSettings({\n  options,\n  onOptionsChange\n}) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_grafana_experimental__WEBPACK_IMPORTED_MODULE_1__.ConfigSubSection, { title: \"Alerting\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n    _grafana_ui__WEBPACK_IMPORTED_MODULE_2__.InlineField,\n    {\n      labelWidth: 29,\n      label: \"Manage alert rules in Alerting UI\",\n      disabled: options.readOnly,\n      tooltip: \"Manage alert rules for this data source. To manage other alerting resources, add an Alertmanager data source.\"\n    },\n    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n      _grafana_ui__WEBPACK_IMPORTED_MODULE_3__.InlineSwitch,\n      {\n        value: options.jsonData.manageAlerts !== false,\n        onChange: (event) => onOptionsChange({\n          ...options,\n          jsonData: { ...options.jsonData, manageAlerts: event.currentTarget.checked }\n        })\n      }\n    )\n  ));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL2NvbmZpZ3VyYXRpb24vQWxlcnRpbmdTZXR0aW5ncy50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFrQjtBQUdlO0FBQ1M7QUFFbkMsU0FBUyxpQkFBaUI7QUFBQSxFQUMvQjtBQUFBLEVBQ0E7QUFDRixHQUE0RTtBQUMxRSxTQUNFLDJFQUFDLG1FQUFnQixJQUFDLE9BQU0sY0FDdEI7QUFBQSxJQUFDLG9EQUFXO0FBQVg7QUFBQSxNQUNDLFlBQVk7QUFBQSxNQUNaLE9BQU07QUFBQSxNQUNOLFVBQVUsUUFBUTtBQUFBLE1BQ2xCLFNBQVE7QUFBQTtBQUFBLElBRVI7QUFBQSxNQUFDLHFEQUFZO0FBQVo7QUFBQSxRQUNDLE9BQU8sUUFBUSxTQUFTLGlCQUFpQjtBQUFBLFFBQ3pDLFVBQVUsQ0FBQyxVQUNULGdCQUFnQjtBQUFBLFVBQ2QsR0FBRztBQUFBLFVBQ0gsVUFBVSxFQUFFLEdBQUcsUUFBUSxVQUFVLGNBQWMsTUFBTyxjQUFjLFFBQVE7QUFBQSxRQUM5RSxDQUFDO0FBQUE7QUFBQSxJQUVMO0FBQUEsRUFDRixDQUNGO0FBRUoiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ncmFmYW5hLy4vcHVibGljL2FwcC9wbHVnaW5zL2RhdGFzb3VyY2UvbG9raS9jb25maWd1cmF0aW9uL0FsZXJ0aW5nU2V0dGluZ3MudHN4P2RjMTYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHsgRGF0YVNvdXJjZVBsdWdpbk9wdGlvbnNFZGl0b3JQcm9wcyB9IGZyb20gJ0BncmFmYW5hL2RhdGEnO1xuaW1wb3J0IHsgQ29uZmlnU3ViU2VjdGlvbiB9IGZyb20gJ0BncmFmYW5hL2V4cGVyaW1lbnRhbCc7XG5pbXBvcnQgeyBJbmxpbmVGaWVsZCwgSW5saW5lU3dpdGNoIH0gZnJvbSAnQGdyYWZhbmEvdWknO1xuXG5leHBvcnQgZnVuY3Rpb24gQWxlcnRpbmdTZXR0aW5ncyh7XG4gIG9wdGlvbnMsXG4gIG9uT3B0aW9uc0NoYW5nZSxcbn06IFBpY2s8RGF0YVNvdXJjZVBsdWdpbk9wdGlvbnNFZGl0b3JQcm9wcywgJ29wdGlvbnMnIHwgJ29uT3B0aW9uc0NoYW5nZSc+KSB7XG4gIHJldHVybiAoXG4gICAgPENvbmZpZ1N1YlNlY3Rpb24gdGl0bGU9XCJBbGVydGluZ1wiPlxuICAgICAgPElubGluZUZpZWxkXG4gICAgICAgIGxhYmVsV2lkdGg9ezI5fVxuICAgICAgICBsYWJlbD1cIk1hbmFnZSBhbGVydCBydWxlcyBpbiBBbGVydGluZyBVSVwiXG4gICAgICAgIGRpc2FibGVkPXtvcHRpb25zLnJlYWRPbmx5fVxuICAgICAgICB0b29sdGlwPVwiTWFuYWdlIGFsZXJ0IHJ1bGVzIGZvciB0aGlzIGRhdGEgc291cmNlLiBUbyBtYW5hZ2Ugb3RoZXIgYWxlcnRpbmcgcmVzb3VyY2VzLCBhZGQgYW4gQWxlcnRtYW5hZ2VyIGRhdGEgc291cmNlLlwiXG4gICAgICA+XG4gICAgICAgIDxJbmxpbmVTd2l0Y2hcbiAgICAgICAgICB2YWx1ZT17b3B0aW9ucy5qc29uRGF0YS5tYW5hZ2VBbGVydHMgIT09IGZhbHNlfVxuICAgICAgICAgIG9uQ2hhbmdlPXsoZXZlbnQpID0+XG4gICAgICAgICAgICBvbk9wdGlvbnNDaGFuZ2Uoe1xuICAgICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAgICAgICBqc29uRGF0YTogeyAuLi5vcHRpb25zLmpzb25EYXRhLCBtYW5hZ2VBbGVydHM6IGV2ZW50IS5jdXJyZW50VGFyZ2V0LmNoZWNrZWQgfSxcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgfVxuICAgICAgICAvPlxuICAgICAgPC9JbmxpbmVGaWVsZD5cbiAgICA8L0NvbmZpZ1N1YlNlY3Rpb24+XG4gICk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/configuration/AlertingSettings.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/configuration/ConfigEditor.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConfigEditor: () => (/* binding */ ConfigEditor)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _grafana_experimental__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-experimental-virtual-ba767552fe/0/cache/@grafana-experimental-npm-1.6.1-f052d2ae51-64c32bc9e3.zip/node_modules/@grafana/experimental/dist/esm/ConfigEditor/DataSourceDescription.js\");\n/* harmony import */ var _grafana_experimental__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-experimental-virtual-ba767552fe/0/cache/@grafana-experimental-npm-1.6.1-f052d2ae51-64c32bc9e3.zip/node_modules/@grafana/experimental/dist/esm/ConfigEditor/ConfigSection/ConfigSection.js\");\n/* harmony import */ var _grafana_runtime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-runtime-virtual-68c57d4c0c/1/packages/grafana-runtime/src/analytics/utils.ts\");\n/* harmony import */ var _grafana_runtime__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-runtime-virtual-68c57d4c0c/1/packages/grafana-runtime/src/config.ts\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/DataSourceSettings/DataSourceHttpSettings.tsx\");\n/* harmony import */ var app_core_components_Divider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/core/components/Divider.tsx\");\n/* harmony import */ var _AlertingSettings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/plugins/datasource/loki/configuration/AlertingSettings.tsx\");\n/* harmony import */ var _DerivedFields__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./public/app/plugins/datasource/loki/configuration/DerivedFields.tsx\");\n/* harmony import */ var _QuerySettings__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./public/app/plugins/datasource/loki/configuration/QuerySettings.tsx\");\n\n\n\n\n\n\n\n\n\nconst makeJsonUpdater = (field) => (options, value) => {\n  return {\n    ...options,\n    jsonData: {\n      ...options.jsonData,\n      [field]: value\n    }\n  };\n};\nconst setMaxLines = makeJsonUpdater(\"maxLines\");\nconst setPredefinedOperations = makeJsonUpdater(\"predefinedOperations\");\nconst setDerivedFields = makeJsonUpdater(\"derivedFields\");\nconst ConfigEditor = (props) => {\n  const { options, onOptionsChange } = props;\n  const updatePredefinedOperations = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (value) => {\n      (0,_grafana_runtime__WEBPACK_IMPORTED_MODULE_5__.reportInteraction)(\"grafana_loki_predefined_operations_changed\", { value });\n      onOptionsChange(setPredefinedOperations(options, value));\n    },\n    [options, onOptionsChange]\n  );\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n    _grafana_experimental__WEBPACK_IMPORTED_MODULE_6__.DataSourceDescription,\n    {\n      dataSourceName: \"Loki\",\n      docsLink: \"https://grafana.com/docs/grafana/latest/datasources/loki\",\n      hasRequiredFields: false\n    }\n  ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(app_core_components_Divider__WEBPACK_IMPORTED_MODULE_1__.Divider, null), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n    _grafana_ui__WEBPACK_IMPORTED_MODULE_7__.DataSourceHttpSettings,\n    {\n      defaultUrl: \"http://localhost:3100\",\n      dataSourceConfig: options,\n      showAccessOptions: false,\n      onChange: onOptionsChange,\n      secureSocksDSProxyEnabled: _grafana_runtime__WEBPACK_IMPORTED_MODULE_8__.config.secureSocksDSProxyEnabled\n    }\n  ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(app_core_components_Divider__WEBPACK_IMPORTED_MODULE_1__.Divider, null), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n    _grafana_experimental__WEBPACK_IMPORTED_MODULE_9__.ConfigSection,\n    {\n      title: \"Additional settings\",\n      description: \"Additional settings are optional settings that can be configured for more control over your data source.\",\n      isCollapsible: true,\n      isInitiallyOpen: true\n    },\n    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_AlertingSettings__WEBPACK_IMPORTED_MODULE_2__.AlertingSettings, { options, onOptionsChange }),\n    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(app_core_components_Divider__WEBPACK_IMPORTED_MODULE_1__.Divider, { hideLine: true }),\n    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n      _QuerySettings__WEBPACK_IMPORTED_MODULE_4__.QuerySettings,\n      {\n        maxLines: options.jsonData.maxLines || \"\",\n        onMaxLinedChange: (value) => onOptionsChange(setMaxLines(options, value)),\n        predefinedOperations: options.jsonData.predefinedOperations || \"\",\n        onPredefinedOperationsChange: updatePredefinedOperations\n      }\n    ),\n    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(app_core_components_Divider__WEBPACK_IMPORTED_MODULE_1__.Divider, { hideLine: true }),\n    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n      _DerivedFields__WEBPACK_IMPORTED_MODULE_3__.DerivedFields,\n      {\n        fields: options.jsonData.derivedFields,\n        onChange: (value) => onOptionsChange(setDerivedFields(options, value))\n      }\n    )\n  ));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL2NvbmZpZ3VyYXRpb24vQ29uZmlnRWRpdG9yLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQW1DO0FBR2tCO0FBQ1g7QUFDSDtBQUNmO0FBSVM7QUFDSDtBQUNBO0FBSTlCLE1BQU0sa0JBQ0osQ0FBZ0IsVUFDaEIsQ0FBQyxTQUEwQyxVQUE4QztBQUN2RixTQUFPO0FBQUEsSUFDTCxHQUFHO0FBQUEsSUFDSCxVQUFVO0FBQUEsTUFDUixHQUFHLFFBQVE7QUFBQSxNQUNYLENBQUMsS0FBSyxHQUFHO0FBQUEsSUFDWDtBQUFBLEVBQ0Y7QUFDRjtBQUVGLE1BQU0sY0FBYyxnQkFBZ0IsVUFBVTtBQUM5QyxNQUFNLDBCQUEwQixnQkFBZ0Isc0JBQXNCO0FBQ3RFLE1BQU0sbUJBQW1CLGdCQUFnQixlQUFlO0FBRWpELE1BQU0sZUFBZSxDQUFDLFVBQWlCO0FBQzVDLFFBQU0sRUFBRSxTQUFTLGdCQUFnQixJQUFJO0FBRXJDLFFBQU0sNkJBQTZCLGtEQUFXO0FBQVgsSUFDakMsQ0FBQyxVQUFrQjtBQUNqQix5RUFBaUIsQ0FBQyw4Q0FBOEMsRUFBRSxNQUFNLENBQUM7QUFDekUsc0JBQWdCLHdCQUF3QixTQUFTLEtBQUssQ0FBQztBQUFBLElBQ3pEO0FBQUEsSUFDQSxDQUFDLFNBQVMsZUFBZTtBQUFBLEVBQzNCO0FBRUEsU0FDRSwwSUFDRTtBQUFBLElBQUMsd0VBQXFCO0FBQXJCO0FBQUEsTUFDQyxnQkFBZTtBQUFBLE1BQ2YsVUFBUztBQUFBLE1BQ1QsbUJBQW1CO0FBQUE7QUFBQSxFQUNyQixHQUVBLDJFQUFDLGdFQUFPLE1BQUMsR0FFVDtBQUFBLElBQUMsK0RBQXNCO0FBQXRCO0FBQUEsTUFDQyxZQUFZO0FBQUEsTUFDWixrQkFBa0I7QUFBQSxNQUNsQixtQkFBbUI7QUFBQSxNQUNuQixVQUFVO0FBQUEsTUFDViwyQkFBMkIsb0RBQU0sQ0FBQztBQUFBO0FBQUEsRUFDcEMsR0FFQSwyRUFBQyxnRUFBTyxNQUFDLEdBRVQ7QUFBQSxJQUFDLGdFQUFhO0FBQWI7QUFBQSxNQUNDLE9BQU07QUFBQSxNQUNOLGFBQVk7QUFBQSxNQUNaLGVBQWU7QUFBQSxNQUNmLGlCQUFlO0FBQUE7QUFBQSxJQUVmLDJFQUFDLCtEQUFnQixJQUFDLFNBQWtCLGlCQUFrQztBQUFBLElBQ3RFLDJFQUFDLGdFQUFPLElBQUMsVUFBUSxNQUFDO0FBQUEsSUFDbEI7QUFBQSxNQUFDLHlEQUFhO0FBQWI7QUFBQSxRQUNDLFVBQVUsUUFBUSxTQUFTLFlBQVk7QUFBQSxRQUN2QyxrQkFBa0IsQ0FBQyxVQUFVLGdCQUFnQixZQUFZLFNBQVMsS0FBSyxDQUFDO0FBQUEsUUFDeEUsc0JBQXNCLFFBQVEsU0FBUyx3QkFBd0I7QUFBQSxRQUMvRCw4QkFBOEI7QUFBQTtBQUFBLElBQ2hDO0FBQUEsSUFDQSwyRUFBQyxnRUFBTyxJQUFDLFVBQVEsTUFBQztBQUFBLElBQ2xCO0FBQUEsTUFBQyx5REFBYTtBQUFiO0FBQUEsUUFDQyxRQUFRLFFBQVEsU0FBUztBQUFBLFFBQ3pCLFVBQVUsQ0FBQyxVQUFVLGdCQUFnQixpQkFBaUIsU0FBUyxLQUFLLENBQUM7QUFBQTtBQUFBLElBQ3ZFO0FBQUEsRUFDRixDQUNGO0FBRUoiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ncmFmYW5hLy4vcHVibGljL2FwcC9wbHVnaW5zL2RhdGFzb3VyY2UvbG9raS9jb25maWd1cmF0aW9uL0NvbmZpZ0VkaXRvci50c3g/MjMwYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlQ2FsbGJhY2sgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB7IERhdGFTb3VyY2VQbHVnaW5PcHRpb25zRWRpdG9yUHJvcHMsIERhdGFTb3VyY2VTZXR0aW5ncyB9IGZyb20gJ0BncmFmYW5hL2RhdGEnO1xuaW1wb3J0IHsgQ29uZmlnU2VjdGlvbiwgRGF0YVNvdXJjZURlc2NyaXB0aW9uIH0gZnJvbSAnQGdyYWZhbmEvZXhwZXJpbWVudGFsJztcbmltcG9ydCB7IGNvbmZpZywgcmVwb3J0SW50ZXJhY3Rpb24gfSBmcm9tICdAZ3JhZmFuYS9ydW50aW1lJztcbmltcG9ydCB7IERhdGFTb3VyY2VIdHRwU2V0dGluZ3MgfSBmcm9tICdAZ3JhZmFuYS91aSc7XG5pbXBvcnQgeyBEaXZpZGVyIH0gZnJvbSAnYXBwL2NvcmUvY29tcG9uZW50cy9EaXZpZGVyJztcblxuaW1wb3J0IHsgTG9raU9wdGlvbnMgfSBmcm9tICcuLi90eXBlcyc7XG5cbmltcG9ydCB7IEFsZXJ0aW5nU2V0dGluZ3MgfSBmcm9tICcuL0FsZXJ0aW5nU2V0dGluZ3MnO1xuaW1wb3J0IHsgRGVyaXZlZEZpZWxkcyB9IGZyb20gJy4vRGVyaXZlZEZpZWxkcyc7XG5pbXBvcnQgeyBRdWVyeVNldHRpbmdzIH0gZnJvbSAnLi9RdWVyeVNldHRpbmdzJztcblxuZXhwb3J0IHR5cGUgUHJvcHMgPSBEYXRhU291cmNlUGx1Z2luT3B0aW9uc0VkaXRvclByb3BzPExva2lPcHRpb25zPjtcblxuY29uc3QgbWFrZUpzb25VcGRhdGVyID1cbiAgPFQgZXh0ZW5kcyBhbnk+KGZpZWxkOiBrZXlvZiBMb2tpT3B0aW9ucykgPT5cbiAgKG9wdGlvbnM6IERhdGFTb3VyY2VTZXR0aW5nczxMb2tpT3B0aW9ucz4sIHZhbHVlOiBUKTogRGF0YVNvdXJjZVNldHRpbmdzPExva2lPcHRpb25zPiA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIC4uLm9wdGlvbnMsXG4gICAgICBqc29uRGF0YToge1xuICAgICAgICAuLi5vcHRpb25zLmpzb25EYXRhLFxuICAgICAgICBbZmllbGRdOiB2YWx1ZSxcbiAgICAgIH0sXG4gICAgfTtcbiAgfTtcblxuY29uc3Qgc2V0TWF4TGluZXMgPSBtYWtlSnNvblVwZGF0ZXIoJ21heExpbmVzJyk7XG5jb25zdCBzZXRQcmVkZWZpbmVkT3BlcmF0aW9ucyA9IG1ha2VKc29uVXBkYXRlcigncHJlZGVmaW5lZE9wZXJhdGlvbnMnKTtcbmNvbnN0IHNldERlcml2ZWRGaWVsZHMgPSBtYWtlSnNvblVwZGF0ZXIoJ2Rlcml2ZWRGaWVsZHMnKTtcblxuZXhwb3J0IGNvbnN0IENvbmZpZ0VkaXRvciA9IChwcm9wczogUHJvcHMpID0+IHtcbiAgY29uc3QgeyBvcHRpb25zLCBvbk9wdGlvbnNDaGFuZ2UgfSA9IHByb3BzO1xuXG4gIGNvbnN0IHVwZGF0ZVByZWRlZmluZWRPcGVyYXRpb25zID0gdXNlQ2FsbGJhY2soXG4gICAgKHZhbHVlOiBzdHJpbmcpID0+IHtcbiAgICAgIHJlcG9ydEludGVyYWN0aW9uKCdncmFmYW5hX2xva2lfcHJlZGVmaW5lZF9vcGVyYXRpb25zX2NoYW5nZWQnLCB7IHZhbHVlIH0pO1xuICAgICAgb25PcHRpb25zQ2hhbmdlKHNldFByZWRlZmluZWRPcGVyYXRpb25zKG9wdGlvbnMsIHZhbHVlKSk7XG4gICAgfSxcbiAgICBbb3B0aW9ucywgb25PcHRpb25zQ2hhbmdlXVxuICApO1xuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxEYXRhU291cmNlRGVzY3JpcHRpb25cbiAgICAgICAgZGF0YVNvdXJjZU5hbWU9XCJMb2tpXCJcbiAgICAgICAgZG9jc0xpbms9XCJodHRwczovL2dyYWZhbmEuY29tL2RvY3MvZ3JhZmFuYS9sYXRlc3QvZGF0YXNvdXJjZXMvbG9raVwiXG4gICAgICAgIGhhc1JlcXVpcmVkRmllbGRzPXtmYWxzZX1cbiAgICAgIC8+XG5cbiAgICAgIDxEaXZpZGVyIC8+XG5cbiAgICAgIDxEYXRhU291cmNlSHR0cFNldHRpbmdzXG4gICAgICAgIGRlZmF1bHRVcmw9eydodHRwOi8vbG9jYWxob3N0OjMxMDAnfVxuICAgICAgICBkYXRhU291cmNlQ29uZmlnPXtvcHRpb25zfVxuICAgICAgICBzaG93QWNjZXNzT3B0aW9ucz17ZmFsc2V9XG4gICAgICAgIG9uQ2hhbmdlPXtvbk9wdGlvbnNDaGFuZ2V9XG4gICAgICAgIHNlY3VyZVNvY2tzRFNQcm94eUVuYWJsZWQ9e2NvbmZpZy5zZWN1cmVTb2Nrc0RTUHJveHlFbmFibGVkfVxuICAgICAgLz5cblxuICAgICAgPERpdmlkZXIgLz5cblxuICAgICAgPENvbmZpZ1NlY3Rpb25cbiAgICAgICAgdGl0bGU9XCJBZGRpdGlvbmFsIHNldHRpbmdzXCJcbiAgICAgICAgZGVzY3JpcHRpb249XCJBZGRpdGlvbmFsIHNldHRpbmdzIGFyZSBvcHRpb25hbCBzZXR0aW5ncyB0aGF0IGNhbiBiZSBjb25maWd1cmVkIGZvciBtb3JlIGNvbnRyb2wgb3ZlciB5b3VyIGRhdGEgc291cmNlLlwiXG4gICAgICAgIGlzQ29sbGFwc2libGU9e3RydWV9XG4gICAgICAgIGlzSW5pdGlhbGx5T3BlblxuICAgICAgPlxuICAgICAgICA8QWxlcnRpbmdTZXR0aW5ncyBvcHRpb25zPXtvcHRpb25zfSBvbk9wdGlvbnNDaGFuZ2U9e29uT3B0aW9uc0NoYW5nZX0gLz5cbiAgICAgICAgPERpdmlkZXIgaGlkZUxpbmUgLz5cbiAgICAgICAgPFF1ZXJ5U2V0dGluZ3NcbiAgICAgICAgICBtYXhMaW5lcz17b3B0aW9ucy5qc29uRGF0YS5tYXhMaW5lcyB8fCAnJ31cbiAgICAgICAgICBvbk1heExpbmVkQ2hhbmdlPXsodmFsdWUpID0+IG9uT3B0aW9uc0NoYW5nZShzZXRNYXhMaW5lcyhvcHRpb25zLCB2YWx1ZSkpfVxuICAgICAgICAgIHByZWRlZmluZWRPcGVyYXRpb25zPXtvcHRpb25zLmpzb25EYXRhLnByZWRlZmluZWRPcGVyYXRpb25zIHx8ICcnfVxuICAgICAgICAgIG9uUHJlZGVmaW5lZE9wZXJhdGlvbnNDaGFuZ2U9e3VwZGF0ZVByZWRlZmluZWRPcGVyYXRpb25zfVxuICAgICAgICAvPlxuICAgICAgICA8RGl2aWRlciBoaWRlTGluZSAvPlxuICAgICAgICA8RGVyaXZlZEZpZWxkc1xuICAgICAgICAgIGZpZWxkcz17b3B0aW9ucy5qc29uRGF0YS5kZXJpdmVkRmllbGRzfVxuICAgICAgICAgIG9uQ2hhbmdlPXsodmFsdWUpID0+IG9uT3B0aW9uc0NoYW5nZShzZXREZXJpdmVkRmllbGRzKG9wdGlvbnMsIHZhbHVlKSl9XG4gICAgICAgIC8+XG4gICAgICA8L0NvbmZpZ1NlY3Rpb24+XG4gICAgPC8+XG4gICk7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/configuration/ConfigEditor.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/configuration/DebugSection.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DebugSection: () => (/* binding */ DebugSection)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/types/dataFrame.ts\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Forms/InlineField.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/TextArea/TextArea.tsx\");\n/* harmony import */ var _features_explore_utils_links__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/features/explore/utils/links.ts\");\n\n\n\n\n\nconst DebugSection = (props) => {\n  const { derivedFields, className } = props;\n  const [debugText, setDebugText] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\");\n  let debugFields = [];\n  if (debugText && derivedFields) {\n    debugFields = makeDebugFields(derivedFields, debugText);\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", { className }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_2__.InlineField, { label: \"Debug log message\", labelWidth: 24, grow: true }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n    _grafana_ui__WEBPACK_IMPORTED_MODULE_3__.TextArea,\n    {\n      type: \"text\",\n      \"aria-label\": \"Prometheus Query\",\n      placeholder: \"Paste an example log line here to test the regular expressions of your derived fields\",\n      value: debugText,\n      onChange: (event) => setDebugText(event.currentTarget.value)\n    }\n  )), !!debugFields.length && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(DebugFields, { fields: debugFields }));\n};\nconst DebugFields = ({ fields }) => {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"table\", { className: \"filter-table\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"thead\", null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"tr\", null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"th\", null, \"Name\"), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"th\", null, \"Value\"), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"th\", null, \"Url\"))), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"tbody\", null, fields.map((field) => {\n    let value = field.value;\n    if (field.error && field.error instanceof Error) {\n      value = field.error.message;\n    } else if (field.href) {\n      value = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"a\", { href: field.href }, value);\n    }\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"tr\", { key: `${field.name}=${field.value}` }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"td\", null, field.name), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"td\", null, value), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"td\", null, field.href ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"a\", { href: field.href }, field.href) : \"\"));\n  })));\n};\nfunction makeDebugFields(derivedFields, debugText) {\n  return derivedFields.filter((field) => field.name && field.matcherRegex).map((field) => {\n    try {\n      const testMatch = debugText.match(field.matcherRegex);\n      const value = testMatch && testMatch[1];\n      let link = null;\n      if (field.url && value) {\n        link = (0,_features_explore_utils_links__WEBPACK_IMPORTED_MODULE_1__.getFieldLinksForExplore)({\n          field: {\n            name: \"\",\n            type: _grafana_data__WEBPACK_IMPORTED_MODULE_4__.FieldType.string,\n            values: [value],\n            config: {\n              links: [{ title: \"\", url: field.url }]\n            }\n          },\n          rowIndex: 0,\n          range: {}\n        })[0];\n      }\n      const result = {\n        name: field.name,\n        value: value || \"<no match>\",\n        href: link ? link.href : void 0\n      };\n      return result;\n    } catch (error) {\n      const result = {\n        name: field.name,\n        error\n      };\n      return result;\n    }\n  });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL2NvbmZpZ3VyYXRpb24vRGVidWdTZWN0aW9uLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUEyQztBQUVDO0FBQ047QUFFRTtBQU9qQyxNQUFNLGVBQWUsQ0FBQyxVQUFpQjtBQUM1QyxRQUFNLEVBQUUsZUFBZSxVQUFVLElBQUk7QUFDckMsUUFBTSxDQUFDLFdBQVcsWUFBWSxJQUFJLCtDQUFRLENBQUMsRUFBRTtBQUU3QyxNQUFJLGNBQTRCLENBQUM7QUFDakMsTUFBSSxhQUFhLGVBQWU7QUFDOUIsa0JBQWMsZ0JBQWdCLGVBQWUsU0FBUztBQUFBLEVBQ3hEO0FBRUEsU0FDRSwyRUFBQyxTQUFJLGFBQ0gsMkVBQUMsb0RBQVcsSUFBQyxPQUFNLHFCQUFvQixZQUFZLElBQUksTUFBSSxRQUN6RDtBQUFBLElBQUMsaURBQVE7QUFBUjtBQUFBLE1BQ0MsTUFBSztBQUFBLE1BQ0wsY0FBVztBQUFBLE1BQ1gsYUFBWTtBQUFBLE1BQ1osT0FBTztBQUFBLE1BQ1AsVUFBVSxDQUFDLFVBQVUsYUFBYSxNQUFNLGNBQWMsS0FBSztBQUFBO0FBQUEsRUFDN0QsQ0FDRixHQUNDLENBQUMsQ0FBQyxZQUFZLFVBQVUsMkVBQUMsZUFBWSxRQUFRLGFBQWEsQ0FDN0Q7QUFFSjtBQUtBLE1BQU0sY0FBYyxDQUFDLEVBQUUsT0FBTyxNQUEyQjtBQUN2RCxTQUNFLDJFQUFDLFdBQU0sV0FBVyxrQkFDaEIsMkVBQUMsZUFDQywyRUFBQyxZQUNDLDJFQUFDLFlBQUcsTUFBSSxHQUNSLDJFQUFDLFlBQUcsT0FBSyxHQUNULDJFQUFDLFlBQUcsS0FBRyxDQUNULENBQ0YsR0FDQSwyRUFBQyxlQUNFLE9BQU8sSUFBSSxDQUFDLFVBQVU7QUFDckIsUUFBSSxRQUFtQixNQUFNO0FBQzdCLFFBQUksTUFBTSxTQUFTLE1BQU0saUJBQWlCLE9BQU87QUFDL0MsY0FBUSxNQUFNLE1BQU07QUFBQSxJQUN0QixXQUFXLE1BQU0sTUFBTTtBQUNyQixjQUFRLDJFQUFDLE9BQUUsTUFBTSxNQUFNLFFBQU8sS0FBTTtBQUFBLElBQ3RDO0FBQ0EsV0FDRSwyRUFBQyxRQUFHLEtBQUssR0FBRyxNQUFNLFFBQVEsTUFBTSxXQUM5QiwyRUFBQyxZQUFJLE1BQU0sSUFBSyxHQUNoQiwyRUFBQyxZQUFJLEtBQU0sR0FDWCwyRUFBQyxZQUFJLE1BQU0sT0FBTywyRUFBQyxPQUFFLE1BQU0sTUFBTSxRQUFPLE1BQU0sSUFBSyxJQUFPLEVBQUcsQ0FDL0Q7QUFBQSxFQUVKLENBQUMsQ0FDSCxDQUNGO0FBRUo7QUFTQSxTQUFTLGdCQUFnQixlQUFxQyxXQUFpQztBQUM3RixTQUFPLGNBQ0osT0FBTyxDQUFDLFVBQVUsTUFBTSxRQUFRLE1BQU0sWUFBWSxFQUNsRCxJQUFJLENBQUMsVUFBVTtBQUNkLFFBQUk7QUFDRixZQUFNLFlBQVksVUFBVSxNQUFNLE1BQU0sWUFBWTtBQUNwRCxZQUFNLFFBQVEsYUFBYSxVQUFVLENBQUM7QUFDdEMsVUFBSSxPQUFnQztBQUVwQyxVQUFJLE1BQU0sT0FBTyxPQUFPO0FBQ3RCLGVBQU8sc0ZBQXVCLENBQUM7QUFBQSxVQUM3QixPQUFPO0FBQUEsWUFDTCxNQUFNO0FBQUEsWUFDTixNQUFNLG9EQUFTLENBQUM7QUFBQSxZQUNoQixRQUFRLENBQUMsS0FBSztBQUFBLFlBQ2QsUUFBUTtBQUFBLGNBQ04sT0FBTyxDQUFDLEVBQUUsT0FBTyxJQUFJLEtBQUssTUFBTSxJQUFJLENBQUM7QUFBQSxZQUN2QztBQUFBLFVBQ0Y7QUFBQSxVQUNBLFVBQVU7QUFBQSxVQUNWLE9BQU8sQ0FBQztBQUFBLFFBQ1YsQ0FBQyxFQUFFLENBQUM7QUFBQSxNQUNOO0FBRUEsWUFBTSxTQUFxQjtBQUFBLFFBQ3pCLE1BQU0sTUFBTTtBQUFBLFFBQ1osT0FBTyxTQUFTO0FBQUEsUUFDaEIsTUFBTSxPQUFPLEtBQUssT0FBTztBQUFBLE1BQzNCO0FBQ0EsYUFBTztBQUFBLElBQ1QsU0FBUyxPQUFQO0FBQ0EsWUFBTSxTQUFxQjtBQUFBLFFBQ3pCLE1BQU0sTUFBTTtBQUFBLFFBQ1o7QUFBQSxNQUNGO0FBQ0EsYUFBTztBQUFBLElBQ1Q7QUFBQSxFQUNGLENBQUM7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL2dyYWZhbmEvLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL2NvbmZpZ3VyYXRpb24vRGVidWdTZWN0aW9uLnRzeD8yYWVkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBSZWFjdE5vZGUsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgeyBGaWVsZCwgRmllbGRUeXBlLCBMaW5rTW9kZWwgfSBmcm9tICdAZ3JhZmFuYS9kYXRhJztcbmltcG9ydCB7IElubGluZUZpZWxkLCBUZXh0QXJlYSB9IGZyb20gJ0BncmFmYW5hL3VpJztcblxuaW1wb3J0IHsgZ2V0RmllbGRMaW5rc0ZvckV4cGxvcmUgfSBmcm9tICcuLi8uLi8uLi8uLi9mZWF0dXJlcy9leHBsb3JlL3V0aWxzL2xpbmtzJztcbmltcG9ydCB7IERlcml2ZWRGaWVsZENvbmZpZyB9IGZyb20gJy4uL3R5cGVzJztcblxudHlwZSBQcm9wcyA9IHtcbiAgZGVyaXZlZEZpZWxkcz86IERlcml2ZWRGaWVsZENvbmZpZ1tdO1xuICBjbGFzc05hbWU/OiBzdHJpbmc7XG59O1xuZXhwb3J0IGNvbnN0IERlYnVnU2VjdGlvbiA9IChwcm9wczogUHJvcHMpID0+IHtcbiAgY29uc3QgeyBkZXJpdmVkRmllbGRzLCBjbGFzc05hbWUgfSA9IHByb3BzO1xuICBjb25zdCBbZGVidWdUZXh0LCBzZXREZWJ1Z1RleHRdID0gdXNlU3RhdGUoJycpO1xuXG4gIGxldCBkZWJ1Z0ZpZWxkczogRGVidWdGaWVsZFtdID0gW107XG4gIGlmIChkZWJ1Z1RleHQgJiYgZGVyaXZlZEZpZWxkcykge1xuICAgIGRlYnVnRmllbGRzID0gbWFrZURlYnVnRmllbGRzKGRlcml2ZWRGaWVsZHMsIGRlYnVnVGV4dCk7XG4gIH1cblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPXtjbGFzc05hbWV9PlxuICAgICAgPElubGluZUZpZWxkIGxhYmVsPVwiRGVidWcgbG9nIG1lc3NhZ2VcIiBsYWJlbFdpZHRoPXsyNH0gZ3Jvdz5cbiAgICAgICAgPFRleHRBcmVhXG4gICAgICAgICAgdHlwZT1cInRleHRcIlxuICAgICAgICAgIGFyaWEtbGFiZWw9XCJQcm9tZXRoZXVzIFF1ZXJ5XCJcbiAgICAgICAgICBwbGFjZWhvbGRlcj1cIlBhc3RlIGFuIGV4YW1wbGUgbG9nIGxpbmUgaGVyZSB0byB0ZXN0IHRoZSByZWd1bGFyIGV4cHJlc3Npb25zIG9mIHlvdXIgZGVyaXZlZCBmaWVsZHNcIlxuICAgICAgICAgIHZhbHVlPXtkZWJ1Z1RleHR9XG4gICAgICAgICAgb25DaGFuZ2U9eyhldmVudCkgPT4gc2V0RGVidWdUZXh0KGV2ZW50LmN1cnJlbnRUYXJnZXQudmFsdWUpfVxuICAgICAgICAvPlxuICAgICAgPC9JbmxpbmVGaWVsZD5cbiAgICAgIHshIWRlYnVnRmllbGRzLmxlbmd0aCAmJiA8RGVidWdGaWVsZHMgZmllbGRzPXtkZWJ1Z0ZpZWxkc30gLz59XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG50eXBlIERlYnVnRmllbGRJdGVtUHJvcHMgPSB7XG4gIGZpZWxkczogRGVidWdGaWVsZFtdO1xufTtcbmNvbnN0IERlYnVnRmllbGRzID0gKHsgZmllbGRzIH06IERlYnVnRmllbGRJdGVtUHJvcHMpID0+IHtcbiAgcmV0dXJuIChcbiAgICA8dGFibGUgY2xhc3NOYW1lPXsnZmlsdGVyLXRhYmxlJ30+XG4gICAgICA8dGhlYWQ+XG4gICAgICAgIDx0cj5cbiAgICAgICAgICA8dGg+TmFtZTwvdGg+XG4gICAgICAgICAgPHRoPlZhbHVlPC90aD5cbiAgICAgICAgICA8dGg+VXJsPC90aD5cbiAgICAgICAgPC90cj5cbiAgICAgIDwvdGhlYWQ+XG4gICAgICA8dGJvZHk+XG4gICAgICAgIHtmaWVsZHMubWFwKChmaWVsZCkgPT4ge1xuICAgICAgICAgIGxldCB2YWx1ZTogUmVhY3ROb2RlID0gZmllbGQudmFsdWU7XG4gICAgICAgICAgaWYgKGZpZWxkLmVycm9yICYmIGZpZWxkLmVycm9yIGluc3RhbmNlb2YgRXJyb3IpIHtcbiAgICAgICAgICAgIHZhbHVlID0gZmllbGQuZXJyb3IubWVzc2FnZTtcbiAgICAgICAgICB9IGVsc2UgaWYgKGZpZWxkLmhyZWYpIHtcbiAgICAgICAgICAgIHZhbHVlID0gPGEgaHJlZj17ZmllbGQuaHJlZn0+e3ZhbHVlfTwvYT47XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8dHIga2V5PXtgJHtmaWVsZC5uYW1lfT0ke2ZpZWxkLnZhbHVlfWB9PlxuICAgICAgICAgICAgICA8dGQ+e2ZpZWxkLm5hbWV9PC90ZD5cbiAgICAgICAgICAgICAgPHRkPnt2YWx1ZX08L3RkPlxuICAgICAgICAgICAgICA8dGQ+e2ZpZWxkLmhyZWYgPyA8YSBocmVmPXtmaWVsZC5ocmVmfT57ZmllbGQuaHJlZn08L2E+IDogJyd9PC90ZD5cbiAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgKTtcbiAgICAgICAgfSl9XG4gICAgICA8L3Rib2R5PlxuICAgIDwvdGFibGU+XG4gICk7XG59O1xuXG50eXBlIERlYnVnRmllbGQgPSB7XG4gIG5hbWU6IHN0cmluZztcbiAgZXJyb3I/OiB1bmtub3duO1xuICB2YWx1ZT86IHN0cmluZztcbiAgaHJlZj86IHN0cmluZztcbn07XG5cbmZ1bmN0aW9uIG1ha2VEZWJ1Z0ZpZWxkcyhkZXJpdmVkRmllbGRzOiBEZXJpdmVkRmllbGRDb25maWdbXSwgZGVidWdUZXh0OiBzdHJpbmcpOiBEZWJ1Z0ZpZWxkW10ge1xuICByZXR1cm4gZGVyaXZlZEZpZWxkc1xuICAgIC5maWx0ZXIoKGZpZWxkKSA9PiBmaWVsZC5uYW1lICYmIGZpZWxkLm1hdGNoZXJSZWdleClcbiAgICAubWFwKChmaWVsZCkgPT4ge1xuICAgICAgdHJ5IHtcbiAgICAgICAgY29uc3QgdGVzdE1hdGNoID0gZGVidWdUZXh0Lm1hdGNoKGZpZWxkLm1hdGNoZXJSZWdleCk7XG4gICAgICAgIGNvbnN0IHZhbHVlID0gdGVzdE1hdGNoICYmIHRlc3RNYXRjaFsxXTtcbiAgICAgICAgbGV0IGxpbms6IExpbmtNb2RlbDxGaWVsZD4gfCBudWxsID0gbnVsbDtcblxuICAgICAgICBpZiAoZmllbGQudXJsICYmIHZhbHVlKSB7XG4gICAgICAgICAgbGluayA9IGdldEZpZWxkTGlua3NGb3JFeHBsb3JlKHtcbiAgICAgICAgICAgIGZpZWxkOiB7XG4gICAgICAgICAgICAgIG5hbWU6ICcnLFxuICAgICAgICAgICAgICB0eXBlOiBGaWVsZFR5cGUuc3RyaW5nLFxuICAgICAgICAgICAgICB2YWx1ZXM6IFt2YWx1ZV0sXG4gICAgICAgICAgICAgIGNvbmZpZzoge1xuICAgICAgICAgICAgICAgIGxpbmtzOiBbeyB0aXRsZTogJycsIHVybDogZmllbGQudXJsIH1dLFxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHJvd0luZGV4OiAwLFxuICAgICAgICAgICAgcmFuZ2U6IHt9IGFzIGFueSxcbiAgICAgICAgICB9KVswXTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHJlc3VsdDogRGVidWdGaWVsZCA9IHtcbiAgICAgICAgICBuYW1lOiBmaWVsZC5uYW1lLFxuICAgICAgICAgIHZhbHVlOiB2YWx1ZSB8fCAnPG5vIG1hdGNoPicsXG4gICAgICAgICAgaHJlZjogbGluayA/IGxpbmsuaHJlZiA6IHVuZGVmaW5lZCxcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGNvbnN0IHJlc3VsdDogRGVidWdGaWVsZCA9IHtcbiAgICAgICAgICBuYW1lOiBmaWVsZC5uYW1lLFxuICAgICAgICAgIGVycm9yLFxuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgfVxuICAgIH0pO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/configuration/DebugSection.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/configuration/DerivedField.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DerivedField: () => (/* binding */ DerivedField)\n/* harmony export */ });\n/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/@emotion-css-npm-11.11.2-dbfa42cf83-1edea109df.zip/node_modules/@emotion/css/dist/emotion-css.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_use__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./.yarn/__virtual__/react-use-virtual-dd7926f458/0/cache/react-use-npm-17.4.0-0ef4521544-0889da919b.zip/node_modules/react-use/esm/usePrevious.js\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/themes/ThemeContext.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Forms/Field.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Input/Input.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Button/Button.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/DataLinks/DataLinkInput.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Switch/Switch.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Forms/Label.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Tooltip/Tooltip.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Icon/Icon.tsx\");\n/* harmony import */ var app_features_datasources_components_picker_DataSourcePicker__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/features/datasources/components/picker/DataSourcePicker.tsx\");\n\n\n\n\n\n\nconst getStyles = (theme) => ({\n  row: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n    display: flex;\n    align-items: baseline;\n  `,\n  nameField: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n    flex: 2;\n    margin-right: ${theme.spacing(0.5)};\n  `,\n  regexField: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n    flex: 3;\n    margin-right: ${theme.spacing(0.5)};\n  `,\n  urlField: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n    flex: 1;\n    margin-right: ${theme.spacing(0.5)};\n  `,\n  urlDisplayLabelField: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n    flex: 1;\n  `,\n  internalLink: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n    margin-right: ${theme.spacing(1)};\n  `,\n  dataSource: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)``\n});\nconst DerivedField = (props) => {\n  const { value, onChange, onDelete, suggestions, className, validateName } = props;\n  const styles = (0,_grafana_ui__WEBPACK_IMPORTED_MODULE_3__.useStyles2)(getStyles);\n  const [showInternalLink, setShowInternalLink] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!!value.datasourceUid);\n  const previousUid = (0,react_use__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(value.datasourceUid);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (!previousUid && value.datasourceUid && !showInternalLink) {\n      setShowInternalLink(true);\n    }\n    if (previousUid && !value.datasourceUid && showInternalLink) {\n      setShowInternalLink(false);\n    }\n  }, [previousUid, value.datasourceUid, showInternalLink]);\n  const handleChange = (field) => (event) => {\n    onChange({\n      ...value,\n      [field]: event.currentTarget.value\n    });\n  };\n  const invalidName = !validateName(value.name);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className, \"data-testid\": \"derived-field\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"gf-form\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_5__.Field, { className: styles.nameField, label: \"Name\", invalid: invalidName, error: \"The name is already in use\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_6__.Input, { value: value.name, onChange: handleChange(\"name\"), placeholder: \"Field name\", invalid: invalidName })), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n    _grafana_ui__WEBPACK_IMPORTED_MODULE_5__.Field,\n    {\n      className: styles.regexField,\n      label: /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n        TooltipLabel,\n        {\n          label: \"Regex\",\n          content: \"Use to parse and capture some part of the log message. You can use the captured groups in the template.\"\n        }\n      )\n    },\n    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_6__.Input, { value: value.matcherRegex, onChange: handleChange(\"matcherRegex\") })\n  ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_5__.Field, { label: \"\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n    _grafana_ui__WEBPACK_IMPORTED_MODULE_7__.Button,\n    {\n      variant: \"destructive\",\n      title: \"Remove field\",\n      icon: \"times\",\n      onClick: (event) => {\n        event.preventDefault();\n        onDelete();\n      }\n    }\n  ))), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"gf-form\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_5__.Field, { label: showInternalLink ? \"Query\" : \"URL\", className: styles.urlField }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n    _grafana_ui__WEBPACK_IMPORTED_MODULE_8__.DataLinkInput,\n    {\n      placeholder: showInternalLink ? \"${__value.raw}\" : \"http://example.com/${__value.raw}\",\n      value: value.url || \"\",\n      onChange: (newValue) => onChange({\n        ...value,\n        url: newValue\n      }),\n      suggestions\n    }\n  )), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n    _grafana_ui__WEBPACK_IMPORTED_MODULE_5__.Field,\n    {\n      className: styles.urlDisplayLabelField,\n      label: /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n        TooltipLabel,\n        {\n          label: \"URL Label\",\n          content: \"Use to override the button label when this derived field is found in a log.\"\n        }\n      )\n    },\n    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_6__.Input, { value: value.urlDisplayLabel, onChange: handleChange(\"urlDisplayLabel\") })\n  )), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: \"gf-form\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_5__.Field, { label: \"Internal link\", className: styles.internalLink }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n    _grafana_ui__WEBPACK_IMPORTED_MODULE_9__.Switch,\n    {\n      value: showInternalLink,\n      onChange: (e) => {\n        const { checked } = e.currentTarget;\n        if (!checked) {\n          onChange({\n            ...value,\n            datasourceUid: void 0\n          });\n        }\n        setShowInternalLink(checked);\n      }\n    }\n  )), showInternalLink && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_5__.Field, { label: \"\", className: styles.dataSource }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n    app_features_datasources_components_picker_DataSourcePicker__WEBPACK_IMPORTED_MODULE_2__.DataSourcePicker,\n    {\n      tracing: true,\n      onChange: (ds) => onChange({\n        ...value,\n        datasourceUid: ds.uid\n      }),\n      current: value.datasourceUid,\n      noDefault: true\n    }\n  ))));\n};\nconst TooltipLabel = ({ content, label }) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_10__.Label, null, label, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_11__.Tooltip, { placement: \"top\", content, theme: \"info\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_12__.Icon, { tabIndex: 0, name: \"info-circle\", size: \"sm\", style: { marginLeft: \"10px\" } })));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/configuration/DerivedField.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/configuration/DerivedFields.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DerivedFields: () => (/* binding */ DerivedFields)\n/* harmony export */ });\n/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/@emotion-css-npm-11.11.2-dbfa42cf83-1edea109df.zip/node_modules/@emotion/css/dist/emotion-css.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/utils/dataLinks.ts\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/types/dataLink.ts\");\n/* harmony import */ var _grafana_experimental__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-experimental-virtual-ba767552fe/0/cache/@grafana-experimental-npm-1.6.1-f052d2ae51-64c32bc9e3.zip/node_modules/@grafana/experimental/dist/esm/ConfigEditor/ConfigSection/ConfigSubSection.js\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/themes/ThemeContext.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Button/Button.tsx\");\n/* harmony import */ var app_core_components_ConfigDescriptionLink__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/core/components/ConfigDescriptionLink.tsx\");\n/* harmony import */ var _DebugSection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./public/app/plugins/datasource/loki/configuration/DebugSection.tsx\");\n/* harmony import */ var _DerivedField__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./public/app/plugins/datasource/loki/configuration/DerivedField.tsx\");\n\n\n\n\n\n\n\n\n\nconst getStyles = (theme) => ({\n  addButton: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n    margin-right: 10px;\n  `,\n  derivedField: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n    margin-bottom: ${theme.spacing(1)};\n  `,\n  container: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n    margin-bottom: ${theme.spacing(4)};\n  `,\n  debugSection: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n    margin-top: ${theme.spacing(4)};\n  `\n});\nconst DerivedFields = ({ fields = [], onChange }) => {\n  const theme = (0,_grafana_ui__WEBPACK_IMPORTED_MODULE_5__.useTheme2)();\n  const styles = getStyles(theme);\n  const [showDebug, setShowDebug] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n  const validateName = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (name) => {\n      return fields.filter((field) => field.name && field.name === name).length <= 1;\n    },\n    [fields]\n  );\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n    _grafana_experimental__WEBPACK_IMPORTED_MODULE_6__.ConfigSubSection,\n    {\n      title: \"Derived fields\",\n      description: /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n        app_core_components_ConfigDescriptionLink__WEBPACK_IMPORTED_MODULE_2__.ConfigDescriptionLink,\n        {\n          description: \"Derived fields can be used to extract new fields from a log message and create a link from its value.\",\n          suffix: \"loki/#configure-derived-fields\",\n          feature: \"derived fields\"\n        }\n      )\n    },\n    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: styles.container }, fields.map((field, index) => {\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n        _DerivedField__WEBPACK_IMPORTED_MODULE_4__.DerivedField,\n        {\n          className: styles.derivedField,\n          key: index,\n          value: field,\n          onChange: (newField) => {\n            const newDerivedFields = [...fields];\n            newDerivedFields.splice(index, 1, newField);\n            onChange(newDerivedFields);\n          },\n          onDelete: () => {\n            const newDerivedFields = [...fields];\n            newDerivedFields.splice(index, 1);\n            onChange(newDerivedFields);\n          },\n          validateName,\n          suggestions: [\n            {\n              value: _grafana_data__WEBPACK_IMPORTED_MODULE_7__.DataLinkBuiltInVars.valueRaw,\n              label: \"Raw value\",\n              documentation: \"Exact string captured by the regular expression\",\n              origin: _grafana_data__WEBPACK_IMPORTED_MODULE_8__.VariableOrigin.Value\n            }\n          ]\n        }\n      );\n    }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n      _grafana_ui__WEBPACK_IMPORTED_MODULE_9__.Button,\n      {\n        variant: \"secondary\",\n        className: styles.addButton,\n        icon: \"plus\",\n        onClick: (event) => {\n          event.preventDefault();\n          const newDerivedFields = [...fields, { name: \"\", matcherRegex: \"\", urlDisplayLabel: \"\", url: \"\" }];\n          onChange(newDerivedFields);\n        }\n      },\n      \"Add\"\n    ), fields.length > 0 && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_9__.Button, { variant: \"secondary\", type: \"button\", onClick: () => setShowDebug(!showDebug) }, showDebug ? \"Hide example log message\" : \"Show example log message\")), showDebug && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: styles.debugSection }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n      _DebugSection__WEBPACK_IMPORTED_MODULE_3__.DebugSection,\n      {\n        className: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n                margin-bottom: 10px;\n              `,\n        derivedFields: fields\n      }\n    )))\n  );\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL2NvbmZpZ3VyYXRpb24vRGVyaXZlZEZpZWxkcy50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFvQjtBQUN5QjtBQUVzQjtBQUNsQztBQUNDO0FBQ0k7QUFJVDtBQUNBO0FBRTdCLE1BQU0sWUFBWSxDQUFDLFdBQTBCO0FBQUEsRUFDM0MsV0FBVyxpREFBRztBQUFIO0FBQUE7QUFBQSxFQUdYLGNBQWMsaURBQUc7QUFBSCxxQkFDSyxNQUFNLFFBQVEsQ0FBQztBQUFBO0FBQUEsRUFFbEMsV0FBVyxpREFBRztBQUFILHFCQUNRLE1BQU0sUUFBUSxDQUFDO0FBQUE7QUFBQSxFQUVsQyxjQUFjLGlEQUFHO0FBQUgsa0JBQ0UsTUFBTSxRQUFRLENBQUM7QUFBQTtBQUVqQztBQU9PLE1BQU0sZ0JBQWdCLENBQUMsRUFBRSxTQUFTLENBQUMsR0FBRyxTQUFTLE1BQWE7QUFDakUsUUFBTSxRQUFRLHNEQUFTLENBQUM7QUFDeEIsUUFBTSxTQUFTLFVBQVUsS0FBSztBQUU5QixRQUFNLENBQUMsV0FBVyxZQUFZLElBQUksK0NBQVEsQ0FBQyxLQUFLO0FBRWhELFFBQU0sZUFBZSxrREFBVztBQUFYLElBQ25CLENBQUMsU0FBaUI7QUFDaEIsYUFBTyxPQUFPLE9BQU8sQ0FBQyxVQUFVLE1BQU0sUUFBUSxNQUFNLFNBQVMsSUFBSSxFQUFFLFVBQVU7QUFBQSxJQUMvRTtBQUFBLElBQ0EsQ0FBQyxNQUFNO0FBQUEsRUFDVDtBQUVBLFNBQ0U7QUFBQSxJQUFDLG1FQUFnQjtBQUFoQjtBQUFBLE1BQ0MsT0FBTTtBQUFBLE1BQ04sYUFDRTtBQUFBLFFBQUMsNEZBQXFCO0FBQXJCO0FBQUEsVUFDQyxhQUFZO0FBQUEsVUFDWixRQUFPO0FBQUEsVUFDUCxTQUFRO0FBQUE7QUFBQSxNQUNWO0FBQUE7QUFBQSxJQUdGLDJFQUFDLFNBQUksV0FBVyxPQUFPLGFBQ3BCLE9BQU8sSUFBSSxDQUFDLE9BQU8sVUFBVTtBQUM1QixhQUNFO0FBQUEsUUFBQyx1REFBWTtBQUFaO0FBQUEsVUFDQyxXQUFXLE9BQU87QUFBQSxVQUNsQixLQUFLO0FBQUEsVUFDTCxPQUFPO0FBQUEsVUFDUCxVQUFVLENBQUMsYUFBYTtBQUN0QixrQkFBTSxtQkFBbUIsQ0FBQyxHQUFHLE1BQU07QUFDbkMsNkJBQWlCLE9BQU8sT0FBTyxHQUFHLFFBQVE7QUFDMUMscUJBQVMsZ0JBQWdCO0FBQUEsVUFDM0I7QUFBQSxVQUNBLFVBQVUsTUFBTTtBQUNkLGtCQUFNLG1CQUFtQixDQUFDLEdBQUcsTUFBTTtBQUNuQyw2QkFBaUIsT0FBTyxPQUFPLENBQUM7QUFDaEMscUJBQVMsZ0JBQWdCO0FBQUEsVUFDM0I7QUFBQSxVQUNBO0FBQUEsVUFDQSxhQUFhO0FBQUEsWUFDWDtBQUFBLGNBQ0UsT0FBTyw4REFBbUIsQ0FBQztBQUFBLGNBQzNCLE9BQU87QUFBQSxjQUNQLGVBQWU7QUFBQSxjQUNmLFFBQVEseURBQWMsQ0FBQztBQUFBLFlBQ3pCO0FBQUEsVUFDRjtBQUFBO0FBQUEsTUFDRjtBQUFBLElBRUosQ0FBQyxHQUNELDJFQUFDLGFBQ0M7QUFBQSxNQUFDLCtDQUFNO0FBQU47QUFBQSxRQUNDLFNBQVE7QUFBQSxRQUNSLFdBQVcsT0FBTztBQUFBLFFBQ2xCLE1BQUs7QUFBQSxRQUNMLFNBQVMsQ0FBQyxVQUFVO0FBQ2xCLGdCQUFNLGVBQWU7QUFDckIsZ0JBQU0sbUJBQW1CLENBQUMsR0FBRyxRQUFRLEVBQUUsTUFBTSxJQUFJLGNBQWMsSUFBSSxpQkFBaUIsSUFBSSxLQUFLLEdBQUcsQ0FBQztBQUNqRyxtQkFBUyxnQkFBZ0I7QUFBQSxRQUMzQjtBQUFBO0FBQUEsTUFDRDtBQUFBLElBRUQsR0FFQyxPQUFPLFNBQVMsS0FDZiwyRUFBQywrQ0FBTSxJQUFDLFNBQVEsYUFBWSxNQUFLLFVBQVMsU0FBUyxNQUFNLGFBQWEsQ0FBQyxTQUFTLEtBQzdFLFlBQVksNkJBQTZCLDBCQUM1QyxDQUVKLEdBRUMsYUFDQywyRUFBQyxTQUFJLFdBQVcsT0FBTyxnQkFDckI7QUFBQSxNQUFDLHVEQUFZO0FBQVo7QUFBQSxRQUNDLFdBQVcsaURBQUc7QUFBSDtBQUFBO0FBQUEsUUFHWCxlQUFlO0FBQUE7QUFBQSxJQUNqQixDQUNGLENBRUo7QUFBQSxFQUNGO0FBRUoiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ncmFmYW5hLy4vcHVibGljL2FwcC9wbHVnaW5zL2RhdGFzb3VyY2UvbG9raS9jb25maWd1cmF0aW9uL0Rlcml2ZWRGaWVsZHMudHN4P2Q3NmEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vY3NzJztcbmltcG9ydCBSZWFjdCwgeyB1c2VDYWxsYmFjaywgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB7IEdyYWZhbmFUaGVtZTIsIFZhcmlhYmxlT3JpZ2luLCBEYXRhTGlua0J1aWx0SW5WYXJzIH0gZnJvbSAnQGdyYWZhbmEvZGF0YSc7XG5pbXBvcnQgeyBDb25maWdTdWJTZWN0aW9uIH0gZnJvbSAnQGdyYWZhbmEvZXhwZXJpbWVudGFsJztcbmltcG9ydCB7IEJ1dHRvbiwgdXNlVGhlbWUyIH0gZnJvbSAnQGdyYWZhbmEvdWknO1xuaW1wb3J0IHsgQ29uZmlnRGVzY3JpcHRpb25MaW5rIH0gZnJvbSAnYXBwL2NvcmUvY29tcG9uZW50cy9Db25maWdEZXNjcmlwdGlvbkxpbmsnO1xuXG5pbXBvcnQgeyBEZXJpdmVkRmllbGRDb25maWcgfSBmcm9tICcuLi90eXBlcyc7XG5cbmltcG9ydCB7IERlYnVnU2VjdGlvbiB9IGZyb20gJy4vRGVidWdTZWN0aW9uJztcbmltcG9ydCB7IERlcml2ZWRGaWVsZCB9IGZyb20gJy4vRGVyaXZlZEZpZWxkJztcblxuY29uc3QgZ2V0U3R5bGVzID0gKHRoZW1lOiBHcmFmYW5hVGhlbWUyKSA9PiAoe1xuICBhZGRCdXR0b246IGNzc2BcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG4gIGAsXG4gIGRlcml2ZWRGaWVsZDogY3NzYFxuICAgIG1hcmdpbi1ib3R0b206ICR7dGhlbWUuc3BhY2luZygxKX07XG4gIGAsXG4gIGNvbnRhaW5lcjogY3NzYFxuICAgIG1hcmdpbi1ib3R0b206ICR7dGhlbWUuc3BhY2luZyg0KX07XG4gIGAsXG4gIGRlYnVnU2VjdGlvbjogY3NzYFxuICAgIG1hcmdpbi10b3A6ICR7dGhlbWUuc3BhY2luZyg0KX07XG4gIGAsXG59KTtcblxudHlwZSBQcm9wcyA9IHtcbiAgZmllbGRzPzogRGVyaXZlZEZpZWxkQ29uZmlnW107XG4gIG9uQ2hhbmdlOiAodmFsdWU6IERlcml2ZWRGaWVsZENvbmZpZ1tdKSA9PiB2b2lkO1xufTtcblxuZXhwb3J0IGNvbnN0IERlcml2ZWRGaWVsZHMgPSAoeyBmaWVsZHMgPSBbXSwgb25DaGFuZ2UgfTogUHJvcHMpID0+IHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZTIoKTtcbiAgY29uc3Qgc3R5bGVzID0gZ2V0U3R5bGVzKHRoZW1lKTtcblxuICBjb25zdCBbc2hvd0RlYnVnLCBzZXRTaG93RGVidWddID0gdXNlU3RhdGUoZmFsc2UpO1xuXG4gIGNvbnN0IHZhbGlkYXRlTmFtZSA9IHVzZUNhbGxiYWNrKFxuICAgIChuYW1lOiBzdHJpbmcpID0+IHtcbiAgICAgIHJldHVybiBmaWVsZHMuZmlsdGVyKChmaWVsZCkgPT4gZmllbGQubmFtZSAmJiBmaWVsZC5uYW1lID09PSBuYW1lKS5sZW5ndGggPD0gMTtcbiAgICB9LFxuICAgIFtmaWVsZHNdXG4gICk7XG5cbiAgcmV0dXJuIChcbiAgICA8Q29uZmlnU3ViU2VjdGlvblxuICAgICAgdGl0bGU9XCJEZXJpdmVkIGZpZWxkc1wiXG4gICAgICBkZXNjcmlwdGlvbj17XG4gICAgICAgIDxDb25maWdEZXNjcmlwdGlvbkxpbmtcbiAgICAgICAgICBkZXNjcmlwdGlvbj1cIkRlcml2ZWQgZmllbGRzIGNhbiBiZSB1c2VkIHRvIGV4dHJhY3QgbmV3IGZpZWxkcyBmcm9tIGEgbG9nIG1lc3NhZ2UgYW5kIGNyZWF0ZSBhIGxpbmsgZnJvbSBpdHMgdmFsdWUuXCJcbiAgICAgICAgICBzdWZmaXg9XCJsb2tpLyNjb25maWd1cmUtZGVyaXZlZC1maWVsZHNcIlxuICAgICAgICAgIGZlYXR1cmU9XCJkZXJpdmVkIGZpZWxkc1wiXG4gICAgICAgIC8+XG4gICAgICB9XG4gICAgPlxuICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5jb250YWluZXJ9PlxuICAgICAgICB7ZmllbGRzLm1hcCgoZmllbGQsIGluZGV4KSA9PiB7XG4gICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxEZXJpdmVkRmllbGRcbiAgICAgICAgICAgICAgY2xhc3NOYW1lPXtzdHlsZXMuZGVyaXZlZEZpZWxkfVxuICAgICAgICAgICAgICBrZXk9e2luZGV4fVxuICAgICAgICAgICAgICB2YWx1ZT17ZmllbGR9XG4gICAgICAgICAgICAgIG9uQ2hhbmdlPXsobmV3RmllbGQpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBuZXdEZXJpdmVkRmllbGRzID0gWy4uLmZpZWxkc107XG4gICAgICAgICAgICAgICAgbmV3RGVyaXZlZEZpZWxkcy5zcGxpY2UoaW5kZXgsIDEsIG5ld0ZpZWxkKTtcbiAgICAgICAgICAgICAgICBvbkNoYW5nZShuZXdEZXJpdmVkRmllbGRzKTtcbiAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgb25EZWxldGU9eygpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBuZXdEZXJpdmVkRmllbGRzID0gWy4uLmZpZWxkc107XG4gICAgICAgICAgICAgICAgbmV3RGVyaXZlZEZpZWxkcy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgICAgICAgICAgIG9uQ2hhbmdlKG5ld0Rlcml2ZWRGaWVsZHMpO1xuICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICB2YWxpZGF0ZU5hbWU9e3ZhbGlkYXRlTmFtZX1cbiAgICAgICAgICAgICAgc3VnZ2VzdGlvbnM9e1tcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICB2YWx1ZTogRGF0YUxpbmtCdWlsdEluVmFycy52YWx1ZVJhdyxcbiAgICAgICAgICAgICAgICAgIGxhYmVsOiAnUmF3IHZhbHVlJyxcbiAgICAgICAgICAgICAgICAgIGRvY3VtZW50YXRpb246ICdFeGFjdCBzdHJpbmcgY2FwdHVyZWQgYnkgdGhlIHJlZ3VsYXIgZXhwcmVzc2lvbicsXG4gICAgICAgICAgICAgICAgICBvcmlnaW46IFZhcmlhYmxlT3JpZ2luLlZhbHVlLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIF19XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICk7XG4gICAgICAgIH0pfVxuICAgICAgICA8ZGl2PlxuICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgIHZhcmlhbnQ9XCJzZWNvbmRhcnlcIlxuICAgICAgICAgICAgY2xhc3NOYW1lPXtzdHlsZXMuYWRkQnV0dG9ufVxuICAgICAgICAgICAgaWNvbj1cInBsdXNcIlxuICAgICAgICAgICAgb25DbGljaz17KGV2ZW50KSA9PiB7XG4gICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgIGNvbnN0IG5ld0Rlcml2ZWRGaWVsZHMgPSBbLi4uZmllbGRzLCB7IG5hbWU6ICcnLCBtYXRjaGVyUmVnZXg6ICcnLCB1cmxEaXNwbGF5TGFiZWw6ICcnLCB1cmw6ICcnIH1dO1xuICAgICAgICAgICAgICBvbkNoYW5nZShuZXdEZXJpdmVkRmllbGRzKTtcbiAgICAgICAgICAgIH19XG4gICAgICAgICAgPlxuICAgICAgICAgICAgQWRkXG4gICAgICAgICAgPC9CdXR0b24+XG5cbiAgICAgICAgICB7ZmllbGRzLmxlbmd0aCA+IDAgJiYgKFxuICAgICAgICAgICAgPEJ1dHRvbiB2YXJpYW50PVwic2Vjb25kYXJ5XCIgdHlwZT1cImJ1dHRvblwiIG9uQ2xpY2s9eygpID0+IHNldFNob3dEZWJ1Zyghc2hvd0RlYnVnKX0+XG4gICAgICAgICAgICAgIHtzaG93RGVidWcgPyAnSGlkZSBleGFtcGxlIGxvZyBtZXNzYWdlJyA6ICdTaG93IGV4YW1wbGUgbG9nIG1lc3NhZ2UnfVxuICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgKX1cbiAgICAgICAgPC9kaXY+XG5cbiAgICAgICAge3Nob3dEZWJ1ZyAmJiAoXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5kZWJ1Z1NlY3Rpb259PlxuICAgICAgICAgICAgPERlYnVnU2VjdGlvblxuICAgICAgICAgICAgICBjbGFzc05hbWU9e2Nzc2BcbiAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgICAgICAgICAgICBgfVxuICAgICAgICAgICAgICBkZXJpdmVkRmllbGRzPXtmaWVsZHN9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICApfVxuICAgICAgPC9kaXY+XG4gICAgPC9Db25maWdTdWJTZWN0aW9uPlxuICApO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/configuration/DerivedFields.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/configuration/QuerySettings.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QuerySettings: () => (/* binding */ QuerySettings)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _grafana_experimental__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-experimental-virtual-ba767552fe/0/cache/@grafana-experimental-npm-1.6.1-f052d2ae51-64c32bc9e3.zip/node_modules/@grafana/experimental/dist/esm/ConfigEditor/ConfigSection/ConfigSubSection.js\");\n/* harmony import */ var _grafana_runtime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-runtime-virtual-68c57d4c0c/1/packages/grafana-runtime/src/config.ts\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/index.ts\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Badge/Badge.tsx\");\n/* harmony import */ var app_core_components_ConfigDescriptionLink__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/core/components/ConfigDescriptionLink.tsx\");\n\n\n\n\n\n\nconst { FormField } = _grafana_ui__WEBPACK_IMPORTED_MODULE_2__.LegacyForms;\nconst QuerySettings = (props) => {\n  const { maxLines, onMaxLinedChange, predefinedOperations, onPredefinedOperationsChange } = props;\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n    _grafana_experimental__WEBPACK_IMPORTED_MODULE_3__.ConfigSubSection,\n    {\n      title: \"Queries\",\n      description: /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n        app_core_components_ConfigDescriptionLink__WEBPACK_IMPORTED_MODULE_1__.ConfigDescriptionLink,\n        {\n          description: \"Additional options to customize your querying experience. \",\n          suffix: \"loki/#configure-the-data-source\",\n          feature: \"query settings\"\n        }\n      )\n    },\n    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", { className: \"gf-form-inline\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", { className: \"gf-form\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n      FormField,\n      {\n        label: \"Maximum lines\",\n        labelWidth: 11,\n        inputWidth: 20,\n        inputEl: /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n          \"input\",\n          {\n            type: \"number\",\n            className: \"gf-form-input width-8 gf-form-input--has-help-icon\",\n            value: maxLines,\n            onChange: (event) => onMaxLinedChange(event.currentTarget.value),\n            spellCheck: false,\n            placeholder: \"1000\"\n          }\n        ),\n        tooltip: /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, \"Loki queries must contain a limit of the maximum number of lines returned (default: 1000). Increase this limit to have a bigger result set for ad-hoc analysis. Decrease this limit if your browser becomes sluggish when displaying the log results.\")\n      }\n    ))),\n    _grafana_runtime__WEBPACK_IMPORTED_MODULE_4__.config.featureToggles.lokiPredefinedOperations && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", { className: \"gf-form-inline\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", { className: \"gf-form\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n      FormField,\n      {\n        label: \"Predefined operations\",\n        labelWidth: 11,\n        inputEl: /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n          \"input\",\n          {\n            type: \"string\",\n            className: \"gf-form-input width-20 gf-form-input--has-help-icon\",\n            value: predefinedOperations,\n            onChange: (event) => onPredefinedOperationsChange(event.currentTarget.value),\n            spellCheck: false,\n            placeholder: \"| unpack | line_format\"\n          }\n        ),\n        tooltip: /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", null, 'Predefined operations are used as an initial state for your queries. They are useful, if you want to unpack, parse or format all log lines. Currently we support only log operations starting with |. For example: | unpack | line_format \"{{.message}}\".')\n      }\n    ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n      _grafana_ui__WEBPACK_IMPORTED_MODULE_5__.Badge,\n      {\n        text: \"Experimental\",\n        color: \"orange\",\n        icon: \"exclamation-triangle\",\n        tooltip: \"Predefined operations is an experimental feature that may change in the future.\"\n      }\n    )))\n  );\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL2NvbmZpZ3VyYXRpb24vUXVlcnlTZXR0aW5ncy50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQWtCO0FBRWU7QUFDVjtBQUNZO0FBQ0c7QUFFdEMsTUFBTSxFQUFFLFVBQVUsSUFBSSxvREFBVztBQVMxQixNQUFNLGdCQUFnQixDQUFDLFVBQWlCO0FBQzdDLFFBQU0sRUFBRSxVQUFVLGtCQUFrQixzQkFBc0IsNkJBQTZCLElBQUk7QUFDM0YsU0FDRTtBQUFBLElBQUMsbUVBQWdCO0FBQWhCO0FBQUEsTUFDQyxPQUFNO0FBQUEsTUFDTixhQUNFO0FBQUEsUUFBQyw0RkFBcUI7QUFBckI7QUFBQSxVQUNDLGFBQVk7QUFBQSxVQUNaLFFBQU87QUFBQSxVQUNQLFNBQVE7QUFBQTtBQUFBLE1BQ1Y7QUFBQTtBQUFBLElBR0YsMkVBQUMsU0FBSSxXQUFVLG9CQUNiLDJFQUFDLFNBQUksV0FBVSxhQUNiO0FBQUEsTUFBQztBQUFBO0FBQUEsUUFDQyxPQUFNO0FBQUEsUUFDTixZQUFZO0FBQUEsUUFDWixZQUFZO0FBQUEsUUFDWixTQUNFO0FBQUEsVUFBQztBQUFBO0FBQUEsWUFDQyxNQUFLO0FBQUEsWUFDTCxXQUFVO0FBQUEsWUFDVixPQUFPO0FBQUEsWUFDUCxVQUFVLENBQUMsVUFBVSxpQkFBaUIsTUFBTSxjQUFjLEtBQUs7QUFBQSxZQUMvRCxZQUFZO0FBQUEsWUFDWixhQUFZO0FBQUE7QUFBQSxRQUNkO0FBQUEsUUFFRixTQUNFLDBJQUFFLHVQQUlGO0FBQUE7QUFBQSxJQUVKLENBQ0YsQ0FDRjtBQUFBLElBQ0Msb0RBQU0sQ0FBQyxlQUFlLDRCQUNyQiwyRUFBQyxTQUFJLFdBQVUsb0JBQ2IsMkVBQUMsU0FBSSxXQUFVLGFBQ2I7QUFBQSxNQUFDO0FBQUE7QUFBQSxRQUNDLE9BQU07QUFBQSxRQUNOLFlBQVk7QUFBQSxRQUNaLFNBQ0U7QUFBQSxVQUFDO0FBQUE7QUFBQSxZQUNDLE1BQUs7QUFBQSxZQUNMLFdBQVU7QUFBQSxZQUNWLE9BQU87QUFBQSxZQUNQLFVBQVUsQ0FBQyxVQUFVLDZCQUE2QixNQUFNLGNBQWMsS0FBSztBQUFBLFlBQzNFLFlBQVk7QUFBQSxZQUNaLGFBQVk7QUFBQTtBQUFBLFFBQ2Q7QUFBQSxRQUVGLFNBQ0UsMkVBQUMsYUFFRywyUEFFSjtBQUFBO0FBQUEsSUFFSixHQUNBO0FBQUEsTUFBQyw4Q0FBSztBQUFMO0FBQUEsUUFDQyxNQUFLO0FBQUEsUUFDTCxPQUFNO0FBQUEsUUFDTixNQUFLO0FBQUEsUUFDTCxTQUFRO0FBQUE7QUFBQSxJQUNWLENBQ0YsQ0FDRjtBQUFBLEVBRUo7QUFFSiIsInNvdXJjZXMiOlsid2VicGFjazovL2dyYWZhbmEvLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL2NvbmZpZ3VyYXRpb24vUXVlcnlTZXR0aW5ncy50c3g/ZGQ2NCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgeyBDb25maWdTdWJTZWN0aW9uIH0gZnJvbSAnQGdyYWZhbmEvZXhwZXJpbWVudGFsJztcbmltcG9ydCB7IGNvbmZpZyB9IGZyb20gJ0BncmFmYW5hL3J1bnRpbWUnO1xuaW1wb3J0IHsgQmFkZ2UsIExlZ2FjeUZvcm1zIH0gZnJvbSAnQGdyYWZhbmEvdWknO1xuaW1wb3J0IHsgQ29uZmlnRGVzY3JpcHRpb25MaW5rIH0gZnJvbSAnYXBwL2NvcmUvY29tcG9uZW50cy9Db25maWdEZXNjcmlwdGlvbkxpbmsnO1xuXG5jb25zdCB7IEZvcm1GaWVsZCB9ID0gTGVnYWN5Rm9ybXM7XG5cbnR5cGUgUHJvcHMgPSB7XG4gIG1heExpbmVzOiBzdHJpbmc7XG4gIG9uTWF4TGluZWRDaGFuZ2U6ICh2YWx1ZTogc3RyaW5nKSA9PiB2b2lkO1xuICBwcmVkZWZpbmVkT3BlcmF0aW9uczogc3RyaW5nO1xuICBvblByZWRlZmluZWRPcGVyYXRpb25zQ2hhbmdlOiAodmFsdWU6IHN0cmluZykgPT4gdm9pZDtcbn07XG5cbmV4cG9ydCBjb25zdCBRdWVyeVNldHRpbmdzID0gKHByb3BzOiBQcm9wcykgPT4ge1xuICBjb25zdCB7IG1heExpbmVzLCBvbk1heExpbmVkQ2hhbmdlLCBwcmVkZWZpbmVkT3BlcmF0aW9ucywgb25QcmVkZWZpbmVkT3BlcmF0aW9uc0NoYW5nZSB9ID0gcHJvcHM7XG4gIHJldHVybiAoXG4gICAgPENvbmZpZ1N1YlNlY3Rpb25cbiAgICAgIHRpdGxlPVwiUXVlcmllc1wiXG4gICAgICBkZXNjcmlwdGlvbj17XG4gICAgICAgIDxDb25maWdEZXNjcmlwdGlvbkxpbmtcbiAgICAgICAgICBkZXNjcmlwdGlvbj1cIkFkZGl0aW9uYWwgb3B0aW9ucyB0byBjdXN0b21pemUgeW91ciBxdWVyeWluZyBleHBlcmllbmNlLiBcIlxuICAgICAgICAgIHN1ZmZpeD1cImxva2kvI2NvbmZpZ3VyZS10aGUtZGF0YS1zb3VyY2VcIlxuICAgICAgICAgIGZlYXR1cmU9XCJxdWVyeSBzZXR0aW5nc1wiXG4gICAgICAgIC8+XG4gICAgICB9XG4gICAgPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJnZi1mb3JtLWlubGluZVwiPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImdmLWZvcm1cIj5cbiAgICAgICAgICA8Rm9ybUZpZWxkXG4gICAgICAgICAgICBsYWJlbD1cIk1heGltdW0gbGluZXNcIlxuICAgICAgICAgICAgbGFiZWxXaWR0aD17MTF9XG4gICAgICAgICAgICBpbnB1dFdpZHRoPXsyMH1cbiAgICAgICAgICAgIGlucHV0RWw9e1xuICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICB0eXBlPVwibnVtYmVyXCJcbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJnZi1mb3JtLWlucHV0IHdpZHRoLTggZ2YtZm9ybS1pbnB1dC0taGFzLWhlbHAtaWNvblwiXG4gICAgICAgICAgICAgICAgdmFsdWU9e21heExpbmVzfVxuICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsoZXZlbnQpID0+IG9uTWF4TGluZWRDaGFuZ2UoZXZlbnQuY3VycmVudFRhcmdldC52YWx1ZSl9XG4gICAgICAgICAgICAgICAgc3BlbGxDaGVjaz17ZmFsc2V9XG4gICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCIxMDAwXCJcbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRvb2x0aXA9e1xuICAgICAgICAgICAgICA8PlxuICAgICAgICAgICAgICAgIExva2kgcXVlcmllcyBtdXN0IGNvbnRhaW4gYSBsaW1pdCBvZiB0aGUgbWF4aW11bSBudW1iZXIgb2YgbGluZXMgcmV0dXJuZWQgKGRlZmF1bHQ6IDEwMDApLiBJbmNyZWFzZSB0aGlzXG4gICAgICAgICAgICAgICAgbGltaXQgdG8gaGF2ZSBhIGJpZ2dlciByZXN1bHQgc2V0IGZvciBhZC1ob2MgYW5hbHlzaXMuIERlY3JlYXNlIHRoaXMgbGltaXQgaWYgeW91ciBicm93c2VyIGJlY29tZXNcbiAgICAgICAgICAgICAgICBzbHVnZ2lzaCB3aGVuIGRpc3BsYXlpbmcgdGhlIGxvZyByZXN1bHRzLlxuICAgICAgICAgICAgICA8Lz5cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAvPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICAge2NvbmZpZy5mZWF0dXJlVG9nZ2xlcy5sb2tpUHJlZGVmaW5lZE9wZXJhdGlvbnMgJiYgKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImdmLWZvcm0taW5saW5lXCI+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJnZi1mb3JtXCI+XG4gICAgICAgICAgICA8Rm9ybUZpZWxkXG4gICAgICAgICAgICAgIGxhYmVsPVwiUHJlZGVmaW5lZCBvcGVyYXRpb25zXCJcbiAgICAgICAgICAgICAgbGFiZWxXaWR0aD17MTF9XG4gICAgICAgICAgICAgIGlucHV0RWw9e1xuICAgICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgICAgdHlwZT1cInN0cmluZ1wiXG4gICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJnZi1mb3JtLWlucHV0IHdpZHRoLTIwIGdmLWZvcm0taW5wdXQtLWhhcy1oZWxwLWljb25cIlxuICAgICAgICAgICAgICAgICAgdmFsdWU9e3ByZWRlZmluZWRPcGVyYXRpb25zfVxuICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyhldmVudCkgPT4gb25QcmVkZWZpbmVkT3BlcmF0aW9uc0NoYW5nZShldmVudC5jdXJyZW50VGFyZ2V0LnZhbHVlKX1cbiAgICAgICAgICAgICAgICAgIHNwZWxsQ2hlY2s9e2ZhbHNlfVxuICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJ8IHVucGFjayB8IGxpbmVfZm9ybWF0XCJcbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIHRvb2x0aXA9e1xuICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICdQcmVkZWZpbmVkIG9wZXJhdGlvbnMgYXJlIHVzZWQgYXMgYW4gaW5pdGlhbCBzdGF0ZSBmb3IgeW91ciBxdWVyaWVzLiBUaGV5IGFyZSB1c2VmdWwsIGlmIHlvdSB3YW50IHRvIHVucGFjaywgcGFyc2Ugb3IgZm9ybWF0IGFsbCBsb2cgbGluZXMuIEN1cnJlbnRseSB3ZSBzdXBwb3J0IG9ubHkgbG9nIG9wZXJhdGlvbnMgc3RhcnRpbmcgd2l0aCB8LiBGb3IgZXhhbXBsZTogfCB1bnBhY2sgfCBsaW5lX2Zvcm1hdCBcInt7Lm1lc3NhZ2V9fVwiLidcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDxCYWRnZVxuICAgICAgICAgICAgICB0ZXh0PVwiRXhwZXJpbWVudGFsXCJcbiAgICAgICAgICAgICAgY29sb3I9XCJvcmFuZ2VcIlxuICAgICAgICAgICAgICBpY29uPVwiZXhjbGFtYXRpb24tdHJpYW5nbGVcIlxuICAgICAgICAgICAgICB0b29sdGlwPVwiUHJlZGVmaW5lZCBvcGVyYXRpb25zIGlzIGFuIGV4cGVyaW1lbnRhbCBmZWF0dXJlIHRoYXQgbWF5IGNoYW5nZSBpbiB0aGUgZnV0dXJlLlwiXG4gICAgICAgICAgICAvPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgICl9XG4gICAgPC9Db25maWdTdWJTZWN0aW9uPlxuICApO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/configuration/QuerySettings.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/dataquery.gen.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LokiQueryDirection: () => (/* binding */ LokiQueryDirection),\n/* harmony export */   LokiQueryType: () => (/* binding */ LokiQueryType),\n/* harmony export */   QueryEditorMode: () => (/* binding */ QueryEditorMode),\n/* harmony export */   SupportingQueryType: () => (/* binding */ SupportingQueryType)\n/* harmony export */ });\n\nvar QueryEditorMode = /* @__PURE__ */ ((QueryEditorMode2) => {\n  QueryEditorMode2[\"Builder\"] = \"builder\";\n  QueryEditorMode2[\"Code\"] = \"code\";\n  return QueryEditorMode2;\n})(QueryEditorMode || {});\nvar LokiQueryType = /* @__PURE__ */ ((LokiQueryType2) => {\n  LokiQueryType2[\"Instant\"] = \"instant\";\n  LokiQueryType2[\"Range\"] = \"range\";\n  LokiQueryType2[\"Stream\"] = \"stream\";\n  return LokiQueryType2;\n})(LokiQueryType || {});\nvar SupportingQueryType = /* @__PURE__ */ ((SupportingQueryType2) => {\n  SupportingQueryType2[\"DataSample\"] = \"dataSample\";\n  SupportingQueryType2[\"LogsSample\"] = \"logsSample\";\n  SupportingQueryType2[\"LogsVolume\"] = \"logsVolume\";\n  return SupportingQueryType2;\n})(SupportingQueryType || {});\nvar LokiQueryDirection = /* @__PURE__ */ ((LokiQueryDirection2) => {\n  LokiQueryDirection2[\"Backward\"] = \"backward\";\n  LokiQueryDirection2[\"Forward\"] = \"forward\";\n  return LokiQueryDirection2;\n})(LokiQueryDirection || {});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL2RhdGFxdWVyeS5nZW4udHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFZTyxJQUFLLGtCQUFMLGtCQUFLQSxxQkFBTDtBQUNMLEVBQUFBLGlCQUFBLGFBQVU7QUFDVixFQUFBQSxpQkFBQSxVQUFPO0FBRkcsU0FBQUE7QUFBQTtBQUtMLElBQUssZ0JBQUwsa0JBQUtDLG1CQUFMO0FBQ0wsRUFBQUEsZUFBQSxhQUFVO0FBQ1YsRUFBQUEsZUFBQSxXQUFRO0FBQ1IsRUFBQUEsZUFBQSxZQUFTO0FBSEMsU0FBQUE7QUFBQTtBQU1MLElBQUssc0JBQUwsa0JBQUtDLHlCQUFMO0FBQ0wsRUFBQUEscUJBQUEsZ0JBQWE7QUFDYixFQUFBQSxxQkFBQSxnQkFBYTtBQUNiLEVBQUFBLHFCQUFBLGdCQUFhO0FBSEgsU0FBQUE7QUFBQTtBQU1MLElBQUsscUJBQUwsa0JBQUtDLHdCQUFMO0FBQ0wsRUFBQUEsb0JBQUEsY0FBVztBQUNYLEVBQUFBLG9CQUFBLGFBQVU7QUFGQSxTQUFBQTtBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ3JhZmFuYS8uL3B1YmxpYy9hcHAvcGx1Z2lucy9kYXRhc291cmNlL2xva2kvZGF0YXF1ZXJ5Lmdlbi50cz9lOGY0Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvZGUgZ2VuZXJhdGVkIC0gRURJVElORyBJUyBGVVRJTEUuIERPIE5PVCBFRElULlxuLy9cbi8vIEdlbmVyYXRlZCBieTpcbi8vICAgICBwdWJsaWMvYXBwL3BsdWdpbnMvZ2VuLmdvXG4vLyBVc2luZyBqZW5uaWVzOlxuLy8gICAgIFRTVHlwZXNKZW5ueVxuLy8gICAgIFBsdWdpblRTVHlwZXNKZW5ueVxuLy9cbi8vIFJ1biAnbWFrZSBnZW4tY3VlJyBmcm9tIHJlcG9zaXRvcnkgcm9vdCB0byByZWdlbmVyYXRlLlxuXG5pbXBvcnQgKiBhcyBjb21tb24gZnJvbSAnQGdyYWZhbmEvc2NoZW1hJztcblxuZXhwb3J0IGVudW0gUXVlcnlFZGl0b3JNb2RlIHtcbiAgQnVpbGRlciA9ICdidWlsZGVyJyxcbiAgQ29kZSA9ICdjb2RlJyxcbn1cblxuZXhwb3J0IGVudW0gTG9raVF1ZXJ5VHlwZSB7XG4gIEluc3RhbnQgPSAnaW5zdGFudCcsXG4gIFJhbmdlID0gJ3JhbmdlJyxcbiAgU3RyZWFtID0gJ3N0cmVhbScsXG59XG5cbmV4cG9ydCBlbnVtIFN1cHBvcnRpbmdRdWVyeVR5cGUge1xuICBEYXRhU2FtcGxlID0gJ2RhdGFTYW1wbGUnLFxuICBMb2dzU2FtcGxlID0gJ2xvZ3NTYW1wbGUnLFxuICBMb2dzVm9sdW1lID0gJ2xvZ3NWb2x1bWUnLFxufVxuXG5leHBvcnQgZW51bSBMb2tpUXVlcnlEaXJlY3Rpb24ge1xuICBCYWNrd2FyZCA9ICdiYWNrd2FyZCcsXG4gIEZvcndhcmQgPSAnZm9yd2FyZCcsXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgTG9raSBleHRlbmRzIGNvbW1vbi5EYXRhUXVlcnkge1xuICBlZGl0b3JNb2RlPzogUXVlcnlFZGl0b3JNb2RlO1xuICAvKipcbiAgICogVGhlIExvZ1FMIHF1ZXJ5LlxuICAgKi9cbiAgZXhwcjogc3RyaW5nO1xuICAvKipcbiAgICogQGRlcHJlY2F0ZWQsIG5vdyB1c2UgcXVlcnlUeXBlLlxuICAgKi9cbiAgaW5zdGFudD86IGJvb2xlYW47XG4gIC8qKlxuICAgKiBVc2VkIHRvIG92ZXJyaWRlIHRoZSBuYW1lIG9mIHRoZSBzZXJpZXMuXG4gICAqL1xuICBsZWdlbmRGb3JtYXQ/OiBzdHJpbmc7XG4gIC8qKlxuICAgKiBVc2VkIHRvIGxpbWl0IHRoZSBudW1iZXIgb2YgbG9nIHJvd3MgcmV0dXJuZWQuXG4gICAqL1xuICBtYXhMaW5lcz86IG51bWJlcjtcbiAgLyoqXG4gICAqIEBkZXByZWNhdGVkLCBub3cgdXNlIHF1ZXJ5VHlwZS5cbiAgICovXG4gIHJhbmdlPzogYm9vbGVhbjtcbiAgLyoqXG4gICAqIEBkZXByZWNhdGVkLCBub3cgdXNlIHN0ZXAuXG4gICAqL1xuICByZXNvbHV0aW9uPzogbnVtYmVyO1xuICAvKipcbiAgICogVXNlZCB0byBzZXQgc3RlcCB2YWx1ZSBmb3IgcmFuZ2UgcXVlcmllcy5cbiAgICovXG4gIHN0ZXA/OiBzdHJpbmc7XG59XG4iXSwibmFtZXMiOlsiUXVlcnlFZGl0b3JNb2RlIiwiTG9raVF1ZXJ5VHlwZSIsIlN1cHBvcnRpbmdRdWVyeVR5cGUiLCJMb2tpUXVlcnlEaXJlY3Rpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/dataquery.gen.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/datasource.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_MAX_LINES: () => (/* binding */ DEFAULT_MAX_LINES),\n/* harmony export */   LOKI_ENDPOINT: () => (/* binding */ LOKI_ENDPOINT),\n/* harmony export */   LokiDatasource: () => (/* binding */ LokiDatasource),\n/* harmony export */   REF_ID_DATA_SAMPLES: () => (/* binding */ REF_ID_DATA_SAMPLES),\n/* harmony export */   REF_ID_STARTER_ANNOTATION: () => (/* binding */ REF_ID_STARTER_ANNOTATION),\n/* harmony export */   REF_ID_STARTER_LOG_ROW_CONTEXT: () => (/* binding */ REF_ID_STARTER_LOG_ROW_CONTEXT),\n/* harmony export */   REF_ID_STARTER_LOG_SAMPLE: () => (/* binding */ REF_ID_STARTER_LOG_SAMPLE),\n/* harmony export */   REF_ID_STARTER_LOG_VOLUME: () => (/* binding */ REF_ID_STARTER_LOG_VOLUME),\n/* harmony export */   lokiRegularEscape: () => (/* binding */ lokiRegularEscape),\n/* harmony export */   lokiSpecialRegexEscape: () => (/* binding */ lokiSpecialRegexEscape),\n/* harmony export */   makeRequest: () => (/* binding */ makeRequest)\n/* harmony export */ });\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/lodash-npm-4.17.21-6382451519-eb835a2e51.zip/node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(\"./.yarn/cache/rxjs-npm-7.8.0-722f1c7172-61b4d4fd32.zip/node_modules/rxjs/dist/esm5/internal/observable/throwError.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(\"./.yarn/cache/rxjs-npm-7.8.0-722f1c7172-61b4d4fd32.zip/node_modules/rxjs/dist/esm5/internal/observable/merge.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(\"./.yarn/cache/rxjs-npm-7.8.0-722f1c7172-61b4d4fd32.zip/node_modules/rxjs/dist/esm5/internal/observable/of.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(\"./.yarn/cache/rxjs-npm-7.8.0-722f1c7172-61b4d4fd32.zip/node_modules/rxjs/dist/esm5/internal/lastValueFrom.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(\"./.yarn/cache/rxjs-npm-7.8.0-722f1c7172-61b4d4fd32.zip/node_modules/rxjs/dist/esm5/internal/operators/map.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(\"./.yarn/cache/rxjs-npm-7.8.0-722f1c7172-61b4d4fd32.zip/node_modules/rxjs/dist/esm5/internal/operators/catchError.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(\"./.yarn/cache/rxjs-npm-7.8.0-722f1c7172-61b4d4fd32.zip/node_modules/rxjs/dist/esm5/internal/operators/tap.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(\"./.yarn/cache/rxjs-npm-7.8.0-722f1c7172-61b4d4fd32.zip/node_modules/rxjs/dist/esm5/internal/operators/switchMap.js\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/datetime/rangeutil.ts\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/types/data.ts\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/types/logs.ts\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/types/app.ts\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/datetime/datemath.ts\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/dataframe/DataFrameView.ts\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/utils/legend.ts\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/dataframe/FieldCache.ts\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/types/dataFrame.ts\");\n/* harmony import */ var _grafana_runtime__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-runtime-virtual-68c57d4c0c/1/packages/grafana-runtime/src/utils/DataSourceWithBackend.ts\");\n/* harmony import */ var _grafana_runtime__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-runtime-virtual-68c57d4c0c/1/packages/grafana-runtime/src/config.ts\");\n/* harmony import */ var app_core_utils_explore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/core/utils/explore.ts\");\n/* harmony import */ var app_features_dashboard_services_TimeSrv__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/features/dashboard/services/TimeSrv.ts\");\n/* harmony import */ var app_features_templating_template_srv__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./public/app/features/templating/template_srv.ts\");\n/* harmony import */ var _core_utils_fetch__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./public/app/core/utils/fetch.ts\");\n/* harmony import */ var _features_logs_logsModel__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./public/app/features/logs/logsModel.ts\");\n/* harmony import */ var _features_logs_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./public/app/features/logs/utils.ts\");\n/* harmony import */ var _prometheus_querybuilder_shared_parsingUtils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\"./public/app/plugins/datasource/prometheus/querybuilder/shared/parsingUtils.ts\");\n/* harmony import */ var _LanguageProvider__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(\"./public/app/plugins/datasource/loki/LanguageProvider.ts\");\n/* harmony import */ var _LiveStreams__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(\"./public/app/plugins/datasource/loki/LiveStreams.ts\");\n/* harmony import */ var _LogContextProvider__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(\"./public/app/plugins/datasource/loki/LogContextProvider.ts\");\n/* harmony import */ var _backendResultTransformer__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(\"./public/app/plugins/datasource/loki/backendResultTransformer.ts\");\n/* harmony import */ var _components_AnnotationsQueryEditor__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(\"./public/app/plugins/datasource/loki/components/AnnotationsQueryEditor.tsx\");\n/* harmony import */ var _components_monaco_query_field_monaco_completion_provider_validation__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(\"./public/app/plugins/datasource/loki/components/monaco-query-field/monaco-completion-provider/validation.ts\");\n/* harmony import */ var _languageUtils__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(\"./public/app/plugins/datasource/loki/languageUtils.ts\");\n/* harmony import */ var _migrations_variableQueryMigrations__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(\"./public/app/plugins/datasource/loki/migrations/variableQueryMigrations.ts\");\n/* harmony import */ var _modifyQuery__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(\"./public/app/plugins/datasource/loki/modifyQuery.ts\");\n/* harmony import */ var _queryHints__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(\"./public/app/plugins/datasource/loki/queryHints.ts\");\n/* harmony import */ var _querySplitting__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(\"./public/app/plugins/datasource/loki/querySplitting.ts\");\n/* harmony import */ var _queryUtils__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(\"./public/app/plugins/datasource/loki/queryUtils.ts\");\n/* harmony import */ var _streaming__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(\"./public/app/plugins/datasource/loki/streaming.ts\");\n/* harmony import */ var _tracking__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(\"./public/app/plugins/datasource/loki/tracking.ts\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(\"./public/app/plugins/datasource/loki/types.ts\");\n/* harmony import */ var _variables__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(\"./public/app/plugins/datasource/loki/variables.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst DEFAULT_MAX_LINES = 1e3;\nconst LOKI_ENDPOINT = \"/loki/api/v1\";\nconst REF_ID_DATA_SAMPLES = \"loki-data-samples\";\nconst REF_ID_STARTER_ANNOTATION = \"annotation-\";\nconst REF_ID_STARTER_LOG_ROW_CONTEXT = \"log-row-context-query-\";\nconst REF_ID_STARTER_LOG_VOLUME = \"log-volume-\";\nconst REF_ID_STARTER_LOG_SAMPLE = \"log-sample-\";\nconst NS_IN_MS = 1e6;\nfunction makeRequest(query, range, app, requestId, hideFromInspector) {\n  const intervalInfo = _grafana_data__WEBPACK_IMPORTED_MODULE_24__.calculateInterval(range, 1);\n  return {\n    targets: [query],\n    requestId,\n    interval: intervalInfo.interval,\n    intervalMs: intervalInfo.intervalMs,\n    range,\n    scopedVars: {},\n    timezone: \"UTC\",\n    app,\n    startTime: Date.now(),\n    hideFromInspector\n  };\n}\nclass LokiDatasource extends _grafana_runtime__WEBPACK_IMPORTED_MODULE_25__.DataSourceWithBackend {\n  constructor(instanceSettings, templateSrv = (0,app_features_templating_template_srv__WEBPACK_IMPORTED_MODULE_3__.getTemplateSrv)(), timeSrv = (0,app_features_dashboard_services_TimeSrv__WEBPACK_IMPORTED_MODULE_2__.getTimeSrv)()) {\n    super(instanceSettings);\n    this.instanceSettings = instanceSettings;\n    this.templateSrv = templateSrv;\n    this.timeSrv = timeSrv;\n    this.streams = new _LiveStreams__WEBPACK_IMPORTED_MODULE_9__.LiveStreams();\n    /**\n     * Runs live queries which in this case means creating a websocket and listening on it for new logs.\n     * This returns a bit different dataFrame than runQueries as it returns single dataframe even if there are multiple\n     * Loki streams, sets only common labels on dataframe.labels and has additional dataframe.fields.labels for unique\n     * labels per row.\n     */\n    this.runLiveQuery = (target, maxDataPoints) => {\n      const liveTarget = this.createLiveTarget(target, maxDataPoints);\n      return this.streams.getStream(liveTarget).pipe(\n        (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_26__.map)((data) => ({\n          data: data || [],\n          key: `loki-${liveTarget.refId}`,\n          state: _grafana_data__WEBPACK_IMPORTED_MODULE_27__.LoadingState.Streaming\n        })),\n        (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_28__.catchError)((err) => {\n          return (0,rxjs__WEBPACK_IMPORTED_MODULE_29__.throwError)(() => `Live tailing was stopped due to following error: ${err.reason}`);\n        })\n      );\n    };\n    this.getLogRowContext = async (row, options, origQuery) => {\n      return await this.logContextProvider.getLogRowContext(row, options, (0,_queryUtils__WEBPACK_IMPORTED_MODULE_19__.getLokiQueryFromDataQuery)(origQuery));\n    };\n    this.getLogRowContextQuery = async (row, options, origQuery) => {\n      return await this.logContextProvider.getLogRowContextQuery(row, options, (0,_queryUtils__WEBPACK_IMPORTED_MODULE_19__.getLokiQueryFromDataQuery)(origQuery));\n    };\n    this.languageProvider = new _LanguageProvider__WEBPACK_IMPORTED_MODULE_8__[\"default\"](this);\n    const settingsData = instanceSettings.jsonData || {};\n    this.maxLines = parseInt(settingsData.maxLines ?? \"0\", 10) || DEFAULT_MAX_LINES;\n    this.predefinedOperations = settingsData.predefinedOperations ?? \"\";\n    this.annotations = {\n      QueryEditor: _components_AnnotationsQueryEditor__WEBPACK_IMPORTED_MODULE_12__.LokiAnnotationsQueryEditor\n    };\n    this.variables = new _variables__WEBPACK_IMPORTED_MODULE_23__.LokiVariableSupport(this);\n    this.logContextProvider = new _LogContextProvider__WEBPACK_IMPORTED_MODULE_10__.LogContextProvider(this);\n  }\n  getDataProvider(type, request) {\n    if (!this.getSupportedSupplementaryQueryTypes().includes(type)) {\n      return void 0;\n    }\n    switch (type) {\n      case _grafana_data__WEBPACK_IMPORTED_MODULE_30__.SupplementaryQueryType.LogsVolume:\n        return this.getLogsVolumeDataProvider(request);\n      case _grafana_data__WEBPACK_IMPORTED_MODULE_30__.SupplementaryQueryType.LogsSample:\n        return this.getLogsSampleDataProvider(request);\n      default:\n        return void 0;\n    }\n  }\n  getSupportedSupplementaryQueryTypes() {\n    return [_grafana_data__WEBPACK_IMPORTED_MODULE_30__.SupplementaryQueryType.LogsVolume, _grafana_data__WEBPACK_IMPORTED_MODULE_30__.SupplementaryQueryType.LogsSample];\n  }\n  getSupplementaryQuery(options, query) {\n    if (!this.getSupportedSupplementaryQueryTypes().includes(options.type)) {\n      return void 0;\n    }\n    const normalizedQuery = (0,_queryUtils__WEBPACK_IMPORTED_MODULE_19__.getNormalizedLokiQuery)(query);\n    const expr = (0,_modifyQuery__WEBPACK_IMPORTED_MODULE_16__.removeCommentsFromQuery)(normalizedQuery.expr);\n    let isQuerySuitable = false;\n    switch (options.type) {\n      case _grafana_data__WEBPACK_IMPORTED_MODULE_30__.SupplementaryQueryType.LogsVolume:\n        isQuerySuitable = !!(expr && (0,_queryUtils__WEBPACK_IMPORTED_MODULE_19__.isLogsQuery)(expr) && normalizedQuery.queryType === _types__WEBPACK_IMPORTED_MODULE_22__.LokiQueryType.Range);\n        if (!isQuerySuitable) {\n          return void 0;\n        }\n        return {\n          ...normalizedQuery,\n          refId: `${REF_ID_STARTER_LOG_VOLUME}${normalizedQuery.refId}`,\n          queryType: _types__WEBPACK_IMPORTED_MODULE_22__.LokiQueryType.Range,\n          supportingQueryType: _types__WEBPACK_IMPORTED_MODULE_22__.SupportingQueryType.LogsVolume,\n          expr: `sum by (level) (count_over_time(${expr}[$__interval]))`\n        };\n      case _grafana_data__WEBPACK_IMPORTED_MODULE_30__.SupplementaryQueryType.LogsSample:\n        isQuerySuitable = !!(expr && !(0,_queryUtils__WEBPACK_IMPORTED_MODULE_19__.isLogsQuery)(expr));\n        if (!isQuerySuitable) {\n          return void 0;\n        }\n        return {\n          ...normalizedQuery,\n          queryType: _types__WEBPACK_IMPORTED_MODULE_22__.LokiQueryType.Range,\n          refId: `${REF_ID_STARTER_LOG_SAMPLE}${normalizedQuery.refId}`,\n          expr: (0,_queryUtils__WEBPACK_IMPORTED_MODULE_19__.getLogQueryFromMetricsQuery)(expr),\n          maxLines: Number.isNaN(Number(options.limit)) ? this.maxLines : Number(options.limit)\n        };\n      default:\n        return void 0;\n    }\n  }\n  getLogsVolumeDataProvider(request) {\n    const logsVolumeRequest = (0,lodash__WEBPACK_IMPORTED_MODULE_0__.cloneDeep)(request);\n    const targets = logsVolumeRequest.targets.map((query) => this.getSupplementaryQuery({ type: _grafana_data__WEBPACK_IMPORTED_MODULE_30__.SupplementaryQueryType.LogsVolume }, query)).filter((query) => !!query);\n    if (!targets.length) {\n      return void 0;\n    }\n    return (0,_features_logs_logsModel__WEBPACK_IMPORTED_MODULE_5__.queryLogsVolume)(\n      this,\n      { ...logsVolumeRequest, targets },\n      {\n        extractLevel,\n        range: request.range,\n        targets: request.targets\n      }\n    );\n  }\n  getLogsSampleDataProvider(request) {\n    const logsSampleRequest = (0,lodash__WEBPACK_IMPORTED_MODULE_0__.cloneDeep)(request);\n    const targets = logsSampleRequest.targets.map((query) => this.getSupplementaryQuery({ type: _grafana_data__WEBPACK_IMPORTED_MODULE_30__.SupplementaryQueryType.LogsSample, limit: 100 }, query)).filter((query) => !!query);\n    if (!targets.length) {\n      return void 0;\n    }\n    return (0,_features_logs_logsModel__WEBPACK_IMPORTED_MODULE_5__.queryLogsSample)(this, { ...logsSampleRequest, targets });\n  }\n  query(request) {\n    const queries = request.targets.map(_queryUtils__WEBPACK_IMPORTED_MODULE_19__.getNormalizedLokiQuery).map((q) => ({ ...q, maxLines: q.maxLines ?? this.maxLines }));\n    const fixedRequest = {\n      ...request,\n      targets: queries\n    };\n    const streamQueries = fixedRequest.targets.filter((q) => q.queryType === _types__WEBPACK_IMPORTED_MODULE_22__.LokiQueryType.Stream);\n    if (_grafana_runtime__WEBPACK_IMPORTED_MODULE_31__.config.featureToggles.lokiExperimentalStreaming && streamQueries.length > 0 && fixedRequest.rangeRaw?.to === \"now\") {\n      const streamRequest = {\n        ...fixedRequest,\n        targets: streamQueries\n      };\n      return (0,rxjs__WEBPACK_IMPORTED_MODULE_32__.merge)(\n        ...streamQueries.map(\n          (q) => (0,_streaming__WEBPACK_IMPORTED_MODULE_20__.doLokiChannelStream)(\n            this.applyTemplateVariables(q, request.scopedVars),\n            this,\n            // the datasource\n            streamRequest\n          )\n        )\n      );\n    }\n    if (fixedRequest.liveStreaming) {\n      return this.runLiveQueryThroughBackend(fixedRequest);\n    }\n    if (_grafana_runtime__WEBPACK_IMPORTED_MODULE_31__.config.featureToggles.lokiQuerySplitting && (0,_queryUtils__WEBPACK_IMPORTED_MODULE_19__.requestSupportsSplitting)(fixedRequest.targets)) {\n      return (0,_querySplitting__WEBPACK_IMPORTED_MODULE_18__.runSplitQuery)(this, fixedRequest);\n    }\n    const startTime = /* @__PURE__ */ new Date();\n    return this.runQuery(fixedRequest).pipe(\n      (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_33__.tap)(\n        (response) => (0,_tracking__WEBPACK_IMPORTED_MODULE_21__.trackQuery)(response, fixedRequest, startTime, { predefinedOperations: this.predefinedOperations })\n      )\n    );\n  }\n  runQuery(fixedRequest) {\n    return super.query(fixedRequest).pipe(\n      (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_26__.map)(\n        (response) => (0,_backendResultTransformer__WEBPACK_IMPORTED_MODULE_11__.transformBackendResult)(response, fixedRequest.targets, this.instanceSettings.jsonData.derivedFields ?? [])\n      )\n    );\n  }\n  runLiveQueryThroughBackend(request) {\n    const logsQueries = request.targets.filter((query) => query.expr !== \"\" && (0,_queryUtils__WEBPACK_IMPORTED_MODULE_19__.isLogsQuery)(query.expr));\n    if (logsQueries.length === 0) {\n      return (0,rxjs__WEBPACK_IMPORTED_MODULE_34__.of)({\n        data: [],\n        state: _grafana_data__WEBPACK_IMPORTED_MODULE_27__.LoadingState.Done\n      });\n    }\n    const subQueries = logsQueries.map((query) => {\n      const maxDataPoints = query.maxLines || this.maxLines;\n      return this.runLiveQuery(query, maxDataPoints);\n    });\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_32__.merge)(...subQueries);\n  }\n  createLiveTarget(target, maxDataPoints) {\n    const query = target.expr;\n    const baseUrl = this.instanceSettings.url;\n    const params = (0,_core_utils_fetch__WEBPACK_IMPORTED_MODULE_4__.serializeParams)({ query });\n    return {\n      query,\n      url: (0,app_core_utils_explore__WEBPACK_IMPORTED_MODULE_1__.convertToWebSocketUrl)(`${baseUrl}/loki/api/v1/tail?${params}`),\n      refId: target.refId,\n      size: maxDataPoints\n    };\n  }\n  getRangeScopedVars(range = this.getTimeRange()) {\n    const msRange = range.to.diff(range.from);\n    const sRange = Math.round(msRange / 1e3);\n    return {\n      __range_ms: { text: msRange, value: msRange },\n      __range_s: { text: sRange, value: sRange },\n      __range: { text: sRange + \"s\", value: sRange + \"s\" }\n    };\n  }\n  interpolateVariablesInQueries(queries, scopedVars) {\n    let expandedQueries = queries;\n    if (queries && queries.length) {\n      expandedQueries = queries.map((query) => ({\n        ...query,\n        datasource: this.getRef(),\n        expr: this.addAdHocFilters(this.templateSrv.replace(query.expr, scopedVars, this.interpolateQueryExpr))\n      }));\n    }\n    return expandedQueries;\n  }\n  getQueryDisplayText(query) {\n    return query.expr;\n  }\n  getTimeRange() {\n    return this.timeSrv.timeRange();\n  }\n  getTimeRangeParams() {\n    const timeRange = this.getTimeRange();\n    return { start: timeRange.from.valueOf() * NS_IN_MS, end: timeRange.to.valueOf() * NS_IN_MS };\n  }\n  async importFromAbstractQueries(abstractQueries) {\n    await this.languageProvider.start();\n    const existingKeys = this.languageProvider.labelKeys;\n    if (existingKeys && existingKeys.length) {\n      abstractQueries = abstractQueries.map((abstractQuery) => {\n        abstractQuery.labelMatchers = abstractQuery.labelMatchers.filter((labelMatcher) => {\n          return existingKeys.includes(labelMatcher.name);\n        });\n        return abstractQuery;\n      });\n    }\n    return abstractQueries.map((abstractQuery) => this.languageProvider.importFromAbstractQuery(abstractQuery));\n  }\n  async exportToAbstractQueries(queries) {\n    return queries.map((query) => this.languageProvider.exportToAbstractQuery(query));\n  }\n  async metadataRequest(url, params, options) {\n    if (url.startsWith(\"/\")) {\n      throw new Error(`invalid metadata request url: ${url}`);\n    }\n    const res = await this.getResource(url, params, options);\n    return res.data || [];\n  }\n  // We need a specific metadata method for stats endpoint as it does not return res.data,\n  // but it returns stats directly in res object.\n  async statsMetadataRequest(url, params, options) {\n    if (url.startsWith(\"/\")) {\n      throw new Error(`invalid metadata request url: ${url}`);\n    }\n    return await this.getResource(url, params, options);\n  }\n  async getQueryStats(query) {\n    if ((0,_queryUtils__WEBPACK_IMPORTED_MODULE_19__.isQueryWithError)(this.interpolateString(query, _components_monaco_query_field_monaco_completion_provider_validation__WEBPACK_IMPORTED_MODULE_13__.placeHolderScopedVars))) {\n      return void 0;\n    }\n    const { start, end } = this.getTimeRangeParams();\n    const labelMatchers = (0,_queryUtils__WEBPACK_IMPORTED_MODULE_19__.getStreamSelectorsFromQuery)(query);\n    let statsForAll = { streams: 0, chunks: 0, bytes: 0, entries: 0 };\n    for (const labelMatcher of labelMatchers) {\n      try {\n        const data = await this.statsMetadataRequest(\n          \"index/stats\",\n          { query: labelMatcher, start, end },\n          { showErrorAlert: false }\n        );\n        statsForAll = {\n          streams: statsForAll.streams + data.streams,\n          chunks: statsForAll.chunks + data.chunks,\n          bytes: statsForAll.bytes + data.bytes,\n          entries: statsForAll.entries + data.entries\n        };\n      } catch (e) {\n        break;\n      }\n    }\n    return statsForAll;\n  }\n  async metricFindQuery(query) {\n    if (!query) {\n      return Promise.resolve([]);\n    }\n    if (typeof query === \"string\") {\n      const interpolated = this.interpolateString(query);\n      return await this.legacyProcessMetricFindQuery(interpolated);\n    }\n    const interpolatedQuery = {\n      ...query,\n      label: this.interpolateString(query.label || \"\"),\n      stream: this.interpolateString(query.stream || \"\")\n    };\n    return await this.processMetricFindQuery(interpolatedQuery);\n  }\n  async processMetricFindQuery(query) {\n    if (query.type === _types__WEBPACK_IMPORTED_MODULE_22__.LokiVariableQueryType.LabelNames) {\n      return this.labelNamesQuery();\n    }\n    if (!query.label) {\n      return [];\n    }\n    if (query.stream) {\n      return this.labelValuesSeriesQuery(query.stream, query.label);\n    }\n    return this.labelValuesQuery(query.label);\n  }\n  async legacyProcessMetricFindQuery(query) {\n    const labelNames = query.match(_migrations_variableQueryMigrations__WEBPACK_IMPORTED_MODULE_15__.labelNamesRegex);\n    if (labelNames) {\n      return await this.labelNamesQuery();\n    }\n    const labelValues = query.match(_migrations_variableQueryMigrations__WEBPACK_IMPORTED_MODULE_15__.labelValuesRegex);\n    if (labelValues) {\n      if (labelValues[1]) {\n        return await this.labelValuesSeriesQuery(labelValues[1], labelValues[2]);\n      }\n      return await this.labelValuesQuery(labelValues[2]);\n    }\n    return Promise.resolve([]);\n  }\n  async labelNamesQuery() {\n    const url = \"labels\";\n    const params = this.getTimeRangeParams();\n    const result = await this.metadataRequest(url, params);\n    return result.map((value) => ({ text: value }));\n  }\n  async labelValuesQuery(label) {\n    const params = this.getTimeRangeParams();\n    const url = `label/${label}/values`;\n    const result = await this.metadataRequest(url, params);\n    return result.map((value) => ({ text: value }));\n  }\n  async labelValuesSeriesQuery(expr, label) {\n    const timeParams = this.getTimeRangeParams();\n    const params = {\n      ...timeParams,\n      \"match[]\": expr\n    };\n    const url = \"series\";\n    const streams = /* @__PURE__ */ new Set();\n    const result = await this.metadataRequest(url, params);\n    result.forEach((stream) => {\n      if (stream[label]) {\n        streams.add({ text: stream[label] });\n      }\n    });\n    return Array.from(streams);\n  }\n  async getDataSamples(query) {\n    if (!(0,_queryUtils__WEBPACK_IMPORTED_MODULE_19__.isLogsQuery)(query.expr) || (0,_queryUtils__WEBPACK_IMPORTED_MODULE_19__.isQueryWithError)(this.interpolateString(query.expr, _components_monaco_query_field_monaco_completion_provider_validation__WEBPACK_IMPORTED_MODULE_13__.placeHolderScopedVars))) {\n      return [];\n    }\n    const lokiLogsQuery = {\n      expr: query.expr,\n      queryType: _types__WEBPACK_IMPORTED_MODULE_22__.LokiQueryType.Range,\n      refId: REF_ID_DATA_SAMPLES,\n      // For samples we limit the request to 10 lines, so queries are small and fast\n      maxLines: 10\n    };\n    const timeRange = this.getTimeRange();\n    const request = makeRequest(lokiLogsQuery, timeRange, _grafana_data__WEBPACK_IMPORTED_MODULE_35__.CoreApp.Unknown, REF_ID_DATA_SAMPLES, true);\n    return await (0,rxjs__WEBPACK_IMPORTED_MODULE_36__.lastValueFrom)(this.query(request).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_37__.switchMap)((res) => (0,rxjs__WEBPACK_IMPORTED_MODULE_34__.of)(res.data))));\n  }\n  // By implementing getTagKeys and getTagValues we add ad-hoc filters functionality\n  async getTagKeys() {\n    return await this.labelNamesQuery();\n  }\n  async getTagValues(options = {}) {\n    return await this.labelValuesQuery(options.key);\n  }\n  interpolateQueryExpr(value, variable) {\n    if (!variable.multi && !variable.includeAll) {\n      return lokiRegularEscape(value);\n    }\n    if (typeof value === \"string\") {\n      return lokiSpecialRegexEscape(value);\n    }\n    const escapedValues = (0,lodash__WEBPACK_IMPORTED_MODULE_0__.map)(value, lokiSpecialRegexEscape);\n    return escapedValues.join(\"|\");\n  }\n  toggleQueryFilter(query, filter) {\n    let expression = query.expr ?? \"\";\n    switch (filter.type) {\n      case \"FILTER_FOR\": {\n        if (filter.options?.key && filter.options?.value) {\n          const value = (0,_languageUtils__WEBPACK_IMPORTED_MODULE_14__.escapeLabelValueInSelector)(filter.options.value);\n          expression = (0,_modifyQuery__WEBPACK_IMPORTED_MODULE_16__.queryHasFilter)(expression, filter.options.key, \"=\", value) ? (0,_modifyQuery__WEBPACK_IMPORTED_MODULE_16__.removeLabelFromQuery)(expression, filter.options.key, \"=\", value) : (0,_modifyQuery__WEBPACK_IMPORTED_MODULE_16__.addLabelToQuery)(expression, filter.options.key, \"=\", value);\n        }\n        break;\n      }\n      case \"FILTER_OUT\": {\n        if (filter.options?.key && filter.options?.value) {\n          const value = (0,_languageUtils__WEBPACK_IMPORTED_MODULE_14__.escapeLabelValueInSelector)(filter.options.value);\n          if ((0,_modifyQuery__WEBPACK_IMPORTED_MODULE_16__.queryHasFilter)(expression, filter.options.key, \"=\", value)) {\n            expression = (0,_modifyQuery__WEBPACK_IMPORTED_MODULE_16__.removeLabelFromQuery)(expression, filter.options.key, \"=\", value);\n          }\n          expression = (0,_modifyQuery__WEBPACK_IMPORTED_MODULE_16__.addLabelToQuery)(expression, filter.options.key, \"!=\", value);\n        }\n        break;\n      }\n      default:\n        break;\n    }\n    return { ...query, expr: expression };\n  }\n  queryHasFilter(query, filter) {\n    let expression = query.expr ?? \"\";\n    return (0,_modifyQuery__WEBPACK_IMPORTED_MODULE_16__.queryHasFilter)(expression, filter.key, \"=\", filter.value);\n  }\n  modifyQuery(query, action) {\n    let expression = query.expr ?? \"\";\n    switch (action.type) {\n      case \"ADD_FILTER\": {\n        if (action.options?.key && action.options?.value) {\n          const value = (0,_languageUtils__WEBPACK_IMPORTED_MODULE_14__.escapeLabelValueInSelector)(action.options.value);\n          expression = (0,_modifyQuery__WEBPACK_IMPORTED_MODULE_16__.addLabelToQuery)(expression, action.options.key, \"=\", value);\n        }\n        break;\n      }\n      case \"ADD_FILTER_OUT\": {\n        if (action.options?.key && action.options?.value) {\n          const value = (0,_languageUtils__WEBPACK_IMPORTED_MODULE_14__.escapeLabelValueInSelector)(action.options.value);\n          expression = (0,_modifyQuery__WEBPACK_IMPORTED_MODULE_16__.addLabelToQuery)(expression, action.options.key, \"!=\", value);\n        }\n        break;\n      }\n      case \"ADD_LOGFMT_PARSER\": {\n        expression = (0,_modifyQuery__WEBPACK_IMPORTED_MODULE_16__.addParserToQuery)(expression, \"logfmt\");\n        break;\n      }\n      case \"ADD_JSON_PARSER\": {\n        expression = (0,_modifyQuery__WEBPACK_IMPORTED_MODULE_16__.addParserToQuery)(expression, \"json\");\n        break;\n      }\n      case \"ADD_UNPACK_PARSER\": {\n        expression = (0,_modifyQuery__WEBPACK_IMPORTED_MODULE_16__.addParserToQuery)(expression, \"unpack\");\n        break;\n      }\n      case \"ADD_NO_PIPELINE_ERROR\": {\n        expression = (0,_modifyQuery__WEBPACK_IMPORTED_MODULE_16__.addNoPipelineErrorToQuery)(expression);\n        break;\n      }\n      case \"ADD_LEVEL_LABEL_FORMAT\": {\n        if (action.options?.originalLabel && action.options?.renameTo) {\n          expression = (0,_modifyQuery__WEBPACK_IMPORTED_MODULE_16__.addLabelFormatToQuery)(expression, {\n            renameTo: action.options.renameTo,\n            originalLabel: action.options.originalLabel\n          });\n        }\n        break;\n      }\n      case \"ADD_LABEL_FILTER\": {\n        const parserPositions = (0,_modifyQuery__WEBPACK_IMPORTED_MODULE_16__.getParserPositions)(query.expr);\n        const labelFilterPositions = (0,_modifyQuery__WEBPACK_IMPORTED_MODULE_16__.getLabelFilterPositions)(query.expr);\n        const lastPosition = (0,_modifyQuery__WEBPACK_IMPORTED_MODULE_16__.findLastPosition)([...parserPositions, ...labelFilterPositions]);\n        const filter = (0,_modifyQuery__WEBPACK_IMPORTED_MODULE_16__.toLabelFilter)(\"\", \"\", \"=\");\n        expression = (0,_modifyQuery__WEBPACK_IMPORTED_MODULE_16__.addFilterAsLabelFilter)(expression, [lastPosition], filter);\n        break;\n      }\n      case \"ADD_LINE_FILTER\": {\n        expression = (0,_modifyQuery__WEBPACK_IMPORTED_MODULE_16__.addLineFilter)(expression);\n        break;\n      }\n      default:\n        break;\n    }\n    return { ...query, expr: expression };\n  }\n  getTime(date, roundUp) {\n    if (typeof date === \"string\") {\n      date = _grafana_data__WEBPACK_IMPORTED_MODULE_38__.parse(date, roundUp);\n    }\n    return Math.ceil(date.valueOf() * 1e6);\n  }\n  getLogRowContextUi(row, runContextQuery, origQuery) {\n    return this.logContextProvider.getLogRowContextUi(row, runContextQuery, (0,_queryUtils__WEBPACK_IMPORTED_MODULE_19__.getLokiQueryFromDataQuery)(origQuery));\n  }\n  testDatasource() {\n    const nowMs = Date.now();\n    const params = {\n      start: (nowMs - 10 * 60 * 1e3) * NS_IN_MS,\n      end: nowMs * NS_IN_MS\n    };\n    return this.metadataRequest(\"labels\", params).then(\n      (values) => {\n        return values.length > 0 ? { status: \"success\", message: \"Data source successfully connected.\" } : {\n          status: \"error\",\n          message: \"Data source connected, but no labels were received. Verify that Loki and Promtail are correctly configured.\"\n        };\n      },\n      (err) => {\n        const info = err?.data?.message ?? \"\";\n        const infoInParentheses = info !== \"\" ? ` (${info})` : \"\";\n        const message = `Unable to connect with Loki${infoInParentheses}. Please check the server logs for more details.`;\n        return { status: \"error\", message };\n      }\n    );\n  }\n  async annotationQuery(options) {\n    const { expr, maxLines, instant, tagKeys = \"\", titleFormat = \"\", textFormat = \"\" } = options.annotation;\n    if (!expr) {\n      return [];\n    }\n    const id = `${REF_ID_STARTER_ANNOTATION}${options.annotation.name}`;\n    const query = {\n      refId: id,\n      expr,\n      maxLines,\n      instant,\n      queryType: instant ? _types__WEBPACK_IMPORTED_MODULE_22__.LokiQueryType.Instant : _types__WEBPACK_IMPORTED_MODULE_22__.LokiQueryType.Range\n    };\n    const request = makeRequest(query, options.range, _grafana_data__WEBPACK_IMPORTED_MODULE_35__.CoreApp.Dashboard, id);\n    const { data } = await (0,rxjs__WEBPACK_IMPORTED_MODULE_36__.lastValueFrom)(this.query(request));\n    const annotations = [];\n    const splitKeys = tagKeys.split(\",\").filter((v) => v !== \"\");\n    for (const frame of data) {\n      const view = new _grafana_data__WEBPACK_IMPORTED_MODULE_39__.DataFrameView(frame);\n      view.forEach((row) => {\n        const { labels } = row;\n        const maybeDuplicatedTags = Object.entries(labels).map(([key, val]) => [key, val.trim()]).filter(([key, val]) => {\n          if (val === \"\") {\n            return false;\n          }\n          if (splitKeys.length && !splitKeys.includes(key)) {\n            return false;\n          }\n          return true;\n        }).map(([key, val]) => val);\n        const tags = Array.from(new Set(maybeDuplicatedTags));\n        annotations.push({\n          time: new Date(row.Time).valueOf(),\n          title: (0,_grafana_data__WEBPACK_IMPORTED_MODULE_40__.renderLegendFormat)(titleFormat, labels),\n          text: (0,_grafana_data__WEBPACK_IMPORTED_MODULE_40__.renderLegendFormat)(textFormat, labels) || row.Line,\n          tags\n        });\n      });\n    }\n    return annotations;\n  }\n  showContextToggle(row) {\n    return true;\n  }\n  processError(err, target) {\n    let error = (0,lodash__WEBPACK_IMPORTED_MODULE_0__.cloneDeep)(err);\n    error.refId = target.refId;\n    if (error.data && err.data.message.includes(\"escape\") && target.expr.includes(\"\\\\\")) {\n      error.data.message = `Error: ${err.data.message}. Make sure that all special characters are escaped with \\\\. For more information on escaping of special characters visit LogQL documentation at https://grafana.com/docs/loki/latest/logql/.`;\n    }\n    return error;\n  }\n  addAdHocFilters(queryExpr) {\n    const adhocFilters = this.templateSrv.getAdhocFilters(this.name);\n    let expr = (0,_prometheus_querybuilder_shared_parsingUtils__WEBPACK_IMPORTED_MODULE_7__.replaceVariables)(queryExpr);\n    expr = adhocFilters.reduce((acc, filter) => {\n      const { key, operator } = filter;\n      let { value } = filter;\n      if ((0,_languageUtils__WEBPACK_IMPORTED_MODULE_14__.isRegexSelector)(operator)) {\n        value = lokiRegularEscape(value);\n      } else {\n        value = (0,_languageUtils__WEBPACK_IMPORTED_MODULE_14__.escapeLabelValueInSelector)(value, operator);\n      }\n      return (0,_modifyQuery__WEBPACK_IMPORTED_MODULE_16__.addLabelToQuery)(acc, key, operator, value);\n    }, expr);\n    return (0,_prometheus_querybuilder_shared_parsingUtils__WEBPACK_IMPORTED_MODULE_7__.returnVariables)(expr);\n  }\n  // Used when running queries through backend\n  filterQuery(query) {\n    if (query.hide || query.expr === \"\") {\n      return false;\n    }\n    return true;\n  }\n  // Used when running queries through backend\n  applyTemplateVariables(target, scopedVars) {\n    const { __interval, __interval_ms, __range, __range_s, __range_ms, ...rest } = scopedVars || {};\n    const exprWithAdHoc = this.addAdHocFilters(target.expr);\n    return {\n      ...target,\n      legendFormat: this.templateSrv.replace(target.legendFormat, rest),\n      expr: this.templateSrv.replace(exprWithAdHoc, rest, this.interpolateQueryExpr)\n    };\n  }\n  interpolateString(string, scopedVars) {\n    return this.templateSrv.replace(string, scopedVars, this.interpolateQueryExpr);\n  }\n  getVariables() {\n    return this.templateSrv.getVariables().map((v) => `$${v.name}`);\n  }\n  getQueryHints(query, result) {\n    return (0,_queryHints__WEBPACK_IMPORTED_MODULE_17__.getQueryHints)(query.expr, result);\n  }\n  getDefaultQuery(app) {\n    const defaults = { refId: \"A\", expr: \"\" };\n    if (app === _grafana_data__WEBPACK_IMPORTED_MODULE_35__.CoreApp.UnifiedAlerting) {\n      return {\n        ...defaults,\n        queryType: _types__WEBPACK_IMPORTED_MODULE_22__.LokiQueryType.Instant\n      };\n    }\n    return {\n      ...defaults,\n      queryType: _types__WEBPACK_IMPORTED_MODULE_22__.LokiQueryType.Range\n    };\n  }\n}\nfunction lokiRegularEscape(value) {\n  if (typeof value === \"string\") {\n    return value.replace(/'/g, \"\\\\\\\\'\");\n  }\n  return value;\n}\nfunction lokiSpecialRegexEscape(value) {\n  if (typeof value === \"string\") {\n    return lokiRegularEscape(value.replace(/\\\\/g, \"\\\\\\\\\\\\\\\\\").replace(/[$^*{}\\[\\]+?.()|]/g, \"\\\\\\\\$&\"));\n  }\n  return value;\n}\nfunction extractLevel(dataFrame) {\n  let valueField;\n  try {\n    valueField = new _grafana_data__WEBPACK_IMPORTED_MODULE_41__.FieldCache(dataFrame).getFirstFieldOfType(_grafana_data__WEBPACK_IMPORTED_MODULE_42__.FieldType.number);\n  } catch {\n  }\n  return valueField?.labels ? getLogLevelFromLabels(valueField.labels) : _grafana_data__WEBPACK_IMPORTED_MODULE_30__.LogLevel.unknown;\n}\nfunction getLogLevelFromLabels(labels) {\n  const labelNames = [\"level\", \"lvl\", \"loglevel\"];\n  let levelLabel;\n  for (let labelName of labelNames) {\n    if (labelName in labels) {\n      levelLabel = labelName;\n      break;\n    }\n  }\n  return levelLabel ? (0,_features_logs_utils__WEBPACK_IMPORTED_MODULE_6__.getLogLevelFromKey)(labels[levelLabel]) : _grafana_data__WEBPACK_IMPORTED_MODULE_30__.LogLevel.unknown;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/datasource.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/getDerivedFields.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDerivedFields: () => (/* binding */ getDerivedFields)\n/* harmony export */ });\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/lodash-npm-4.17.21-6382451519-eb835a2e51.zip/node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/types/dataFrame.ts\");\n/* harmony import */ var _grafana_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-runtime-virtual-68c57d4c0c/1/packages/grafana-runtime/src/services/dataSourceSrv.ts\");\n\n\n\n\nfunction getDerivedFields(dataFrame, derivedFieldConfigs) {\n  if (!derivedFieldConfigs.length) {\n    return [];\n  }\n  const derivedFieldsGrouped = (0,lodash__WEBPACK_IMPORTED_MODULE_0__.groupBy)(derivedFieldConfigs, \"name\");\n  const newFields = Object.values(derivedFieldsGrouped).map(fieldFromDerivedFieldConfig);\n  const lineField = dataFrame.fields.find((f) => f.type === _grafana_data__WEBPACK_IMPORTED_MODULE_1__.FieldType.string);\n  if (lineField === void 0) {\n    throw new Error(\"invalid logs-dataframe, string-field missing\");\n  }\n  lineField.values.forEach((line) => {\n    for (const field of newFields) {\n      const logMatch = line.match(derivedFieldsGrouped[field.name][0].matcherRegex);\n      field.values.push(logMatch && logMatch[1]);\n    }\n  });\n  return newFields;\n}\nfunction fieldFromDerivedFieldConfig(derivedFieldConfigs) {\n  const dataSourceSrv = (0,_grafana_runtime__WEBPACK_IMPORTED_MODULE_2__.getDataSourceSrv)();\n  const dataLinks = derivedFieldConfigs.reduce((acc, derivedFieldConfig) => {\n    if (derivedFieldConfig.datasourceUid) {\n      const dsSettings = dataSourceSrv.getInstanceSettings(derivedFieldConfig.datasourceUid);\n      acc.push({\n        // Will be filled out later\n        title: derivedFieldConfig.urlDisplayLabel || \"\",\n        url: \"\",\n        // This is hardcoded for Jaeger or Zipkin not way right now to specify datasource specific query object\n        internal: {\n          query: { query: derivedFieldConfig.url, queryType: dsSettings?.type === \"tempo\" ? \"traceql\" : void 0 },\n          datasourceUid: derivedFieldConfig.datasourceUid,\n          datasourceName: dsSettings?.name ?? \"Data source not found\"\n        }\n      });\n    } else if (derivedFieldConfig.url) {\n      acc.push({\n        // We do not know what title to give here so we count on presentation layer to create a title from metadata.\n        title: derivedFieldConfig.urlDisplayLabel || \"\",\n        // This is hardcoded for Jaeger or Zipkin not way right now to specify datasource specific query object\n        url: derivedFieldConfig.url\n      });\n    }\n    return acc;\n  }, []);\n  return {\n    name: derivedFieldConfigs[0].name,\n    type: _grafana_data__WEBPACK_IMPORTED_MODULE_1__.FieldType.string,\n    config: {\n      links: dataLinks\n    },\n    // We are adding values later on\n    values: []\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL2dldERlcml2ZWRGaWVsZHMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXdCO0FBRThCO0FBQ3JCO0FBSTFCLFNBQVMsaUJBQWlCLFdBQXNCLHFCQUFvRDtBQUN6RyxNQUFJLENBQUMsb0JBQW9CLFFBQVE7QUFDL0IsV0FBTyxDQUFDO0FBQUEsRUFDVjtBQUNBLFFBQU0sdUJBQXVCLCtDQUFPLENBQUMscUJBQXFCLE1BQU07QUFFaEUsUUFBTSxZQUFZLE9BQU8sT0FBTyxvQkFBb0IsRUFBRSxJQUFJLDJCQUEyQjtBQUlyRixRQUFNLFlBQVksVUFBVSxPQUFPLEtBQUssQ0FBQyxNQUFNLEVBQUUsU0FBUyxvREFBUyxDQUFDLE1BQU07QUFFMUUsTUFBSSxjQUFjLFFBQVc7QUFFM0IsVUFBTSxJQUFJLE1BQU0sOENBQThDO0FBQUEsRUFDaEU7QUFFQSxZQUFVLE9BQU8sUUFBUSxDQUFDLFNBQVM7QUFDakMsZUFBVyxTQUFTLFdBQVc7QUFDN0IsWUFBTSxXQUFXLEtBQUssTUFBTSxxQkFBcUIsTUFBTSxJQUFJLEVBQUUsQ0FBQyxFQUFFLFlBQVk7QUFDNUUsWUFBTSxPQUFPLEtBQUssWUFBWSxTQUFTLENBQUMsQ0FBQztBQUFBLElBQzNDO0FBQUEsRUFDRixDQUFDO0FBRUQsU0FBTztBQUNUO0FBS0EsU0FBUyw0QkFBNEIscUJBQWtEO0FBQ3JGLFFBQU0sZ0JBQWdCLGtFQUFnQixDQUFDO0FBRXZDLFFBQU0sWUFBWSxvQkFBb0IsT0FBbUIsQ0FBQyxLQUFLLHVCQUF1QjtBQUVwRixRQUFJLG1CQUFtQixlQUFlO0FBQ3BDLFlBQU0sYUFBYSxjQUFjLG9CQUFvQixtQkFBbUIsYUFBYTtBQUVyRixVQUFJLEtBQUs7QUFBQTtBQUFBLFFBRVAsT0FBTyxtQkFBbUIsbUJBQW1CO0FBQUEsUUFDN0MsS0FBSztBQUFBO0FBQUEsUUFFTCxVQUFVO0FBQUEsVUFDUixPQUFPLEVBQUUsT0FBTyxtQkFBbUIsS0FBSyxXQUFXLFlBQVksU0FBUyxVQUFVLFlBQVksT0FBVTtBQUFBLFVBQ3hHLGVBQWUsbUJBQW1CO0FBQUEsVUFDbEMsZ0JBQWdCLFlBQVksUUFBUTtBQUFBLFFBQ3RDO0FBQUEsTUFDRixDQUFDO0FBQUEsSUFDSCxXQUFXLG1CQUFtQixLQUFLO0FBQ2pDLFVBQUksS0FBSztBQUFBO0FBQUEsUUFFUCxPQUFPLG1CQUFtQixtQkFBbUI7QUFBQTtBQUFBLFFBRTdDLEtBQUssbUJBQW1CO0FBQUEsTUFDMUIsQ0FBQztBQUFBLElBQ0g7QUFDQSxXQUFPO0FBQUEsRUFDVCxHQUFHLENBQUMsQ0FBQztBQUVMLFNBQU87QUFBQSxJQUNMLE1BQU0sb0JBQW9CLENBQUMsRUFBRTtBQUFBLElBQzdCLE1BQU0sb0RBQVMsQ0FBQztBQUFBLElBQ2hCLFFBQVE7QUFBQSxNQUNOLE9BQU87QUFBQSxJQUNUO0FBQUE7QUFBQSxJQUVBLFFBQVEsQ0FBQztBQUFBLEVBQ1g7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2dyYWZhbmEvLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL2dldERlcml2ZWRGaWVsZHMudHM/OGVkZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBncm91cEJ5IH0gZnJvbSAnbG9kYXNoJztcblxuaW1wb3J0IHsgRmllbGRUeXBlLCBEYXRhRnJhbWUsIERhdGFMaW5rLCBGaWVsZCB9IGZyb20gJ0BncmFmYW5hL2RhdGEnO1xuaW1wb3J0IHsgZ2V0RGF0YVNvdXJjZVNydiB9IGZyb20gJ0BncmFmYW5hL3J1bnRpbWUnO1xuXG5pbXBvcnQgeyBEZXJpdmVkRmllbGRDb25maWcgfSBmcm9tICcuL3R5cGVzJztcblxuZXhwb3J0IGZ1bmN0aW9uIGdldERlcml2ZWRGaWVsZHMoZGF0YUZyYW1lOiBEYXRhRnJhbWUsIGRlcml2ZWRGaWVsZENvbmZpZ3M6IERlcml2ZWRGaWVsZENvbmZpZ1tdKTogRmllbGRbXSB7XG4gIGlmICghZGVyaXZlZEZpZWxkQ29uZmlncy5sZW5ndGgpIHtcbiAgICByZXR1cm4gW107XG4gIH1cbiAgY29uc3QgZGVyaXZlZEZpZWxkc0dyb3VwZWQgPSBncm91cEJ5KGRlcml2ZWRGaWVsZENvbmZpZ3MsICduYW1lJyk7XG5cbiAgY29uc3QgbmV3RmllbGRzID0gT2JqZWN0LnZhbHVlcyhkZXJpdmVkRmllbGRzR3JvdXBlZCkubWFwKGZpZWxkRnJvbURlcml2ZWRGaWVsZENvbmZpZyk7XG5cbiAgLy8gbGluZS1maWVsZCBpcyB0aGUgZmlyc3Qgc3RyaW5nLWZpZWxkXG4gIC8vIE5PVEU6IHdlIHNob3VsZCBjcmVhdGUgc29tZSBjb21tb24gbG9nLWZyYW1lLWV4dHJhLXN0cmluZy1maWVsZCBjb2RlIHNvbWV3aGVyZVxuICBjb25zdCBsaW5lRmllbGQgPSBkYXRhRnJhbWUuZmllbGRzLmZpbmQoKGYpID0+IGYudHlwZSA9PT0gRmllbGRUeXBlLnN0cmluZyk7XG5cbiAgaWYgKGxpbmVGaWVsZCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgLy8gaWYgdGhpcyBpcyBoYXBwZW5pbmcsIHNvbWV0aGluZyB3ZW50IHdyb25nLCBsZXQncyByYWlzZSBhbiBlcnJvclxuICAgIHRocm93IG5ldyBFcnJvcignaW52YWxpZCBsb2dzLWRhdGFmcmFtZSwgc3RyaW5nLWZpZWxkIG1pc3NpbmcnKTtcbiAgfVxuXG4gIGxpbmVGaWVsZC52YWx1ZXMuZm9yRWFjaCgobGluZSkgPT4ge1xuICAgIGZvciAoY29uc3QgZmllbGQgb2YgbmV3RmllbGRzKSB7XG4gICAgICBjb25zdCBsb2dNYXRjaCA9IGxpbmUubWF0Y2goZGVyaXZlZEZpZWxkc0dyb3VwZWRbZmllbGQubmFtZV1bMF0ubWF0Y2hlclJlZ2V4KTtcbiAgICAgIGZpZWxkLnZhbHVlcy5wdXNoKGxvZ01hdGNoICYmIGxvZ01hdGNoWzFdKTtcbiAgICB9XG4gIH0pO1xuXG4gIHJldHVybiBuZXdGaWVsZHM7XG59XG5cbi8qKlxuICogVHJhbnNmb3JtIGRlcml2ZWRGaWVsZCBjb25maWcgaW50byBkYXRhZnJhbWUgZmllbGQgd2l0aCBjb25maWcgdGhhdCBjb250YWlucyBsaW5rLlxuICovXG5mdW5jdGlvbiBmaWVsZEZyb21EZXJpdmVkRmllbGRDb25maWcoZGVyaXZlZEZpZWxkQ29uZmlnczogRGVyaXZlZEZpZWxkQ29uZmlnW10pOiBGaWVsZCB7XG4gIGNvbnN0IGRhdGFTb3VyY2VTcnYgPSBnZXREYXRhU291cmNlU3J2KCk7XG5cbiAgY29uc3QgZGF0YUxpbmtzID0gZGVyaXZlZEZpZWxkQ29uZmlncy5yZWR1Y2U8RGF0YUxpbmtbXT4oKGFjYywgZGVyaXZlZEZpZWxkQ29uZmlnKSA9PiB7XG4gICAgLy8gSGF2aW5nIGZpZWxkLmRhdGFzb3VyY2VVaWQgbWVhbnMgaXQgaXMgYW4gaW50ZXJuYWwgbGluay5cbiAgICBpZiAoZGVyaXZlZEZpZWxkQ29uZmlnLmRhdGFzb3VyY2VVaWQpIHtcbiAgICAgIGNvbnN0IGRzU2V0dGluZ3MgPSBkYXRhU291cmNlU3J2LmdldEluc3RhbmNlU2V0dGluZ3MoZGVyaXZlZEZpZWxkQ29uZmlnLmRhdGFzb3VyY2VVaWQpO1xuXG4gICAgICBhY2MucHVzaCh7XG4gICAgICAgIC8vIFdpbGwgYmUgZmlsbGVkIG91dCBsYXRlclxuICAgICAgICB0aXRsZTogZGVyaXZlZEZpZWxkQ29uZmlnLnVybERpc3BsYXlMYWJlbCB8fCAnJyxcbiAgICAgICAgdXJsOiAnJyxcbiAgICAgICAgLy8gVGhpcyBpcyBoYXJkY29kZWQgZm9yIEphZWdlciBvciBaaXBraW4gbm90IHdheSByaWdodCBub3cgdG8gc3BlY2lmeSBkYXRhc291cmNlIHNwZWNpZmljIHF1ZXJ5IG9iamVjdFxuICAgICAgICBpbnRlcm5hbDoge1xuICAgICAgICAgIHF1ZXJ5OiB7IHF1ZXJ5OiBkZXJpdmVkRmllbGRDb25maWcudXJsLCBxdWVyeVR5cGU6IGRzU2V0dGluZ3M/LnR5cGUgPT09ICd0ZW1wbycgPyAndHJhY2VxbCcgOiB1bmRlZmluZWQgfSxcbiAgICAgICAgICBkYXRhc291cmNlVWlkOiBkZXJpdmVkRmllbGRDb25maWcuZGF0YXNvdXJjZVVpZCxcbiAgICAgICAgICBkYXRhc291cmNlTmFtZTogZHNTZXR0aW5ncz8ubmFtZSA/PyAnRGF0YSBzb3VyY2Ugbm90IGZvdW5kJyxcbiAgICAgICAgfSxcbiAgICAgIH0pO1xuICAgIH0gZWxzZSBpZiAoZGVyaXZlZEZpZWxkQ29uZmlnLnVybCkge1xuICAgICAgYWNjLnB1c2goe1xuICAgICAgICAvLyBXZSBkbyBub3Qga25vdyB3aGF0IHRpdGxlIHRvIGdpdmUgaGVyZSBzbyB3ZSBjb3VudCBvbiBwcmVzZW50YXRpb24gbGF5ZXIgdG8gY3JlYXRlIGEgdGl0bGUgZnJvbSBtZXRhZGF0YS5cbiAgICAgICAgdGl0bGU6IGRlcml2ZWRGaWVsZENvbmZpZy51cmxEaXNwbGF5TGFiZWwgfHwgJycsXG4gICAgICAgIC8vIFRoaXMgaXMgaGFyZGNvZGVkIGZvciBKYWVnZXIgb3IgWmlwa2luIG5vdCB3YXkgcmlnaHQgbm93IHRvIHNwZWNpZnkgZGF0YXNvdXJjZSBzcGVjaWZpYyBxdWVyeSBvYmplY3RcbiAgICAgICAgdXJsOiBkZXJpdmVkRmllbGRDb25maWcudXJsLFxuICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiBhY2M7XG4gIH0sIFtdKTtcblxuICByZXR1cm4ge1xuICAgIG5hbWU6IGRlcml2ZWRGaWVsZENvbmZpZ3NbMF0ubmFtZSxcbiAgICB0eXBlOiBGaWVsZFR5cGUuc3RyaW5nLFxuICAgIGNvbmZpZzoge1xuICAgICAgbGlua3M6IGRhdGFMaW5rcyxcbiAgICB9LFxuICAgIC8vIFdlIGFyZSBhZGRpbmcgdmFsdWVzIGxhdGVyIG9uXG4gICAgdmFsdWVzOiBbXSxcbiAgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/getDerivedFields.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/languageUtils.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   escapeLabelValueInExactSelector: () => (/* binding */ escapeLabelValueInExactSelector),\n/* harmony export */   escapeLabelValueInRegexSelector: () => (/* binding */ escapeLabelValueInRegexSelector),\n/* harmony export */   escapeLabelValueInSelector: () => (/* binding */ escapeLabelValueInSelector),\n/* harmony export */   isBytesString: () => (/* binding */ isBytesString),\n/* harmony export */   isRegexSelector: () => (/* binding */ isRegexSelector),\n/* harmony export */   shouldRefreshLabels: () => (/* binding */ shouldRefreshLabels),\n/* harmony export */   unescapeLabelValue: () => (/* binding */ unescapeLabelValue)\n/* harmony export */ });\n\nfunction roundMsToMin(milliseconds) {\n  return roundSecToMin(milliseconds / 1e3);\n}\nfunction roundSecToMin(seconds) {\n  return Math.floor(seconds / 60);\n}\nfunction shouldRefreshLabels(range, prevRange) {\n  if (range && prevRange) {\n    const sameMinuteFrom = roundMsToMin(range.from.valueOf()) === roundMsToMin(prevRange.from.valueOf());\n    const sameMinuteTo = roundMsToMin(range.to.valueOf()) === roundMsToMin(prevRange.to.valueOf());\n    return !(sameMinuteFrom && sameMinuteTo);\n  }\n  return false;\n}\nconst RE2_METACHARACTERS = /[*+?()|\\\\.\\[\\]{}^$]/g;\nfunction escapeLokiRegexp(value) {\n  return value.replace(RE2_METACHARACTERS, \"\\\\$&\");\n}\nfunction escapeLabelValueInExactSelector(labelValue) {\n  return labelValue.replace(/\\\\/g, \"\\\\\\\\\").replace(/\\n/g, \"\\\\n\").replace(/\"/g, '\\\\\"');\n}\nfunction unescapeLabelValue(labelValue) {\n  return labelValue.replace(/\\\\n/g, \"\\n\").replace(/\\\\\"/g, '\"').replace(/\\\\\\\\/g, \"\\\\\");\n}\nfunction escapeLabelValueInRegexSelector(labelValue) {\n  return escapeLabelValueInExactSelector(escapeLokiRegexp(labelValue));\n}\nfunction escapeLabelValueInSelector(labelValue, selector) {\n  return isRegexSelector(selector) ? escapeLabelValueInRegexSelector(labelValue) : escapeLabelValueInExactSelector(labelValue);\n}\nfunction isRegexSelector(selector) {\n  if (selector && (selector.includes(\"=~\") || selector.includes(\"!~\"))) {\n    return true;\n  }\n  return false;\n}\nfunction isBytesString(string) {\n  const BYTES_KEYWORDS = [\n    \"b\",\n    \"kib\",\n    \"Kib\",\n    \"kb\",\n    \"KB\",\n    \"mib\",\n    \"Mib\",\n    \"mb\",\n    \"MB\",\n    \"gib\",\n    \"Gib\",\n    \"gb\",\n    \"GB\",\n    \"tib\",\n    \"Tib\",\n    \"tb\",\n    \"TB\",\n    \"pib\",\n    \"Pib\",\n    \"pb\",\n    \"PB\",\n    \"eib\",\n    \"Eib\",\n    \"eb\",\n    \"EB\"\n  ];\n  const regex = new RegExp(`^(?:-?\\\\d+(?:\\\\.\\\\d+)?)(?:${BYTES_KEYWORDS.join(\"|\")})$`);\n  const match = string.match(regex);\n  return !!match;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL2xhbmd1YWdlVXRpbHMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFFQSxTQUFTLGFBQWEsY0FBOEI7QUFDbEQsU0FBTyxjQUFjLGVBQWUsR0FBSTtBQUMxQztBQUVBLFNBQVMsY0FBYyxTQUF5QjtBQUM5QyxTQUFPLEtBQUssTUFBTSxVQUFVLEVBQUU7QUFDaEM7QUFFTyxTQUFTLG9CQUFvQixPQUFtQixXQUFnQztBQUNyRixNQUFJLFNBQVMsV0FBVztBQUN0QixVQUFNLGlCQUFpQixhQUFhLE1BQU0sS0FBSyxRQUFRLENBQUMsTUFBTSxhQUFhLFVBQVUsS0FBSyxRQUFRLENBQUM7QUFDbkcsVUFBTSxlQUFlLGFBQWEsTUFBTSxHQUFHLFFBQVEsQ0FBQyxNQUFNLGFBQWEsVUFBVSxHQUFHLFFBQVEsQ0FBQztBQUU3RixXQUFPLEVBQUUsa0JBQWtCO0FBQUEsRUFDN0I7QUFDQSxTQUFPO0FBQ1Q7QUFNQSxNQUFNLHFCQUFxQjtBQUMzQixTQUFTLGlCQUFpQixPQUF1QjtBQUMvQyxTQUFPLE1BQU0sUUFBUSxvQkFBb0IsTUFBTTtBQUNqRDtBQU1PLFNBQVMsZ0NBQWdDLFlBQTRCO0FBQzFFLFNBQU8sV0FBVyxRQUFRLE9BQU8sTUFBTSxFQUFFLFFBQVEsT0FBTyxLQUFLLEVBQUUsUUFBUSxNQUFNLEtBQUs7QUFDcEY7QUFFTyxTQUFTLG1CQUFtQixZQUE0QjtBQUM3RCxTQUFPLFdBQVcsUUFBUSxRQUFRLElBQUksRUFBRSxRQUFRLFFBQVEsR0FBRyxFQUFFLFFBQVEsU0FBUyxJQUFJO0FBQ3BGO0FBRU8sU0FBUyxnQ0FBZ0MsWUFBNEI7QUFDMUUsU0FBTyxnQ0FBZ0MsaUJBQWlCLFVBQVUsQ0FBQztBQUNyRTtBQUVPLFNBQVMsMkJBQTJCLFlBQW9CLFVBQTJCO0FBQ3hGLFNBQU8sZ0JBQWdCLFFBQVEsSUFDM0IsZ0NBQWdDLFVBQVUsSUFDMUMsZ0NBQWdDLFVBQVU7QUFDaEQ7QUFFTyxTQUFTLGdCQUFnQixVQUFtQjtBQUNqRCxNQUFJLGFBQWEsU0FBUyxTQUFTLElBQUksS0FBSyxTQUFTLFNBQVMsSUFBSSxJQUFJO0FBQ3BFLFdBQU87QUFBQSxFQUNUO0FBQ0EsU0FBTztBQUNUO0FBRU8sU0FBUyxjQUFjLFFBQWdCO0FBQzVDLFFBQU0saUJBQWlCO0FBQUEsSUFDckI7QUFBQSxJQUNBO0FBQUEsSUFDQTtBQUFBLElBQ0E7QUFBQSxJQUNBO0FBQUEsSUFDQTtBQUFBLElBQ0E7QUFBQSxJQUNBO0FBQUEsSUFDQTtBQUFBLElBQ0E7QUFBQSxJQUNBO0FBQUEsSUFDQTtBQUFBLElBQ0E7QUFBQSxJQUNBO0FBQUEsSUFDQTtBQUFBLElBQ0E7QUFBQSxJQUNBO0FBQUEsSUFDQTtBQUFBLElBQ0E7QUFBQSxJQUNBO0FBQUEsSUFDQTtBQUFBLElBQ0E7QUFBQSxJQUNBO0FBQUEsSUFDQTtBQUFBLElBQ0E7QUFBQSxFQUNGO0FBQ0EsUUFBTSxRQUFRLElBQUksT0FBTyw2QkFBNkIsZUFBZSxLQUFLLEdBQUcsS0FBSztBQUNsRixRQUFNLFFBQVEsT0FBTyxNQUFNLEtBQUs7QUFDaEMsU0FBTyxDQUFDLENBQUM7QUFDWCIsInNvdXJjZXMiOlsid2VicGFjazovL2dyYWZhbmEvLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL2xhbmd1YWdlVXRpbHMudHM/ZWIzOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUaW1lUmFuZ2UgfSBmcm9tICdAZ3JhZmFuYS9kYXRhJztcblxuZnVuY3Rpb24gcm91bmRNc1RvTWluKG1pbGxpc2Vjb25kczogbnVtYmVyKTogbnVtYmVyIHtcbiAgcmV0dXJuIHJvdW5kU2VjVG9NaW4obWlsbGlzZWNvbmRzIC8gMTAwMCk7XG59XG5cbmZ1bmN0aW9uIHJvdW5kU2VjVG9NaW4oc2Vjb25kczogbnVtYmVyKTogbnVtYmVyIHtcbiAgcmV0dXJuIE1hdGguZmxvb3Ioc2Vjb25kcyAvIDYwKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNob3VsZFJlZnJlc2hMYWJlbHMocmFuZ2U/OiBUaW1lUmFuZ2UsIHByZXZSYW5nZT86IFRpbWVSYW5nZSk6IGJvb2xlYW4ge1xuICBpZiAocmFuZ2UgJiYgcHJldlJhbmdlKSB7XG4gICAgY29uc3Qgc2FtZU1pbnV0ZUZyb20gPSByb3VuZE1zVG9NaW4ocmFuZ2UuZnJvbS52YWx1ZU9mKCkpID09PSByb3VuZE1zVG9NaW4ocHJldlJhbmdlLmZyb20udmFsdWVPZigpKTtcbiAgICBjb25zdCBzYW1lTWludXRlVG8gPSByb3VuZE1zVG9NaW4ocmFuZ2UudG8udmFsdWVPZigpKSA9PT0gcm91bmRNc1RvTWluKHByZXZSYW5nZS50by52YWx1ZU9mKCkpO1xuICAgIC8vIElmIGJvdGggYXJlIHNhbWUsIGRvbid0IG5lZWQgdG8gcmVmcmVzaFxuICAgIHJldHVybiAhKHNhbWVNaW51dGVGcm9tICYmIHNhbWVNaW51dGVUbyk7XG4gIH1cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG4vLyBMb2tpIHJlZ3VsYXItZXhwcmVzc2lvbnMgdXNlIHRoZSBSRTIgc3ludGF4IChodHRwczovL2dpdGh1Yi5jb20vZ29vZ2xlL3JlMi93aWtpL1N5bnRheCksXG4vLyBzbyBldmVyeSBjaGFyYWN0ZXIgdGhhdCBtYXRjaGVzIHNvbWV0aGluZyBpbiB0aGF0IGxpc3QgaGFzIHRvIGJlIGVzY2FwZWQuXG4vLyB0aGUgbGlzdCBvZiBtZXRhIGNoYXJhY3RlcnMgaXM6ICorPygpfFxcLltde31eJFxuLy8gd2UgbWFrZSBhIGphdmFzY3JpcHQgcmVndWxhciBleHByZXNzaW9uIHRoYXQgbWF0Y2hlcyB0aG9zZSBjaGFyYWN0ZXJzOlxuY29uc3QgUkUyX01FVEFDSEFSQUNURVJTID0gL1sqKz8oKXxcXFxcLlxcW1xcXXt9XiRdL2c7XG5mdW5jdGlvbiBlc2NhcGVMb2tpUmVnZXhwKHZhbHVlOiBzdHJpbmcpOiBzdHJpbmcge1xuICByZXR1cm4gdmFsdWUucmVwbGFjZShSRTJfTUVUQUNIQVJBQ1RFUlMsICdcXFxcJCYnKTtcbn1cblxuLy8gYmFzZWQgb24gdGhlIG9wZW5tZXRyaWNzLWRvY3VtZW50YXRpb24sIHRoZSAzIHN5bWJvbHMgd2UgaGF2ZSB0byBoYW5kbGUgYXJlOlxuLy8gLSBcXG4gLi4uIHRoZSBuZXdsaW5lIGNoYXJhY3RlclxuLy8gLSBcXCAgLi4uIHRoZSBiYWNrc2xhc2ggY2hhcmFjdGVyXG4vLyAtIFwiICAuLi4gdGhlIGRvdWJsZS1xdW90ZSBjaGFyYWN0ZXJcbmV4cG9ydCBmdW5jdGlvbiBlc2NhcGVMYWJlbFZhbHVlSW5FeGFjdFNlbGVjdG9yKGxhYmVsVmFsdWU6IHN0cmluZyk6IHN0cmluZyB7XG4gIHJldHVybiBsYWJlbFZhbHVlLnJlcGxhY2UoL1xcXFwvZywgJ1xcXFxcXFxcJykucmVwbGFjZSgvXFxuL2csICdcXFxcbicpLnJlcGxhY2UoL1wiL2csICdcXFxcXCInKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVuZXNjYXBlTGFiZWxWYWx1ZShsYWJlbFZhbHVlOiBzdHJpbmcpOiBzdHJpbmcge1xuICByZXR1cm4gbGFiZWxWYWx1ZS5yZXBsYWNlKC9cXFxcbi9nLCAnXFxuJykucmVwbGFjZSgvXFxcXFwiL2csICdcIicpLnJlcGxhY2UoL1xcXFxcXFxcL2csICdcXFxcJyk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBlc2NhcGVMYWJlbFZhbHVlSW5SZWdleFNlbGVjdG9yKGxhYmVsVmFsdWU6IHN0cmluZyk6IHN0cmluZyB7XG4gIHJldHVybiBlc2NhcGVMYWJlbFZhbHVlSW5FeGFjdFNlbGVjdG9yKGVzY2FwZUxva2lSZWdleHAobGFiZWxWYWx1ZSkpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZXNjYXBlTGFiZWxWYWx1ZUluU2VsZWN0b3IobGFiZWxWYWx1ZTogc3RyaW5nLCBzZWxlY3Rvcj86IHN0cmluZyk6IHN0cmluZyB7XG4gIHJldHVybiBpc1JlZ2V4U2VsZWN0b3Ioc2VsZWN0b3IpXG4gICAgPyBlc2NhcGVMYWJlbFZhbHVlSW5SZWdleFNlbGVjdG9yKGxhYmVsVmFsdWUpXG4gICAgOiBlc2NhcGVMYWJlbFZhbHVlSW5FeGFjdFNlbGVjdG9yKGxhYmVsVmFsdWUpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNSZWdleFNlbGVjdG9yKHNlbGVjdG9yPzogc3RyaW5nKSB7XG4gIGlmIChzZWxlY3RvciAmJiAoc2VsZWN0b3IuaW5jbHVkZXMoJz1+JykgfHwgc2VsZWN0b3IuaW5jbHVkZXMoJyF+JykpKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNCeXRlc1N0cmluZyhzdHJpbmc6IHN0cmluZykge1xuICBjb25zdCBCWVRFU19LRVlXT1JEUyA9IFtcbiAgICAnYicsXG4gICAgJ2tpYicsXG4gICAgJ0tpYicsXG4gICAgJ2tiJyxcbiAgICAnS0InLFxuICAgICdtaWInLFxuICAgICdNaWInLFxuICAgICdtYicsXG4gICAgJ01CJyxcbiAgICAnZ2liJyxcbiAgICAnR2liJyxcbiAgICAnZ2InLFxuICAgICdHQicsXG4gICAgJ3RpYicsXG4gICAgJ1RpYicsXG4gICAgJ3RiJyxcbiAgICAnVEInLFxuICAgICdwaWInLFxuICAgICdQaWInLFxuICAgICdwYicsXG4gICAgJ1BCJyxcbiAgICAnZWliJyxcbiAgICAnRWliJyxcbiAgICAnZWInLFxuICAgICdFQicsXG4gIF07XG4gIGNvbnN0IHJlZ2V4ID0gbmV3IFJlZ0V4cChgXig/Oi0/XFxcXGQrKD86XFxcXC5cXFxcZCspPykoPzoke0JZVEVTX0tFWVdPUkRTLmpvaW4oJ3wnKX0pJGApO1xuICBjb25zdCBtYXRjaCA9IHN0cmluZy5tYXRjaChyZWdleCk7XG4gIHJldHVybiAhIW1hdGNoO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/languageUtils.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/lineParser.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isLogLineJSON: () => (/* binding */ isLogLineJSON),\n/* harmony export */   isLogLineLogfmt: () => (/* binding */ isLogLineLogfmt),\n/* harmony export */   isLogLinePacked: () => (/* binding */ isLogLinePacked)\n/* harmony export */ });\n\nfunction isLogLineJSON(line) {\n  let parsed;\n  try {\n    parsed = JSON.parse(line);\n  } catch (error) {\n  }\n  return typeof parsed === \"object\";\n}\nconst LOGFMT_REGEXP = /(?:^|\\s)([\\w\\(\\)\\[\\]\\{\\}]+)=(\"\"|(?:\".*?[^\\\\]\"|[^\"\\s]\\S*))/;\nfunction isLogLineLogfmt(line) {\n  return LOGFMT_REGEXP.test(line);\n}\nfunction isLogLinePacked(line) {\n  let parsed;\n  try {\n    parsed = JSON.parse(line);\n    return parsed.hasOwnProperty(\"_entry\");\n  } catch (error) {\n    return false;\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL2xpbmVQYXJzZXIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFPLFNBQVMsY0FBYyxNQUF1QjtBQUNuRCxNQUFJO0FBQ0osTUFBSTtBQUNGLGFBQVMsS0FBSyxNQUFNLElBQUk7QUFBQSxFQUMxQixTQUFTLE9BQVA7QUFBQSxFQUFlO0FBRWpCLFNBQU8sT0FBTyxXQUFXO0FBQzNCO0FBTUEsTUFBTSxnQkFBZ0I7QUFFZixTQUFTLGdCQUFnQixNQUF1QjtBQUNyRCxTQUFPLGNBQWMsS0FBSyxJQUFJO0FBQ2hDO0FBRU8sU0FBUyxnQkFBZ0IsTUFBdUI7QUFDckQsTUFBSTtBQUNKLE1BQUk7QUFDRixhQUFTLEtBQUssTUFBTSxJQUFJO0FBQ3hCLFdBQU8sT0FBTyxlQUFlLFFBQVE7QUFBQSxFQUN2QyxTQUFTLE9BQVA7QUFDQSxXQUFPO0FBQUEsRUFDVDtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ3JhZmFuYS8uL3B1YmxpYy9hcHAvcGx1Z2lucy9kYXRhc291cmNlL2xva2kvbGluZVBhcnNlci50cz9iNjU4Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBpc0xvZ0xpbmVKU09OKGxpbmU6IHN0cmluZyk6IGJvb2xlYW4ge1xuICBsZXQgcGFyc2VkO1xuICB0cnkge1xuICAgIHBhcnNlZCA9IEpTT04ucGFyc2UobGluZSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7fVxuICAvLyBUaGUgSlNPTiBwYXJzZXIgc2hvdWxkIG9ubHkgYmUgdXNlZCBmb3IgbG9nIGxpbmVzIHRoYXQgYXJlIHZhbGlkIHNlcmlhbGl6ZWQgSlNPTiBvYmplY3RzLlxuICByZXR1cm4gdHlwZW9mIHBhcnNlZCA9PT0gJ29iamVjdCc7XG59XG5cbi8vIFRoaXMgbWF0Y2hlczpcbi8vIGZpcnN0IGEgbGFiZWwgZnJvbSBzdGFydCBvZiB0aGUgc3RyaW5nIG9yIGZpcnN0IHdoaXRlIHNwYWNlLCB0aGVuIGFueSB3b3JkIGNoYXJzIHVudGlsIFwiPVwiXG4vLyBzZWNvbmQgZWl0aGVyIGFuIGVtcHR5IHF1b3Rlcywgb3IgYW55dGhpbmcgdGhhdCBzdGFydHMgd2l0aCBxdW90ZSBhbmQgZW5kcyB3aXRoIHVuZXNjYXBlZCBxdW90ZSxcbi8vIG9yIGFueSBub24gd2hpdGVzcGFjZSBjaGFycyB0aGF0IGRvIG5vdCBzdGFydCB3aXRoIHF1b3RlXG5jb25zdCBMT0dGTVRfUkVHRVhQID0gLyg/Ol58XFxzKShbXFx3XFwoXFwpXFxbXFxdXFx7XFx9XSspPShcIlwifCg/OlwiLio/W15cXFxcXVwifFteXCJcXHNdXFxTKikpLztcblxuZXhwb3J0IGZ1bmN0aW9uIGlzTG9nTGluZUxvZ2ZtdChsaW5lOiBzdHJpbmcpOiBib29sZWFuIHtcbiAgcmV0dXJuIExPR0ZNVF9SRUdFWFAudGVzdChsaW5lKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzTG9nTGluZVBhY2tlZChsaW5lOiBzdHJpbmcpOiBib29sZWFuIHtcbiAgbGV0IHBhcnNlZDtcbiAgdHJ5IHtcbiAgICBwYXJzZWQgPSBKU09OLnBhcnNlKGxpbmUpO1xuICAgIHJldHVybiBwYXJzZWQuaGFzT3duUHJvcGVydHkoJ19lbnRyeScpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/lineParser.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/liveStreamsResultTransformer.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   appendResponseToBufferedData: () => (/* binding */ appendResponseToBufferedData)\n/* harmony export */ });\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/uuid-npm-9.0.0-46c41e3e43-8dd2c83c43.zip/node_modules/uuid/dist/esm-browser/v5.js\");\n\n\nconst UUID_NAMESPACE = \"6ec946da-0f49-47a8-983a-1d76d17e7c92\";\nfunction appendResponseToBufferedData(response, data) {\n  const streams = response.streams;\n  if (!streams || !streams.length) {\n    return;\n  }\n  const tsField = data.fields[0];\n  const lineField = data.fields[1];\n  const idField = data.fields[2];\n  const usedUids = {};\n  for (const stream of streams) {\n    const allLabelsString = Object.entries(stream.stream).map(([key, val]) => `${key}=\"${val}\"`).sort().join(\"\");\n    for (const [ts, line] of stream.values) {\n      tsField.values.push(new Date(parseInt(ts.slice(0, -6), 10)).toISOString());\n      lineField.values.push(line);\n      idField.values.push(createUid(ts, allLabelsString, line, usedUids, data.refId));\n    }\n  }\n}\nfunction createUid(ts, labelsString, line, usedUids, refId) {\n  let id = (0,uuid__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(`${ts}_${labelsString}_${line}`, UUID_NAMESPACE);\n  if (id in usedUids) {\n    const newCount = usedUids[id] + 1;\n    usedUids[id] = newCount;\n    id = `${id}_${newCount}`;\n  } else {\n    usedUids[id] = 0;\n  }\n  if (refId) {\n    return `${refId}_${id}`;\n  }\n  return id;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL2xpdmVTdHJlYW1zUmVzdWx0VHJhbnNmb3JtZXIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTZCO0FBTTdCLE1BQU0saUJBQWlCO0FBU2hCLFNBQVMsNkJBQTZCLFVBQTRCLE1BQXdCO0FBRy9GLFFBQU0sVUFBOEIsU0FBUztBQUM3QyxNQUFJLENBQUMsV0FBVyxDQUFDLFFBQVEsUUFBUTtBQUMvQjtBQUFBLEVBQ0Y7QUFFQSxRQUFNLFVBQVUsS0FBSyxPQUFPLENBQUM7QUFDN0IsUUFBTSxZQUFZLEtBQUssT0FBTyxDQUFDO0FBQy9CLFFBQU0sVUFBVSxLQUFLLE9BQU8sQ0FBQztBQUk3QixRQUFNLFdBQW1DLENBQUM7QUFFMUMsYUFBVyxVQUFVLFNBQVM7QUFFNUIsVUFBTSxrQkFBa0IsT0FBTyxRQUFRLE9BQU8sTUFBTSxFQUNqRCxJQUFJLENBQUMsQ0FBQyxLQUFLLEdBQUcsTUFBTSxHQUFHLFFBQVEsTUFBTSxFQUNyQyxLQUFLLEVBQ0wsS0FBSyxFQUFFO0FBR1YsZUFBVyxDQUFDLElBQUksSUFBSSxLQUFLLE9BQU8sUUFBUTtBQUN0QyxjQUFRLE9BQU8sS0FBSyxJQUFJLEtBQUssU0FBUyxHQUFHLE1BQU0sR0FBRyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsWUFBWSxDQUFDO0FBQ3pFLGdCQUFVLE9BQU8sS0FBSyxJQUFJO0FBQzFCLGNBQVEsT0FBTyxLQUFLLFVBQVUsSUFBSSxpQkFBaUIsTUFBTSxVQUFVLEtBQUssS0FBSyxDQUFDO0FBQUEsSUFDaEY7QUFBQSxFQUNGO0FBQ0Y7QUFFQSxTQUFTLFVBQ1AsSUFDQSxjQUNBLE1BQ0EsVUFDQSxPQUNRO0FBRVIsTUFBSSxLQUFLLGdEQUFNLENBQUMsR0FBRyxNQUFNLGdCQUFnQixRQUFRLGNBQWM7QUFJL0QsTUFBSSxNQUFNLFVBQVU7QUFFbEIsVUFBTSxXQUFXLFNBQVMsRUFBRSxJQUFJO0FBQ2hDLGFBQVMsRUFBRSxJQUFJO0FBRWYsU0FBSyxHQUFHLE1BQU07QUFBQSxFQUNoQixPQUFPO0FBRUwsYUFBUyxFQUFFLElBQUk7QUFBQSxFQUNqQjtBQUVBLE1BQUksT0FBTztBQUNULFdBQU8sR0FBRyxTQUFTO0FBQUEsRUFDckI7QUFDQSxTQUFPO0FBQ1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ncmFmYW5hLy4vcHVibGljL2FwcC9wbHVnaW5zL2RhdGFzb3VyY2UvbG9raS9saXZlU3RyZWFtc1Jlc3VsdFRyYW5zZm9ybWVyLnRzPzIwMDQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdjUgYXMgdXVpZHY1IH0gZnJvbSAndXVpZCc7XG5cbmltcG9ydCB7IE11dGFibGVEYXRhRnJhbWUgfSBmcm9tICdAZ3JhZmFuYS9kYXRhJztcblxuaW1wb3J0IHsgTG9raVN0cmVhbVJlc3VsdCwgTG9raVRhaWxSZXNwb25zZSB9IGZyb20gJy4vdHlwZXMnO1xuXG5jb25zdCBVVUlEX05BTUVTUEFDRSA9ICc2ZWM5NDZkYS0wZjQ5LTQ3YTgtOTgzYS0xZDc2ZDE3ZTdjOTInO1xuXG4vKipcbiAqIFRyYW5zZm9ybSBMb2tpUmVzcG9uc2UgZGF0YSBhbmQgYXBwZW5kcyBpdCB0byBNdXRhYmxlRGF0YUZyYW1lLiBVc2VkIGZvciBzdHJlYW1pbmcgd2hlcmUgdGhlIGRhdGFGcmFtZSBjYW4gYmVcbiAqIGEgQ2lyY3VsYXJEYXRhRnJhbWUgY3JlYXRpbmcgYSBmaXhlZCBzaXplIHJvbGxpbmcgYnVmZmVyLlxuICogVE9ETzogUHJvYmFibHkgY291bGQgYmUgdW5pZmllZCB3aXRoIHRoZSBsb2dTdHJlYW1Ub0RhdGFGcmFtZSBmdW5jdGlvbi5cbiAqIEBwYXJhbSByZXNwb25zZVxuICogQHBhcmFtIGRhdGEgTmVlZHMgdG8gaGF2ZSB0cywgbGluZSwgbGFiZWxzLCBpZCBhcyBmaWVsZHNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFwcGVuZFJlc3BvbnNlVG9CdWZmZXJlZERhdGEocmVzcG9uc2U6IExva2lUYWlsUmVzcG9uc2UsIGRhdGE6IE11dGFibGVEYXRhRnJhbWUpIHtcbiAgLy8gU2hvdWxkIHdlIGRvIGFueXRoaW5nIHdpdGg6IHJlc3BvbnNlLmRyb3BwZWRfZW50cmllcz9cblxuICBjb25zdCBzdHJlYW1zOiBMb2tpU3RyZWFtUmVzdWx0W10gPSByZXNwb25zZS5zdHJlYW1zO1xuICBpZiAoIXN0cmVhbXMgfHwgIXN0cmVhbXMubGVuZ3RoKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgY29uc3QgdHNGaWVsZCA9IGRhdGEuZmllbGRzWzBdO1xuICBjb25zdCBsaW5lRmllbGQgPSBkYXRhLmZpZWxkc1sxXTtcbiAgY29uc3QgaWRGaWVsZCA9IGRhdGEuZmllbGRzWzJdO1xuXG4gIC8vIFdlIGFyZSBjb21wYXJpbmcgdXNlZCBpZHMgb25seSB3aXRoaW4gdGhlIHJlY2VpdmVkIHN0cmVhbS4gVGhpcyBjb3VsZCBiZSBhIHByb2JsZW0gaWYgdGhlIHNhbWUgbGluZSArIGxhYmVscyArIG5hbm9zZWNvbmQgdGltZXN0YW1wIGNhbWUgaW4gMiBzZXBhcmF0ZSBiYXRjaGVzLlxuICAvLyBBcyB0aGlzIGlzIHZlcnkgdW5saWtlbHksIGFuZCB0aGUgcmVzdWx0IHdvdWxkIG9ubHkgYWZmZWN0IGxpdmUtdGFpbGluZyBjc3MgYW5pbWF0aW9uIHdlIGhhdmUgZGVjaWRlZCB0byBub3QgY29tcGFyZSBhbGwgcmVjZWl2ZWQgdWlkcyBmcm9tIGRhdGEgcGFyYW0gYXMgdGhpcyB3b3VsZCBzbG93IGRvd24gcHJvY2Vzc2luZy5cbiAgY29uc3QgdXNlZFVpZHM6IFJlY29yZDxzdHJpbmcsIG51bWJlcj4gPSB7fTtcblxuICBmb3IgKGNvbnN0IHN0cmVhbSBvZiBzdHJlYW1zKSB7XG4gICAgLy8gRmluZCB1bmlxdWUgbGFiZWxzXG4gICAgY29uc3QgYWxsTGFiZWxzU3RyaW5nID0gT2JqZWN0LmVudHJpZXMoc3RyZWFtLnN0cmVhbSlcbiAgICAgIC5tYXAoKFtrZXksIHZhbF0pID0+IGAke2tleX09XCIke3ZhbH1cImApXG4gICAgICAuc29ydCgpXG4gICAgICAuam9pbignJyk7XG5cbiAgICAvLyBBZGQgZWFjaCBsaW5lXG4gICAgZm9yIChjb25zdCBbdHMsIGxpbmVdIG9mIHN0cmVhbS52YWx1ZXMpIHtcbiAgICAgIHRzRmllbGQudmFsdWVzLnB1c2gobmV3IERhdGUocGFyc2VJbnQodHMuc2xpY2UoMCwgLTYpLCAxMCkpLnRvSVNPU3RyaW5nKCkpO1xuICAgICAgbGluZUZpZWxkLnZhbHVlcy5wdXNoKGxpbmUpO1xuICAgICAgaWRGaWVsZC52YWx1ZXMucHVzaChjcmVhdGVVaWQodHMsIGFsbExhYmVsc1N0cmluZywgbGluZSwgdXNlZFVpZHMsIGRhdGEucmVmSWQpKTtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gY3JlYXRlVWlkKFxuICB0czogc3RyaW5nLFxuICBsYWJlbHNTdHJpbmc6IHN0cmluZyxcbiAgbGluZTogc3RyaW5nLFxuICB1c2VkVWlkczogUmVjb3JkPHN0cmluZywgbnVtYmVyPixcbiAgcmVmSWQ/OiBzdHJpbmdcbik6IHN0cmluZyB7XG4gIC8vIEdlbmVyYXRlIGlkIGFzIGhhc2hlZCBuYW5vc2Vjb25kIHRpbWVzdGFtcCwgbGFiZWxzIGFuZCBsaW5lICh0aGlzIGRvZXMgbm90IGhhdmUgdG8gYmUgdW5pcXVlKVxuICBsZXQgaWQgPSB1dWlkdjUoYCR7dHN9XyR7bGFiZWxzU3RyaW5nfV8ke2xpbmV9YCwgVVVJRF9OQU1FU1BBQ0UpO1xuXG4gIC8vIENoZWNrIGlmIGdlbmVyYXRlZCBpZCBpcyB1bmlxdWVcbiAgLy8gSWYgbm90IGFuZCB3ZSd2ZSBhbHJlYWR5IHVzZWQgaXQsIGFwcGVuZCBpdHMgY291bnQgYWZ0ZXIgaXRcbiAgaWYgKGlkIGluIHVzZWRVaWRzKSB7XG4gICAgLy8gSW5jcmVhc2UgdGhlIGNvdW50XG4gICAgY29uc3QgbmV3Q291bnQgPSB1c2VkVWlkc1tpZF0gKyAxO1xuICAgIHVzZWRVaWRzW2lkXSA9IG5ld0NvdW50O1xuICAgIC8vIEFwcGVuZCBjb3VudCB0byBnZW5lcmF0ZWQgaWQgdG8gbWFrZSBpdCB1bmlxdWVcbiAgICBpZCA9IGAke2lkfV8ke25ld0NvdW50fWA7XG4gIH0gZWxzZSB7XG4gICAgLy8gSWYgaWQgaXMgdW5pcXVlIGFuZCB3YXNuJ3QgdXNlZCwgYWRkIGl0IHRvIHVzZWRVaWRzIGFuZCBzdGFydCBjb3VudCBhdCAwXG4gICAgdXNlZFVpZHNbaWRdID0gMDtcbiAgfVxuICAvLyBSZXR1cm4gdW5pcXVlIGlkXG4gIGlmIChyZWZJZCkge1xuICAgIHJldHVybiBgJHtyZWZJZH1fJHtpZH1gO1xuICB9XG4gIHJldHVybiBpZDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/liveStreamsResultTransformer.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/logsTimeSplitting.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   splitTimeRange: () => (/* binding */ splitTimeRange)\n/* harmony export */ });\n\nfunction splitTimeRange(startTime, endTime, idealRangeDuration) {\n  if (endTime - startTime <= idealRangeDuration) {\n    return [[startTime, endTime]];\n  }\n  const result = [];\n  for (let chunkEndTime = endTime; chunkEndTime > startTime; chunkEndTime -= idealRangeDuration) {\n    const chunkStartTime = Math.max(chunkEndTime - idealRangeDuration, startTime);\n    result.push([chunkStartTime, chunkEndTime]);\n  }\n  result.reverse();\n  return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL2xvZ3NUaW1lU3BsaXR0aW5nLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBa0JPLFNBQVMsZUFDZCxXQUNBLFNBQ0Esb0JBQ3lCO0FBQ3pCLE1BQUksVUFBVSxhQUFhLG9CQUFvQjtBQUM3QyxXQUFPLENBQUMsQ0FBQyxXQUFXLE9BQU8sQ0FBQztBQUFBLEVBQzlCO0FBRUEsUUFBTSxTQUFrQyxDQUFDO0FBSXpDLFdBQVMsZUFBZSxTQUFTLGVBQWUsV0FBVyxnQkFBZ0Isb0JBQW9CO0FBRzdGLFVBQU0saUJBQWlCLEtBQUssSUFBSSxlQUFlLG9CQUFvQixTQUFTO0FBQzVFLFdBQU8sS0FBSyxDQUFDLGdCQUFnQixZQUFZLENBQUM7QUFBQSxFQUM1QztBQUdBLFNBQU8sUUFBUTtBQUVmLFNBQU87QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL2dyYWZhbmEvLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL2xvZ3NUaW1lU3BsaXR0aW5nLnRzPzRkNDYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXZlcnkgdGltZXN0YW1wIGluIHRoaXMgZmlsZSBpcyBhIG51bWJlciB3aGljaCBjb250YWlucyBhbiB1bml4LXRpbWVzdGFtcC1pbi1taWxsaXNlY29uZCBmb3JtYXQsXG4vLyBsaWtlIHJldHVybmVkIGJ5IGBuZXcgRGF0ZSgpLmdldFRpbWUoKWAuIHRoaXMgaXMgbmVlZGVkIGJlY2F1c2UgdGhlIFwibWF0aFwiXG4vLyBoYXMgdG8gYmUgZG9uZSBvbiBpbnRlZ2VyIG51bWJlcnMuXG5cbi8vIHRoZSB3YXkgbG9raSBoYW5kbGVzIGxvZ3MtcmFuZ2UtcXVlcmllcyBpcyB0aGF0IGlmIHlvdSBzcGVjaWZ5IHN0YXJ0ICYgZW5kLFxuLy8gb25lIG9mIHRob3NlIHdpbGwgYmUgaW5jbHVkZWQsIGJ1dCB0aGUgb3RoZXIgd2lsbCBub3QuIHRoaXMgYWxsb3dzIHVzIHRvXG4vLyBtYWtlIGl0IGVhc3kgdG8gc3BsaXQgcmFuZ2VzLlxuLy8gZm9yIGV4YW1wbGUsIGlmIHRoZSB0aW1lLXJhbmdlIGlzIDEwMDw+MTUwLFxuLy8gd2UgY2FuIHNwbGl0IGl0IGludG86XG4vLyAtIDEwMDw+MTIwXG4vLyAtIDEyMDw+MTQwXG4vLyAtIDE0MDw+MTUwXG4vLyBhbmQgbm8gbG9nLWxpbmUgd2lsbCBiZSBza2lwcGVkIG9yIGR1cGxpY2F0ZWRcbi8vIChOT1RFOiB3ZSBkbyB0aGVzZSBjYWxjdWxhdGlvbnMgaW4gbWlsbGlzZWNvbmRzLiBhdCB0aGUgZW5kLCBMb2tpIHJlY2VpdmVzXG4vLyBuYW5vc2Vjb25kcywgYnV0IGl0IHdpbGwgYmUgT0ssIGJlY2F1c2UgaXQncyBzaW1wbHkgYSBtYXR0ZXIgdG8gYWRkaW5nIGAwMDAwMDBgLFxuLy8gdG8gdGhlIGVuZCwgc28gaWYgd2UgZG8gaXQgcmlnaHQgaW4gbWlsbGlzZWNvbmRzLCBpdCBzaG91bGQgYmUgT0sgaW5cbi8vIG5hbm9zZWNvbmRzIHRvb1xuXG5leHBvcnQgZnVuY3Rpb24gc3BsaXRUaW1lUmFuZ2UoXG4gIHN0YXJ0VGltZTogbnVtYmVyLFxuICBlbmRUaW1lOiBudW1iZXIsXG4gIGlkZWFsUmFuZ2VEdXJhdGlvbjogbnVtYmVyXG4pOiBBcnJheTxbbnVtYmVyLCBudW1iZXJdPiB7XG4gIGlmIChlbmRUaW1lIC0gc3RhcnRUaW1lIDw9IGlkZWFsUmFuZ2VEdXJhdGlvbikge1xuICAgIHJldHVybiBbW3N0YXJ0VGltZSwgZW5kVGltZV1dO1xuICB9XG5cbiAgY29uc3QgcmVzdWx0OiBBcnJheTxbbnVtYmVyLCBudW1iZXJdPiA9IFtdO1xuXG4gIC8vIHdlIHdhbGsgYmFja3dhcmQsIGJlY2F1c2Ugd2UgbmVlZCB3YW50IHRoZSBwb3RlbnRpYWxseSBzbWFsbGVyIFwibGFzdFwiIGNodW5rXG4gIC8vIHRvIGJlIGF0IHRoZSBvbGRlc3QgdGltZXN0YW1wLlxuICBmb3IgKGxldCBjaHVua0VuZFRpbWUgPSBlbmRUaW1lOyBjaHVua0VuZFRpbWUgPiBzdGFydFRpbWU7IGNodW5rRW5kVGltZSAtPSBpZGVhbFJhbmdlRHVyYXRpb24pIHtcbiAgICAvLyB3aGVuIHdlIGdldCBjbG9zZSB0byB0aGUgc3RhcnQgb2YgdGhlIHRpbWUgcmFuZ2UsIHdlIG5lZWQgdG8gYmUgc3VyZSBub3RcbiAgICAvLyB0byBjcm9zcyBvdmVyIHRoZSBzdGFydFRpbWVcbiAgICBjb25zdCBjaHVua1N0YXJ0VGltZSA9IE1hdGgubWF4KGNodW5rRW5kVGltZSAtIGlkZWFsUmFuZ2VEdXJhdGlvbiwgc3RhcnRUaW1lKTtcbiAgICByZXN1bHQucHVzaChbY2h1bmtTdGFydFRpbWUsIGNodW5rRW5kVGltZV0pO1xuICB9XG5cbiAgLy8gYmVjYXVzZSB3ZSB3YWxrZWQgYmFja3dhcmRzLCB3ZSBuZWVkIHRvIHJldmVyc2UgdGhlIGFycmF5XG4gIHJlc3VsdC5yZXZlcnNlKCk7XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/logsTimeSplitting.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/makeTableFrames.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   makeTableFrames: () => (/* binding */ makeTableFrames)\n/* harmony export */ });\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/lodash-npm-4.17.21-6382451519-eb835a2e51.zip/node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/types/dataFrame.ts\");\n\n\n\nfunction makeTableFrames(instantMetricFrames) {\n  const framesWithRefId = instantMetricFrames.filter((f) => f.refId !== void 0);\n  const framesByRefId = (0,lodash__WEBPACK_IMPORTED_MODULE_0__.groupBy)(framesWithRefId, (frame) => frame.refId);\n  return Object.entries(framesByRefId).map(([refId, frames]) => makeTableFrame(frames, refId));\n}\nfunction makeTableFrame(instantMetricFrames, refId) {\n  const tableTimeField = { name: \"Time\", config: {}, values: [], type: _grafana_data__WEBPACK_IMPORTED_MODULE_1__.FieldType.time };\n  const tableValueField = {\n    name: `Value #${refId}`,\n    config: {},\n    values: [],\n    type: _grafana_data__WEBPACK_IMPORTED_MODULE_1__.FieldType.number\n  };\n  const allLabelNames = new Set(\n    instantMetricFrames.map((frame) => frame.fields.map((field) => Object.keys(field.labels ?? {})).flat()).flat()\n  );\n  const sortedLabelNames = Array.from(allLabelNames).sort();\n  const labelFields = sortedLabelNames.map((labelName) => ({\n    name: labelName,\n    config: { filterable: true },\n    values: [],\n    type: _grafana_data__WEBPACK_IMPORTED_MODULE_1__.FieldType.string\n  }));\n  instantMetricFrames.forEach((frame) => {\n    const timeField = frame.fields.find((field) => field.type === _grafana_data__WEBPACK_IMPORTED_MODULE_1__.FieldType.time);\n    const valueField = frame.fields.find((field) => field.type === _grafana_data__WEBPACK_IMPORTED_MODULE_1__.FieldType.number);\n    if (timeField == null || valueField == null) {\n      return;\n    }\n    const timeArray = timeField.values;\n    const valueArray = valueField.values;\n    for (let x of timeArray) {\n      tableTimeField.values.push(x);\n    }\n    for (let x of valueArray) {\n      tableValueField.values.push(x);\n    }\n    const labels = valueField.labels ?? {};\n    for (let f of labelFields) {\n      const text = labels[f.name] ?? \"\";\n      for (let i = 0; i < valueArray.length; i++) {\n        f.values.push(text);\n      }\n    }\n  });\n  return {\n    fields: [tableTimeField, ...labelFields, tableValueField],\n    refId,\n    meta: { preferredVisualisationType: \"table\" },\n    length: tableTimeField.values.length\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL21ha2VUYWJsZUZyYW1lcy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUF3QjtBQUVvQjtBQUVyQyxTQUFTLGdCQUFnQixxQkFBK0M7QUFHN0UsUUFBTSxrQkFBa0Isb0JBQW9CLE9BQU8sQ0FBQyxNQUFNLEVBQUUsVUFBVSxNQUFTO0FBRS9FLFFBQU0sZ0JBQWdCLCtDQUFPLENBQUMsaUJBQWlCLENBQUMsVUFBVSxNQUFNLEtBQUs7QUFFckUsU0FBTyxPQUFPLFFBQVEsYUFBYSxFQUFFLElBQUksQ0FBQyxDQUFDLE9BQU8sTUFBTSxNQUFNLGVBQWUsUUFBUSxLQUFLLENBQUM7QUFDN0Y7QUFLQSxTQUFTLGVBQWUscUJBQWtDLE9BQTBCO0FBQ2xGLFFBQU0saUJBQThCLEVBQUUsTUFBTSxRQUFRLFFBQVEsQ0FBQyxHQUFHLFFBQVEsQ0FBQyxHQUFHLE1BQU0sb0RBQVMsQ0FBQyxLQUFLO0FBQ2pHLFFBQU0sa0JBQStCO0FBQUEsSUFDbkMsTUFBTSxVQUFVO0FBQUEsSUFDaEIsUUFBUSxDQUFDO0FBQUEsSUFDVCxRQUFRLENBQUM7QUFBQSxJQUNULE1BQU0sb0RBQVMsQ0FBQztBQUFBLEVBQ2xCO0FBR0EsUUFBTSxnQkFBZ0IsSUFBSTtBQUFBLElBQ3hCLG9CQUFvQixJQUFJLENBQUMsVUFBVSxNQUFNLE9BQU8sSUFBSSxDQUFDLFVBQVUsT0FBTyxLQUFLLE1BQU0sVUFBVSxDQUFDLENBQUMsQ0FBQyxFQUFFLEtBQUssQ0FBQyxFQUFFLEtBQUs7QUFBQSxFQUMvRztBQUVBLFFBQU0sbUJBQW1CLE1BQU0sS0FBSyxhQUFhLEVBQUUsS0FBSztBQUV4RCxRQUFNLGNBQTZCLGlCQUFpQixJQUFJLENBQUMsZUFBZTtBQUFBLElBQ3RFLE1BQU07QUFBQSxJQUNOLFFBQVEsRUFBRSxZQUFZLEtBQUs7QUFBQSxJQUMzQixRQUFRLENBQUM7QUFBQSxJQUNULE1BQU0sb0RBQVMsQ0FBQztBQUFBLEVBQ2xCLEVBQUU7QUFFRixzQkFBb0IsUUFBUSxDQUFDLFVBQVU7QUFDckMsVUFBTSxZQUFZLE1BQU0sT0FBTyxLQUFLLENBQUMsVUFBVSxNQUFNLFNBQVMsb0RBQVMsQ0FBQyxJQUFJO0FBQzVFLFVBQU0sYUFBYSxNQUFNLE9BQU8sS0FBSyxDQUFDLFVBQVUsTUFBTSxTQUFTLG9EQUFTLENBQUMsTUFBTTtBQUMvRSxRQUFJLGFBQWEsUUFBUSxjQUFjLE1BQU07QUFDM0M7QUFBQSxJQUNGO0FBRUEsVUFBTSxZQUFZLFVBQVU7QUFDNUIsVUFBTSxhQUFhLFdBQVc7QUFFOUIsYUFBUyxLQUFLLFdBQVc7QUFDdkIscUJBQWUsT0FBTyxLQUFLLENBQUM7QUFBQSxJQUM5QjtBQUVBLGFBQVMsS0FBSyxZQUFZO0FBQ3hCLHNCQUFnQixPQUFPLEtBQUssQ0FBQztBQUFBLElBQy9CO0FBRUEsVUFBTSxTQUFTLFdBQVcsVUFBVSxDQUFDO0FBRXJDLGFBQVMsS0FBSyxhQUFhO0FBQ3pCLFlBQU0sT0FBTyxPQUFPLEVBQUUsSUFBSSxLQUFLO0FBRS9CLGVBQVMsSUFBSSxHQUFHLElBQUksV0FBVyxRQUFRLEtBQUs7QUFDMUMsVUFBRSxPQUFPLEtBQUssSUFBSTtBQUFBLE1BQ3BCO0FBQUEsSUFDRjtBQUFBLEVBQ0YsQ0FBQztBQUVELFNBQU87QUFBQSxJQUNMLFFBQVEsQ0FBQyxnQkFBZ0IsR0FBRyxhQUFhLGVBQWU7QUFBQSxJQUN4RDtBQUFBLElBQ0EsTUFBTSxFQUFFLDRCQUE0QixRQUFRO0FBQUEsSUFDNUMsUUFBUSxlQUFlLE9BQU87QUFBQSxFQUNoQztBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ3JhZmFuYS8uL3B1YmxpYy9hcHAvcGx1Z2lucy9kYXRhc291cmNlL2xva2kvbWFrZVRhYmxlRnJhbWVzLnRzP2FmMTEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ3JvdXBCeSB9IGZyb20gJ2xvZGFzaCc7XG5cbmltcG9ydCB7IERhdGFGcmFtZSwgRmllbGQsIEZpZWxkVHlwZSB9IGZyb20gJ0BncmFmYW5hL2RhdGEnO1xuXG5leHBvcnQgZnVuY3Rpb24gbWFrZVRhYmxlRnJhbWVzKGluc3RhbnRNZXRyaWNGcmFtZXM6IERhdGFGcmFtZVtdKTogRGF0YUZyYW1lW10ge1xuICAvLyBmaXJzdCB3ZSByZW1vdmUgZnJhbWVzIHRoYXQgaGF2ZSBubyByZWZJZFxuICAvLyAod2Ugd2lsbCBncm91cCB0aGVtIGJ5IHJlZklkLCBzbyB3ZSBuZWVkIGl0IHRvIGJlIHNldClcbiAgY29uc3QgZnJhbWVzV2l0aFJlZklkID0gaW5zdGFudE1ldHJpY0ZyYW1lcy5maWx0ZXIoKGYpID0+IGYucmVmSWQgIT09IHVuZGVmaW5lZCk7XG5cbiAgY29uc3QgZnJhbWVzQnlSZWZJZCA9IGdyb3VwQnkoZnJhbWVzV2l0aFJlZklkLCAoZnJhbWUpID0+IGZyYW1lLnJlZklkKTtcblxuICByZXR1cm4gT2JqZWN0LmVudHJpZXMoZnJhbWVzQnlSZWZJZCkubWFwKChbcmVmSWQsIGZyYW1lc10pID0+IG1ha2VUYWJsZUZyYW1lKGZyYW1lcywgcmVmSWQpKTtcbn1cblxudHlwZSBOdW1iZXJGaWVsZCA9IEZpZWxkPG51bWJlciwgbnVtYmVyW10+O1xudHlwZSBTdHJpbmdGaWVsZCA9IEZpZWxkPHN0cmluZywgc3RyaW5nW10+O1xuXG5mdW5jdGlvbiBtYWtlVGFibGVGcmFtZShpbnN0YW50TWV0cmljRnJhbWVzOiBEYXRhRnJhbWVbXSwgcmVmSWQ6IHN0cmluZyk6IERhdGFGcmFtZSB7XG4gIGNvbnN0IHRhYmxlVGltZUZpZWxkOiBOdW1iZXJGaWVsZCA9IHsgbmFtZTogJ1RpbWUnLCBjb25maWc6IHt9LCB2YWx1ZXM6IFtdLCB0eXBlOiBGaWVsZFR5cGUudGltZSB9O1xuICBjb25zdCB0YWJsZVZhbHVlRmllbGQ6IE51bWJlckZpZWxkID0ge1xuICAgIG5hbWU6IGBWYWx1ZSAjJHtyZWZJZH1gLFxuICAgIGNvbmZpZzoge30sXG4gICAgdmFsdWVzOiBbXSxcbiAgICB0eXBlOiBGaWVsZFR5cGUubnVtYmVyLFxuICB9O1xuXG4gIC8vIFNvcnQgbWV0cmljIGxhYmVscywgY3JlYXRlIGNvbHVtbnMgZm9yIHRoZW0gYW5kIHJlY29yZCB0aGVpciBpbmRleFxuICBjb25zdCBhbGxMYWJlbE5hbWVzID0gbmV3IFNldChcbiAgICBpbnN0YW50TWV0cmljRnJhbWVzLm1hcCgoZnJhbWUpID0+IGZyYW1lLmZpZWxkcy5tYXAoKGZpZWxkKSA9PiBPYmplY3Qua2V5cyhmaWVsZC5sYWJlbHMgPz8ge30pKS5mbGF0KCkpLmZsYXQoKVxuICApO1xuXG4gIGNvbnN0IHNvcnRlZExhYmVsTmFtZXMgPSBBcnJheS5mcm9tKGFsbExhYmVsTmFtZXMpLnNvcnQoKTtcblxuICBjb25zdCBsYWJlbEZpZWxkczogU3RyaW5nRmllbGRbXSA9IHNvcnRlZExhYmVsTmFtZXMubWFwKChsYWJlbE5hbWUpID0+ICh7XG4gICAgbmFtZTogbGFiZWxOYW1lLFxuICAgIGNvbmZpZzogeyBmaWx0ZXJhYmxlOiB0cnVlIH0sXG4gICAgdmFsdWVzOiBbXSxcbiAgICB0eXBlOiBGaWVsZFR5cGUuc3RyaW5nLFxuICB9KSk7XG5cbiAgaW5zdGFudE1ldHJpY0ZyYW1lcy5mb3JFYWNoKChmcmFtZSkgPT4ge1xuICAgIGNvbnN0IHRpbWVGaWVsZCA9IGZyYW1lLmZpZWxkcy5maW5kKChmaWVsZCkgPT4gZmllbGQudHlwZSA9PT0gRmllbGRUeXBlLnRpbWUpO1xuICAgIGNvbnN0IHZhbHVlRmllbGQgPSBmcmFtZS5maWVsZHMuZmluZCgoZmllbGQpID0+IGZpZWxkLnR5cGUgPT09IEZpZWxkVHlwZS5udW1iZXIpO1xuICAgIGlmICh0aW1lRmllbGQgPT0gbnVsbCB8fCB2YWx1ZUZpZWxkID09IG51bGwpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCB0aW1lQXJyYXkgPSB0aW1lRmllbGQudmFsdWVzO1xuICAgIGNvbnN0IHZhbHVlQXJyYXkgPSB2YWx1ZUZpZWxkLnZhbHVlcztcblxuICAgIGZvciAobGV0IHggb2YgdGltZUFycmF5KSB7XG4gICAgICB0YWJsZVRpbWVGaWVsZC52YWx1ZXMucHVzaCh4KTtcbiAgICB9XG5cbiAgICBmb3IgKGxldCB4IG9mIHZhbHVlQXJyYXkpIHtcbiAgICAgIHRhYmxlVmFsdWVGaWVsZC52YWx1ZXMucHVzaCh4KTtcbiAgICB9XG5cbiAgICBjb25zdCBsYWJlbHMgPSB2YWx1ZUZpZWxkLmxhYmVscyA/PyB7fTtcblxuICAgIGZvciAobGV0IGYgb2YgbGFiZWxGaWVsZHMpIHtcbiAgICAgIGNvbnN0IHRleHQgPSBsYWJlbHNbZi5uYW1lXSA/PyAnJztcbiAgICAgIC8vIHdlIGluc2VydCB0aGUgbGFiZWxzIGFzIG1hbnkgdGltZXMgYXMgd2UgaGF2ZSB2YWx1ZXNcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdmFsdWVBcnJheS5sZW5ndGg7IGkrKykge1xuICAgICAgICBmLnZhbHVlcy5wdXNoKHRleHQpO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG5cbiAgcmV0dXJuIHtcbiAgICBmaWVsZHM6IFt0YWJsZVRpbWVGaWVsZCwgLi4ubGFiZWxGaWVsZHMsIHRhYmxlVmFsdWVGaWVsZF0sXG4gICAgcmVmSWQsXG4gICAgbWV0YTogeyBwcmVmZXJyZWRWaXN1YWxpc2F0aW9uVHlwZTogJ3RhYmxlJyB9LFxuICAgIGxlbmd0aDogdGFibGVUaW1lRmllbGQudmFsdWVzLmxlbmd0aCxcbiAgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/makeTableFrames.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/metricTimeSplitting.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   splitTimeRange: () => (/* binding */ splitTimeRange)\n/* harmony export */ });\n\nfunction expandTimeRange(startTime, endTime, step) {\n  const newStartTime = startTime - startTime % step;\n  let newEndTime = endTime;\n  const endStepMod = endTime % step;\n  if (endStepMod !== 0) {\n    newEndTime += step - endStepMod;\n  }\n  return [newStartTime, newEndTime];\n}\nfunction splitTimeRange(startTime, endTime, step, idealRangeDuration) {\n  if (idealRangeDuration < step) {\n    return [[startTime, endTime]];\n  }\n  const alignedDuration = Math.trunc(idealRangeDuration / step) * step;\n  const [alignedStartTime, alignedEndTime] = expandTimeRange(startTime, endTime, step);\n  const result = [];\n  for (let chunkEndTime = alignedEndTime; chunkEndTime > alignedStartTime; chunkEndTime -= alignedDuration + step) {\n    const chunkStartTime = Math.max(chunkEndTime - alignedDuration, alignedStartTime);\n    result.push([chunkStartTime, chunkEndTime]);\n  }\n  result.reverse();\n  return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL21ldHJpY1RpbWVTcGxpdHRpbmcudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFPQSxTQUFTLGdCQUFnQixXQUFtQixTQUFpQixNQUFnQztBQUUzRixRQUFNLGVBQWUsWUFBYSxZQUFZO0FBRzlDLE1BQUksYUFBYTtBQUNqQixRQUFNLGFBQWEsVUFBVTtBQUM3QixNQUFJLGVBQWUsR0FBRztBQUNwQixrQkFBYyxPQUFPO0FBQUEsRUFDdkI7QUFFQSxTQUFPLENBQUMsY0FBYyxVQUFVO0FBQ2xDO0FBRU8sU0FBUyxlQUNkLFdBQ0EsU0FDQSxNQUNBLG9CQUN5QjtBQUN6QixNQUFJLHFCQUFxQixNQUFNO0FBRTdCLFdBQU8sQ0FBQyxDQUFDLFdBQVcsT0FBTyxDQUFDO0FBQUEsRUFDOUI7QUFHQSxRQUFNLGtCQUFrQixLQUFLLE1BQU0scUJBQXFCLElBQUksSUFBSTtBQUVoRSxRQUFNLENBQUMsa0JBQWtCLGNBQWMsSUFBSSxnQkFBZ0IsV0FBVyxTQUFTLElBQUk7QUFFbkYsUUFBTSxTQUFrQyxDQUFDO0FBR3pDLFdBQVMsZUFBZSxnQkFBZ0IsZUFBZSxrQkFBa0IsZ0JBQWdCLGtCQUFrQixNQUFNO0FBRy9HLFVBQU0saUJBQWlCLEtBQUssSUFBSSxlQUFlLGlCQUFpQixnQkFBZ0I7QUFDaEYsV0FBTyxLQUFLLENBQUMsZ0JBQWdCLFlBQVksQ0FBQztBQUFBLEVBQzVDO0FBR0EsU0FBTyxRQUFRO0FBRWYsU0FBTztBQUNUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ3JhZmFuYS8uL3B1YmxpYy9hcHAvcGx1Z2lucy9kYXRhc291cmNlL2xva2kvbWV0cmljVGltZVNwbGl0dGluZy50cz8wZDEwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV2ZXJ5IHRpbWVzdGFtcCBpbiB0aGlzIGZpbGUgaXMgYSBudW1iZXIgd2hpY2ggY29udGFpbnMgYW4gdW5peC10aW1lc3RhbXAtaW4tbWlsbGlzZWNvbmQgZm9ybWF0LFxuLy8gbGlrZSByZXR1cm5lZCBieSBgbmV3IERhdGUoKS5nZXRUaW1lKClgLiB0aGlzIGlzIG5lZWRlZCBiZWNhdXNlIHRoZSBcIm1hdGhcIlxuLy8gaGFzIHRvIGJlIGRvbmUgb24gaW50ZWdlciBudW1iZXJzLlxuXG4vLyB3ZSBhcmUgdHJ5aW5nIHRvIGJlIGNvbXBhdGlibGUgd2l0aFxuLy8gaHR0cHM6Ly9naXRodWIuY29tL2dyYWZhbmEvbG9raS9ibG9iLzA4OWVjMWIwNWY1ZWMxNWE4ODUxZDBlODIzMDE1M2UwZWViNGRjZWMvcGtnL3F1ZXJpZXIvcXVlcnlyYW5nZS9zcGxpdF9ieV9pbnRlcnZhbC5nbyNMMzI3LUwzMzZcblxuZnVuY3Rpb24gZXhwYW5kVGltZVJhbmdlKHN0YXJ0VGltZTogbnVtYmVyLCBlbmRUaW1lOiBudW1iZXIsIHN0ZXA6IG51bWJlcik6IFtudW1iZXIsIG51bWJlcl0ge1xuICAvLyBzdGFydFRpbWUgaXMgZGVjcmVhc2VkIHRvIHRoZSBjbG9zZXMgbXVsdGlwbGUtb2Ytc3RlcCwgaWYgbmVjZXNzYXJ5XG4gIGNvbnN0IG5ld1N0YXJ0VGltZSA9IHN0YXJ0VGltZSAtIChzdGFydFRpbWUgJSBzdGVwKTtcblxuICAvLyBlbmRUaW1lIGlzIGluY3JlYXNlZCB0byB0aGUgY2xvc2VkIG11bHRpcGxlLW9mLXN0ZXAsIGlmIG5lY2Vzc2FyeVxuICBsZXQgbmV3RW5kVGltZSA9IGVuZFRpbWU7XG4gIGNvbnN0IGVuZFN0ZXBNb2QgPSBlbmRUaW1lICUgc3RlcDtcbiAgaWYgKGVuZFN0ZXBNb2QgIT09IDApIHtcbiAgICBuZXdFbmRUaW1lICs9IHN0ZXAgLSBlbmRTdGVwTW9kO1xuICB9XG5cbiAgcmV0dXJuIFtuZXdTdGFydFRpbWUsIG5ld0VuZFRpbWVdO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc3BsaXRUaW1lUmFuZ2UoXG4gIHN0YXJ0VGltZTogbnVtYmVyLFxuICBlbmRUaW1lOiBudW1iZXIsXG4gIHN0ZXA6IG51bWJlcixcbiAgaWRlYWxSYW5nZUR1cmF0aW9uOiBudW1iZXJcbik6IEFycmF5PFtudW1iZXIsIG51bWJlcl0+IHtcbiAgaWYgKGlkZWFsUmFuZ2VEdXJhdGlvbiA8IHN0ZXApIHtcbiAgICAvLyB3ZSBjYW5ub3QgY3JlYXRlIGNodW5rcyBzbWFsbGVyIHRoYW4gYHN0ZXBgXG4gICAgcmV0dXJuIFtbc3RhcnRUaW1lLCBlbmRUaW1lXV07XG4gIH1cblxuICAvLyB3ZSBtYWtlIHRoZSBkdXJhdGlvbiBhIG11bHRpcGxlIG9mIGBzdGVwYCwgbG93ZXJpbmcgaXQgaWYgbmVjZXNzYXJ5XG4gIGNvbnN0IGFsaWduZWREdXJhdGlvbiA9IE1hdGgudHJ1bmMoaWRlYWxSYW5nZUR1cmF0aW9uIC8gc3RlcCkgKiBzdGVwO1xuXG4gIGNvbnN0IFthbGlnbmVkU3RhcnRUaW1lLCBhbGlnbmVkRW5kVGltZV0gPSBleHBhbmRUaW1lUmFuZ2Uoc3RhcnRUaW1lLCBlbmRUaW1lLCBzdGVwKTtcblxuICBjb25zdCByZXN1bHQ6IEFycmF5PFtudW1iZXIsIG51bWJlcl0+ID0gW107XG5cbiAgLy8gd2UgaXRlcmF0ZSBpdCBmcm9tIHRoZSBlbmQsIGJlY2F1c2Ugd2Ugd2FudCB0byBoYXZlIHRoZSBwb3RlbnRpYWxseSBzbWFsbGVyIGNodW5rIGF0IHRoZSBlbmQsIG5vdCBhdCB0aGUgYmVnaW5uaW5nXG4gIGZvciAobGV0IGNodW5rRW5kVGltZSA9IGFsaWduZWRFbmRUaW1lOyBjaHVua0VuZFRpbWUgPiBhbGlnbmVkU3RhcnRUaW1lOyBjaHVua0VuZFRpbWUgLT0gYWxpZ25lZER1cmF0aW9uICsgc3RlcCkge1xuICAgIC8vIHdoZW4gd2UgZ2V0IGNsb3NlIHRvIHRoZSBzdGFydCBvZiB0aGUgdGltZSByYW5nZSwgd2UgbmVlZCB0byBiZSBzdXJlIG5vdFxuICAgIC8vIHRvIGNyb3NzIG92ZXIgdGhlIHN0YXJ0VGltZVxuICAgIGNvbnN0IGNodW5rU3RhcnRUaW1lID0gTWF0aC5tYXgoY2h1bmtFbmRUaW1lIC0gYWxpZ25lZER1cmF0aW9uLCBhbGlnbmVkU3RhcnRUaW1lKTtcbiAgICByZXN1bHQucHVzaChbY2h1bmtTdGFydFRpbWUsIGNodW5rRW5kVGltZV0pO1xuICB9XG5cbiAgLy8gYmVjYXVzZSB3ZSB3YWxrZWQgYmFja3dhcmRzLCB3ZSBuZWVkIHRvIHJldmVyc2UgdGhlIGFycmF5XG4gIHJlc3VsdC5yZXZlcnNlKCk7XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/metricTimeSplitting.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/migrations/variableQueryMigrations.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   labelNamesRegex: () => (/* binding */ labelNamesRegex),\n/* harmony export */   labelValuesRegex: () => (/* binding */ labelValuesRegex),\n/* harmony export */   migrateVariableQuery: () => (/* binding */ migrateVariableQuery)\n/* harmony export */ });\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./public/app/plugins/datasource/loki/types.ts\");\n\n\nconst labelNamesRegex = /^label_names\\(\\)\\s*$/;\nconst labelValuesRegex = /^label_values\\((?:(.+),\\s*)?([a-zA-Z_$][a-zA-Z0-9_]*)\\)\\s*$/;\nfunction migrateVariableQuery(rawQuery) {\n  if (typeof rawQuery !== \"string\") {\n    return rawQuery;\n  }\n  const queryBase = {\n    refId: \"LokiVariableQueryEditor-VariableQuery\",\n    type: _types__WEBPACK_IMPORTED_MODULE_0__.LokiVariableQueryType.LabelNames\n  };\n  const labelNames = rawQuery.match(labelNamesRegex);\n  if (labelNames) {\n    return {\n      ...queryBase,\n      type: _types__WEBPACK_IMPORTED_MODULE_0__.LokiVariableQueryType.LabelNames\n    };\n  }\n  const labelValues = rawQuery.match(labelValuesRegex);\n  if (labelValues) {\n    return {\n      ...queryBase,\n      type: _types__WEBPACK_IMPORTED_MODULE_0__.LokiVariableQueryType.LabelValues,\n      label: labelValues[2] ? labelValues[2] : labelValues[1],\n      stream: labelValues[2] ? labelValues[1] : void 0\n    };\n  }\n  return queryBase;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL21pZ3JhdGlvbnMvdmFyaWFibGVRdWVyeU1pZ3JhdGlvbnMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBeUQ7QUFFbEQsTUFBTSxrQkFBa0I7QUFDeEIsTUFBTSxtQkFBbUI7QUFFekIsU0FBUyxxQkFBcUIsVUFBeUQ7QUFFNUYsTUFBSSxPQUFPLGFBQWEsVUFBVTtBQUNoQyxXQUFPO0FBQUEsRUFDVDtBQUVBLFFBQU0sWUFBWTtBQUFBLElBQ2hCLE9BQU87QUFBQSxJQUNQLE1BQU0seURBQXFCLENBQUM7QUFBQSxFQUM5QjtBQUVBLFFBQU0sYUFBYSxTQUFTLE1BQU0sZUFBZTtBQUNqRCxNQUFJLFlBQVk7QUFDZCxXQUFPO0FBQUEsTUFDTCxHQUFHO0FBQUEsTUFDSCxNQUFNLHlEQUFxQixDQUFDO0FBQUEsSUFDOUI7QUFBQSxFQUNGO0FBRUEsUUFBTSxjQUFjLFNBQVMsTUFBTSxnQkFBZ0I7QUFDbkQsTUFBSSxhQUFhO0FBQ2YsV0FBTztBQUFBLE1BQ0wsR0FBRztBQUFBLE1BQ0gsTUFBTSx5REFBcUIsQ0FBQztBQUFBLE1BQzVCLE9BQU8sWUFBWSxDQUFDLElBQUksWUFBWSxDQUFDLElBQUksWUFBWSxDQUFDO0FBQUEsTUFDdEQsUUFBUSxZQUFZLENBQUMsSUFBSSxZQUFZLENBQUMsSUFBSTtBQUFBLElBQzVDO0FBQUEsRUFDRjtBQUVBLFNBQU87QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL2dyYWZhbmEvLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL21pZ3JhdGlvbnMvdmFyaWFibGVRdWVyeU1pZ3JhdGlvbnMudHM/NWM0MyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBMb2tpVmFyaWFibGVRdWVyeSwgTG9raVZhcmlhYmxlUXVlcnlUeXBlIH0gZnJvbSAnLi4vdHlwZXMnO1xuXG5leHBvcnQgY29uc3QgbGFiZWxOYW1lc1JlZ2V4ID0gL15sYWJlbF9uYW1lc1xcKFxcKVxccyokLztcbmV4cG9ydCBjb25zdCBsYWJlbFZhbHVlc1JlZ2V4ID0gL15sYWJlbF92YWx1ZXNcXCgoPzooLispLFxccyopPyhbYS16QS1aXyRdW2EtekEtWjAtOV9dKilcXClcXHMqJC87XG5cbmV4cG9ydCBmdW5jdGlvbiBtaWdyYXRlVmFyaWFibGVRdWVyeShyYXdRdWVyeTogc3RyaW5nIHwgTG9raVZhcmlhYmxlUXVlcnkpOiBMb2tpVmFyaWFibGVRdWVyeSB7XG4gIC8vIElmIG5vdCBzdHJpbmcsIHdlIGFzc3VtZSBMb2tpVmFyaWFibGVRdWVyeVxuICBpZiAodHlwZW9mIHJhd1F1ZXJ5ICE9PSAnc3RyaW5nJykge1xuICAgIHJldHVybiByYXdRdWVyeTtcbiAgfVxuXG4gIGNvbnN0IHF1ZXJ5QmFzZSA9IHtcbiAgICByZWZJZDogJ0xva2lWYXJpYWJsZVF1ZXJ5RWRpdG9yLVZhcmlhYmxlUXVlcnknLFxuICAgIHR5cGU6IExva2lWYXJpYWJsZVF1ZXJ5VHlwZS5MYWJlbE5hbWVzLFxuICB9O1xuXG4gIGNvbnN0IGxhYmVsTmFtZXMgPSByYXdRdWVyeS5tYXRjaChsYWJlbE5hbWVzUmVnZXgpO1xuICBpZiAobGFiZWxOYW1lcykge1xuICAgIHJldHVybiB7XG4gICAgICAuLi5xdWVyeUJhc2UsXG4gICAgICB0eXBlOiBMb2tpVmFyaWFibGVRdWVyeVR5cGUuTGFiZWxOYW1lcyxcbiAgICB9O1xuICB9XG5cbiAgY29uc3QgbGFiZWxWYWx1ZXMgPSByYXdRdWVyeS5tYXRjaChsYWJlbFZhbHVlc1JlZ2V4KTtcbiAgaWYgKGxhYmVsVmFsdWVzKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIC4uLnF1ZXJ5QmFzZSxcbiAgICAgIHR5cGU6IExva2lWYXJpYWJsZVF1ZXJ5VHlwZS5MYWJlbFZhbHVlcyxcbiAgICAgIGxhYmVsOiBsYWJlbFZhbHVlc1syXSA/IGxhYmVsVmFsdWVzWzJdIDogbGFiZWxWYWx1ZXNbMV0sXG4gICAgICBzdHJlYW06IGxhYmVsVmFsdWVzWzJdID8gbGFiZWxWYWx1ZXNbMV0gOiB1bmRlZmluZWQsXG4gICAgfTtcbiAgfVxuXG4gIHJldHVybiBxdWVyeUJhc2U7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/migrations/variableQueryMigrations.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/modifyQuery.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NodePosition: () => (/* binding */ NodePosition),\n/* harmony export */   addFilterAsLabelFilter: () => (/* binding */ addFilterAsLabelFilter),\n/* harmony export */   addLabelFormatToQuery: () => (/* binding */ addLabelFormatToQuery),\n/* harmony export */   addLabelToQuery: () => (/* binding */ addLabelToQuery),\n/* harmony export */   addLineFilter: () => (/* binding */ addLineFilter),\n/* harmony export */   addNoPipelineErrorToQuery: () => (/* binding */ addNoPipelineErrorToQuery),\n/* harmony export */   addParserToQuery: () => (/* binding */ addParserToQuery),\n/* harmony export */   findLastPosition: () => (/* binding */ findLastPosition),\n/* harmony export */   getLabelFilterPositions: () => (/* binding */ getLabelFilterPositions),\n/* harmony export */   getParserPositions: () => (/* binding */ getParserPositions),\n/* harmony export */   getStreamSelectorPositions: () => (/* binding */ getStreamSelectorPositions),\n/* harmony export */   queryHasFilter: () => (/* binding */ queryHasFilter),\n/* harmony export */   removeCommentsFromQuery: () => (/* binding */ removeCommentsFromQuery),\n/* harmony export */   removeLabelFromQuery: () => (/* binding */ removeLabelFromQuery),\n/* harmony export */   toLabelFilter: () => (/* binding */ toLabelFilter)\n/* harmony export */ });\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/lodash-npm-4.17.21-6382451519-eb835a2e51.zip/node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-lezer-logql-virtual-0b75aafe9e/0/cache/@grafana-lezer-logql-npm-0.1.11-91e9d74a76-6a624b9a8d.zip/node_modules/@grafana/lezer-logql/index.es.js\");\n/* harmony import */ var _languageUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/plugins/datasource/loki/languageUtils.ts\");\n/* harmony import */ var _querybuilder_LokiQueryModeller__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./public/app/plugins/datasource/loki/querybuilder/LokiQueryModeller.ts\");\n/* harmony import */ var _querybuilder_parsing__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./public/app/plugins/datasource/loki/querybuilder/parsing.ts\");\n\n\n\n\n\n\nclass NodePosition {\n  constructor(from, to, type) {\n    this.from = from;\n    this.to = to;\n    this.type = type;\n  }\n  static fromNode(node) {\n    return new NodePosition(node.from, node.to, node.type);\n  }\n  contains(position) {\n    return this.from <= position.from && this.to >= position.to;\n  }\n  getExpression(query) {\n    return query.substring(this.from, this.to);\n  }\n}\nfunction queryHasFilter(query, key, operator, value) {\n  const matchers = getMatchersWithFilter(query, key, operator, value);\n  return matchers.length > 0;\n}\nfunction removeLabelFromQuery(query, key, operator, value) {\n  const matchers = getMatchersWithFilter(query, key, operator, value);\n  for (const matcher of matchers) {\n    query = matcher.parent?.type.id === _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.LabelFilter ? removeLabelFilter(query, matcher) : removeSelector(query, matcher);\n  }\n  return query;\n}\nfunction removeLabelFilter(query, matcher) {\n  const pipelineStage = matcher.parent?.parent;\n  if (!pipelineStage || pipelineStage.type.id !== _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.PipelineStage) {\n    return query;\n  }\n  return (query.substring(0, pipelineStage.from) + query.substring(pipelineStage.to)).trim();\n}\nfunction removeSelector(query, matcher) {\n  let selector = matcher;\n  do {\n    selector = selector.parent;\n  } while (selector && selector.type.id !== _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.Selector);\n  const label = matcher.getChild(_grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.Identifier);\n  if (!selector || !label) {\n    return query;\n  }\n  const labelName = query.substring(label.from, label.to);\n  const prefix = query.substring(0, selector.from);\n  const suffix = query.substring(selector.to);\n  const matchVisQuery = (0,_querybuilder_parsing__WEBPACK_IMPORTED_MODULE_4__.buildVisualQueryFromString)(query.substring(selector.from, selector.to));\n  matchVisQuery.query.labels = matchVisQuery.query.labels.filter((label2) => label2.label !== labelName);\n  return prefix + _querybuilder_LokiQueryModeller__WEBPACK_IMPORTED_MODULE_3__.lokiQueryModeller.renderQuery(matchVisQuery.query) + suffix;\n}\nfunction getMatchersWithFilter(query, label, operator, value) {\n  const tree = _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.parser.parse(query);\n  const matchers = [];\n  tree.iterate({\n    enter: ({ type, node }) => {\n      if (type.id === _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.Matcher) {\n        matchers.push(node);\n      }\n    }\n  });\n  return matchers.filter((matcher) => {\n    const labelNode = matcher.getChild(_grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.Identifier);\n    const opNode = labelNode?.nextSibling;\n    const valueNode = matcher.getChild(_grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.String);\n    if (!labelNode || !opNode || !valueNode) {\n      return false;\n    }\n    const labelName = query.substring(labelNode.from, labelNode.to);\n    if (labelName !== label) {\n      return false;\n    }\n    const labelValue = query.substring(valueNode.from, valueNode.to);\n    if ((0,_querybuilder_parsing__WEBPACK_IMPORTED_MODULE_4__.handleQuotes)(labelValue) !== (0,_languageUtils__WEBPACK_IMPORTED_MODULE_2__.unescapeLabelValue)(value)) {\n      return false;\n    }\n    const labelOperator = query.substring(opNode.from, opNode.to);\n    if (labelOperator !== operator) {\n      return false;\n    }\n    return true;\n  });\n}\nfunction addLabelToQuery(query, key, operator, value) {\n  if (!key || !value) {\n    throw new Error(\"Need label to add to query.\");\n  }\n  const streamSelectorPositions = getStreamSelectorPositions(query);\n  if (!streamSelectorPositions.length) {\n    return query;\n  }\n  const hasStreamSelectorMatchers = getMatcherInStreamPositions(query);\n  const everyStreamSelectorHasMatcher = streamSelectorPositions.every(\n    (streamSelectorPosition) => hasStreamSelectorMatchers.some(\n      (matcherPosition) => matcherPosition.from >= streamSelectorPosition.from && matcherPosition.to <= streamSelectorPosition.to\n    )\n  );\n  const parserPositions = getParserPositions(query);\n  const labelFilterPositions = getLabelFilterPositions(query);\n  const filter = toLabelFilter(key, value, operator);\n  if (everyStreamSelectorHasMatcher && (labelFilterPositions.length || parserPositions.length)) {\n    const positionToAdd = findLastPosition([...labelFilterPositions, ...parserPositions]);\n    return addFilterAsLabelFilter(query, [positionToAdd], filter);\n  } else {\n    return addFilterToStreamSelector(query, streamSelectorPositions, filter);\n  }\n}\nfunction addParserToQuery(query, parser2) {\n  const lineFilterPositions = getLineFiltersPositions(query);\n  if (lineFilterPositions.length) {\n    return addParser(query, lineFilterPositions, parser2);\n  } else {\n    const streamSelectorPositions = getStreamSelectorPositions(query);\n    if (!streamSelectorPositions.length) {\n      return query;\n    }\n    return addParser(query, streamSelectorPositions, parser2);\n  }\n}\nfunction addNoPipelineErrorToQuery(query) {\n  const parserPositions = getParserPositions(query);\n  if (!parserPositions.length) {\n    return query;\n  }\n  const filter = toLabelFilter(\"__error__\", \"\", \"=\");\n  return addFilterAsLabelFilter(query, parserPositions, filter);\n}\nfunction addLabelFormatToQuery(query, labelFormat) {\n  const logQueryPositions = getLogQueryPositions(query);\n  return addLabelFormat(query, logQueryPositions, labelFormat);\n}\nfunction removeCommentsFromQuery(query) {\n  const lineCommentPositions = getLineCommentPositions(query);\n  if (!lineCommentPositions.length) {\n    return query;\n  }\n  let newQuery = \"\";\n  let prev = 0;\n  for (let lineCommentPosition of lineCommentPositions) {\n    newQuery = newQuery + query.substring(prev, lineCommentPosition.from);\n    prev = lineCommentPosition.to;\n  }\n  newQuery = newQuery + query.substring(prev);\n  return newQuery;\n}\nfunction getStreamSelectorPositions(query) {\n  const tree = _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.parser.parse(query);\n  const positions = [];\n  tree.iterate({\n    enter: ({ type, from, to }) => {\n      if (type.id === _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.Selector) {\n        positions.push(new NodePosition(from, to, type));\n        return false;\n      }\n    }\n  });\n  return positions;\n}\nfunction getMatcherInStreamPositions(query) {\n  const tree = _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.parser.parse(query);\n  const positions = [];\n  tree.iterate({\n    enter: ({ node }) => {\n      if (node.type.id === _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.Selector) {\n        positions.push(...getAllPositionsInNodeByType(query, node, _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.Matcher));\n      }\n    }\n  });\n  return positions;\n}\nfunction getParserPositions(query) {\n  const tree = _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.parser.parse(query);\n  const positions = [];\n  tree.iterate({\n    enter: ({ type, from, to }) => {\n      if (type.id === _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.LabelParser || type.id === _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.JsonExpressionParser) {\n        positions.push(new NodePosition(from, to, type));\n        return false;\n      }\n    }\n  });\n  return positions;\n}\nfunction getLabelFilterPositions(query) {\n  const tree = _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.parser.parse(query);\n  const positions = [];\n  tree.iterate({\n    enter: ({ type, from, to }) => {\n      if (type.id === _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.LabelFilter) {\n        positions.push(new NodePosition(from, to, type));\n        return false;\n      }\n    }\n  });\n  return positions;\n}\nfunction getLineFiltersPositions(query) {\n  const tree = _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.parser.parse(query);\n  const positions = [];\n  tree.iterate({\n    enter: ({ type, from, to }) => {\n      if (type.id === _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.LineFilters) {\n        positions.push(new NodePosition(from, to, type));\n        return false;\n      }\n    }\n  });\n  return positions;\n}\nfunction getLogQueryPositions(query) {\n  const tree = _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.parser.parse(query);\n  const positions = [];\n  tree.iterate({\n    enter: ({ type, from, to, node }) => {\n      if (type.id === _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.LogExpr) {\n        positions.push(new NodePosition(from, to, type));\n        return false;\n      }\n      if (type.id === _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.LogRangeExpr) {\n        const logPartsPositions = [];\n        const selector = node.getChild(_grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.Selector);\n        if (selector) {\n          logPartsPositions.push(NodePosition.fromNode(selector));\n        }\n        const pipeline = node.getChild(_grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.PipelineExpr);\n        if (pipeline) {\n          logPartsPositions.push(NodePosition.fromNode(pipeline));\n        }\n        const unwrap = node.getChild(_grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.UnwrapExpr);\n        if (unwrap) {\n          logPartsPositions.push(NodePosition.fromNode(unwrap));\n        }\n        const sorted = (0,lodash__WEBPACK_IMPORTED_MODULE_0__.sortBy)(logPartsPositions, (position) => position.to);\n        positions.push(new NodePosition(sorted[0].from, sorted[sorted.length - 1].to));\n        return false;\n      }\n    }\n  });\n  return positions;\n}\nfunction toLabelFilter(key, value, operator) {\n  return { label: key, op: operator, value };\n}\nfunction addFilterToStreamSelector(query, vectorSelectorPositions, filter) {\n  let newQuery = \"\";\n  let prev = 0;\n  for (let i = 0; i < vectorSelectorPositions.length; i++) {\n    const match = vectorSelectorPositions[i];\n    const isLast = i === vectorSelectorPositions.length - 1;\n    const start = query.substring(prev, match.from);\n    const end = isLast ? query.substring(match.to) : \"\";\n    const matchVisQuery = (0,_querybuilder_parsing__WEBPACK_IMPORTED_MODULE_4__.buildVisualQueryFromString)(query.substring(match.from, match.to));\n    if (!labelExists(matchVisQuery.query.labels, filter)) {\n      matchVisQuery.query.labels.push(filter);\n    }\n    const newLabels = _querybuilder_LokiQueryModeller__WEBPACK_IMPORTED_MODULE_3__.lokiQueryModeller.renderQuery(matchVisQuery.query);\n    newQuery += start + newLabels + end;\n    prev = match.to;\n  }\n  return newQuery;\n}\nfunction addFilterAsLabelFilter(query, positionsToAddAfter, filter) {\n  let newQuery = \"\";\n  let prev = 0;\n  for (let i = 0; i < positionsToAddAfter.length; i++) {\n    const match = positionsToAddAfter[i];\n    const isLast = i === positionsToAddAfter.length - 1;\n    const start = query.substring(prev, match.to);\n    const end = isLast ? query.substring(match.to) : \"\";\n    let labelFilter = \"\";\n    if (!Number.isNaN(Number(filter.value)) && (filter.op === \"<\" || filter.op === \">\")) {\n      labelFilter = ` | ${filter.label}${filter.op}${Number(filter.value)}`;\n    } else {\n      labelFilter = ` | ${filter.label}${filter.op}\\`${(0,_languageUtils__WEBPACK_IMPORTED_MODULE_2__.unescapeLabelValue)(filter.value)}\\``;\n    }\n    newQuery += start + labelFilter + end;\n    prev = match.to;\n  }\n  return newQuery;\n}\nfunction addParser(query, queryPartPositions, parser2) {\n  let newQuery = \"\";\n  let prev = 0;\n  for (let i = 0; i < queryPartPositions.length; i++) {\n    const match = queryPartPositions[i];\n    const isLast = i === queryPartPositions.length - 1;\n    const start = query.substring(prev, match.to);\n    const end = isLast ? query.substring(match.to) : \"\";\n    newQuery += start + ` | ${parser2}` + end;\n    prev = match.to;\n  }\n  return newQuery;\n}\nfunction addLabelFormat(query, logQueryPositions, labelFormat) {\n  let newQuery = \"\";\n  let prev = 0;\n  for (let i = 0; i < logQueryPositions.length; i++) {\n    const match = logQueryPositions[i];\n    const isLast = i === logQueryPositions.length - 1;\n    const start = query.substring(prev, match.to);\n    const end = isLast ? query.substring(match.to) : \"\";\n    const labelFilter = ` | label_format ${labelFormat.renameTo}=${labelFormat.originalLabel}`;\n    newQuery += start + labelFilter + end;\n    prev = match.to;\n  }\n  return newQuery;\n}\nfunction addLineFilter(query) {\n  const streamSelectorPositions = getStreamSelectorPositions(query);\n  if (!streamSelectorPositions.length) {\n    return query;\n  }\n  const streamSelectorEnd = streamSelectorPositions[0].to;\n  const newQueryExpr = query.slice(0, streamSelectorEnd) + \" |= ``\" + query.slice(streamSelectorEnd);\n  return newQueryExpr;\n}\nfunction getLineCommentPositions(query) {\n  const tree = _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.parser.parse(query);\n  const positions = [];\n  tree.iterate({\n    enter: ({ type, from, to }) => {\n      if (type.id === _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.LineComment) {\n        positions.push(new NodePosition(from, to, type));\n        return false;\n      }\n    }\n  });\n  return positions;\n}\nfunction labelExists(labels, filter) {\n  return labels.find((label) => label.label === filter.label && label.value === filter.value);\n}\nfunction findLastPosition(positions) {\n  return positions.reduce((prev, current) => prev.to > current.to ? prev : current);\n}\nfunction getAllPositionsInNodeByType(query, node, type) {\n  if (node.type.id === type) {\n    return [NodePosition.fromNode(node)];\n  }\n  const positions = [];\n  let pos = 0;\n  let child = node.childAfter(pos);\n  while (child) {\n    positions.push(...getAllPositionsInNodeByType(query, child, type));\n    pos = child.to;\n    child = node.childAfter(pos);\n  }\n  return positions;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/modifyQuery.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/module.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   plugin: () => (/* binding */ plugin)\n/* harmony export */ });\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/types/datasource.ts\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/events/common.ts\");\n/* harmony import */ var _grafana_runtime__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-runtime-virtual-68c57d4c0c/1/packages/grafana-runtime/src/services/appEvents.ts\");\n/* harmony import */ var _components_LokiCheatSheet__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./public/app/plugins/datasource/loki/components/LokiCheatSheet.tsx\");\n/* harmony import */ var _components_LokiQueryEditorByApp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/plugins/datasource/loki/components/LokiQueryEditorByApp.tsx\");\n/* harmony import */ var _configuration_ConfigEditor__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/plugins/datasource/loki/configuration/ConfigEditor.tsx\");\n/* harmony import */ var _datasource__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./public/app/plugins/datasource/loki/datasource.ts\");\n/* harmony import */ var _tracking__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./public/app/plugins/datasource/loki/tracking.ts\");\n\n\n\n\n\n\n\n\nconst plugin = new _grafana_data__WEBPACK_IMPORTED_MODULE_5__.DataSourcePlugin(_datasource__WEBPACK_IMPORTED_MODULE_3__.LokiDatasource).setQueryEditor(_components_LokiQueryEditorByApp__WEBPACK_IMPORTED_MODULE_1__[\"default\"]).setConfigEditor(_configuration_ConfigEditor__WEBPACK_IMPORTED_MODULE_2__.ConfigEditor).setQueryEditorHelp(_components_LokiCheatSheet__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n(0,_grafana_runtime__WEBPACK_IMPORTED_MODULE_6__.getAppEvents)().subscribe(_grafana_data__WEBPACK_IMPORTED_MODULE_7__.DashboardLoadedEvent, _tracking__WEBPACK_IMPORTED_MODULE_4__.onDashboardLoadedHandler);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL21vZHVsZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQXVEO0FBQzFCO0FBRUY7QUFDTTtBQUNKO0FBQ0U7QUFDVTtBQUdsQyxNQUFNLFNBQVMsSUFBSSwyREFBZ0IsQ0FBQyx1REFBYyxFQUN0RCxlQUFlLHdFQUFvQixFQUNuQyxnQkFBZ0IscUVBQVksRUFDNUIsbUJBQW1CLGtFQUFjO0FBR3BDLDhEQUFZLENBQUMsRUFBRSxVQUEyQywrREFBb0IsRUFBRSwrREFBd0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ncmFmYW5hLy4vcHVibGljL2FwcC9wbHVnaW5zL2RhdGFzb3VyY2UvbG9raS9tb2R1bGUudHM/ZmI2MyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEYXNoYm9hcmRMb2FkZWRFdmVudCwgRGF0YVNvdXJjZVBsdWdpbiB9IGZyb20gJ0BncmFmYW5hL2RhdGEnO1xuaW1wb3J0IHsgZ2V0QXBwRXZlbnRzIH0gZnJvbSAnQGdyYWZhbmEvcnVudGltZSc7XG5cbmltcG9ydCBMb2tpQ2hlYXRTaGVldCBmcm9tICcuL2NvbXBvbmVudHMvTG9raUNoZWF0U2hlZXQnO1xuaW1wb3J0IExva2lRdWVyeUVkaXRvckJ5QXBwIGZyb20gJy4vY29tcG9uZW50cy9Mb2tpUXVlcnlFZGl0b3JCeUFwcCc7XG5pbXBvcnQgeyBDb25maWdFZGl0b3IgfSBmcm9tICcuL2NvbmZpZ3VyYXRpb24vQ29uZmlnRWRpdG9yJztcbmltcG9ydCB7IExva2lEYXRhc291cmNlIH0gZnJvbSAnLi9kYXRhc291cmNlJztcbmltcG9ydCB7IG9uRGFzaGJvYXJkTG9hZGVkSGFuZGxlciB9IGZyb20gJy4vdHJhY2tpbmcnO1xuaW1wb3J0IHsgTG9raVF1ZXJ5IH0gZnJvbSAnLi90eXBlcyc7XG5cbmV4cG9ydCBjb25zdCBwbHVnaW4gPSBuZXcgRGF0YVNvdXJjZVBsdWdpbihMb2tpRGF0YXNvdXJjZSlcbiAgLnNldFF1ZXJ5RWRpdG9yKExva2lRdWVyeUVkaXRvckJ5QXBwKVxuICAuc2V0Q29uZmlnRWRpdG9yKENvbmZpZ0VkaXRvcilcbiAgLnNldFF1ZXJ5RWRpdG9ySGVscChMb2tpQ2hlYXRTaGVldCk7XG5cbi8vIFN1YnNjcmliZSB0byBvbiBkYXNoYm9hcmQgbG9hZGVkIGV2ZW50IHNvIHRoYXQgd2UgY2FuIHRyYWNrIHBsdWdpbiBhZG9wdGlvblxuZ2V0QXBwRXZlbnRzKCkuc3Vic2NyaWJlPERhc2hib2FyZExvYWRlZEV2ZW50PExva2lRdWVyeT4+KERhc2hib2FyZExvYWRlZEV2ZW50LCBvbkRhc2hib2FyZExvYWRlZEhhbmRsZXIpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/module.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/queryHints.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getQueryHints: () => (/* binding */ getQueryHints)\n/* harmony export */ });\n/* harmony import */ var _queryUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./public/app/plugins/datasource/loki/queryUtils.ts\");\n/* harmony import */ var _responseUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/plugins/datasource/loki/responseUtils.ts\");\n\n\n\nfunction getQueryHints(query, series) {\n  if (series.length === 0) {\n    return [];\n  }\n  const hints = [];\n  const { queryWithParser, parserCount } = (0,_queryUtils__WEBPACK_IMPORTED_MODULE_0__.isQueryWithParser)(query);\n  if (!queryWithParser) {\n    const { hasLogfmt, hasJSON, hasPack } = (0,_responseUtils__WEBPACK_IMPORTED_MODULE_1__.extractLogParserFromDataFrame)(series[0]);\n    if (hasJSON) {\n      if (hasPack) {\n        hints.push({\n          type: \"ADD_UNPACK_PARSER\",\n          label: \"Selected log stream selector has packed logs.\",\n          fix: {\n            title: \"add unpack parser\",\n            label: \"Consider using unpack parser.\",\n            action: {\n              type: \"ADD_UNPACK_PARSER\",\n              query\n            }\n          }\n        });\n      } else {\n        hints.push({\n          type: \"ADD_JSON_PARSER\",\n          label: \"Selected log stream selector has JSON formatted logs.\",\n          fix: {\n            title: \"add json parser\",\n            label: \"Consider using JSON parser.\",\n            action: {\n              type: \"ADD_JSON_PARSER\",\n              query\n            }\n          }\n        });\n      }\n    }\n    if (hasLogfmt) {\n      hints.push({\n        type: \"ADD_LOGFMT_PARSER\",\n        label: \"Selected log stream selector has logfmt formatted logs.\",\n        fix: {\n          title: \"add logfmt parser\",\n          label: \"Consider using logfmt parser to turn key-value pairs in your log lines to labels.\",\n          action: {\n            type: \"ADD_LOGFMT_PARSER\",\n            query\n          }\n        }\n      });\n    }\n  }\n  if (queryWithParser) {\n    if (parserCount === 1) {\n      const hasPipelineErrorFiltering = (0,_queryUtils__WEBPACK_IMPORTED_MODULE_0__.isQueryPipelineErrorFiltering)(query);\n      const hasError = (0,_responseUtils__WEBPACK_IMPORTED_MODULE_1__.extractHasErrorLabelFromDataFrame)(series[0]);\n      if (hasError && !hasPipelineErrorFiltering) {\n        hints.push({\n          type: \"ADD_NO_PIPELINE_ERROR\",\n          label: \"Some logs in your selected log streams have parsing error.\",\n          fix: {\n            title: \"remove pipeline errors\",\n            label: \"Consider filtering out logs with parsing errors.\",\n            action: {\n              type: \"ADD_NO_PIPELINE_ERROR\",\n              query\n            }\n          }\n        });\n      }\n    }\n    const hasLabelFilter = (0,_queryUtils__WEBPACK_IMPORTED_MODULE_0__.isQueryWithLabelFilter)(query);\n    if (!hasLabelFilter) {\n      hints.push({\n        type: \"ADD_LABEL_FILTER\",\n        label: \"Consider filtering logs by their label and value.\",\n        fix: {\n          title: \"add label filter\",\n          label: \"\",\n          action: {\n            type: \"ADD_LABEL_FILTER\",\n            query\n          }\n        }\n      });\n    }\n  }\n  const queryWithLabelFormat = (0,_queryUtils__WEBPACK_IMPORTED_MODULE_0__.isQueryWithLabelFormat)(query);\n  if (!queryWithLabelFormat) {\n    const hasLevel = (0,_responseUtils__WEBPACK_IMPORTED_MODULE_1__.dataFrameHasLevelLabel)(series[0]);\n    const levelLikeLabel = (0,_responseUtils__WEBPACK_IMPORTED_MODULE_1__.extractLevelLikeLabelFromDataFrame)(series[0]);\n    if (!hasLevel && levelLikeLabel) {\n      hints.push({\n        type: \"ADD_LEVEL_LABEL_FORMAT\",\n        label: `Some logs in your selected log stream have \"${levelLikeLabel}\" label.`,\n        fix: {\n          title: \"add label level format\",\n          label: `If ${levelLikeLabel} label has level values, consider using label_format to rename it to \"level\". Level label can be then visualized in log volumes.`,\n          action: {\n            type: \"ADD_LEVEL_LABEL_FORMAT\",\n            query,\n            options: {\n              renameTo: \"level\",\n              originalLabel: levelLikeLabel\n            }\n          }\n        }\n      });\n    }\n  }\n  const hasLineFilter = (0,_queryUtils__WEBPACK_IMPORTED_MODULE_0__.isQueryWithLineFilter)(query);\n  if (!hasLineFilter) {\n    hints.push({\n      type: \"ADD_LINE_FILTER\",\n      label: \"Consider filtering logs for specific string.\",\n      fix: {\n        title: \"add line filter\",\n        label: \"\",\n        action: {\n          type: \"ADD_LINE_FILTER\",\n          query\n        }\n      }\n    });\n  }\n  return hints;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL3F1ZXJ5SGludHMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQVFPO0FBTUE7QUFFQSxTQUFTLGNBQWMsT0FBZSxRQUFrQztBQUM3RSxNQUFJLE9BQU8sV0FBVyxHQUFHO0FBQ3ZCLFdBQU8sQ0FBQztBQUFBLEVBQ1Y7QUFFQSxRQUFNLFFBQXFCLENBQUM7QUFDNUIsUUFBTSxFQUFFLGlCQUFpQixZQUFZLElBQUksOERBQWlCLENBQUMsS0FBSztBQUVoRSxNQUFJLENBQUMsaUJBQWlCO0FBQ3BCLFVBQU0sRUFBRSxXQUFXLFNBQVMsUUFBUSxJQUFJLDZFQUE2QixDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQy9FLFFBQUksU0FBUztBQUNYLFVBQUksU0FBUztBQUNYLGNBQU0sS0FBSztBQUFBLFVBQ1QsTUFBTTtBQUFBLFVBQ04sT0FBTztBQUFBLFVBQ1AsS0FBSztBQUFBLFlBQ0gsT0FBTztBQUFBLFlBQ1AsT0FBTztBQUFBLFlBQ1AsUUFBUTtBQUFBLGNBQ04sTUFBTTtBQUFBLGNBQ047QUFBQSxZQUNGO0FBQUEsVUFDRjtBQUFBLFFBQ0YsQ0FBQztBQUFBLE1BQ0gsT0FBTztBQUNMLGNBQU0sS0FBSztBQUFBLFVBQ1QsTUFBTTtBQUFBLFVBQ04sT0FBTztBQUFBLFVBQ1AsS0FBSztBQUFBLFlBQ0gsT0FBTztBQUFBLFlBQ1AsT0FBTztBQUFBLFlBQ1AsUUFBUTtBQUFBLGNBQ04sTUFBTTtBQUFBLGNBQ047QUFBQSxZQUNGO0FBQUEsVUFDRjtBQUFBLFFBQ0YsQ0FBQztBQUFBLE1BQ0g7QUFBQSxJQUNGO0FBRUEsUUFBSSxXQUFXO0FBQ2IsWUFBTSxLQUFLO0FBQUEsUUFDVCxNQUFNO0FBQUEsUUFDTixPQUFPO0FBQUEsUUFDUCxLQUFLO0FBQUEsVUFDSCxPQUFPO0FBQUEsVUFDUCxPQUFPO0FBQUEsVUFDUCxRQUFRO0FBQUEsWUFDTixNQUFNO0FBQUEsWUFDTjtBQUFBLFVBQ0Y7QUFBQSxRQUNGO0FBQUEsTUFDRixDQUFDO0FBQUEsSUFDSDtBQUFBLEVBQ0Y7QUFFQSxNQUFJLGlCQUFpQjtBQUVuQixRQUFJLGdCQUFnQixHQUFHO0FBQ3JCLFlBQU0sNEJBQTRCLDBFQUE2QixDQUFDLEtBQUs7QUFDckUsWUFBTSxXQUFXLGlGQUFpQyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQzVELFVBQUksWUFBWSxDQUFDLDJCQUEyQjtBQUMxQyxjQUFNLEtBQUs7QUFBQSxVQUNULE1BQU07QUFBQSxVQUNOLE9BQU87QUFBQSxVQUNQLEtBQUs7QUFBQSxZQUNILE9BQU87QUFBQSxZQUNQLE9BQU87QUFBQSxZQUNQLFFBQVE7QUFBQSxjQUNOLE1BQU07QUFBQSxjQUNOO0FBQUEsWUFDRjtBQUFBLFVBQ0Y7QUFBQSxRQUNGLENBQUM7QUFBQSxNQUNIO0FBQUEsSUFDRjtBQUVBLFVBQU0saUJBQWlCLG1FQUFzQixDQUFDLEtBQUs7QUFFbkQsUUFBSSxDQUFDLGdCQUFnQjtBQUNuQixZQUFNLEtBQUs7QUFBQSxRQUNULE1BQU07QUFBQSxRQUNOLE9BQU87QUFBQSxRQUNQLEtBQUs7QUFBQSxVQUNILE9BQU87QUFBQSxVQUNQLE9BQU87QUFBQSxVQUNQLFFBQVE7QUFBQSxZQUNOLE1BQU07QUFBQSxZQUNOO0FBQUEsVUFDRjtBQUFBLFFBQ0Y7QUFBQSxNQUNGLENBQUM7QUFBQSxJQUNIO0FBQUEsRUFDRjtBQUVBLFFBQU0sdUJBQXVCLG1FQUFzQixDQUFDLEtBQUs7QUFDekQsTUFBSSxDQUFDLHNCQUFzQjtBQUN6QixVQUFNLFdBQVcsc0VBQXNCLENBQUMsT0FBTyxDQUFDLENBQUM7QUFDakQsVUFBTSxpQkFBaUIsa0ZBQWtDLENBQUMsT0FBTyxDQUFDLENBQUM7QUFHbkUsUUFBSSxDQUFDLFlBQVksZ0JBQWdCO0FBQy9CLFlBQU0sS0FBSztBQUFBLFFBQ1QsTUFBTTtBQUFBLFFBQ04sT0FBTywrQ0FBK0M7QUFBQSxRQUN0RCxLQUFLO0FBQUEsVUFDSCxPQUFPO0FBQUEsVUFDUCxPQUFPLE1BQU07QUFBQSxVQUNiLFFBQVE7QUFBQSxZQUNOLE1BQU07QUFBQSxZQUNOO0FBQUEsWUFDQSxTQUFTO0FBQUEsY0FDUCxVQUFVO0FBQUEsY0FDVixlQUFlO0FBQUEsWUFDakI7QUFBQSxVQUNGO0FBQUEsUUFDRjtBQUFBLE1BQ0YsQ0FBQztBQUFBLElBQ0g7QUFBQSxFQUNGO0FBRUEsUUFBTSxnQkFBZ0Isa0VBQXFCLENBQUMsS0FBSztBQUVqRCxNQUFJLENBQUMsZUFBZTtBQUNsQixVQUFNLEtBQUs7QUFBQSxNQUNULE1BQU07QUFBQSxNQUNOLE9BQU87QUFBQSxNQUNQLEtBQUs7QUFBQSxRQUNILE9BQU87QUFBQSxRQUNQLE9BQU87QUFBQSxRQUNQLFFBQVE7QUFBQSxVQUNOLE1BQU07QUFBQSxVQUNOO0FBQUEsUUFDRjtBQUFBLE1BQ0Y7QUFBQSxJQUNGLENBQUM7QUFBQSxFQUNIO0FBRUEsU0FBTztBQUNUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ3JhZmFuYS8uL3B1YmxpYy9hcHAvcGx1Z2lucy9kYXRhc291cmNlL2xva2kvcXVlcnlIaW50cy50cz9iMzZlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERhdGFGcmFtZSwgUXVlcnlIaW50IH0gZnJvbSAnQGdyYWZhbmEvZGF0YSc7XG5cbmltcG9ydCB7XG4gIGlzUXVlcnlXaXRoTGFiZWxGaWx0ZXIsXG4gIGlzUXVlcnlQaXBlbGluZUVycm9yRmlsdGVyaW5nLFxuICBpc1F1ZXJ5V2l0aExhYmVsRm9ybWF0LFxuICBpc1F1ZXJ5V2l0aFBhcnNlcixcbiAgaXNRdWVyeVdpdGhMaW5lRmlsdGVyLFxufSBmcm9tICcuL3F1ZXJ5VXRpbHMnO1xuaW1wb3J0IHtcbiAgZGF0YUZyYW1lSGFzTGV2ZWxMYWJlbCxcbiAgZXh0cmFjdEhhc0Vycm9yTGFiZWxGcm9tRGF0YUZyYW1lLFxuICBleHRyYWN0TGV2ZWxMaWtlTGFiZWxGcm9tRGF0YUZyYW1lLFxuICBleHRyYWN0TG9nUGFyc2VyRnJvbURhdGFGcmFtZSxcbn0gZnJvbSAnLi9yZXNwb25zZVV0aWxzJztcblxuZXhwb3J0IGZ1bmN0aW9uIGdldFF1ZXJ5SGludHMocXVlcnk6IHN0cmluZywgc2VyaWVzOiBEYXRhRnJhbWVbXSk6IFF1ZXJ5SGludFtdIHtcbiAgaWYgKHNlcmllcy5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gW107XG4gIH1cblxuICBjb25zdCBoaW50czogUXVlcnlIaW50W10gPSBbXTtcbiAgY29uc3QgeyBxdWVyeVdpdGhQYXJzZXIsIHBhcnNlckNvdW50IH0gPSBpc1F1ZXJ5V2l0aFBhcnNlcihxdWVyeSk7XG5cbiAgaWYgKCFxdWVyeVdpdGhQYXJzZXIpIHtcbiAgICBjb25zdCB7IGhhc0xvZ2ZtdCwgaGFzSlNPTiwgaGFzUGFjayB9ID0gZXh0cmFjdExvZ1BhcnNlckZyb21EYXRhRnJhbWUoc2VyaWVzWzBdKTtcbiAgICBpZiAoaGFzSlNPTikge1xuICAgICAgaWYgKGhhc1BhY2spIHtcbiAgICAgICAgaGludHMucHVzaCh7XG4gICAgICAgICAgdHlwZTogJ0FERF9VTlBBQ0tfUEFSU0VSJyxcbiAgICAgICAgICBsYWJlbDogJ1NlbGVjdGVkIGxvZyBzdHJlYW0gc2VsZWN0b3IgaGFzIHBhY2tlZCBsb2dzLicsXG4gICAgICAgICAgZml4OiB7XG4gICAgICAgICAgICB0aXRsZTogJ2FkZCB1bnBhY2sgcGFyc2VyJyxcbiAgICAgICAgICAgIGxhYmVsOiAnQ29uc2lkZXIgdXNpbmcgdW5wYWNrIHBhcnNlci4nLFxuICAgICAgICAgICAgYWN0aW9uOiB7XG4gICAgICAgICAgICAgIHR5cGU6ICdBRERfVU5QQUNLX1BBUlNFUicsXG4gICAgICAgICAgICAgIHF1ZXJ5LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGhpbnRzLnB1c2goe1xuICAgICAgICAgIHR5cGU6ICdBRERfSlNPTl9QQVJTRVInLFxuICAgICAgICAgIGxhYmVsOiAnU2VsZWN0ZWQgbG9nIHN0cmVhbSBzZWxlY3RvciBoYXMgSlNPTiBmb3JtYXR0ZWQgbG9ncy4nLFxuICAgICAgICAgIGZpeDoge1xuICAgICAgICAgICAgdGl0bGU6ICdhZGQganNvbiBwYXJzZXInLFxuICAgICAgICAgICAgbGFiZWw6ICdDb25zaWRlciB1c2luZyBKU09OIHBhcnNlci4nLFxuICAgICAgICAgICAgYWN0aW9uOiB7XG4gICAgICAgICAgICAgIHR5cGU6ICdBRERfSlNPTl9QQVJTRVInLFxuICAgICAgICAgICAgICBxdWVyeSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgfSxcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGhhc0xvZ2ZtdCkge1xuICAgICAgaGludHMucHVzaCh7XG4gICAgICAgIHR5cGU6ICdBRERfTE9HRk1UX1BBUlNFUicsXG4gICAgICAgIGxhYmVsOiAnU2VsZWN0ZWQgbG9nIHN0cmVhbSBzZWxlY3RvciBoYXMgbG9nZm10IGZvcm1hdHRlZCBsb2dzLicsXG4gICAgICAgIGZpeDoge1xuICAgICAgICAgIHRpdGxlOiAnYWRkIGxvZ2ZtdCBwYXJzZXInLFxuICAgICAgICAgIGxhYmVsOiAnQ29uc2lkZXIgdXNpbmcgbG9nZm10IHBhcnNlciB0byB0dXJuIGtleS12YWx1ZSBwYWlycyBpbiB5b3VyIGxvZyBsaW5lcyB0byBsYWJlbHMuJyxcbiAgICAgICAgICBhY3Rpb246IHtcbiAgICAgICAgICAgIHR5cGU6ICdBRERfTE9HRk1UX1BBUlNFUicsXG4gICAgICAgICAgICBxdWVyeSxcbiAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgaWYgKHF1ZXJ5V2l0aFBhcnNlcikge1xuICAgIC8vIFRvIGtlZXAgdGhpcyBzaW1wbGUsIHdlIGNvbnNpZGVyIHBpcGVsaW5lIGVycm9yIGZpbHRlcmluZyBoaW50IG9ubHkgaXMgcXVlcnkgaGFzIHVwIHRvIDEgcGFyc2VyXG4gICAgaWYgKHBhcnNlckNvdW50ID09PSAxKSB7XG4gICAgICBjb25zdCBoYXNQaXBlbGluZUVycm9yRmlsdGVyaW5nID0gaXNRdWVyeVBpcGVsaW5lRXJyb3JGaWx0ZXJpbmcocXVlcnkpO1xuICAgICAgY29uc3QgaGFzRXJyb3IgPSBleHRyYWN0SGFzRXJyb3JMYWJlbEZyb21EYXRhRnJhbWUoc2VyaWVzWzBdKTtcbiAgICAgIGlmIChoYXNFcnJvciAmJiAhaGFzUGlwZWxpbmVFcnJvckZpbHRlcmluZykge1xuICAgICAgICBoaW50cy5wdXNoKHtcbiAgICAgICAgICB0eXBlOiAnQUREX05PX1BJUEVMSU5FX0VSUk9SJyxcbiAgICAgICAgICBsYWJlbDogJ1NvbWUgbG9ncyBpbiB5b3VyIHNlbGVjdGVkIGxvZyBzdHJlYW1zIGhhdmUgcGFyc2luZyBlcnJvci4nLFxuICAgICAgICAgIGZpeDoge1xuICAgICAgICAgICAgdGl0bGU6ICdyZW1vdmUgcGlwZWxpbmUgZXJyb3JzJyxcbiAgICAgICAgICAgIGxhYmVsOiAnQ29uc2lkZXIgZmlsdGVyaW5nIG91dCBsb2dzIHdpdGggcGFyc2luZyBlcnJvcnMuJyxcbiAgICAgICAgICAgIGFjdGlvbjoge1xuICAgICAgICAgICAgICB0eXBlOiAnQUREX05PX1BJUEVMSU5FX0VSUk9SJyxcbiAgICAgICAgICAgICAgcXVlcnksXG4gICAgICAgICAgICB9LFxuICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cblxuICAgIGNvbnN0IGhhc0xhYmVsRmlsdGVyID0gaXNRdWVyeVdpdGhMYWJlbEZpbHRlcihxdWVyeSk7XG5cbiAgICBpZiAoIWhhc0xhYmVsRmlsdGVyKSB7XG4gICAgICBoaW50cy5wdXNoKHtcbiAgICAgICAgdHlwZTogJ0FERF9MQUJFTF9GSUxURVInLFxuICAgICAgICBsYWJlbDogJ0NvbnNpZGVyIGZpbHRlcmluZyBsb2dzIGJ5IHRoZWlyIGxhYmVsIGFuZCB2YWx1ZS4nLFxuICAgICAgICBmaXg6IHtcbiAgICAgICAgICB0aXRsZTogJ2FkZCBsYWJlbCBmaWx0ZXInLFxuICAgICAgICAgIGxhYmVsOiAnJyxcbiAgICAgICAgICBhY3Rpb246IHtcbiAgICAgICAgICAgIHR5cGU6ICdBRERfTEFCRUxfRklMVEVSJyxcbiAgICAgICAgICAgIHF1ZXJ5LFxuICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBjb25zdCBxdWVyeVdpdGhMYWJlbEZvcm1hdCA9IGlzUXVlcnlXaXRoTGFiZWxGb3JtYXQocXVlcnkpO1xuICBpZiAoIXF1ZXJ5V2l0aExhYmVsRm9ybWF0KSB7XG4gICAgY29uc3QgaGFzTGV2ZWwgPSBkYXRhRnJhbWVIYXNMZXZlbExhYmVsKHNlcmllc1swXSk7XG4gICAgY29uc3QgbGV2ZWxMaWtlTGFiZWwgPSBleHRyYWN0TGV2ZWxMaWtlTGFiZWxGcm9tRGF0YUZyYW1lKHNlcmllc1swXSk7XG5cbiAgICAvLyBBZGQgaGludCBvbmx5IGlmIHdlIGRvbid0IGhhdmUgXCJsZXZlbFwiIGxhYmVsIGFuZCBoYXZlIGxldmVsLWxpa2UgbGFiZWxcbiAgICBpZiAoIWhhc0xldmVsICYmIGxldmVsTGlrZUxhYmVsKSB7XG4gICAgICBoaW50cy5wdXNoKHtcbiAgICAgICAgdHlwZTogJ0FERF9MRVZFTF9MQUJFTF9GT1JNQVQnLFxuICAgICAgICBsYWJlbDogYFNvbWUgbG9ncyBpbiB5b3VyIHNlbGVjdGVkIGxvZyBzdHJlYW0gaGF2ZSBcIiR7bGV2ZWxMaWtlTGFiZWx9XCIgbGFiZWwuYCxcbiAgICAgICAgZml4OiB7XG4gICAgICAgICAgdGl0bGU6ICdhZGQgbGFiZWwgbGV2ZWwgZm9ybWF0JyxcbiAgICAgICAgICBsYWJlbDogYElmICR7bGV2ZWxMaWtlTGFiZWx9IGxhYmVsIGhhcyBsZXZlbCB2YWx1ZXMsIGNvbnNpZGVyIHVzaW5nIGxhYmVsX2Zvcm1hdCB0byByZW5hbWUgaXQgdG8gXCJsZXZlbFwiLiBMZXZlbCBsYWJlbCBjYW4gYmUgdGhlbiB2aXN1YWxpemVkIGluIGxvZyB2b2x1bWVzLmAsXG4gICAgICAgICAgYWN0aW9uOiB7XG4gICAgICAgICAgICB0eXBlOiAnQUREX0xFVkVMX0xBQkVMX0ZPUk1BVCcsXG4gICAgICAgICAgICBxdWVyeSxcbiAgICAgICAgICAgIG9wdGlvbnM6IHtcbiAgICAgICAgICAgICAgcmVuYW1lVG86ICdsZXZlbCcsXG4gICAgICAgICAgICAgIG9yaWdpbmFsTGFiZWw6IGxldmVsTGlrZUxhYmVsLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgY29uc3QgaGFzTGluZUZpbHRlciA9IGlzUXVlcnlXaXRoTGluZUZpbHRlcihxdWVyeSk7XG5cbiAgaWYgKCFoYXNMaW5lRmlsdGVyKSB7XG4gICAgaGludHMucHVzaCh7XG4gICAgICB0eXBlOiAnQUREX0xJTkVfRklMVEVSJyxcbiAgICAgIGxhYmVsOiAnQ29uc2lkZXIgZmlsdGVyaW5nIGxvZ3MgZm9yIHNwZWNpZmljIHN0cmluZy4nLFxuICAgICAgZml4OiB7XG4gICAgICAgIHRpdGxlOiAnYWRkIGxpbmUgZmlsdGVyJyxcbiAgICAgICAgbGFiZWw6ICcnLFxuICAgICAgICBhY3Rpb246IHtcbiAgICAgICAgICB0eXBlOiAnQUREX0xJTkVfRklMVEVSJyxcbiAgICAgICAgICBxdWVyeSxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gaGludHM7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/queryHints.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/querySplitting.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   partitionTimeRange: () => (/* binding */ partitionTimeRange),\n/* harmony export */   runSplitGroupedQueries: () => (/* binding */ runSplitGroupedQueries),\n/* harmony export */   runSplitQuery: () => (/* binding */ runSplitQuery)\n/* harmony export */ });\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/lodash-npm-4.17.21-6382451519-eb835a2e51.zip/node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(\"./.yarn/cache/rxjs-npm-7.8.0-722f1c7172-61b4d4fd32.zip/node_modules/rxjs/dist/esm5/internal/Observable.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(\"./.yarn/cache/rxjs-npm-7.8.0-722f1c7172-61b4d4fd32.zip/node_modules/rxjs/dist/esm5/internal/operators/tap.js\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(\"./.yarn/cache/uuid-npm-9.0.0-46c41e3e43-8dd2c83c43.zip/node_modules/uuid/dist/esm-browser/v4.js\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/datetime/moment_wrapper.ts\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/dataframe/ArrayDataFrame.ts\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/types/query.ts\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/datetime/durationutil.ts\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/datetime/rangeutil.ts\");\n/* harmony import */ var _grafana_schema__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(\"./packages/grafana-schema/src/raw/dashboard/x/dashboard_types.gen.ts\");\n/* harmony import */ var _logsTimeSplitting__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/plugins/datasource/loki/logsTimeSplitting.ts\");\n/* harmony import */ var _metricTimeSplitting__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/plugins/datasource/loki/metricTimeSplitting.ts\");\n/* harmony import */ var _queryUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./public/app/plugins/datasource/loki/queryUtils.ts\");\n/* harmony import */ var _responseUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./public/app/plugins/datasource/loki/responseUtils.ts\");\n/* harmony import */ var _tracking__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./public/app/plugins/datasource/loki/tracking.ts\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./public/app/plugins/datasource/loki/types.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\nfunction partitionTimeRange(isLogsQuery2, originalTimeRange, stepMs, duration) {\n  const start = originalTimeRange.from.toDate().getTime();\n  const end = originalTimeRange.to.toDate().getTime();\n  const ranges = isLogsQuery2 ? (0,_logsTimeSplitting__WEBPACK_IMPORTED_MODULE_1__.splitTimeRange)(start, end, duration) : (0,_metricTimeSplitting__WEBPACK_IMPORTED_MODULE_2__.splitTimeRange)(start, end, stepMs, duration);\n  return ranges.map(([start2, end2]) => {\n    const from = (0,_grafana_data__WEBPACK_IMPORTED_MODULE_7__.dateTime)(start2);\n    const to = (0,_grafana_data__WEBPACK_IMPORTED_MODULE_7__.dateTime)(end2);\n    return {\n      from,\n      to,\n      raw: { from, to }\n    };\n  });\n}\nfunction adjustTargetsFromResponseState(targets, response) {\n  if (!response) {\n    return targets;\n  }\n  return targets.map((target) => {\n    if (!target.maxLines || !(0,_queryUtils__WEBPACK_IMPORTED_MODULE_3__.isLogsQuery)(target.expr)) {\n      return target;\n    }\n    const targetFrame = response.data.find((frame) => frame.refId === target.refId);\n    if (!targetFrame) {\n      return target;\n    }\n    const updatedMaxLines = target.maxLines - targetFrame.length;\n    return {\n      ...target,\n      maxLines: updatedMaxLines < 0 ? 0 : updatedMaxLines\n    };\n  }).filter((target) => target.maxLines === void 0 || target.maxLines > 0);\n}\nfunction runSplitGroupedQueries(datasource, requests) {\n  let mergedResponse = { data: [], state: _grafana_schema__WEBPACK_IMPORTED_MODULE_8__.LoadingState.Streaming };\n  const totalRequests = Math.max(...requests.map(({ partition: partition2 }) => partition2.length));\n  const longestPartition = requests.filter(({ partition: partition2 }) => partition2.length === totalRequests)[0].partition;\n  let shouldStop = false;\n  let subquerySubsciption = null;\n  const runNextRequest = (subscriber, requestN, requestGroup) => {\n    if (shouldStop) {\n      subscriber.complete();\n      return;\n    }\n    const done = () => {\n      mergedResponse.state = _grafana_schema__WEBPACK_IMPORTED_MODULE_8__.LoadingState.Done;\n      subscriber.next(mergedResponse);\n      subscriber.complete();\n    };\n    const nextRequest = () => {\n      const { nextRequestN, nextRequestGroup } = getNextRequestPointers(requests, requestGroup, requestN);\n      if (nextRequestN > 0 && nextRequestGroup >= 0) {\n        runNextRequest(subscriber, nextRequestN, nextRequestGroup);\n        return;\n      }\n      done();\n    };\n    const group = requests[requestGroup];\n    const range = group.partition[requestN - 1];\n    const targets = adjustTargetsFromResponseState(group.request.targets, mergedResponse);\n    if (!targets.length) {\n      nextRequest();\n      return;\n    }\n    const subRequest = { ...requests[requestGroup].request, range, targets };\n    if (group.request.requestId) {\n      subRequest.requestId = `${group.request.requestId}_${requestN}`;\n    }\n    subquerySubsciption = datasource.runQuery(subRequest).subscribe({\n      next: (partialResponse) => {\n        mergedResponse = (0,_responseUtils__WEBPACK_IMPORTED_MODULE_4__.combineResponses)(mergedResponse, partialResponse);\n        mergedResponse = updateLoadingFrame(mergedResponse, subRequest, longestPartition, requestN);\n        if ((mergedResponse.errors ?? []).length > 0 || mergedResponse.error != null) {\n          shouldStop = true;\n        }\n      },\n      complete: () => {\n        subscriber.next(mergedResponse);\n        nextRequest();\n      },\n      error: (error) => {\n        subscriber.error(error);\n      }\n    });\n  };\n  const response = new rxjs__WEBPACK_IMPORTED_MODULE_9__.Observable((subscriber) => {\n    runNextRequest(subscriber, totalRequests, 0);\n    return () => {\n      shouldStop = true;\n      if (subquerySubsciption != null) {\n        subquerySubsciption.unsubscribe();\n      }\n    };\n  });\n  return response;\n}\nfunction updateLoadingFrame(response, request, partition2, requestN) {\n  if ((0,_queryUtils__WEBPACK_IMPORTED_MODULE_3__.isLogsQuery)(request.targets[0].expr) || isLogsVolumeRequest(request)) {\n    return response;\n  }\n  const loadingFrameName = \"loki-splitting-progress\";\n  response.data = response.data.filter((frame) => frame.name !== loadingFrameName);\n  if (requestN <= 1) {\n    return response;\n  }\n  const loadingFrame = (0,_grafana_data__WEBPACK_IMPORTED_MODULE_10__.arrayToDataFrame)([\n    {\n      time: partition2[0].from.valueOf(),\n      timeEnd: partition2[requestN - 2].to.valueOf(),\n      isRegion: true,\n      color: \"rgba(120, 120, 120, 0.1)\"\n    }\n  ]);\n  loadingFrame.name = loadingFrameName;\n  loadingFrame.meta = {\n    dataTopic: _grafana_data__WEBPACK_IMPORTED_MODULE_11__.DataTopic.Annotations\n  };\n  response.data.push(loadingFrame);\n  return response;\n}\nfunction isLogsVolumeRequest(request) {\n  return request.targets.some((target) => target.refId.startsWith(\"log-volume\"));\n}\nfunction getNextRequestPointers(requests, requestGroup, requestN) {\n  for (let i = requestGroup + 1; i < requests.length; i++) {\n    const group = requests[i];\n    if (group.partition[requestN - 1]) {\n      return {\n        nextRequestGroup: i,\n        nextRequestN: requestN\n      };\n    }\n  }\n  return {\n    // Find the first group where `[requestN - 1]` is defined\n    nextRequestGroup: requests.findIndex((group) => group?.partition[requestN - 1] !== void 0),\n    nextRequestN: requestN - 1\n  };\n}\nfunction querySupportsSplitting(query) {\n  return query.queryType !== _types__WEBPACK_IMPORTED_MODULE_6__.LokiQueryType.Instant && // Queries with $__range variable should not be split because then the interpolated $__range variable is incorrect\n  // because it is interpolated on the backend with the split timeRange\n  !(0,_queryUtils__WEBPACK_IMPORTED_MODULE_3__.isQueryWithRangeVariable)(query.expr);\n}\nfunction runSplitQuery(datasource, request) {\n  const queries = request.targets.filter((query) => !query.hide).filter((query) => query.expr);\n  const [nonSplittingQueries, normalQueries] = (0,lodash__WEBPACK_IMPORTED_MODULE_0__.partition)(queries, (query) => !querySupportsSplitting(query));\n  const [logQueries, metricQueries] = (0,lodash__WEBPACK_IMPORTED_MODULE_0__.partition)(normalQueries, (query) => (0,_queryUtils__WEBPACK_IMPORTED_MODULE_3__.isLogsQuery)(query.expr));\n  request.queryGroupId = (0,uuid__WEBPACK_IMPORTED_MODULE_12__[\"default\"])();\n  const oneDayMs = 24 * 60 * 60 * 1e3;\n  const rangePartitionedLogQueries = (0,lodash__WEBPACK_IMPORTED_MODULE_0__.groupBy)(\n    logQueries,\n    (query) => query.splitDuration ? (0,_grafana_data__WEBPACK_IMPORTED_MODULE_13__.durationToMilliseconds)((0,_grafana_data__WEBPACK_IMPORTED_MODULE_13__.parseDuration)(query.splitDuration)) : oneDayMs\n  );\n  const rangePartitionedMetricQueries = (0,lodash__WEBPACK_IMPORTED_MODULE_0__.groupBy)(\n    metricQueries,\n    (query) => query.splitDuration ? (0,_grafana_data__WEBPACK_IMPORTED_MODULE_13__.durationToMilliseconds)((0,_grafana_data__WEBPACK_IMPORTED_MODULE_13__.parseDuration)(query.splitDuration)) : oneDayMs\n  );\n  const requests = [];\n  for (const [chunkRangeMs, queries2] of Object.entries(rangePartitionedLogQueries)) {\n    const resolutionPartition = (0,lodash__WEBPACK_IMPORTED_MODULE_0__.groupBy)(queries2, (query) => query.resolution || 1);\n    for (const resolution in resolutionPartition) {\n      requests.push({\n        request: { ...request, targets: resolutionPartition[resolution] },\n        partition: partitionTimeRange(true, request.range, request.intervalMs, Number(chunkRangeMs))\n      });\n    }\n  }\n  for (const [chunkRangeMs, queries2] of Object.entries(rangePartitionedMetricQueries)) {\n    const stepMsPartition = (0,lodash__WEBPACK_IMPORTED_MODULE_0__.groupBy)(\n      queries2,\n      (query) => calculateStep(request.intervalMs, request.range, query.resolution || 1, query.step)\n    );\n    for (const stepMs in stepMsPartition) {\n      requests.push({\n        request: { ...request, targets: stepMsPartition[stepMs] },\n        partition: partitionTimeRange(false, request.range, Number(stepMs), Number(chunkRangeMs))\n      });\n    }\n  }\n  if (nonSplittingQueries.length) {\n    requests.push({\n      request: { ...request, targets: nonSplittingQueries },\n      partition: [request.range]\n    });\n  }\n  const startTime = /* @__PURE__ */ new Date();\n  return runSplitGroupedQueries(datasource, requests).pipe(\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_14__.tap)((response) => {\n      if (response.state === _grafana_schema__WEBPACK_IMPORTED_MODULE_8__.LoadingState.Done) {\n        (0,_tracking__WEBPACK_IMPORTED_MODULE_5__.trackGroupedQueries)(response, requests, request, startTime, {\n          predefinedOperations: datasource.predefinedOperations\n        });\n      }\n    })\n  );\n}\nfunction calculateStep(intervalMs, range, resolution, step) {\n  const interval_regex = /(-?\\d+(?:\\.\\d+)?)(ms|[Mwdhmsy])/;\n  if (step?.match(interval_regex)) {\n    return _grafana_data__WEBPACK_IMPORTED_MODULE_15__.intervalToMs(step) * resolution;\n  }\n  const newStep = intervalMs * resolution;\n  const safeStep = Math.round((range.to.valueOf() - range.from.valueOf()) / 11e3);\n  return Math.max(newStep, safeStep);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL3F1ZXJ5U3BsaXR0aW5nLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFtQztBQUN1QjtBQUM3QjtBQVl0QjtBQUNzQjtBQUd3QjtBQUNFO0FBQ0Q7QUFDckI7QUFDRztBQUN5QjtBQUV0RCxTQUFTLG1CQUNkQSxjQUNBLG1CQUNBLFFBQ0EsVUFDYTtBQUNiLFFBQU0sUUFBUSxrQkFBa0IsS0FBSyxPQUFPLEVBQUUsUUFBUTtBQUN0RCxRQUFNLE1BQU0sa0JBQWtCLEdBQUcsT0FBTyxFQUFFLFFBQVE7QUFFbEQsUUFBTSxTQUFTQSxlQUNYLGtFQUFrQixDQUFDLE9BQU8sS0FBSyxRQUFRLElBQ3ZDLG9FQUFvQixDQUFDLE9BQU8sS0FBSyxRQUFRLFFBQVE7QUFFckQsU0FBTyxPQUFPLElBQUksQ0FBQyxDQUFDQyxRQUFPQyxJQUFHLE1BQU07QUFDbEMsVUFBTSxPQUFPLHVEQUFRLENBQUNELE1BQUs7QUFDM0IsVUFBTSxLQUFLLHVEQUFRLENBQUNDLElBQUc7QUFDdkIsV0FBTztBQUFBLE1BQ0w7QUFBQSxNQUNBO0FBQUEsTUFDQSxLQUFLLEVBQUUsTUFBTSxHQUFHO0FBQUEsSUFDbEI7QUFBQSxFQUNGLENBQUM7QUFDSDtBQVFBLFNBQVMsK0JBQStCLFNBQXNCLFVBQWlEO0FBQzdHLE1BQUksQ0FBQyxVQUFVO0FBQ2IsV0FBTztBQUFBLEVBQ1Q7QUFFQSxTQUFPLFFBQ0osSUFBSSxDQUFDLFdBQVc7QUFDZixRQUFJLENBQUMsT0FBTyxZQUFZLENBQUMsd0RBQVcsQ0FBQyxPQUFPLElBQUksR0FBRztBQUNqRCxhQUFPO0FBQUEsSUFDVDtBQUNBLFVBQU0sY0FBYyxTQUFTLEtBQUssS0FBSyxDQUFDLFVBQVUsTUFBTSxVQUFVLE9BQU8sS0FBSztBQUM5RSxRQUFJLENBQUMsYUFBYTtBQUNoQixhQUFPO0FBQUEsSUFDVDtBQUNBLFVBQU0sa0JBQWtCLE9BQU8sV0FBVyxZQUFZO0FBQ3RELFdBQU87QUFBQSxNQUNMLEdBQUc7QUFBQSxNQUNILFVBQVUsa0JBQWtCLElBQUksSUFBSTtBQUFBLElBQ3RDO0FBQUEsRUFDRixDQUFDLEVBQ0EsT0FBTyxDQUFDLFdBQVcsT0FBTyxhQUFhLFVBQWEsT0FBTyxXQUFXLENBQUM7QUFDNUU7QUFDTyxTQUFTLHVCQUF1QixZQUE0QixVQUFnQztBQUNqRyxNQUFJLGlCQUFvQyxFQUFFLE1BQU0sQ0FBQyxHQUFHLE9BQU8seURBQVksQ0FBQyxVQUFVO0FBQ2xGLFFBQU0sZ0JBQWdCLEtBQUssSUFBSSxHQUFHLFNBQVMsSUFBSSxDQUFDLEVBQUUsV0FBQUMsV0FBVSxNQUFNQSxXQUFVLE1BQU0sQ0FBQztBQUNuRixRQUFNLG1CQUFtQixTQUFTLE9BQU8sQ0FBQyxFQUFFLFdBQUFBLFdBQVUsTUFBTUEsV0FBVSxXQUFXLGFBQWEsRUFBRSxDQUFDLEVBQUU7QUFFbkcsTUFBSSxhQUFhO0FBQ2pCLE1BQUksc0JBQTJDO0FBQy9DLFFBQU0saUJBQWlCLENBQUMsWUFBMkMsVUFBa0IsaUJBQXlCO0FBQzVHLFFBQUksWUFBWTtBQUNkLGlCQUFXLFNBQVM7QUFDcEI7QUFBQSxJQUNGO0FBRUEsVUFBTSxPQUFPLE1BQU07QUFDakIscUJBQWUsUUFBUSx5REFBWSxDQUFDO0FBQ3BDLGlCQUFXLEtBQUssY0FBYztBQUM5QixpQkFBVyxTQUFTO0FBQUEsSUFDdEI7QUFFQSxVQUFNLGNBQWMsTUFBTTtBQUN4QixZQUFNLEVBQUUsY0FBYyxpQkFBaUIsSUFBSSx1QkFBdUIsVUFBVSxjQUFjLFFBQVE7QUFDbEcsVUFBSSxlQUFlLEtBQUssb0JBQW9CLEdBQUc7QUFDN0MsdUJBQWUsWUFBWSxjQUFjLGdCQUFnQjtBQUN6RDtBQUFBLE1BQ0Y7QUFDQSxXQUFLO0FBQUEsSUFDUDtBQUVBLFVBQU0sUUFBUSxTQUFTLFlBQVk7QUFDbkMsVUFBTSxRQUFRLE1BQU0sVUFBVSxXQUFXLENBQUM7QUFDMUMsVUFBTSxVQUFVLCtCQUErQixNQUFNLFFBQVEsU0FBUyxjQUFjO0FBRXBGLFFBQUksQ0FBQyxRQUFRLFFBQVE7QUFDbkIsa0JBQVk7QUFDWjtBQUFBLElBQ0Y7QUFFQSxVQUFNLGFBQWEsRUFBRSxHQUFHLFNBQVMsWUFBWSxFQUFFLFNBQVMsT0FBTyxRQUFRO0FBRXZFLFFBQUksTUFBTSxRQUFRLFdBQVc7QUFDM0IsaUJBQVcsWUFBWSxHQUFHLE1BQU0sUUFBUSxhQUFhO0FBQUEsSUFDdkQ7QUFFQSwwQkFBc0IsV0FBVyxTQUFTLFVBQVUsRUFBRSxVQUFVO0FBQUEsTUFDOUQsTUFBTSxDQUFDLG9CQUFvQjtBQUN6Qix5QkFBaUIsZ0VBQWdCLENBQUMsZ0JBQWdCLGVBQWU7QUFDakUseUJBQWlCLG1CQUFtQixnQkFBZ0IsWUFBWSxrQkFBa0IsUUFBUTtBQUMxRixhQUFLLGVBQWUsVUFBVSxDQUFDLEdBQUcsU0FBUyxLQUFLLGVBQWUsU0FBUyxNQUFNO0FBQzVFLHVCQUFhO0FBQUEsUUFDZjtBQUFBLE1BQ0Y7QUFBQSxNQUNBLFVBQVUsTUFBTTtBQUNkLG1CQUFXLEtBQUssY0FBYztBQUM5QixvQkFBWTtBQUFBLE1BQ2Q7QUFBQSxNQUNBLE9BQU8sQ0FBQyxVQUFVO0FBQ2hCLG1CQUFXLE1BQU0sS0FBSztBQUFBLE1BQ3hCO0FBQUEsSUFDRixDQUFDO0FBQUEsRUFDSDtBQUVBLFFBQU0sV0FBVyxJQUFJLDRDQUFVLENBQW9CLENBQUMsZUFBZTtBQUNqRSxtQkFBZSxZQUFZLGVBQWUsQ0FBQztBQUMzQyxXQUFPLE1BQU07QUFDWCxtQkFBYTtBQUNiLFVBQUksdUJBQXVCLE1BQU07QUFDL0IsNEJBQW9CLFlBQVk7QUFBQSxNQUNsQztBQUFBLElBQ0Y7QUFBQSxFQUNGLENBQUM7QUFFRCxTQUFPO0FBQ1Q7QUFFQSxTQUFTLG1CQUNQLFVBQ0EsU0FDQUEsWUFDQSxVQUNtQjtBQUNuQixNQUFJLHdEQUFXLENBQUMsUUFBUSxRQUFRLENBQUMsRUFBRSxJQUFJLEtBQUssb0JBQW9CLE9BQU8sR0FBRztBQUN4RSxXQUFPO0FBQUEsRUFDVDtBQUNBLFFBQU0sbUJBQW1CO0FBQ3pCLFdBQVMsT0FBTyxTQUFTLEtBQUssT0FBTyxDQUFDLFVBQVUsTUFBTSxTQUFTLGdCQUFnQjtBQUUvRSxNQUFJLFlBQVksR0FBRztBQUNqQixXQUFPO0FBQUEsRUFDVDtBQUVBLFFBQU0sZUFBZSxnRUFBZ0IsQ0FBQztBQUFBLElBQ3BDO0FBQUEsTUFDRSxNQUFNQSxXQUFVLENBQUMsRUFBRSxLQUFLLFFBQVE7QUFBQSxNQUNoQyxTQUFTQSxXQUFVLFdBQVcsQ0FBQyxFQUFFLEdBQUcsUUFBUTtBQUFBLE1BQzVDLFVBQVU7QUFBQSxNQUNWLE9BQU87QUFBQSxJQUNUO0FBQUEsRUFDRixDQUFDO0FBQ0QsZUFBYSxPQUFPO0FBQ3BCLGVBQWEsT0FBTztBQUFBLElBQ2xCLFdBQVcscURBQVMsQ0FBQztBQUFBLEVBQ3ZCO0FBRUEsV0FBUyxLQUFLLEtBQUssWUFBWTtBQUUvQixTQUFPO0FBQ1Q7QUFFQSxTQUFTLG9CQUFvQixTQUErQztBQUMxRSxTQUFPLFFBQVEsUUFBUSxLQUFLLENBQUMsV0FBVyxPQUFPLE1BQU0sV0FBVyxZQUFZLENBQUM7QUFDL0U7QUFFQSxTQUFTLHVCQUF1QixVQUFnQyxjQUFzQixVQUFrQjtBQUV0RyxXQUFTLElBQUksZUFBZSxHQUFHLElBQUksU0FBUyxRQUFRLEtBQUs7QUFDdkQsVUFBTSxRQUFRLFNBQVMsQ0FBQztBQUN4QixRQUFJLE1BQU0sVUFBVSxXQUFXLENBQUMsR0FBRztBQUNqQyxhQUFPO0FBQUEsUUFDTCxrQkFBa0I7QUFBQSxRQUNsQixjQUFjO0FBQUEsTUFDaEI7QUFBQSxJQUNGO0FBQUEsRUFDRjtBQUNBLFNBQU87QUFBQTtBQUFBLElBRUwsa0JBQWtCLFNBQVMsVUFBVSxDQUFDLFVBQVUsT0FBTyxVQUFVLFdBQVcsQ0FBQyxNQUFNLE1BQVM7QUFBQSxJQUM1RixjQUFjLFdBQVc7QUFBQSxFQUMzQjtBQUNGO0FBRUEsU0FBUyx1QkFBdUIsT0FBa0I7QUFDaEQsU0FDRSxNQUFNLGNBQWMsaURBQWEsQ0FBQztBQUFBO0FBQUEsRUFHbEMsQ0FBQyxxRUFBd0IsQ0FBQyxNQUFNLElBQUk7QUFFeEM7QUFFTyxTQUFTLGNBQWMsWUFBNEIsU0FBc0M7QUFDOUYsUUFBTSxVQUFVLFFBQVEsUUFBUSxPQUFPLENBQUMsVUFBVSxDQUFDLE1BQU0sSUFBSSxFQUFFLE9BQU8sQ0FBQyxVQUFVLE1BQU0sSUFBSTtBQUMzRixRQUFNLENBQUMscUJBQXFCLGFBQWEsSUFBSSxpREFBUyxDQUFDLFNBQVMsQ0FBQyxVQUFVLENBQUMsdUJBQXVCLEtBQUssQ0FBQztBQUN6RyxRQUFNLENBQUMsWUFBWSxhQUFhLElBQUksaURBQVMsQ0FBQyxlQUFlLENBQUMsVUFBVSx3REFBVyxDQUFDLE1BQU0sSUFBSSxDQUFDO0FBRS9GLFVBQVEsZUFBZSxpREFBTSxDQUFDO0FBQzlCLFFBQU0sV0FBVyxLQUFLLEtBQUssS0FBSztBQUNoQyxRQUFNLDZCQUE2QiwrQ0FBTztBQUFQLElBQVE7QUFBQSxJQUFZLENBQUMsVUFDdEQsTUFBTSxnQkFBZ0Isc0VBQXNCLENBQUMsNkRBQWEsQ0FBQyxNQUFNLGFBQWEsQ0FBQyxJQUFJO0FBQUEsRUFDckY7QUFDQSxRQUFNLGdDQUFnQywrQ0FBTztBQUFQLElBQVE7QUFBQSxJQUFlLENBQUMsVUFDNUQsTUFBTSxnQkFBZ0Isc0VBQXNCLENBQUMsNkRBQWEsQ0FBQyxNQUFNLGFBQWEsQ0FBQyxJQUFJO0FBQUEsRUFDckY7QUFFQSxRQUFNLFdBQWlDLENBQUM7QUFDeEMsYUFBVyxDQUFDLGNBQWNDLFFBQU8sS0FBSyxPQUFPLFFBQVEsMEJBQTBCLEdBQUc7QUFDaEYsVUFBTSxzQkFBc0IsK0NBQU8sQ0FBQ0EsVUFBUyxDQUFDLFVBQVUsTUFBTSxjQUFjLENBQUM7QUFDN0UsZUFBVyxjQUFjLHFCQUFxQjtBQUM1QyxlQUFTLEtBQUs7QUFBQSxRQUNaLFNBQVMsRUFBRSxHQUFHLFNBQVMsU0FBUyxvQkFBb0IsVUFBVSxFQUFFO0FBQUEsUUFDaEUsV0FBVyxtQkFBbUIsTUFBTSxRQUFRLE9BQU8sUUFBUSxZQUFZLE9BQU8sWUFBWSxDQUFDO0FBQUEsTUFDN0YsQ0FBQztBQUFBLElBQ0g7QUFBQSxFQUNGO0FBRUEsYUFBVyxDQUFDLGNBQWNBLFFBQU8sS0FBSyxPQUFPLFFBQVEsNkJBQTZCLEdBQUc7QUFDbkYsVUFBTSxrQkFBa0IsK0NBQU87QUFBUCxNQUFRQTtBQUFBLE1BQVMsQ0FBQyxVQUN4QyxjQUFjLFFBQVEsWUFBWSxRQUFRLE9BQU8sTUFBTSxjQUFjLEdBQUcsTUFBTSxJQUFJO0FBQUEsSUFDcEY7QUFFQSxlQUFXLFVBQVUsaUJBQWlCO0FBQ3BDLGVBQVMsS0FBSztBQUFBLFFBQ1osU0FBUyxFQUFFLEdBQUcsU0FBUyxTQUFTLGdCQUFnQixNQUFNLEVBQUU7QUFBQSxRQUN4RCxXQUFXLG1CQUFtQixPQUFPLFFBQVEsT0FBTyxPQUFPLE1BQU0sR0FBRyxPQUFPLFlBQVksQ0FBQztBQUFBLE1BQzFGLENBQUM7QUFBQSxJQUNIO0FBQUEsRUFDRjtBQUVBLE1BQUksb0JBQW9CLFFBQVE7QUFDOUIsYUFBUyxLQUFLO0FBQUEsTUFDWixTQUFTLEVBQUUsR0FBRyxTQUFTLFNBQVMsb0JBQW9CO0FBQUEsTUFDcEQsV0FBVyxDQUFDLFFBQVEsS0FBSztBQUFBLElBQzNCLENBQUM7QUFBQSxFQUNIO0FBRUEsUUFBTSxZQUFZLG9CQUFJLEtBQUs7QUFDM0IsU0FBTyx1QkFBdUIsWUFBWSxRQUFRLEVBQUU7QUFBQSxJQUNsRCwwQ0FBRyxDQUFDLENBQUMsYUFBYTtBQUNoQixVQUFJLFNBQVMsVUFBVSx5REFBWSxDQUFDLE1BQU07QUFDeEMsc0VBQW1CLENBQUMsVUFBVSxVQUFVLFNBQVMsV0FBVztBQUFBLFVBQzFELHNCQUFzQixXQUFXO0FBQUEsUUFDbkMsQ0FBQztBQUFBLE1BQ0g7QUFBQSxJQUNGLENBQUM7QUFBQSxFQUNIO0FBQ0Y7QUFJQSxTQUFTLGNBQWMsWUFBb0IsT0FBa0IsWUFBb0IsTUFBMEI7QUFHekcsUUFBTSxpQkFBaUI7QUFDdkIsTUFBSSxNQUFNLE1BQU0sY0FBYyxHQUFHO0FBQy9CLFdBQU8sd0RBQXNCLENBQUMsSUFBSSxJQUFJO0FBQUEsRUFDeEM7QUFFQSxRQUFNLFVBQVUsYUFBYTtBQUM3QixRQUFNLFdBQVcsS0FBSyxPQUFPLE1BQU0sR0FBRyxRQUFRLElBQUksTUFBTSxLQUFLLFFBQVEsS0FBSyxJQUFLO0FBQy9FLFNBQU8sS0FBSyxJQUFJLFNBQVMsUUFBUTtBQUNuQyIsInNvdXJjZXMiOlsid2VicGFjazovL2dyYWZhbmEvLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL3F1ZXJ5U3BsaXR0aW5nLnRzPzBmMDMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ3JvdXBCeSwgcGFydGl0aW9uIH0gZnJvbSAnbG9kYXNoJztcbmltcG9ydCB7IE9ic2VydmFibGUsIFN1YnNjcmliZXIsIFN1YnNjcmlwdGlvbiwgdGFwIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyB2NCBhcyB1dWlkdjQgfSBmcm9tICd1dWlkJztcblxuaW1wb3J0IHtcbiAgYXJyYXlUb0RhdGFGcmFtZSxcbiAgRGF0YVF1ZXJ5UmVxdWVzdCxcbiAgRGF0YVF1ZXJ5UmVzcG9uc2UsXG4gIERhdGFUb3BpYyxcbiAgZGF0ZVRpbWUsXG4gIGR1cmF0aW9uVG9NaWxsaXNlY29uZHMsXG4gIHBhcnNlRHVyYXRpb24sXG4gIHJhbmdlVXRpbCxcbiAgVGltZVJhbmdlLFxufSBmcm9tICdAZ3JhZmFuYS9kYXRhJztcbmltcG9ydCB7IExvYWRpbmdTdGF0ZSB9IGZyb20gJ0BncmFmYW5hL3NjaGVtYSc7XG5cbmltcG9ydCB7IExva2lEYXRhc291cmNlIH0gZnJvbSAnLi9kYXRhc291cmNlJztcbmltcG9ydCB7IHNwbGl0VGltZVJhbmdlIGFzIHNwbGl0TG9nc1RpbWVSYW5nZSB9IGZyb20gJy4vbG9nc1RpbWVTcGxpdHRpbmcnO1xuaW1wb3J0IHsgc3BsaXRUaW1lUmFuZ2UgYXMgc3BsaXRNZXRyaWNUaW1lUmFuZ2UgfSBmcm9tICcuL21ldHJpY1RpbWVTcGxpdHRpbmcnO1xuaW1wb3J0IHsgaXNMb2dzUXVlcnksIGlzUXVlcnlXaXRoUmFuZ2VWYXJpYWJsZSB9IGZyb20gJy4vcXVlcnlVdGlscyc7XG5pbXBvcnQgeyBjb21iaW5lUmVzcG9uc2VzIH0gZnJvbSAnLi9yZXNwb25zZVV0aWxzJztcbmltcG9ydCB7IHRyYWNrR3JvdXBlZFF1ZXJpZXMgfSBmcm9tICcuL3RyYWNraW5nJztcbmltcG9ydCB7IExva2lHcm91cGVkUmVxdWVzdCwgTG9raVF1ZXJ5LCBMb2tpUXVlcnlUeXBlIH0gZnJvbSAnLi90eXBlcyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBwYXJ0aXRpb25UaW1lUmFuZ2UoXG4gIGlzTG9nc1F1ZXJ5OiBib29sZWFuLFxuICBvcmlnaW5hbFRpbWVSYW5nZTogVGltZVJhbmdlLFxuICBzdGVwTXM6IG51bWJlcixcbiAgZHVyYXRpb246IG51bWJlclxuKTogVGltZVJhbmdlW10ge1xuICBjb25zdCBzdGFydCA9IG9yaWdpbmFsVGltZVJhbmdlLmZyb20udG9EYXRlKCkuZ2V0VGltZSgpO1xuICBjb25zdCBlbmQgPSBvcmlnaW5hbFRpbWVSYW5nZS50by50b0RhdGUoKS5nZXRUaW1lKCk7XG5cbiAgY29uc3QgcmFuZ2VzID0gaXNMb2dzUXVlcnlcbiAgICA/IHNwbGl0TG9nc1RpbWVSYW5nZShzdGFydCwgZW5kLCBkdXJhdGlvbilcbiAgICA6IHNwbGl0TWV0cmljVGltZVJhbmdlKHN0YXJ0LCBlbmQsIHN0ZXBNcywgZHVyYXRpb24pO1xuXG4gIHJldHVybiByYW5nZXMubWFwKChbc3RhcnQsIGVuZF0pID0+IHtcbiAgICBjb25zdCBmcm9tID0gZGF0ZVRpbWUoc3RhcnQpO1xuICAgIGNvbnN0IHRvID0gZGF0ZVRpbWUoZW5kKTtcbiAgICByZXR1cm4ge1xuICAgICAgZnJvbSxcbiAgICAgIHRvLFxuICAgICAgcmF3OiB7IGZyb20sIHRvIH0sXG4gICAgfTtcbiAgfSk7XG59XG5cbi8qKlxuICogQmFzZWQgaW4gdGhlIHN0YXRlIG9mIHRoZSBjdXJyZW50IHJlc3BvbnNlLCBpZiBhbnksIGFkanVzdCB0YXJnZXQgcGFyYW1ldGVycyBzdWNoIGFzIGBtYXhMaW5lc2AuXG4gKiBGb3IgYG1heExpbmVzYCwgd2Ugd2lsbCB1cGRhdGUgaXQgYXMgYG1heExpbmVzIC0gY3VycmVudCBhbW91bnQgb2YgbGluZXNgLlxuICogQXQgdGhlIGVuZCwgd2Ugd2lsbCBmaWx0ZXIgdGhlIHRhcmdldHMgdGhhdCBkb24ndCBuZWVkIHRvIGJlIGV4ZWN1dGVkIGluIHRoZSBuZXh0IHJlcXVlc3QgYmF0Y2gsXG4gKiBiZWNhc3VlLCBmb3IgZXhhbXBsZSwgdGhlIGBtYXhMaW5lc2AgaGF2ZSBiZWVuIHJlYWNoZWQuXG4gKi9cbmZ1bmN0aW9uIGFkanVzdFRhcmdldHNGcm9tUmVzcG9uc2VTdGF0ZSh0YXJnZXRzOiBMb2tpUXVlcnlbXSwgcmVzcG9uc2U6IERhdGFRdWVyeVJlc3BvbnNlIHwgbnVsbCk6IExva2lRdWVyeVtdIHtcbiAgaWYgKCFyZXNwb25zZSkge1xuICAgIHJldHVybiB0YXJnZXRzO1xuICB9XG5cbiAgcmV0dXJuIHRhcmdldHNcbiAgICAubWFwKCh0YXJnZXQpID0+IHtcbiAgICAgIGlmICghdGFyZ2V0Lm1heExpbmVzIHx8ICFpc0xvZ3NRdWVyeSh0YXJnZXQuZXhwcikpIHtcbiAgICAgICAgcmV0dXJuIHRhcmdldDtcbiAgICAgIH1cbiAgICAgIGNvbnN0IHRhcmdldEZyYW1lID0gcmVzcG9uc2UuZGF0YS5maW5kKChmcmFtZSkgPT4gZnJhbWUucmVmSWQgPT09IHRhcmdldC5yZWZJZCk7XG4gICAgICBpZiAoIXRhcmdldEZyYW1lKSB7XG4gICAgICAgIHJldHVybiB0YXJnZXQ7XG4gICAgICB9XG4gICAgICBjb25zdCB1cGRhdGVkTWF4TGluZXMgPSB0YXJnZXQubWF4TGluZXMgLSB0YXJnZXRGcmFtZS5sZW5ndGg7XG4gICAgICByZXR1cm4ge1xuICAgICAgICAuLi50YXJnZXQsXG4gICAgICAgIG1heExpbmVzOiB1cGRhdGVkTWF4TGluZXMgPCAwID8gMCA6IHVwZGF0ZWRNYXhMaW5lcyxcbiAgICAgIH07XG4gICAgfSlcbiAgICAuZmlsdGVyKCh0YXJnZXQpID0+IHRhcmdldC5tYXhMaW5lcyA9PT0gdW5kZWZpbmVkIHx8IHRhcmdldC5tYXhMaW5lcyA+IDApO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHJ1blNwbGl0R3JvdXBlZFF1ZXJpZXMoZGF0YXNvdXJjZTogTG9raURhdGFzb3VyY2UsIHJlcXVlc3RzOiBMb2tpR3JvdXBlZFJlcXVlc3RbXSkge1xuICBsZXQgbWVyZ2VkUmVzcG9uc2U6IERhdGFRdWVyeVJlc3BvbnNlID0geyBkYXRhOiBbXSwgc3RhdGU6IExvYWRpbmdTdGF0ZS5TdHJlYW1pbmcgfTtcbiAgY29uc3QgdG90YWxSZXF1ZXN0cyA9IE1hdGgubWF4KC4uLnJlcXVlc3RzLm1hcCgoeyBwYXJ0aXRpb24gfSkgPT4gcGFydGl0aW9uLmxlbmd0aCkpO1xuICBjb25zdCBsb25nZXN0UGFydGl0aW9uID0gcmVxdWVzdHMuZmlsdGVyKCh7IHBhcnRpdGlvbiB9KSA9PiBwYXJ0aXRpb24ubGVuZ3RoID09PSB0b3RhbFJlcXVlc3RzKVswXS5wYXJ0aXRpb247XG5cbiAgbGV0IHNob3VsZFN0b3AgPSBmYWxzZTtcbiAgbGV0IHN1YnF1ZXJ5U3Vic2NpcHRpb246IFN1YnNjcmlwdGlvbiB8IG51bGwgPSBudWxsO1xuICBjb25zdCBydW5OZXh0UmVxdWVzdCA9IChzdWJzY3JpYmVyOiBTdWJzY3JpYmVyPERhdGFRdWVyeVJlc3BvbnNlPiwgcmVxdWVzdE46IG51bWJlciwgcmVxdWVzdEdyb3VwOiBudW1iZXIpID0+IHtcbiAgICBpZiAoc2hvdWxkU3RvcCkge1xuICAgICAgc3Vic2NyaWJlci5jb21wbGV0ZSgpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IGRvbmUgPSAoKSA9PiB7XG4gICAgICBtZXJnZWRSZXNwb25zZS5zdGF0ZSA9IExvYWRpbmdTdGF0ZS5Eb25lO1xuICAgICAgc3Vic2NyaWJlci5uZXh0KG1lcmdlZFJlc3BvbnNlKTtcbiAgICAgIHN1YnNjcmliZXIuY29tcGxldGUoKTtcbiAgICB9O1xuXG4gICAgY29uc3QgbmV4dFJlcXVlc3QgPSAoKSA9PiB7XG4gICAgICBjb25zdCB7IG5leHRSZXF1ZXN0TiwgbmV4dFJlcXVlc3RHcm91cCB9ID0gZ2V0TmV4dFJlcXVlc3RQb2ludGVycyhyZXF1ZXN0cywgcmVxdWVzdEdyb3VwLCByZXF1ZXN0Tik7XG4gICAgICBpZiAobmV4dFJlcXVlc3ROID4gMCAmJiBuZXh0UmVxdWVzdEdyb3VwID49IDApIHtcbiAgICAgICAgcnVuTmV4dFJlcXVlc3Qoc3Vic2NyaWJlciwgbmV4dFJlcXVlc3ROLCBuZXh0UmVxdWVzdEdyb3VwKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgZG9uZSgpO1xuICAgIH07XG5cbiAgICBjb25zdCBncm91cCA9IHJlcXVlc3RzW3JlcXVlc3RHcm91cF07XG4gICAgY29uc3QgcmFuZ2UgPSBncm91cC5wYXJ0aXRpb25bcmVxdWVzdE4gLSAxXTtcbiAgICBjb25zdCB0YXJnZXRzID0gYWRqdXN0VGFyZ2V0c0Zyb21SZXNwb25zZVN0YXRlKGdyb3VwLnJlcXVlc3QudGFyZ2V0cywgbWVyZ2VkUmVzcG9uc2UpO1xuXG4gICAgaWYgKCF0YXJnZXRzLmxlbmd0aCkge1xuICAgICAgbmV4dFJlcXVlc3QoKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCBzdWJSZXF1ZXN0ID0geyAuLi5yZXF1ZXN0c1tyZXF1ZXN0R3JvdXBdLnJlcXVlc3QsIHJhbmdlLCB0YXJnZXRzIH07XG4gICAgLy8gcmVxdWVzdCBtYXkgbm90IGhhdmUgYSByZXF1ZXN0IGlkXG4gICAgaWYgKGdyb3VwLnJlcXVlc3QucmVxdWVzdElkKSB7XG4gICAgICBzdWJSZXF1ZXN0LnJlcXVlc3RJZCA9IGAke2dyb3VwLnJlcXVlc3QucmVxdWVzdElkfV8ke3JlcXVlc3ROfWA7XG4gICAgfVxuXG4gICAgc3VicXVlcnlTdWJzY2lwdGlvbiA9IGRhdGFzb3VyY2UucnVuUXVlcnkoc3ViUmVxdWVzdCkuc3Vic2NyaWJlKHtcbiAgICAgIG5leHQ6IChwYXJ0aWFsUmVzcG9uc2UpID0+IHtcbiAgICAgICAgbWVyZ2VkUmVzcG9uc2UgPSBjb21iaW5lUmVzcG9uc2VzKG1lcmdlZFJlc3BvbnNlLCBwYXJ0aWFsUmVzcG9uc2UpO1xuICAgICAgICBtZXJnZWRSZXNwb25zZSA9IHVwZGF0ZUxvYWRpbmdGcmFtZShtZXJnZWRSZXNwb25zZSwgc3ViUmVxdWVzdCwgbG9uZ2VzdFBhcnRpdGlvbiwgcmVxdWVzdE4pO1xuICAgICAgICBpZiAoKG1lcmdlZFJlc3BvbnNlLmVycm9ycyA/PyBbXSkubGVuZ3RoID4gMCB8fCBtZXJnZWRSZXNwb25zZS5lcnJvciAhPSBudWxsKSB7XG4gICAgICAgICAgc2hvdWxkU3RvcCA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBjb21wbGV0ZTogKCkgPT4ge1xuICAgICAgICBzdWJzY3JpYmVyLm5leHQobWVyZ2VkUmVzcG9uc2UpO1xuICAgICAgICBuZXh0UmVxdWVzdCgpO1xuICAgICAgfSxcbiAgICAgIGVycm9yOiAoZXJyb3IpID0+IHtcbiAgICAgICAgc3Vic2NyaWJlci5lcnJvcihlcnJvcik7XG4gICAgICB9LFxuICAgIH0pO1xuICB9O1xuXG4gIGNvbnN0IHJlc3BvbnNlID0gbmV3IE9ic2VydmFibGU8RGF0YVF1ZXJ5UmVzcG9uc2U+KChzdWJzY3JpYmVyKSA9PiB7XG4gICAgcnVuTmV4dFJlcXVlc3Qoc3Vic2NyaWJlciwgdG90YWxSZXF1ZXN0cywgMCk7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIHNob3VsZFN0b3AgPSB0cnVlO1xuICAgICAgaWYgKHN1YnF1ZXJ5U3Vic2NpcHRpb24gIT0gbnVsbCkge1xuICAgICAgICBzdWJxdWVyeVN1YnNjaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gICAgICB9XG4gICAgfTtcbiAgfSk7XG5cbiAgcmV0dXJuIHJlc3BvbnNlO1xufVxuXG5mdW5jdGlvbiB1cGRhdGVMb2FkaW5nRnJhbWUoXG4gIHJlc3BvbnNlOiBEYXRhUXVlcnlSZXNwb25zZSxcbiAgcmVxdWVzdDogRGF0YVF1ZXJ5UmVxdWVzdDxMb2tpUXVlcnk+LFxuICBwYXJ0aXRpb246IFRpbWVSYW5nZVtdLFxuICByZXF1ZXN0TjogbnVtYmVyXG4pOiBEYXRhUXVlcnlSZXNwb25zZSB7XG4gIGlmIChpc0xvZ3NRdWVyeShyZXF1ZXN0LnRhcmdldHNbMF0uZXhwcikgfHwgaXNMb2dzVm9sdW1lUmVxdWVzdChyZXF1ZXN0KSkge1xuICAgIHJldHVybiByZXNwb25zZTtcbiAgfVxuICBjb25zdCBsb2FkaW5nRnJhbWVOYW1lID0gJ2xva2ktc3BsaXR0aW5nLXByb2dyZXNzJztcbiAgcmVzcG9uc2UuZGF0YSA9IHJlc3BvbnNlLmRhdGEuZmlsdGVyKChmcmFtZSkgPT4gZnJhbWUubmFtZSAhPT0gbG9hZGluZ0ZyYW1lTmFtZSk7XG5cbiAgaWYgKHJlcXVlc3ROIDw9IDEpIHtcbiAgICByZXR1cm4gcmVzcG9uc2U7XG4gIH1cblxuICBjb25zdCBsb2FkaW5nRnJhbWUgPSBhcnJheVRvRGF0YUZyYW1lKFtcbiAgICB7XG4gICAgICB0aW1lOiBwYXJ0aXRpb25bMF0uZnJvbS52YWx1ZU9mKCksXG4gICAgICB0aW1lRW5kOiBwYXJ0aXRpb25bcmVxdWVzdE4gLSAyXS50by52YWx1ZU9mKCksXG4gICAgICBpc1JlZ2lvbjogdHJ1ZSxcbiAgICAgIGNvbG9yOiAncmdiYSgxMjAsIDEyMCwgMTIwLCAwLjEpJyxcbiAgICB9LFxuICBdKTtcbiAgbG9hZGluZ0ZyYW1lLm5hbWUgPSBsb2FkaW5nRnJhbWVOYW1lO1xuICBsb2FkaW5nRnJhbWUubWV0YSA9IHtcbiAgICBkYXRhVG9waWM6IERhdGFUb3BpYy5Bbm5vdGF0aW9ucyxcbiAgfTtcblxuICByZXNwb25zZS5kYXRhLnB1c2gobG9hZGluZ0ZyYW1lKTtcblxuICByZXR1cm4gcmVzcG9uc2U7XG59XG5cbmZ1bmN0aW9uIGlzTG9nc1ZvbHVtZVJlcXVlc3QocmVxdWVzdDogRGF0YVF1ZXJ5UmVxdWVzdDxMb2tpUXVlcnk+KTogYm9vbGVhbiB7XG4gIHJldHVybiByZXF1ZXN0LnRhcmdldHMuc29tZSgodGFyZ2V0KSA9PiB0YXJnZXQucmVmSWQuc3RhcnRzV2l0aCgnbG9nLXZvbHVtZScpKTtcbn1cblxuZnVuY3Rpb24gZ2V0TmV4dFJlcXVlc3RQb2ludGVycyhyZXF1ZXN0czogTG9raUdyb3VwZWRSZXF1ZXN0W10sIHJlcXVlc3RHcm91cDogbnVtYmVyLCByZXF1ZXN0TjogbnVtYmVyKSB7XG4gIC8vIFRoZXJlJ3MgYSBwZW5kaW5nIHJlcXVlc3QgZnJvbSB0aGUgbmV4dCBncm91cDpcbiAgZm9yIChsZXQgaSA9IHJlcXVlc3RHcm91cCArIDE7IGkgPCByZXF1ZXN0cy5sZW5ndGg7IGkrKykge1xuICAgIGNvbnN0IGdyb3VwID0gcmVxdWVzdHNbaV07XG4gICAgaWYgKGdyb3VwLnBhcnRpdGlvbltyZXF1ZXN0TiAtIDFdKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBuZXh0UmVxdWVzdEdyb3VwOiBpLFxuICAgICAgICBuZXh0UmVxdWVzdE46IHJlcXVlc3ROLFxuICAgICAgfTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHtcbiAgICAvLyBGaW5kIHRoZSBmaXJzdCBncm91cCB3aGVyZSBgW3JlcXVlc3ROIC0gMV1gIGlzIGRlZmluZWRcbiAgICBuZXh0UmVxdWVzdEdyb3VwOiByZXF1ZXN0cy5maW5kSW5kZXgoKGdyb3VwKSA9PiBncm91cD8ucGFydGl0aW9uW3JlcXVlc3ROIC0gMV0gIT09IHVuZGVmaW5lZCksXG4gICAgbmV4dFJlcXVlc3ROOiByZXF1ZXN0TiAtIDEsXG4gIH07XG59XG5cbmZ1bmN0aW9uIHF1ZXJ5U3VwcG9ydHNTcGxpdHRpbmcocXVlcnk6IExva2lRdWVyeSkge1xuICByZXR1cm4gKFxuICAgIHF1ZXJ5LnF1ZXJ5VHlwZSAhPT0gTG9raVF1ZXJ5VHlwZS5JbnN0YW50ICYmXG4gICAgLy8gUXVlcmllcyB3aXRoICRfX3JhbmdlIHZhcmlhYmxlIHNob3VsZCBub3QgYmUgc3BsaXQgYmVjYXVzZSB0aGVuIHRoZSBpbnRlcnBvbGF0ZWQgJF9fcmFuZ2UgdmFyaWFibGUgaXMgaW5jb3JyZWN0XG4gICAgLy8gYmVjYXVzZSBpdCBpcyBpbnRlcnBvbGF0ZWQgb24gdGhlIGJhY2tlbmQgd2l0aCB0aGUgc3BsaXQgdGltZVJhbmdlXG4gICAgIWlzUXVlcnlXaXRoUmFuZ2VWYXJpYWJsZShxdWVyeS5leHByKVxuICApO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcnVuU3BsaXRRdWVyeShkYXRhc291cmNlOiBMb2tpRGF0YXNvdXJjZSwgcmVxdWVzdDogRGF0YVF1ZXJ5UmVxdWVzdDxMb2tpUXVlcnk+KSB7XG4gIGNvbnN0IHF1ZXJpZXMgPSByZXF1ZXN0LnRhcmdldHMuZmlsdGVyKChxdWVyeSkgPT4gIXF1ZXJ5LmhpZGUpLmZpbHRlcigocXVlcnkpID0+IHF1ZXJ5LmV4cHIpO1xuICBjb25zdCBbbm9uU3BsaXR0aW5nUXVlcmllcywgbm9ybWFsUXVlcmllc10gPSBwYXJ0aXRpb24ocXVlcmllcywgKHF1ZXJ5KSA9PiAhcXVlcnlTdXBwb3J0c1NwbGl0dGluZyhxdWVyeSkpO1xuICBjb25zdCBbbG9nUXVlcmllcywgbWV0cmljUXVlcmllc10gPSBwYXJ0aXRpb24obm9ybWFsUXVlcmllcywgKHF1ZXJ5KSA9PiBpc0xvZ3NRdWVyeShxdWVyeS5leHByKSk7XG5cbiAgcmVxdWVzdC5xdWVyeUdyb3VwSWQgPSB1dWlkdjQoKTtcbiAgY29uc3Qgb25lRGF5TXMgPSAyNCAqIDYwICogNjAgKiAxMDAwO1xuICBjb25zdCByYW5nZVBhcnRpdGlvbmVkTG9nUXVlcmllcyA9IGdyb3VwQnkobG9nUXVlcmllcywgKHF1ZXJ5KSA9PlxuICAgIHF1ZXJ5LnNwbGl0RHVyYXRpb24gPyBkdXJhdGlvblRvTWlsbGlzZWNvbmRzKHBhcnNlRHVyYXRpb24ocXVlcnkuc3BsaXREdXJhdGlvbikpIDogb25lRGF5TXNcbiAgKTtcbiAgY29uc3QgcmFuZ2VQYXJ0aXRpb25lZE1ldHJpY1F1ZXJpZXMgPSBncm91cEJ5KG1ldHJpY1F1ZXJpZXMsIChxdWVyeSkgPT5cbiAgICBxdWVyeS5zcGxpdER1cmF0aW9uID8gZHVyYXRpb25Ub01pbGxpc2Vjb25kcyhwYXJzZUR1cmF0aW9uKHF1ZXJ5LnNwbGl0RHVyYXRpb24pKSA6IG9uZURheU1zXG4gICk7XG5cbiAgY29uc3QgcmVxdWVzdHM6IExva2lHcm91cGVkUmVxdWVzdFtdID0gW107XG4gIGZvciAoY29uc3QgW2NodW5rUmFuZ2VNcywgcXVlcmllc10gb2YgT2JqZWN0LmVudHJpZXMocmFuZ2VQYXJ0aXRpb25lZExvZ1F1ZXJpZXMpKSB7XG4gICAgY29uc3QgcmVzb2x1dGlvblBhcnRpdGlvbiA9IGdyb3VwQnkocXVlcmllcywgKHF1ZXJ5KSA9PiBxdWVyeS5yZXNvbHV0aW9uIHx8IDEpO1xuICAgIGZvciAoY29uc3QgcmVzb2x1dGlvbiBpbiByZXNvbHV0aW9uUGFydGl0aW9uKSB7XG4gICAgICByZXF1ZXN0cy5wdXNoKHtcbiAgICAgICAgcmVxdWVzdDogeyAuLi5yZXF1ZXN0LCB0YXJnZXRzOiByZXNvbHV0aW9uUGFydGl0aW9uW3Jlc29sdXRpb25dIH0sXG4gICAgICAgIHBhcnRpdGlvbjogcGFydGl0aW9uVGltZVJhbmdlKHRydWUsIHJlcXVlc3QucmFuZ2UsIHJlcXVlc3QuaW50ZXJ2YWxNcywgTnVtYmVyKGNodW5rUmFuZ2VNcykpLFxuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgZm9yIChjb25zdCBbY2h1bmtSYW5nZU1zLCBxdWVyaWVzXSBvZiBPYmplY3QuZW50cmllcyhyYW5nZVBhcnRpdGlvbmVkTWV0cmljUXVlcmllcykpIHtcbiAgICBjb25zdCBzdGVwTXNQYXJ0aXRpb24gPSBncm91cEJ5KHF1ZXJpZXMsIChxdWVyeSkgPT5cbiAgICAgIGNhbGN1bGF0ZVN0ZXAocmVxdWVzdC5pbnRlcnZhbE1zLCByZXF1ZXN0LnJhbmdlLCBxdWVyeS5yZXNvbHV0aW9uIHx8IDEsIHF1ZXJ5LnN0ZXApXG4gICAgKTtcblxuICAgIGZvciAoY29uc3Qgc3RlcE1zIGluIHN0ZXBNc1BhcnRpdGlvbikge1xuICAgICAgcmVxdWVzdHMucHVzaCh7XG4gICAgICAgIHJlcXVlc3Q6IHsgLi4ucmVxdWVzdCwgdGFyZ2V0czogc3RlcE1zUGFydGl0aW9uW3N0ZXBNc10gfSxcbiAgICAgICAgcGFydGl0aW9uOiBwYXJ0aXRpb25UaW1lUmFuZ2UoZmFsc2UsIHJlcXVlc3QucmFuZ2UsIE51bWJlcihzdGVwTXMpLCBOdW1iZXIoY2h1bmtSYW5nZU1zKSksXG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBpZiAobm9uU3BsaXR0aW5nUXVlcmllcy5sZW5ndGgpIHtcbiAgICByZXF1ZXN0cy5wdXNoKHtcbiAgICAgIHJlcXVlc3Q6IHsgLi4ucmVxdWVzdCwgdGFyZ2V0czogbm9uU3BsaXR0aW5nUXVlcmllcyB9LFxuICAgICAgcGFydGl0aW9uOiBbcmVxdWVzdC5yYW5nZV0sXG4gICAgfSk7XG4gIH1cblxuICBjb25zdCBzdGFydFRpbWUgPSBuZXcgRGF0ZSgpO1xuICByZXR1cm4gcnVuU3BsaXRHcm91cGVkUXVlcmllcyhkYXRhc291cmNlLCByZXF1ZXN0cykucGlwZShcbiAgICB0YXAoKHJlc3BvbnNlKSA9PiB7XG4gICAgICBpZiAocmVzcG9uc2Uuc3RhdGUgPT09IExvYWRpbmdTdGF0ZS5Eb25lKSB7XG4gICAgICAgIHRyYWNrR3JvdXBlZFF1ZXJpZXMocmVzcG9uc2UsIHJlcXVlc3RzLCByZXF1ZXN0LCBzdGFydFRpbWUsIHtcbiAgICAgICAgICBwcmVkZWZpbmVkT3BlcmF0aW9uczogZGF0YXNvdXJjZS5wcmVkZWZpbmVkT3BlcmF0aW9ucyxcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSlcbiAgKTtcbn1cblxuLy8gUmVwbGljYXRlIGZyb20gYmFja2VuZCBmb3Igc3BsaXQgcXVlcmllcyBmb3Igbm93LCB1bnRpbCB3ZSBjYW4gbW92ZSBxdWVyeSBzcGxpdHRpbmcgdG8gdGhlIGJhY2tlbmRcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9ncmFmYW5hL2dyYWZhbmEvYmxvYi9tYWluL3BrZy90c2RiL2xva2kvc3RlcC5nbyNMMjNcbmZ1bmN0aW9uIGNhbGN1bGF0ZVN0ZXAoaW50ZXJ2YWxNczogbnVtYmVyLCByYW5nZTogVGltZVJhbmdlLCByZXNvbHV0aW9uOiBudW1iZXIsIHN0ZXA6IHN0cmluZyB8IHVuZGVmaW5lZCkge1xuICAvLyBJZiB3ZSBjYW4gcGFyc2Ugc3RlcCx0aGUgd2UgdXNlIGl0XG4gIC8vIE90aGVyd2lzZSB3ZSB3aWxsIGNhbGN1bGF0ZSBzdGVwIGJhc2VkIG9uIGludGVydmFsXG4gIGNvbnN0IGludGVydmFsX3JlZ2V4ID0gLygtP1xcZCsoPzpcXC5cXGQrKT8pKG1zfFtNd2RobXN5XSkvO1xuICBpZiAoc3RlcD8ubWF0Y2goaW50ZXJ2YWxfcmVnZXgpKSB7XG4gICAgcmV0dXJuIHJhbmdlVXRpbC5pbnRlcnZhbFRvTXMoc3RlcCkgKiByZXNvbHV0aW9uO1xuICB9XG5cbiAgY29uc3QgbmV3U3RlcCA9IGludGVydmFsTXMgKiByZXNvbHV0aW9uO1xuICBjb25zdCBzYWZlU3RlcCA9IE1hdGgucm91bmQoKHJhbmdlLnRvLnZhbHVlT2YoKSAtIHJhbmdlLmZyb20udmFsdWVPZigpKSAvIDExMDAwKTtcbiAgcmV0dXJuIE1hdGgubWF4KG5ld1N0ZXAsIHNhZmVTdGVwKTtcbn1cbiJdLCJuYW1lcyI6WyJpc0xvZ3NRdWVyeSIsInN0YXJ0IiwiZW5kIiwicGFydGl0aW9uIiwicXVlcmllcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/querySplitting.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/queryUtils.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatLogqlQuery: () => (/* binding */ formatLogqlQuery),\n/* harmony export */   formatQuery: () => (/* binding */ formatQuery),\n/* harmony export */   getHighlighterExpressionsFromQuery: () => (/* binding */ getHighlighterExpressionsFromQuery),\n/* harmony export */   getLogQueryFromMetricsQuery: () => (/* binding */ getLogQueryFromMetricsQuery),\n/* harmony export */   getLokiQueryFromDataQuery: () => (/* binding */ getLokiQueryFromDataQuery),\n/* harmony export */   getLokiQueryType: () => (/* binding */ getLokiQueryType),\n/* harmony export */   getNodeFromQuery: () => (/* binding */ getNodeFromQuery),\n/* harmony export */   getNodePositionsFromQuery: () => (/* binding */ getNodePositionsFromQuery),\n/* harmony export */   getNodesFromQuery: () => (/* binding */ getNodesFromQuery),\n/* harmony export */   getNormalizedLokiQuery: () => (/* binding */ getNormalizedLokiQuery),\n/* harmony export */   getParserFromQuery: () => (/* binding */ getParserFromQuery),\n/* harmony export */   getStreamSelectorsFromQuery: () => (/* binding */ getStreamSelectorsFromQuery),\n/* harmony export */   isLogsQuery: () => (/* binding */ isLogsQuery),\n/* harmony export */   isLokiQuery: () => (/* binding */ isLokiQuery),\n/* harmony export */   isQueryPipelineErrorFiltering: () => (/* binding */ isQueryPipelineErrorFiltering),\n/* harmony export */   isQueryWithError: () => (/* binding */ isQueryWithError),\n/* harmony export */   isQueryWithLabelFilter: () => (/* binding */ isQueryWithLabelFilter),\n/* harmony export */   isQueryWithLabelFormat: () => (/* binding */ isQueryWithLabelFormat),\n/* harmony export */   isQueryWithLineFilter: () => (/* binding */ isQueryWithLineFilter),\n/* harmony export */   isQueryWithNode: () => (/* binding */ isQueryWithNode),\n/* harmony export */   isQueryWithParser: () => (/* binding */ isQueryWithParser),\n/* harmony export */   isQueryWithRangeVariable: () => (/* binding */ isQueryWithRangeVariable),\n/* harmony export */   obfuscate: () => (/* binding */ obfuscate),\n/* harmony export */   parseToNodeNamesArray: () => (/* binding */ parseToNodeNamesArray),\n/* harmony export */   requestSupportsSplitting: () => (/* binding */ requestSupportsSplitting)\n/* harmony export */ });\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/lodash-npm-4.17.21-6382451519-eb835a2e51.zip/node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-lezer-logql-virtual-0b75aafe9e/0/cache/@grafana-lezer-logql-npm-0.1.11-91e9d74a76-6a624b9a8d.zip/node_modules/@grafana/lezer-logql/index.es.js\");\n/* harmony import */ var _grafana_runtime__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-runtime-virtual-68c57d4c0c/1/packages/grafana-runtime/src/analytics/utils.ts\");\n/* harmony import */ var _prometheus_querybuilder_shared_parsingUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/plugins/datasource/prometheus/querybuilder/shared/parsingUtils.ts\");\n/* harmony import */ var _components_monaco_query_field_monaco_completion_provider_validation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./public/app/plugins/datasource/loki/components/monaco-query-field/monaco-completion-provider/validation.ts\");\n/* harmony import */ var _modifyQuery__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./public/app/plugins/datasource/loki/modifyQuery.ts\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./public/app/plugins/datasource/loki/types.ts\");\n\n\n\n\n\n\n\n\nfunction formatQuery(selector) {\n  return `${selector || \"\"}`.trim();\n}\nfunction getHighlighterExpressionsFromQuery(input) {\n  const results = [];\n  const filters = getNodesFromQuery(input, [_grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.LineFilter]);\n  for (let filter of filters) {\n    const pipeExact = filter.getChild(_grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.Filter)?.getChild(_grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.PipeExact);\n    const pipeMatch = filter.getChild(_grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.Filter)?.getChild(_grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.PipeMatch);\n    const string = filter.getChild(_grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.String);\n    if (!pipeExact && !pipeMatch || !string) {\n      continue;\n    }\n    const filterTerm = input.substring(string.from, string.to).trim();\n    const backtickedTerm = filterTerm[0] === \"`\";\n    const unwrappedFilterTerm = filterTerm.substring(1, filterTerm.length - 1);\n    if (!unwrappedFilterTerm) {\n      continue;\n    }\n    let resultTerm = \"\";\n    if (pipeMatch) {\n      resultTerm = backtickedTerm ? unwrappedFilterTerm : unwrappedFilterTerm.replace(/\\\\\\\\/g, \"\\\\\");\n    } else {\n      resultTerm = (0,lodash__WEBPACK_IMPORTED_MODULE_0__.escapeRegExp)(unwrappedFilterTerm);\n    }\n    if (resultTerm) {\n      results.push(resultTerm);\n    }\n  }\n  return results;\n}\nfunction getNormalizedLokiQuery(query) {\n  const queryType = getLokiQueryType(query);\n  const { instant, range, ...rest } = query;\n  return { ...rest, queryType };\n}\nfunction getLokiQueryType(query) {\n  const { queryType } = query;\n  const hasValidQueryType = queryType === _types__WEBPACK_IMPORTED_MODULE_5__.LokiQueryType.Range || queryType === _types__WEBPACK_IMPORTED_MODULE_5__.LokiQueryType.Instant || queryType === _types__WEBPACK_IMPORTED_MODULE_5__.LokiQueryType.Stream;\n  if (hasValidQueryType) {\n    return queryType;\n  }\n  if (query.instant === true) {\n    return _types__WEBPACK_IMPORTED_MODULE_5__.LokiQueryType.Instant;\n  }\n  return _types__WEBPACK_IMPORTED_MODULE_5__.LokiQueryType.Range;\n}\nconst tagsToObscure = [\"String\", \"Identifier\", \"LineComment\", \"Number\"];\nconst partsToKeep = [\"__error__\", \"__interval\", \"__interval_ms\"];\nfunction obfuscate(query) {\n  let obfuscatedQuery = query;\n  const tree = _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.parser.parse(query);\n  tree.iterate({\n    enter: ({ name, from, to }) => {\n      const queryPart = query.substring(from, to);\n      if (tagsToObscure.includes(name) && !partsToKeep.includes(queryPart)) {\n        obfuscatedQuery = obfuscatedQuery.replace(queryPart, name);\n      }\n    }\n  });\n  return obfuscatedQuery;\n}\nfunction parseToNodeNamesArray(query) {\n  const queryParts = [];\n  const tree = _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.parser.parse(query);\n  tree.iterate({\n    enter: ({ name }) => {\n      queryParts.push(name);\n    }\n  });\n  return queryParts;\n}\nfunction isQueryWithNode(query, nodeType) {\n  let isQueryWithNode2 = false;\n  const tree = _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.parser.parse(query);\n  tree.iterate({\n    enter: ({ type }) => {\n      if (type.id === nodeType) {\n        isQueryWithNode2 = true;\n        return false;\n      }\n    }\n  });\n  return isQueryWithNode2;\n}\nfunction getNodesFromQuery(query, nodeTypes) {\n  const nodes = [];\n  const tree = _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.parser.parse(query);\n  tree.iterate({\n    enter: (node) => {\n      if (nodeTypes === void 0 || nodeTypes.includes(node.type.id)) {\n        nodes.push(node.node);\n      }\n    }\n  });\n  return nodes;\n}\nfunction getNodePositionsFromQuery(query, nodeTypes) {\n  const positions = [];\n  const tree = _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.parser.parse(query);\n  tree.iterate({\n    enter: (node) => {\n      if (nodeTypes === void 0 || nodeTypes.includes(node.type.id)) {\n        positions.push(_modifyQuery__WEBPACK_IMPORTED_MODULE_4__.NodePosition.fromNode(node.node));\n      }\n    }\n  });\n  return positions;\n}\nfunction getNodeFromQuery(query, nodeType) {\n  const nodes = getNodesFromQuery(query, [nodeType]);\n  return nodes.length > 0 ? nodes[0] : void 0;\n}\nfunction isQueryWithError(query) {\n  return isQueryWithNode(query, _prometheus_querybuilder_shared_parsingUtils__WEBPACK_IMPORTED_MODULE_2__.ErrorId);\n}\nfunction isLogsQuery(query) {\n  return !isQueryWithNode(query, _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.MetricExpr);\n}\nfunction isQueryWithParser(query) {\n  const nodes = getNodesFromQuery(query, [_grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.LabelParser, _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.JsonExpressionParser]);\n  const parserCount = nodes.length;\n  return { queryWithParser: parserCount > 0, parserCount };\n}\nfunction getParserFromQuery(query) {\n  const parsers = getNodesFromQuery(query, [_grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.LabelParser, _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.JsonExpressionParser]);\n  return parsers.length > 0 ? query.substring(parsers[0].from, parsers[0].to).trim() : void 0;\n}\nfunction isQueryPipelineErrorFiltering(query) {\n  const labels = getNodesFromQuery(query, [_grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.LabelFilter]);\n  for (const node of labels) {\n    const label = node.getChild(_grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.Matcher)?.getChild(_grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.Identifier);\n    if (label) {\n      const labelName = query.substring(label.from, label.to);\n      if (labelName === \"__error__\") {\n        return true;\n      }\n    }\n  }\n  return false;\n}\nfunction isQueryWithLabelFormat(query) {\n  return isQueryWithNode(query, _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.LabelFormatExpr);\n}\nfunction getLogQueryFromMetricsQuery(query) {\n  if (isLogsQuery(query)) {\n    return query;\n  }\n  const selectorNode = getNodeFromQuery(query, _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.Selector);\n  if (!selectorNode) {\n    return query;\n  }\n  const selector = query.substring(selectorNode.from, selectorNode.to);\n  const pipelineExprNode = getNodeFromQuery(query, _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.PipelineExpr);\n  const pipelineExpr = pipelineExprNode ? query.substring(pipelineExprNode.from, pipelineExprNode.to) : \"\";\n  return `${selector} ${pipelineExpr}`.trim();\n}\nfunction isQueryWithLabelFilter(query) {\n  return isQueryWithNode(query, _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.LabelFilter);\n}\nfunction isQueryWithLineFilter(query) {\n  return isQueryWithNode(query, _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.LineFilter);\n}\nfunction isQueryWithRangeVariable(query) {\n  const rangeNodes = getNodesFromQuery(query, [_grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.Range]);\n  for (const node of rangeNodes) {\n    if (query.substring(node.from, node.to).match(/\\[\\$__range(_s|_ms)?/)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction getStreamSelectorsFromQuery(query) {\n  const labelMatcherPositions = (0,_modifyQuery__WEBPACK_IMPORTED_MODULE_4__.getStreamSelectorPositions)(query);\n  const labelMatchers = labelMatcherPositions.map((labelMatcher) => {\n    return query.slice(labelMatcher.from, labelMatcher.to);\n  });\n  return labelMatchers;\n}\nfunction requestSupportsSplitting(allQueries) {\n  const queries = allQueries.filter((query) => !query.hide).filter((query) => !query.refId.includes(\"do-not-chunk\")).filter((query) => query.expr);\n  return queries.length > 0;\n}\nconst isLokiQuery = (query) => {\n  if (!query) {\n    return false;\n  }\n  const lokiQuery = query;\n  return lokiQuery.expr !== void 0;\n};\nconst getLokiQueryFromDataQuery = (query) => {\n  if (!query || !isLokiQuery(query)) {\n    return void 0;\n  }\n  return query;\n};\nfunction formatLogqlQuery(query, datasource) {\n  const isInvalid = isQueryWithError(datasource.interpolateString(query, _components_monaco_query_field_monaco_completion_provider_validation__WEBPACK_IMPORTED_MODULE_3__.placeHolderScopedVars));\n  (0,_grafana_runtime__WEBPACK_IMPORTED_MODULE_6__.reportInteraction)(\"grafana_loki_format_query_clicked\", {\n    is_invalid: isInvalid,\n    query_type: isLogsQuery(query) ? \"logs\" : \"metric\"\n  });\n  if (isInvalid) {\n    return query;\n  }\n  let transformedQuery = (0,_prometheus_querybuilder_shared_parsingUtils__WEBPACK_IMPORTED_MODULE_2__.replaceVariables)(query);\n  const transformationMatches = [];\n  const tree = _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.parser.parse(transformedQuery);\n  if (tree.topNode.firstChild?.firstChild?.type.id === _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.MetricExpr) {\n    const pattern = /\\[__V_[0-2]__\\w+__V__\\]/g;\n    transformationMatches.push(...transformedQuery.matchAll(pattern));\n    transformedQuery = transformedQuery.replace(pattern, \"[0s]\");\n  }\n  let formatted = (0,_grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.formatLokiQuery)(transformedQuery);\n  if (tree.topNode.firstChild?.firstChild?.type.id === _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.MetricExpr) {\n    transformationMatches.forEach((match) => {\n      formatted = formatted.replace(\"[0s]\", match[0]);\n    });\n  }\n  return (0,_prometheus_querybuilder_shared_parsingUtils__WEBPACK_IMPORTED_MODULE_2__.returnVariables)(formatted);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/queryUtils.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/querybuilder/LokiQueryModeller.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LokiQueryModeller: () => (/* binding */ LokiQueryModeller),\n/* harmony export */   lokiQueryModeller: () => (/* binding */ lokiQueryModeller)\n/* harmony export */ });\n/* harmony import */ var _prometheus_querybuilder_shared_LokiAndPromQueryModellerBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./public/app/plugins/datasource/prometheus/querybuilder/shared/LokiAndPromQueryModellerBase.ts\");\n/* harmony import */ var _operations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/plugins/datasource/loki/querybuilder/operations.ts\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/plugins/datasource/loki/querybuilder/types.ts\");\n\n\n\n\nclass LokiQueryModeller extends _prometheus_querybuilder_shared_LokiAndPromQueryModellerBase__WEBPACK_IMPORTED_MODULE_0__.LokiAndPromQueryModellerBase {\n  constructor() {\n    super(_operations__WEBPACK_IMPORTED_MODULE_1__.getOperationDefinitions);\n    this.setOperationCategories([\n      _types__WEBPACK_IMPORTED_MODULE_2__.LokiVisualQueryOperationCategory.Aggregations,\n      _types__WEBPACK_IMPORTED_MODULE_2__.LokiVisualQueryOperationCategory.RangeFunctions,\n      _types__WEBPACK_IMPORTED_MODULE_2__.LokiVisualQueryOperationCategory.Formats,\n      _types__WEBPACK_IMPORTED_MODULE_2__.LokiVisualQueryOperationCategory.BinaryOps,\n      _types__WEBPACK_IMPORTED_MODULE_2__.LokiVisualQueryOperationCategory.LabelFilters,\n      _types__WEBPACK_IMPORTED_MODULE_2__.LokiVisualQueryOperationCategory.LineFilters\n    ]);\n  }\n  renderLabels(labels) {\n    if (labels.length === 0) {\n      return \"{}\";\n    }\n    return super.renderLabels(labels);\n  }\n  getQueryPatterns() {\n    return [\n      {\n        name: \"Parse log lines with logfmt parser\",\n        type: _types__WEBPACK_IMPORTED_MODULE_2__.LokiQueryPatternType.Log,\n        // {} | logfmt | __error__=``\n        operations: [\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.Logfmt, params: [] },\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.LabelFilterNoErrors, params: [] }\n        ]\n      },\n      {\n        name: \"Parse log lines with JSON parser\",\n        type: _types__WEBPACK_IMPORTED_MODULE_2__.LokiQueryPatternType.Log,\n        // {} | json | __error__=``\n        operations: [\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.Json, params: [] },\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.LabelFilterNoErrors, params: [] }\n        ]\n      },\n      {\n        name: \"Filter log line and parse with logfmt parser\",\n        type: _types__WEBPACK_IMPORTED_MODULE_2__.LokiQueryPatternType.Log,\n        // {} |= `` | logfmt | __error__=``\n        operations: [\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.LineContains, params: [\"\"] },\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.Logfmt, params: [] },\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.LabelFilterNoErrors, params: [] }\n        ]\n      },\n      {\n        name: \"Filter log lines and parse with json parser\",\n        type: _types__WEBPACK_IMPORTED_MODULE_2__.LokiQueryPatternType.Log,\n        // {} |= `` | json | __error__=``\n        operations: [\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.LineContains, params: [\"\"] },\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.Json, params: [] },\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.LabelFilterNoErrors, params: [] }\n        ]\n      },\n      {\n        name: \"Parse log line with logfmt parser and use label filter\",\n        type: _types__WEBPACK_IMPORTED_MODULE_2__.LokiQueryPatternType.Log,\n        // {} |= `` | logfmt | __error__=`` | label=`value`\n        operations: [\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.LineContains, params: [\"\"] },\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.Logfmt, params: [] },\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.LabelFilterNoErrors, params: [] },\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.LabelFilter, params: [\"label\", \"=\", \"value\"] }\n        ]\n      },\n      {\n        name: \"Parse log lines with nested json\",\n        type: _types__WEBPACK_IMPORTED_MODULE_2__.LokiQueryPatternType.Log,\n        // {} |= `` | json | line_format `{{ .message}}` | json\n        operations: [\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.LineContains, params: [\"\"] },\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.Json, params: [] },\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.LabelFilterNoErrors, params: [] },\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.LineFormat, params: [\"{{.message}}\"] },\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.Json, params: [] },\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.LabelFilterNoErrors, params: [] }\n        ]\n      },\n      {\n        name: \"Reformat log lines\",\n        type: _types__WEBPACK_IMPORTED_MODULE_2__.LokiQueryPatternType.Log,\n        // {} |= `` | logfmt | line_format `{{.message}}`\n        operations: [\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.LineContains, params: [\"\"] },\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.Logfmt, params: [] },\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.LabelFilterNoErrors, params: [] },\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.LineFormat, params: [\"{{.message}}\"] }\n        ]\n      },\n      {\n        name: \"Rename lvl label to level\",\n        type: _types__WEBPACK_IMPORTED_MODULE_2__.LokiQueryPatternType.Log,\n        // {} |= `` | logfmt | label_format level=lvl\n        operations: [\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.LineContains, params: [\"\"] },\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.Logfmt, params: [] },\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.LabelFilterNoErrors, params: [] },\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.LabelFormat, params: [\"lvl\", \"level\"] }\n        ]\n      },\n      {\n        name: \"Query on value inside a log line\",\n        type: _types__WEBPACK_IMPORTED_MODULE_2__.LokiQueryPatternType.Metric,\n        // sum(sum_over_time({ | logfmt | __error__=`` | unwrap | __error__=`` [$__interval]))\n        operations: [\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.LineContains, params: [\"\"] },\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.Logfmt, params: [] },\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.LabelFilterNoErrors, params: [] },\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.Unwrap, params: [\"\"] },\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.LabelFilterNoErrors, params: [] },\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.SumOverTime, params: [\"$__interval\"] },\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.Sum, params: [] }\n        ]\n      },\n      {\n        name: \"Total requests per label of streams\",\n        type: _types__WEBPACK_IMPORTED_MODULE_2__.LokiQueryPatternType.Metric,\n        // sum by() (count_over_time({}[$__interval)\n        operations: [\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.LineContains, params: [\"\"] },\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.CountOverTime, params: [\"$__interval\"] },\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.Sum, params: [] }\n        ]\n      },\n      {\n        name: \"Total requests per parsed label or label of streams\",\n        type: _types__WEBPACK_IMPORTED_MODULE_2__.LokiQueryPatternType.Metric,\n        // sum by() (count_over_time({}| logfmt | __error__=`` [$__interval))\n        operations: [\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.LineContains, params: [\"\"] },\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.Logfmt, params: [] },\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.LabelFilterNoErrors, params: [] },\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.CountOverTime, params: [\"$__interval\"] },\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.Sum, params: [] }\n        ]\n      },\n      {\n        name: \"Bytes used by a log stream\",\n        type: _types__WEBPACK_IMPORTED_MODULE_2__.LokiQueryPatternType.Metric,\n        // bytes_over_time({}[$__interval])\n        operations: [\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.LineContains, params: [\"\"] },\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.BytesOverTime, params: [\"$__interval\"] }\n        ]\n      },\n      {\n        name: \"Count of log lines per stream\",\n        type: _types__WEBPACK_IMPORTED_MODULE_2__.LokiQueryPatternType.Metric,\n        // count_over_time({}[$__interval])\n        operations: [\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.LineContains, params: [\"\"] },\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.CountOverTime, params: [\"$__interval\"] }\n        ]\n      },\n      {\n        name: \"Top N results by label or parsed label\",\n        type: _types__WEBPACK_IMPORTED_MODULE_2__.LokiQueryPatternType.Metric,\n        // topk(10, sum by () (count_over_time({} | logfmt | __error__=`` [$__interval])))\n        operations: [\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.Logfmt, params: [] },\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.LabelFilterNoErrors, params: [] },\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.CountOverTime, params: [\"$__interval\"] },\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.Sum, params: [] },\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.TopK, params: [10] }\n        ]\n      },\n      {\n        name: \"Extracted quantile\",\n        type: _types__WEBPACK_IMPORTED_MODULE_2__.LokiQueryPatternType.Metric,\n        // quantile_over_time(0.5,{} | logfmt | unwrap latency[$__interval]) by ()\n        operations: [\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.Logfmt, params: [] },\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.LabelFilterNoErrors, params: [] },\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.Unwrap, params: [\"latency\"] },\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.LabelFilterNoErrors, params: [] },\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.QuantileOverTime, params: [\"$__interval\", 0.5] },\n          { id: _types__WEBPACK_IMPORTED_MODULE_2__.LokiOperationId.Sum, params: [] }\n        ]\n      }\n    ];\n  }\n}\nconst lokiQueryModeller = new LokiQueryModeller();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL3F1ZXJ5YnVpbGRlci9Mb2tpUXVlcnlNb2RlbGxlci50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBNkM7QUFHTDtBQUNrRTtBQUVuRyxNQUFNLDBCQUEwQixzSEFBNEIsQ0FBQztBQUFBLEVBQ2xFLGNBQWM7QUFDWixVQUFNLGdFQUF1QjtBQUU3QixTQUFLLHVCQUF1QjtBQUFBLE1BQzFCLG9FQUFnQyxDQUFDO0FBQUEsTUFDakMsb0VBQWdDLENBQUM7QUFBQSxNQUNqQyxvRUFBZ0MsQ0FBQztBQUFBLE1BQ2pDLG9FQUFnQyxDQUFDO0FBQUEsTUFDakMsb0VBQWdDLENBQUM7QUFBQSxNQUNqQyxvRUFBZ0MsQ0FBQztBQUFBLElBQ25DLENBQUM7QUFBQSxFQUNIO0FBQUEsRUFFQSxhQUFhLFFBQW1DO0FBQzlDLFFBQUksT0FBTyxXQUFXLEdBQUc7QUFDdkIsYUFBTztBQUFBLElBQ1Q7QUFFQSxXQUFPLE1BQU0sYUFBYSxNQUFNO0FBQUEsRUFDbEM7QUFBQSxFQUVBLG1CQUF1QztBQUNyQyxXQUFPO0FBQUEsTUFDTDtBQUFBLFFBQ0UsTUFBTTtBQUFBLFFBQ04sTUFBTSx3REFBb0IsQ0FBQztBQUFBO0FBQUEsUUFFM0IsWUFBWTtBQUFBLFVBQ1YsRUFBRSxJQUFJLG1EQUFlLENBQUMsUUFBUSxRQUFRLENBQUMsRUFBRTtBQUFBLFVBQ3pDLEVBQUUsSUFBSSxtREFBZSxDQUFDLHFCQUFxQixRQUFRLENBQUMsRUFBRTtBQUFBLFFBQ3hEO0FBQUEsTUFDRjtBQUFBLE1BQ0E7QUFBQSxRQUNFLE1BQU07QUFBQSxRQUNOLE1BQU0sd0RBQW9CLENBQUM7QUFBQTtBQUFBLFFBRTNCLFlBQVk7QUFBQSxVQUNWLEVBQUUsSUFBSSxtREFBZSxDQUFDLE1BQU0sUUFBUSxDQUFDLEVBQUU7QUFBQSxVQUN2QyxFQUFFLElBQUksbURBQWUsQ0FBQyxxQkFBcUIsUUFBUSxDQUFDLEVBQUU7QUFBQSxRQUN4RDtBQUFBLE1BQ0Y7QUFBQSxNQUNBO0FBQUEsUUFDRSxNQUFNO0FBQUEsUUFDTixNQUFNLHdEQUFvQixDQUFDO0FBQUE7QUFBQSxRQUUzQixZQUFZO0FBQUEsVUFDVixFQUFFLElBQUksbURBQWUsQ0FBQyxjQUFjLFFBQVEsQ0FBQyxFQUFFLEVBQUU7QUFBQSxVQUNqRCxFQUFFLElBQUksbURBQWUsQ0FBQyxRQUFRLFFBQVEsQ0FBQyxFQUFFO0FBQUEsVUFDekMsRUFBRSxJQUFJLG1EQUFlLENBQUMscUJBQXFCLFFBQVEsQ0FBQyxFQUFFO0FBQUEsUUFDeEQ7QUFBQSxNQUNGO0FBQUEsTUFDQTtBQUFBLFFBQ0UsTUFBTTtBQUFBLFFBQ04sTUFBTSx3REFBb0IsQ0FBQztBQUFBO0FBQUEsUUFFM0IsWUFBWTtBQUFBLFVBQ1YsRUFBRSxJQUFJLG1EQUFlLENBQUMsY0FBYyxRQUFRLENBQUMsRUFBRSxFQUFFO0FBQUEsVUFDakQsRUFBRSxJQUFJLG1EQUFlLENBQUMsTUFBTSxRQUFRLENBQUMsRUFBRTtBQUFBLFVBQ3ZDLEVBQUUsSUFBSSxtREFBZSxDQUFDLHFCQUFxQixRQUFRLENBQUMsRUFBRTtBQUFBLFFBQ3hEO0FBQUEsTUFDRjtBQUFBLE1BQ0E7QUFBQSxRQUNFLE1BQU07QUFBQSxRQUNOLE1BQU0sd0RBQW9CLENBQUM7QUFBQTtBQUFBLFFBRTNCLFlBQVk7QUFBQSxVQUNWLEVBQUUsSUFBSSxtREFBZSxDQUFDLGNBQWMsUUFBUSxDQUFDLEVBQUUsRUFBRTtBQUFBLFVBQ2pELEVBQUUsSUFBSSxtREFBZSxDQUFDLFFBQVEsUUFBUSxDQUFDLEVBQUU7QUFBQSxVQUN6QyxFQUFFLElBQUksbURBQWUsQ0FBQyxxQkFBcUIsUUFBUSxDQUFDLEVBQUU7QUFBQSxVQUN0RCxFQUFFLElBQUksbURBQWUsQ0FBQyxhQUFhLFFBQVEsQ0FBQyxTQUFTLEtBQUssT0FBTyxFQUFFO0FBQUEsUUFDckU7QUFBQSxNQUNGO0FBQUEsTUFDQTtBQUFBLFFBQ0UsTUFBTTtBQUFBLFFBQ04sTUFBTSx3REFBb0IsQ0FBQztBQUFBO0FBQUEsUUFFM0IsWUFBWTtBQUFBLFVBQ1YsRUFBRSxJQUFJLG1EQUFlLENBQUMsY0FBYyxRQUFRLENBQUMsRUFBRSxFQUFFO0FBQUEsVUFDakQsRUFBRSxJQUFJLG1EQUFlLENBQUMsTUFBTSxRQUFRLENBQUMsRUFBRTtBQUFBLFVBQ3ZDLEVBQUUsSUFBSSxtREFBZSxDQUFDLHFCQUFxQixRQUFRLENBQUMsRUFBRTtBQUFBLFVBQ3RELEVBQUUsSUFBSSxtREFBZSxDQUFDLFlBQVksUUFBUSxDQUFDLGNBQWMsRUFBRTtBQUFBLFVBQzNELEVBQUUsSUFBSSxtREFBZSxDQUFDLE1BQU0sUUFBUSxDQUFDLEVBQUU7QUFBQSxVQUN2QyxFQUFFLElBQUksbURBQWUsQ0FBQyxxQkFBcUIsUUFBUSxDQUFDLEVBQUU7QUFBQSxRQUN4RDtBQUFBLE1BQ0Y7QUFBQSxNQUNBO0FBQUEsUUFDRSxNQUFNO0FBQUEsUUFDTixNQUFNLHdEQUFvQixDQUFDO0FBQUE7QUFBQSxRQUUzQixZQUFZO0FBQUEsVUFDVixFQUFFLElBQUksbURBQWUsQ0FBQyxjQUFjLFFBQVEsQ0FBQyxFQUFFLEVBQUU7QUFBQSxVQUNqRCxFQUFFLElBQUksbURBQWUsQ0FBQyxRQUFRLFFBQVEsQ0FBQyxFQUFFO0FBQUEsVUFDekMsRUFBRSxJQUFJLG1EQUFlLENBQUMscUJBQXFCLFFBQVEsQ0FBQyxFQUFFO0FBQUEsVUFDdEQsRUFBRSxJQUFJLG1EQUFlLENBQUMsWUFBWSxRQUFRLENBQUMsY0FBYyxFQUFFO0FBQUEsUUFDN0Q7QUFBQSxNQUNGO0FBQUEsTUFDQTtBQUFBLFFBQ0UsTUFBTTtBQUFBLFFBQ04sTUFBTSx3REFBb0IsQ0FBQztBQUFBO0FBQUEsUUFFM0IsWUFBWTtBQUFBLFVBQ1YsRUFBRSxJQUFJLG1EQUFlLENBQUMsY0FBYyxRQUFRLENBQUMsRUFBRSxFQUFFO0FBQUEsVUFDakQsRUFBRSxJQUFJLG1EQUFlLENBQUMsUUFBUSxRQUFRLENBQUMsRUFBRTtBQUFBLFVBQ3pDLEVBQUUsSUFBSSxtREFBZSxDQUFDLHFCQUFxQixRQUFRLENBQUMsRUFBRTtBQUFBLFVBQ3RELEVBQUUsSUFBSSxtREFBZSxDQUFDLGFBQWEsUUFBUSxDQUFDLE9BQU8sT0FBTyxFQUFFO0FBQUEsUUFDOUQ7QUFBQSxNQUNGO0FBQUEsTUFDQTtBQUFBLFFBQ0UsTUFBTTtBQUFBLFFBQ04sTUFBTSx3REFBb0IsQ0FBQztBQUFBO0FBQUEsUUFFM0IsWUFBWTtBQUFBLFVBQ1YsRUFBRSxJQUFJLG1EQUFlLENBQUMsY0FBYyxRQUFRLENBQUMsRUFBRSxFQUFFO0FBQUEsVUFDakQsRUFBRSxJQUFJLG1EQUFlLENBQUMsUUFBUSxRQUFRLENBQUMsRUFBRTtBQUFBLFVBQ3pDLEVBQUUsSUFBSSxtREFBZSxDQUFDLHFCQUFxQixRQUFRLENBQUMsRUFBRTtBQUFBLFVBQ3RELEVBQUUsSUFBSSxtREFBZSxDQUFDLFFBQVEsUUFBUSxDQUFDLEVBQUUsRUFBRTtBQUFBLFVBQzNDLEVBQUUsSUFBSSxtREFBZSxDQUFDLHFCQUFxQixRQUFRLENBQUMsRUFBRTtBQUFBLFVBQ3RELEVBQUUsSUFBSSxtREFBZSxDQUFDLGFBQWEsUUFBUSxDQUFDLGFBQWEsRUFBRTtBQUFBLFVBQzNELEVBQUUsSUFBSSxtREFBZSxDQUFDLEtBQUssUUFBUSxDQUFDLEVBQUU7QUFBQSxRQUN4QztBQUFBLE1BQ0Y7QUFBQSxNQUNBO0FBQUEsUUFDRSxNQUFNO0FBQUEsUUFDTixNQUFNLHdEQUFvQixDQUFDO0FBQUE7QUFBQSxRQUUzQixZQUFZO0FBQUEsVUFDVixFQUFFLElBQUksbURBQWUsQ0FBQyxjQUFjLFFBQVEsQ0FBQyxFQUFFLEVBQUU7QUFBQSxVQUNqRCxFQUFFLElBQUksbURBQWUsQ0FBQyxlQUFlLFFBQVEsQ0FBQyxhQUFhLEVBQUU7QUFBQSxVQUM3RCxFQUFFLElBQUksbURBQWUsQ0FBQyxLQUFLLFFBQVEsQ0FBQyxFQUFFO0FBQUEsUUFDeEM7QUFBQSxNQUNGO0FBQUEsTUFDQTtBQUFBLFFBQ0UsTUFBTTtBQUFBLFFBQ04sTUFBTSx3REFBb0IsQ0FBQztBQUFBO0FBQUEsUUFFM0IsWUFBWTtBQUFBLFVBQ1YsRUFBRSxJQUFJLG1EQUFlLENBQUMsY0FBYyxRQUFRLENBQUMsRUFBRSxFQUFFO0FBQUEsVUFDakQsRUFBRSxJQUFJLG1EQUFlLENBQUMsUUFBUSxRQUFRLENBQUMsRUFBRTtBQUFBLFVBQ3pDLEVBQUUsSUFBSSxtREFBZSxDQUFDLHFCQUFxQixRQUFRLENBQUMsRUFBRTtBQUFBLFVBQ3RELEVBQUUsSUFBSSxtREFBZSxDQUFDLGVBQWUsUUFBUSxDQUFDLGFBQWEsRUFBRTtBQUFBLFVBQzdELEVBQUUsSUFBSSxtREFBZSxDQUFDLEtBQUssUUFBUSxDQUFDLEVBQUU7QUFBQSxRQUN4QztBQUFBLE1BQ0Y7QUFBQSxNQUNBO0FBQUEsUUFDRSxNQUFNO0FBQUEsUUFDTixNQUFNLHdEQUFvQixDQUFDO0FBQUE7QUFBQSxRQUUzQixZQUFZO0FBQUEsVUFDVixFQUFFLElBQUksbURBQWUsQ0FBQyxjQUFjLFFBQVEsQ0FBQyxFQUFFLEVBQUU7QUFBQSxVQUNqRCxFQUFFLElBQUksbURBQWUsQ0FBQyxlQUFlLFFBQVEsQ0FBQyxhQUFhLEVBQUU7QUFBQSxRQUMvRDtBQUFBLE1BQ0Y7QUFBQSxNQUNBO0FBQUEsUUFDRSxNQUFNO0FBQUEsUUFDTixNQUFNLHdEQUFvQixDQUFDO0FBQUE7QUFBQSxRQUUzQixZQUFZO0FBQUEsVUFDVixFQUFFLElBQUksbURBQWUsQ0FBQyxjQUFjLFFBQVEsQ0FBQyxFQUFFLEVBQUU7QUFBQSxVQUNqRCxFQUFFLElBQUksbURBQWUsQ0FBQyxlQUFlLFFBQVEsQ0FBQyxhQUFhLEVBQUU7QUFBQSxRQUMvRDtBQUFBLE1BQ0Y7QUFBQSxNQUNBO0FBQUEsUUFDRSxNQUFNO0FBQUEsUUFDTixNQUFNLHdEQUFvQixDQUFDO0FBQUE7QUFBQSxRQUUzQixZQUFZO0FBQUEsVUFDVixFQUFFLElBQUksbURBQWUsQ0FBQyxRQUFRLFFBQVEsQ0FBQyxFQUFFO0FBQUEsVUFDekMsRUFBRSxJQUFJLG1EQUFlLENBQUMscUJBQXFCLFFBQVEsQ0FBQyxFQUFFO0FBQUEsVUFDdEQsRUFBRSxJQUFJLG1EQUFlLENBQUMsZUFBZSxRQUFRLENBQUMsYUFBYSxFQUFFO0FBQUEsVUFDN0QsRUFBRSxJQUFJLG1EQUFlLENBQUMsS0FBSyxRQUFRLENBQUMsRUFBRTtBQUFBLFVBQ3RDLEVBQUUsSUFBSSxtREFBZSxDQUFDLE1BQU0sUUFBUSxDQUFDLEVBQUUsRUFBRTtBQUFBLFFBQzNDO0FBQUEsTUFDRjtBQUFBLE1BQ0E7QUFBQSxRQUNFLE1BQU07QUFBQSxRQUNOLE1BQU0sd0RBQW9CLENBQUM7QUFBQTtBQUFBLFFBRTNCLFlBQVk7QUFBQSxVQUNWLEVBQUUsSUFBSSxtREFBZSxDQUFDLFFBQVEsUUFBUSxDQUFDLEVBQUU7QUFBQSxVQUN6QyxFQUFFLElBQUksbURBQWUsQ0FBQyxxQkFBcUIsUUFBUSxDQUFDLEVBQUU7QUFBQSxVQUN0RCxFQUFFLElBQUksbURBQWUsQ0FBQyxRQUFRLFFBQVEsQ0FBQyxTQUFTLEVBQUU7QUFBQSxVQUNsRCxFQUFFLElBQUksbURBQWUsQ0FBQyxxQkFBcUIsUUFBUSxDQUFDLEVBQUU7QUFBQSxVQUN0RCxFQUFFLElBQUksbURBQWUsQ0FBQyxrQkFBa0IsUUFBUSxDQUFDLGVBQWUsR0FBRyxFQUFFO0FBQUEsVUFDckUsRUFBRSxJQUFJLG1EQUFlLENBQUMsS0FBSyxRQUFRLENBQUMsRUFBRTtBQUFBLFFBQ3hDO0FBQUEsTUFDRjtBQUFBLElBQ0Y7QUFBQSxFQUNGO0FBQ0Y7QUFFTyxNQUFNLG9CQUFvQixJQUFJLGtCQUFrQiIsInNvdXJjZXMiOlsid2VicGFjazovL2dyYWZhbmEvLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL3F1ZXJ5YnVpbGRlci9Mb2tpUXVlcnlNb2RlbGxlci50cz85N2UzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IExva2lBbmRQcm9tUXVlcnlNb2RlbGxlckJhc2UgfSBmcm9tICcuLi8uLi9wcm9tZXRoZXVzL3F1ZXJ5YnVpbGRlci9zaGFyZWQvTG9raUFuZFByb21RdWVyeU1vZGVsbGVyQmFzZSc7XG5pbXBvcnQgeyBRdWVyeUJ1aWxkZXJMYWJlbEZpbHRlciB9IGZyb20gJy4uLy4uL3Byb21ldGhldXMvcXVlcnlidWlsZGVyL3NoYXJlZC90eXBlcyc7XG5cbmltcG9ydCB7IGdldE9wZXJhdGlvbkRlZmluaXRpb25zIH0gZnJvbSAnLi9vcGVyYXRpb25zJztcbmltcG9ydCB7IExva2lPcGVyYXRpb25JZCwgTG9raVF1ZXJ5UGF0dGVybiwgTG9raVF1ZXJ5UGF0dGVyblR5cGUsIExva2lWaXN1YWxRdWVyeU9wZXJhdGlvbkNhdGVnb3J5IH0gZnJvbSAnLi90eXBlcyc7XG5cbmV4cG9ydCBjbGFzcyBMb2tpUXVlcnlNb2RlbGxlciBleHRlbmRzIExva2lBbmRQcm9tUXVlcnlNb2RlbGxlckJhc2Uge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcihnZXRPcGVyYXRpb25EZWZpbml0aW9ucyk7XG5cbiAgICB0aGlzLnNldE9wZXJhdGlvbkNhdGVnb3JpZXMoW1xuICAgICAgTG9raVZpc3VhbFF1ZXJ5T3BlcmF0aW9uQ2F0ZWdvcnkuQWdncmVnYXRpb25zLFxuICAgICAgTG9raVZpc3VhbFF1ZXJ5T3BlcmF0aW9uQ2F0ZWdvcnkuUmFuZ2VGdW5jdGlvbnMsXG4gICAgICBMb2tpVmlzdWFsUXVlcnlPcGVyYXRpb25DYXRlZ29yeS5Gb3JtYXRzLFxuICAgICAgTG9raVZpc3VhbFF1ZXJ5T3BlcmF0aW9uQ2F0ZWdvcnkuQmluYXJ5T3BzLFxuICAgICAgTG9raVZpc3VhbFF1ZXJ5T3BlcmF0aW9uQ2F0ZWdvcnkuTGFiZWxGaWx0ZXJzLFxuICAgICAgTG9raVZpc3VhbFF1ZXJ5T3BlcmF0aW9uQ2F0ZWdvcnkuTGluZUZpbHRlcnMsXG4gICAgXSk7XG4gIH1cblxuICByZW5kZXJMYWJlbHMobGFiZWxzOiBRdWVyeUJ1aWxkZXJMYWJlbEZpbHRlcltdKSB7XG4gICAgaWYgKGxhYmVscy5sZW5ndGggPT09IDApIHtcbiAgICAgIHJldHVybiAne30nO1xuICAgIH1cblxuICAgIHJldHVybiBzdXBlci5yZW5kZXJMYWJlbHMobGFiZWxzKTtcbiAgfVxuXG4gIGdldFF1ZXJ5UGF0dGVybnMoKTogTG9raVF1ZXJ5UGF0dGVybltdIHtcbiAgICByZXR1cm4gW1xuICAgICAge1xuICAgICAgICBuYW1lOiAnUGFyc2UgbG9nIGxpbmVzIHdpdGggbG9nZm10IHBhcnNlcicsXG4gICAgICAgIHR5cGU6IExva2lRdWVyeVBhdHRlcm5UeXBlLkxvZyxcbiAgICAgICAgLy8ge30gfCBsb2dmbXQgfCBfX2Vycm9yX189YGBcbiAgICAgICAgb3BlcmF0aW9uczogW1xuICAgICAgICAgIHsgaWQ6IExva2lPcGVyYXRpb25JZC5Mb2dmbXQsIHBhcmFtczogW10gfSxcbiAgICAgICAgICB7IGlkOiBMb2tpT3BlcmF0aW9uSWQuTGFiZWxGaWx0ZXJOb0Vycm9ycywgcGFyYW1zOiBbXSB9LFxuICAgICAgICBdLFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgbmFtZTogJ1BhcnNlIGxvZyBsaW5lcyB3aXRoIEpTT04gcGFyc2VyJyxcbiAgICAgICAgdHlwZTogTG9raVF1ZXJ5UGF0dGVyblR5cGUuTG9nLFxuICAgICAgICAvLyB7fSB8IGpzb24gfCBfX2Vycm9yX189YGBcbiAgICAgICAgb3BlcmF0aW9uczogW1xuICAgICAgICAgIHsgaWQ6IExva2lPcGVyYXRpb25JZC5Kc29uLCBwYXJhbXM6IFtdIH0sXG4gICAgICAgICAgeyBpZDogTG9raU9wZXJhdGlvbklkLkxhYmVsRmlsdGVyTm9FcnJvcnMsIHBhcmFtczogW10gfSxcbiAgICAgICAgXSxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIG5hbWU6ICdGaWx0ZXIgbG9nIGxpbmUgYW5kIHBhcnNlIHdpdGggbG9nZm10IHBhcnNlcicsXG4gICAgICAgIHR5cGU6IExva2lRdWVyeVBhdHRlcm5UeXBlLkxvZyxcbiAgICAgICAgLy8ge30gfD0gYGAgfCBsb2dmbXQgfCBfX2Vycm9yX189YGBcbiAgICAgICAgb3BlcmF0aW9uczogW1xuICAgICAgICAgIHsgaWQ6IExva2lPcGVyYXRpb25JZC5MaW5lQ29udGFpbnMsIHBhcmFtczogWycnXSB9LFxuICAgICAgICAgIHsgaWQ6IExva2lPcGVyYXRpb25JZC5Mb2dmbXQsIHBhcmFtczogW10gfSxcbiAgICAgICAgICB7IGlkOiBMb2tpT3BlcmF0aW9uSWQuTGFiZWxGaWx0ZXJOb0Vycm9ycywgcGFyYW1zOiBbXSB9LFxuICAgICAgICBdLFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgbmFtZTogJ0ZpbHRlciBsb2cgbGluZXMgYW5kIHBhcnNlIHdpdGgganNvbiBwYXJzZXInLFxuICAgICAgICB0eXBlOiBMb2tpUXVlcnlQYXR0ZXJuVHlwZS5Mb2csXG4gICAgICAgIC8vIHt9IHw9IGBgIHwganNvbiB8IF9fZXJyb3JfXz1gYFxuICAgICAgICBvcGVyYXRpb25zOiBbXG4gICAgICAgICAgeyBpZDogTG9raU9wZXJhdGlvbklkLkxpbmVDb250YWlucywgcGFyYW1zOiBbJyddIH0sXG4gICAgICAgICAgeyBpZDogTG9raU9wZXJhdGlvbklkLkpzb24sIHBhcmFtczogW10gfSxcbiAgICAgICAgICB7IGlkOiBMb2tpT3BlcmF0aW9uSWQuTGFiZWxGaWx0ZXJOb0Vycm9ycywgcGFyYW1zOiBbXSB9LFxuICAgICAgICBdLFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgbmFtZTogJ1BhcnNlIGxvZyBsaW5lIHdpdGggbG9nZm10IHBhcnNlciBhbmQgdXNlIGxhYmVsIGZpbHRlcicsXG4gICAgICAgIHR5cGU6IExva2lRdWVyeVBhdHRlcm5UeXBlLkxvZyxcbiAgICAgICAgLy8ge30gfD0gYGAgfCBsb2dmbXQgfCBfX2Vycm9yX189YGAgfCBsYWJlbD1gdmFsdWVgXG4gICAgICAgIG9wZXJhdGlvbnM6IFtcbiAgICAgICAgICB7IGlkOiBMb2tpT3BlcmF0aW9uSWQuTGluZUNvbnRhaW5zLCBwYXJhbXM6IFsnJ10gfSxcbiAgICAgICAgICB7IGlkOiBMb2tpT3BlcmF0aW9uSWQuTG9nZm10LCBwYXJhbXM6IFtdIH0sXG4gICAgICAgICAgeyBpZDogTG9raU9wZXJhdGlvbklkLkxhYmVsRmlsdGVyTm9FcnJvcnMsIHBhcmFtczogW10gfSxcbiAgICAgICAgICB7IGlkOiBMb2tpT3BlcmF0aW9uSWQuTGFiZWxGaWx0ZXIsIHBhcmFtczogWydsYWJlbCcsICc9JywgJ3ZhbHVlJ10gfSxcbiAgICAgICAgXSxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIG5hbWU6ICdQYXJzZSBsb2cgbGluZXMgd2l0aCBuZXN0ZWQganNvbicsXG4gICAgICAgIHR5cGU6IExva2lRdWVyeVBhdHRlcm5UeXBlLkxvZyxcbiAgICAgICAgLy8ge30gfD0gYGAgfCBqc29uIHwgbGluZV9mb3JtYXQgYHt7IC5tZXNzYWdlfX1gIHwganNvblxuICAgICAgICBvcGVyYXRpb25zOiBbXG4gICAgICAgICAgeyBpZDogTG9raU9wZXJhdGlvbklkLkxpbmVDb250YWlucywgcGFyYW1zOiBbJyddIH0sXG4gICAgICAgICAgeyBpZDogTG9raU9wZXJhdGlvbklkLkpzb24sIHBhcmFtczogW10gfSxcbiAgICAgICAgICB7IGlkOiBMb2tpT3BlcmF0aW9uSWQuTGFiZWxGaWx0ZXJOb0Vycm9ycywgcGFyYW1zOiBbXSB9LFxuICAgICAgICAgIHsgaWQ6IExva2lPcGVyYXRpb25JZC5MaW5lRm9ybWF0LCBwYXJhbXM6IFsne3subWVzc2FnZX19J10gfSxcbiAgICAgICAgICB7IGlkOiBMb2tpT3BlcmF0aW9uSWQuSnNvbiwgcGFyYW1zOiBbXSB9LFxuICAgICAgICAgIHsgaWQ6IExva2lPcGVyYXRpb25JZC5MYWJlbEZpbHRlck5vRXJyb3JzLCBwYXJhbXM6IFtdIH0sXG4gICAgICAgIF0sXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBuYW1lOiAnUmVmb3JtYXQgbG9nIGxpbmVzJyxcbiAgICAgICAgdHlwZTogTG9raVF1ZXJ5UGF0dGVyblR5cGUuTG9nLFxuICAgICAgICAvLyB7fSB8PSBgYCB8IGxvZ2ZtdCB8IGxpbmVfZm9ybWF0IGB7ey5tZXNzYWdlfX1gXG4gICAgICAgIG9wZXJhdGlvbnM6IFtcbiAgICAgICAgICB7IGlkOiBMb2tpT3BlcmF0aW9uSWQuTGluZUNvbnRhaW5zLCBwYXJhbXM6IFsnJ10gfSxcbiAgICAgICAgICB7IGlkOiBMb2tpT3BlcmF0aW9uSWQuTG9nZm10LCBwYXJhbXM6IFtdIH0sXG4gICAgICAgICAgeyBpZDogTG9raU9wZXJhdGlvbklkLkxhYmVsRmlsdGVyTm9FcnJvcnMsIHBhcmFtczogW10gfSxcbiAgICAgICAgICB7IGlkOiBMb2tpT3BlcmF0aW9uSWQuTGluZUZvcm1hdCwgcGFyYW1zOiBbJ3t7Lm1lc3NhZ2V9fSddIH0sXG4gICAgICAgIF0sXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBuYW1lOiAnUmVuYW1lIGx2bCBsYWJlbCB0byBsZXZlbCcsXG4gICAgICAgIHR5cGU6IExva2lRdWVyeVBhdHRlcm5UeXBlLkxvZyxcbiAgICAgICAgLy8ge30gfD0gYGAgfCBsb2dmbXQgfCBsYWJlbF9mb3JtYXQgbGV2ZWw9bHZsXG4gICAgICAgIG9wZXJhdGlvbnM6IFtcbiAgICAgICAgICB7IGlkOiBMb2tpT3BlcmF0aW9uSWQuTGluZUNvbnRhaW5zLCBwYXJhbXM6IFsnJ10gfSxcbiAgICAgICAgICB7IGlkOiBMb2tpT3BlcmF0aW9uSWQuTG9nZm10LCBwYXJhbXM6IFtdIH0sXG4gICAgICAgICAgeyBpZDogTG9raU9wZXJhdGlvbklkLkxhYmVsRmlsdGVyTm9FcnJvcnMsIHBhcmFtczogW10gfSxcbiAgICAgICAgICB7IGlkOiBMb2tpT3BlcmF0aW9uSWQuTGFiZWxGb3JtYXQsIHBhcmFtczogWydsdmwnLCAnbGV2ZWwnXSB9LFxuICAgICAgICBdLFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgbmFtZTogJ1F1ZXJ5IG9uIHZhbHVlIGluc2lkZSBhIGxvZyBsaW5lJyxcbiAgICAgICAgdHlwZTogTG9raVF1ZXJ5UGF0dGVyblR5cGUuTWV0cmljLFxuICAgICAgICAvLyBzdW0oc3VtX292ZXJfdGltZSh7IHwgbG9nZm10IHwgX19lcnJvcl9fPWBgIHwgdW53cmFwIHwgX19lcnJvcl9fPWBgIFskX19pbnRlcnZhbF0pKVxuICAgICAgICBvcGVyYXRpb25zOiBbXG4gICAgICAgICAgeyBpZDogTG9raU9wZXJhdGlvbklkLkxpbmVDb250YWlucywgcGFyYW1zOiBbJyddIH0sXG4gICAgICAgICAgeyBpZDogTG9raU9wZXJhdGlvbklkLkxvZ2ZtdCwgcGFyYW1zOiBbXSB9LFxuICAgICAgICAgIHsgaWQ6IExva2lPcGVyYXRpb25JZC5MYWJlbEZpbHRlck5vRXJyb3JzLCBwYXJhbXM6IFtdIH0sXG4gICAgICAgICAgeyBpZDogTG9raU9wZXJhdGlvbklkLlVud3JhcCwgcGFyYW1zOiBbJyddIH0sXG4gICAgICAgICAgeyBpZDogTG9raU9wZXJhdGlvbklkLkxhYmVsRmlsdGVyTm9FcnJvcnMsIHBhcmFtczogW10gfSxcbiAgICAgICAgICB7IGlkOiBMb2tpT3BlcmF0aW9uSWQuU3VtT3ZlclRpbWUsIHBhcmFtczogWyckX19pbnRlcnZhbCddIH0sXG4gICAgICAgICAgeyBpZDogTG9raU9wZXJhdGlvbklkLlN1bSwgcGFyYW1zOiBbXSB9LFxuICAgICAgICBdLFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgbmFtZTogJ1RvdGFsIHJlcXVlc3RzIHBlciBsYWJlbCBvZiBzdHJlYW1zJyxcbiAgICAgICAgdHlwZTogTG9raVF1ZXJ5UGF0dGVyblR5cGUuTWV0cmljLFxuICAgICAgICAvLyBzdW0gYnkoKSAoY291bnRfb3Zlcl90aW1lKHt9WyRfX2ludGVydmFsKVxuICAgICAgICBvcGVyYXRpb25zOiBbXG4gICAgICAgICAgeyBpZDogTG9raU9wZXJhdGlvbklkLkxpbmVDb250YWlucywgcGFyYW1zOiBbJyddIH0sXG4gICAgICAgICAgeyBpZDogTG9raU9wZXJhdGlvbklkLkNvdW50T3ZlclRpbWUsIHBhcmFtczogWyckX19pbnRlcnZhbCddIH0sXG4gICAgICAgICAgeyBpZDogTG9raU9wZXJhdGlvbklkLlN1bSwgcGFyYW1zOiBbXSB9LFxuICAgICAgICBdLFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgbmFtZTogJ1RvdGFsIHJlcXVlc3RzIHBlciBwYXJzZWQgbGFiZWwgb3IgbGFiZWwgb2Ygc3RyZWFtcycsXG4gICAgICAgIHR5cGU6IExva2lRdWVyeVBhdHRlcm5UeXBlLk1ldHJpYyxcbiAgICAgICAgLy8gc3VtIGJ5KCkgKGNvdW50X292ZXJfdGltZSh7fXwgbG9nZm10IHwgX19lcnJvcl9fPWBgIFskX19pbnRlcnZhbCkpXG4gICAgICAgIG9wZXJhdGlvbnM6IFtcbiAgICAgICAgICB7IGlkOiBMb2tpT3BlcmF0aW9uSWQuTGluZUNvbnRhaW5zLCBwYXJhbXM6IFsnJ10gfSxcbiAgICAgICAgICB7IGlkOiBMb2tpT3BlcmF0aW9uSWQuTG9nZm10LCBwYXJhbXM6IFtdIH0sXG4gICAgICAgICAgeyBpZDogTG9raU9wZXJhdGlvbklkLkxhYmVsRmlsdGVyTm9FcnJvcnMsIHBhcmFtczogW10gfSxcbiAgICAgICAgICB7IGlkOiBMb2tpT3BlcmF0aW9uSWQuQ291bnRPdmVyVGltZSwgcGFyYW1zOiBbJyRfX2ludGVydmFsJ10gfSxcbiAgICAgICAgICB7IGlkOiBMb2tpT3BlcmF0aW9uSWQuU3VtLCBwYXJhbXM6IFtdIH0sXG4gICAgICAgIF0sXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBuYW1lOiAnQnl0ZXMgdXNlZCBieSBhIGxvZyBzdHJlYW0nLFxuICAgICAgICB0eXBlOiBMb2tpUXVlcnlQYXR0ZXJuVHlwZS5NZXRyaWMsXG4gICAgICAgIC8vIGJ5dGVzX292ZXJfdGltZSh7fVskX19pbnRlcnZhbF0pXG4gICAgICAgIG9wZXJhdGlvbnM6IFtcbiAgICAgICAgICB7IGlkOiBMb2tpT3BlcmF0aW9uSWQuTGluZUNvbnRhaW5zLCBwYXJhbXM6IFsnJ10gfSxcbiAgICAgICAgICB7IGlkOiBMb2tpT3BlcmF0aW9uSWQuQnl0ZXNPdmVyVGltZSwgcGFyYW1zOiBbJyRfX2ludGVydmFsJ10gfSxcbiAgICAgICAgXSxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIG5hbWU6ICdDb3VudCBvZiBsb2cgbGluZXMgcGVyIHN0cmVhbScsXG4gICAgICAgIHR5cGU6IExva2lRdWVyeVBhdHRlcm5UeXBlLk1ldHJpYyxcbiAgICAgICAgLy8gY291bnRfb3Zlcl90aW1lKHt9WyRfX2ludGVydmFsXSlcbiAgICAgICAgb3BlcmF0aW9uczogW1xuICAgICAgICAgIHsgaWQ6IExva2lPcGVyYXRpb25JZC5MaW5lQ29udGFpbnMsIHBhcmFtczogWycnXSB9LFxuICAgICAgICAgIHsgaWQ6IExva2lPcGVyYXRpb25JZC5Db3VudE92ZXJUaW1lLCBwYXJhbXM6IFsnJF9faW50ZXJ2YWwnXSB9LFxuICAgICAgICBdLFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgbmFtZTogJ1RvcCBOIHJlc3VsdHMgYnkgbGFiZWwgb3IgcGFyc2VkIGxhYmVsJyxcbiAgICAgICAgdHlwZTogTG9raVF1ZXJ5UGF0dGVyblR5cGUuTWV0cmljLFxuICAgICAgICAvLyB0b3BrKDEwLCBzdW0gYnkgKCkgKGNvdW50X292ZXJfdGltZSh7fSB8IGxvZ2ZtdCB8IF9fZXJyb3JfXz1gYCBbJF9faW50ZXJ2YWxdKSkpXG4gICAgICAgIG9wZXJhdGlvbnM6IFtcbiAgICAgICAgICB7IGlkOiBMb2tpT3BlcmF0aW9uSWQuTG9nZm10LCBwYXJhbXM6IFtdIH0sXG4gICAgICAgICAgeyBpZDogTG9raU9wZXJhdGlvbklkLkxhYmVsRmlsdGVyTm9FcnJvcnMsIHBhcmFtczogW10gfSxcbiAgICAgICAgICB7IGlkOiBMb2tpT3BlcmF0aW9uSWQuQ291bnRPdmVyVGltZSwgcGFyYW1zOiBbJyRfX2ludGVydmFsJ10gfSxcbiAgICAgICAgICB7IGlkOiBMb2tpT3BlcmF0aW9uSWQuU3VtLCBwYXJhbXM6IFtdIH0sXG4gICAgICAgICAgeyBpZDogTG9raU9wZXJhdGlvbklkLlRvcEssIHBhcmFtczogWzEwXSB9LFxuICAgICAgICBdLFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgbmFtZTogJ0V4dHJhY3RlZCBxdWFudGlsZScsXG4gICAgICAgIHR5cGU6IExva2lRdWVyeVBhdHRlcm5UeXBlLk1ldHJpYyxcbiAgICAgICAgLy8gcXVhbnRpbGVfb3Zlcl90aW1lKDAuNSx7fSB8IGxvZ2ZtdCB8IHVud3JhcCBsYXRlbmN5WyRfX2ludGVydmFsXSkgYnkgKClcbiAgICAgICAgb3BlcmF0aW9uczogW1xuICAgICAgICAgIHsgaWQ6IExva2lPcGVyYXRpb25JZC5Mb2dmbXQsIHBhcmFtczogW10gfSxcbiAgICAgICAgICB7IGlkOiBMb2tpT3BlcmF0aW9uSWQuTGFiZWxGaWx0ZXJOb0Vycm9ycywgcGFyYW1zOiBbXSB9LFxuICAgICAgICAgIHsgaWQ6IExva2lPcGVyYXRpb25JZC5VbndyYXAsIHBhcmFtczogWydsYXRlbmN5J10gfSxcbiAgICAgICAgICB7IGlkOiBMb2tpT3BlcmF0aW9uSWQuTGFiZWxGaWx0ZXJOb0Vycm9ycywgcGFyYW1zOiBbXSB9LFxuICAgICAgICAgIHsgaWQ6IExva2lPcGVyYXRpb25JZC5RdWFudGlsZU92ZXJUaW1lLCBwYXJhbXM6IFsnJF9faW50ZXJ2YWwnLCAwLjVdIH0sXG4gICAgICAgICAgeyBpZDogTG9raU9wZXJhdGlvbklkLlN1bSwgcGFyYW1zOiBbXSB9LFxuICAgICAgICBdLFxuICAgICAgfSxcbiAgICBdO1xuICB9XG59XG5cbmV4cG9ydCBjb25zdCBsb2tpUXVlcnlNb2RlbGxlciA9IG5ldyBMb2tpUXVlcnlNb2RlbGxlcigpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/querybuilder/LokiQueryModeller.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/querybuilder/binaryScalarOperations.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   binaryScalarDefs: () => (/* binding */ binaryScalarDefs),\n/* harmony export */   binaryScalarOperations: () => (/* binding */ binaryScalarOperations)\n/* harmony export */ });\n/* harmony import */ var _prometheus_querybuilder_shared_operationUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./public/app/plugins/datasource/prometheus/querybuilder/shared/operationUtils.ts\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/plugins/datasource/loki/querybuilder/types.ts\");\n\n\n\nconst binaryScalarDefs = [\n  {\n    id: _types__WEBPACK_IMPORTED_MODULE_1__.LokiOperationId.Addition,\n    name: \"Add scalar\",\n    sign: \"+\"\n  },\n  {\n    id: _types__WEBPACK_IMPORTED_MODULE_1__.LokiOperationId.Subtraction,\n    name: \"Subtract scalar\",\n    sign: \"-\"\n  },\n  {\n    id: _types__WEBPACK_IMPORTED_MODULE_1__.LokiOperationId.MultiplyBy,\n    name: \"Multiply by scalar\",\n    sign: \"*\"\n  },\n  {\n    id: _types__WEBPACK_IMPORTED_MODULE_1__.LokiOperationId.DivideBy,\n    name: \"Divide by scalar\",\n    sign: \"/\"\n  },\n  {\n    id: _types__WEBPACK_IMPORTED_MODULE_1__.LokiOperationId.Modulo,\n    name: \"Modulo by scalar\",\n    sign: \"%\"\n  },\n  {\n    id: _types__WEBPACK_IMPORTED_MODULE_1__.LokiOperationId.Exponent,\n    name: \"Exponent\",\n    sign: \"^\"\n  },\n  {\n    id: _types__WEBPACK_IMPORTED_MODULE_1__.LokiOperationId.EqualTo,\n    name: \"Equal to\",\n    sign: \"==\",\n    comparison: true\n  },\n  {\n    id: _types__WEBPACK_IMPORTED_MODULE_1__.LokiOperationId.NotEqualTo,\n    name: \"Not equal to\",\n    sign: \"!=\",\n    comparison: true\n  },\n  {\n    id: _types__WEBPACK_IMPORTED_MODULE_1__.LokiOperationId.GreaterThan,\n    name: \"Greater than\",\n    sign: \">\",\n    comparison: true\n  },\n  {\n    id: _types__WEBPACK_IMPORTED_MODULE_1__.LokiOperationId.LessThan,\n    name: \"Less than\",\n    sign: \"<\",\n    comparison: true\n  },\n  {\n    id: _types__WEBPACK_IMPORTED_MODULE_1__.LokiOperationId.GreaterOrEqual,\n    name: \"Greater or equal to\",\n    sign: \">=\",\n    comparison: true\n  },\n  {\n    id: _types__WEBPACK_IMPORTED_MODULE_1__.LokiOperationId.LessOrEqual,\n    name: \"Less or equal to\",\n    sign: \"<=\",\n    comparison: true\n  }\n];\nconst binaryScalarOperations = binaryScalarDefs.map((opDef) => {\n  const params = [{ name: \"Value\", type: \"number\" }];\n  const defaultParams = [2];\n  if (opDef.comparison) {\n    params.unshift({\n      name: \"Bool\",\n      type: \"boolean\",\n      description: \"If checked comparison will return 0 or 1 for the value rather than filtering.\"\n    });\n    defaultParams.unshift(false);\n  }\n  return {\n    id: opDef.id,\n    name: opDef.name,\n    params,\n    defaultParams,\n    alternativesKey: \"binary scalar operations\",\n    category: _types__WEBPACK_IMPORTED_MODULE_1__.LokiVisualQueryOperationCategory.BinaryOps,\n    renderer: getSimpleBinaryRenderer(opDef.sign),\n    addOperationHandler: _prometheus_querybuilder_shared_operationUtils__WEBPACK_IMPORTED_MODULE_0__.defaultAddOperationHandler\n  };\n});\nfunction getSimpleBinaryRenderer(operator) {\n  return function binaryRenderer(model, def, innerExpr) {\n    let param = model.params[0];\n    let bool = \"\";\n    if (model.params.length === 2) {\n      param = model.params[1];\n      bool = model.params[0] ? \" bool\" : \"\";\n    }\n    return `${innerExpr} ${operator}${bool} ${param}`;\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL3F1ZXJ5YnVpbGRlci9iaW5hcnlTY2FsYXJPcGVyYXRpb25zLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQTJDO0FBT3VCO0FBRTNELE1BQU0sbUJBQW1CO0FBQUEsRUFDOUI7QUFBQSxJQUNFLElBQUksbURBQWUsQ0FBQztBQUFBLElBQ3BCLE1BQU07QUFBQSxJQUNOLE1BQU07QUFBQSxFQUNSO0FBQUEsRUFDQTtBQUFBLElBQ0UsSUFBSSxtREFBZSxDQUFDO0FBQUEsSUFDcEIsTUFBTTtBQUFBLElBQ04sTUFBTTtBQUFBLEVBQ1I7QUFBQSxFQUNBO0FBQUEsSUFDRSxJQUFJLG1EQUFlLENBQUM7QUFBQSxJQUNwQixNQUFNO0FBQUEsSUFDTixNQUFNO0FBQUEsRUFDUjtBQUFBLEVBQ0E7QUFBQSxJQUNFLElBQUksbURBQWUsQ0FBQztBQUFBLElBQ3BCLE1BQU07QUFBQSxJQUNOLE1BQU07QUFBQSxFQUNSO0FBQUEsRUFDQTtBQUFBLElBQ0UsSUFBSSxtREFBZSxDQUFDO0FBQUEsSUFDcEIsTUFBTTtBQUFBLElBQ04sTUFBTTtBQUFBLEVBQ1I7QUFBQSxFQUNBO0FBQUEsSUFDRSxJQUFJLG1EQUFlLENBQUM7QUFBQSxJQUNwQixNQUFNO0FBQUEsSUFDTixNQUFNO0FBQUEsRUFDUjtBQUFBLEVBQ0E7QUFBQSxJQUNFLElBQUksbURBQWUsQ0FBQztBQUFBLElBQ3BCLE1BQU07QUFBQSxJQUNOLE1BQU07QUFBQSxJQUNOLFlBQVk7QUFBQSxFQUNkO0FBQUEsRUFDQTtBQUFBLElBQ0UsSUFBSSxtREFBZSxDQUFDO0FBQUEsSUFDcEIsTUFBTTtBQUFBLElBQ04sTUFBTTtBQUFBLElBQ04sWUFBWTtBQUFBLEVBQ2Q7QUFBQSxFQUNBO0FBQUEsSUFDRSxJQUFJLG1EQUFlLENBQUM7QUFBQSxJQUNwQixNQUFNO0FBQUEsSUFDTixNQUFNO0FBQUEsSUFDTixZQUFZO0FBQUEsRUFDZDtBQUFBLEVBQ0E7QUFBQSxJQUNFLElBQUksbURBQWUsQ0FBQztBQUFBLElBQ3BCLE1BQU07QUFBQSxJQUNOLE1BQU07QUFBQSxJQUNOLFlBQVk7QUFBQSxFQUNkO0FBQUEsRUFDQTtBQUFBLElBQ0UsSUFBSSxtREFBZSxDQUFDO0FBQUEsSUFDcEIsTUFBTTtBQUFBLElBQ04sTUFBTTtBQUFBLElBQ04sWUFBWTtBQUFBLEVBQ2Q7QUFBQSxFQUNBO0FBQUEsSUFDRSxJQUFJLG1EQUFlLENBQUM7QUFBQSxJQUNwQixNQUFNO0FBQUEsSUFDTixNQUFNO0FBQUEsSUFDTixZQUFZO0FBQUEsRUFDZDtBQUNGO0FBSU8sTUFBTSx5QkFBcUQsaUJBQWlCLElBQUksQ0FBQyxVQUFVO0FBQ2hHLFFBQU0sU0FBMEMsQ0FBQyxFQUFFLE1BQU0sU0FBUyxNQUFNLFNBQVMsQ0FBQztBQUNsRixRQUFNLGdCQUF1QixDQUFDLENBQUM7QUFDL0IsTUFBSSxNQUFNLFlBQVk7QUFDcEIsV0FBTyxRQUFRO0FBQUEsTUFDYixNQUFNO0FBQUEsTUFDTixNQUFNO0FBQUEsTUFDTixhQUFhO0FBQUEsSUFDZixDQUFDO0FBQ0Qsa0JBQWMsUUFBUSxLQUFLO0FBQUEsRUFDN0I7QUFFQSxTQUFPO0FBQUEsSUFDTCxJQUFJLE1BQU07QUFBQSxJQUNWLE1BQU0sTUFBTTtBQUFBLElBQ1o7QUFBQSxJQUNBO0FBQUEsSUFDQSxpQkFBaUI7QUFBQSxJQUNqQixVQUFVLG9FQUFnQyxDQUFDO0FBQUEsSUFDM0MsVUFBVSx3QkFBd0IsTUFBTSxJQUFJO0FBQUEsSUFDNUMscUJBQXFCLHNHQUEwQjtBQUExQixFQUN2QjtBQUNGLENBQUM7QUFFRCxTQUFTLHdCQUF3QixVQUFrQjtBQUNqRCxTQUFPLFNBQVMsZUFBZSxPQUE4QixLQUErQixXQUFtQjtBQUM3RyxRQUFJLFFBQVEsTUFBTSxPQUFPLENBQUM7QUFDMUIsUUFBSSxPQUFPO0FBQ1gsUUFBSSxNQUFNLE9BQU8sV0FBVyxHQUFHO0FBQzdCLGNBQVEsTUFBTSxPQUFPLENBQUM7QUFDdEIsYUFBTyxNQUFNLE9BQU8sQ0FBQyxJQUFJLFVBQVU7QUFBQSxJQUNyQztBQUVBLFdBQU8sR0FBRyxhQUFhLFdBQVcsUUFBUTtBQUFBLEVBQzVDO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ncmFmYW5hLy4vcHVibGljL2FwcC9wbHVnaW5zL2RhdGFzb3VyY2UvbG9raS9xdWVyeWJ1aWxkZXIvYmluYXJ5U2NhbGFyT3BlcmF0aW9ucy50cz9lN2QxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGRlZmF1bHRBZGRPcGVyYXRpb25IYW5kbGVyIH0gZnJvbSAnLi4vLi4vcHJvbWV0aGV1cy9xdWVyeWJ1aWxkZXIvc2hhcmVkL29wZXJhdGlvblV0aWxzJztcbmltcG9ydCB7XG4gIFF1ZXJ5QnVpbGRlck9wZXJhdGlvbixcbiAgUXVlcnlCdWlsZGVyT3BlcmF0aW9uRGVmLFxuICBRdWVyeUJ1aWxkZXJPcGVyYXRpb25QYXJhbURlZixcbn0gZnJvbSAnLi4vLi4vcHJvbWV0aGV1cy9xdWVyeWJ1aWxkZXIvc2hhcmVkL3R5cGVzJztcblxuaW1wb3J0IHsgTG9raU9wZXJhdGlvbklkLCBMb2tpVmlzdWFsUXVlcnlPcGVyYXRpb25DYXRlZ29yeSB9IGZyb20gJy4vdHlwZXMnO1xuXG5leHBvcnQgY29uc3QgYmluYXJ5U2NhbGFyRGVmcyA9IFtcbiAge1xuICAgIGlkOiBMb2tpT3BlcmF0aW9uSWQuQWRkaXRpb24sXG4gICAgbmFtZTogJ0FkZCBzY2FsYXInLFxuICAgIHNpZ246ICcrJyxcbiAgfSxcbiAge1xuICAgIGlkOiBMb2tpT3BlcmF0aW9uSWQuU3VidHJhY3Rpb24sXG4gICAgbmFtZTogJ1N1YnRyYWN0IHNjYWxhcicsXG4gICAgc2lnbjogJy0nLFxuICB9LFxuICB7XG4gICAgaWQ6IExva2lPcGVyYXRpb25JZC5NdWx0aXBseUJ5LFxuICAgIG5hbWU6ICdNdWx0aXBseSBieSBzY2FsYXInLFxuICAgIHNpZ246ICcqJyxcbiAgfSxcbiAge1xuICAgIGlkOiBMb2tpT3BlcmF0aW9uSWQuRGl2aWRlQnksXG4gICAgbmFtZTogJ0RpdmlkZSBieSBzY2FsYXInLFxuICAgIHNpZ246ICcvJyxcbiAgfSxcbiAge1xuICAgIGlkOiBMb2tpT3BlcmF0aW9uSWQuTW9kdWxvLFxuICAgIG5hbWU6ICdNb2R1bG8gYnkgc2NhbGFyJyxcbiAgICBzaWduOiAnJScsXG4gIH0sXG4gIHtcbiAgICBpZDogTG9raU9wZXJhdGlvbklkLkV4cG9uZW50LFxuICAgIG5hbWU6ICdFeHBvbmVudCcsXG4gICAgc2lnbjogJ14nLFxuICB9LFxuICB7XG4gICAgaWQ6IExva2lPcGVyYXRpb25JZC5FcXVhbFRvLFxuICAgIG5hbWU6ICdFcXVhbCB0bycsXG4gICAgc2lnbjogJz09JyxcbiAgICBjb21wYXJpc29uOiB0cnVlLFxuICB9LFxuICB7XG4gICAgaWQ6IExva2lPcGVyYXRpb25JZC5Ob3RFcXVhbFRvLFxuICAgIG5hbWU6ICdOb3QgZXF1YWwgdG8nLFxuICAgIHNpZ246ICchPScsXG4gICAgY29tcGFyaXNvbjogdHJ1ZSxcbiAgfSxcbiAge1xuICAgIGlkOiBMb2tpT3BlcmF0aW9uSWQuR3JlYXRlclRoYW4sXG4gICAgbmFtZTogJ0dyZWF0ZXIgdGhhbicsXG4gICAgc2lnbjogJz4nLFxuICAgIGNvbXBhcmlzb246IHRydWUsXG4gIH0sXG4gIHtcbiAgICBpZDogTG9raU9wZXJhdGlvbklkLkxlc3NUaGFuLFxuICAgIG5hbWU6ICdMZXNzIHRoYW4nLFxuICAgIHNpZ246ICc8JyxcbiAgICBjb21wYXJpc29uOiB0cnVlLFxuICB9LFxuICB7XG4gICAgaWQ6IExva2lPcGVyYXRpb25JZC5HcmVhdGVyT3JFcXVhbCxcbiAgICBuYW1lOiAnR3JlYXRlciBvciBlcXVhbCB0bycsXG4gICAgc2lnbjogJz49JyxcbiAgICBjb21wYXJpc29uOiB0cnVlLFxuICB9LFxuICB7XG4gICAgaWQ6IExva2lPcGVyYXRpb25JZC5MZXNzT3JFcXVhbCxcbiAgICBuYW1lOiAnTGVzcyBvciBlcXVhbCB0bycsXG4gICAgc2lnbjogJzw9JyxcbiAgICBjb21wYXJpc29uOiB0cnVlLFxuICB9LFxuXTtcblxuLy8gTm90IHN1cmUgYWJvdXQgdGhpcyBvbmUuIEl0IGNvdWxkIGFsc28gYmUgYSBtb3JlIGdlbmVyaWMgJ1NpbXBsZSBtYXRoIG9wZXJhdGlvbicgd2hlcmUgdXNlciBzcGVjaWZpZXNcbi8vIGJvdGggdGhlIG9wZXJhdG9yIGFuZCB0aGUgb3BlcmFuZCBpbiBhIHNpbmdsZSBpbnB1dFxuZXhwb3J0IGNvbnN0IGJpbmFyeVNjYWxhck9wZXJhdGlvbnM6IFF1ZXJ5QnVpbGRlck9wZXJhdGlvbkRlZltdID0gYmluYXJ5U2NhbGFyRGVmcy5tYXAoKG9wRGVmKSA9PiB7XG4gIGNvbnN0IHBhcmFtczogUXVlcnlCdWlsZGVyT3BlcmF0aW9uUGFyYW1EZWZbXSA9IFt7IG5hbWU6ICdWYWx1ZScsIHR5cGU6ICdudW1iZXInIH1dO1xuICBjb25zdCBkZWZhdWx0UGFyYW1zOiBhbnlbXSA9IFsyXTtcbiAgaWYgKG9wRGVmLmNvbXBhcmlzb24pIHtcbiAgICBwYXJhbXMudW5zaGlmdCh7XG4gICAgICBuYW1lOiAnQm9vbCcsXG4gICAgICB0eXBlOiAnYm9vbGVhbicsXG4gICAgICBkZXNjcmlwdGlvbjogJ0lmIGNoZWNrZWQgY29tcGFyaXNvbiB3aWxsIHJldHVybiAwIG9yIDEgZm9yIHRoZSB2YWx1ZSByYXRoZXIgdGhhbiBmaWx0ZXJpbmcuJyxcbiAgICB9KTtcbiAgICBkZWZhdWx0UGFyYW1zLnVuc2hpZnQoZmFsc2UpO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBpZDogb3BEZWYuaWQsXG4gICAgbmFtZTogb3BEZWYubmFtZSxcbiAgICBwYXJhbXMsXG4gICAgZGVmYXVsdFBhcmFtcyxcbiAgICBhbHRlcm5hdGl2ZXNLZXk6ICdiaW5hcnkgc2NhbGFyIG9wZXJhdGlvbnMnLFxuICAgIGNhdGVnb3J5OiBMb2tpVmlzdWFsUXVlcnlPcGVyYXRpb25DYXRlZ29yeS5CaW5hcnlPcHMsXG4gICAgcmVuZGVyZXI6IGdldFNpbXBsZUJpbmFyeVJlbmRlcmVyKG9wRGVmLnNpZ24pLFxuICAgIGFkZE9wZXJhdGlvbkhhbmRsZXI6IGRlZmF1bHRBZGRPcGVyYXRpb25IYW5kbGVyLFxuICB9O1xufSk7XG5cbmZ1bmN0aW9uIGdldFNpbXBsZUJpbmFyeVJlbmRlcmVyKG9wZXJhdG9yOiBzdHJpbmcpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGJpbmFyeVJlbmRlcmVyKG1vZGVsOiBRdWVyeUJ1aWxkZXJPcGVyYXRpb24sIGRlZjogUXVlcnlCdWlsZGVyT3BlcmF0aW9uRGVmLCBpbm5lckV4cHI6IHN0cmluZykge1xuICAgIGxldCBwYXJhbSA9IG1vZGVsLnBhcmFtc1swXTtcbiAgICBsZXQgYm9vbCA9ICcnO1xuICAgIGlmIChtb2RlbC5wYXJhbXMubGVuZ3RoID09PSAyKSB7XG4gICAgICBwYXJhbSA9IG1vZGVsLnBhcmFtc1sxXTtcbiAgICAgIGJvb2wgPSBtb2RlbC5wYXJhbXNbMF0gPyAnIGJvb2wnIDogJyc7XG4gICAgfVxuXG4gICAgcmV0dXJuIGAke2lubmVyRXhwcn0gJHtvcGVyYXRvcn0ke2Jvb2x9ICR7cGFyYW19YDtcbiAgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/querybuilder/binaryScalarOperations.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/querybuilder/components/LabelBrowserModal.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LabelBrowserModal: () => (/* binding */ LabelBrowserModal)\n/* harmony export */ });\n/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/@emotion-css-npm-11.11.2-dbfa42cf83-1edea109df.zip/node_modules/@emotion/css/dist/emotion-css.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _grafana_runtime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-runtime-virtual-68c57d4c0c/1/packages/grafana-runtime/src/analytics/utils.ts\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/themes/ThemeContext.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Modal/Modal.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/LoadingPlaceholder/LoadingPlaceholder.tsx\");\n/* harmony import */ var app_core_components_LocalStorageValueProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/core/components/LocalStorageValueProvider/index.tsx\");\n/* harmony import */ var _components_LokiLabelBrowser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./public/app/plugins/datasource/loki/components/LokiLabelBrowser.tsx\");\n\n\n\n\n\n\n\nconst LabelBrowserModal = (props) => {\n  const { isOpen, onClose, datasource, app } = props;\n  const [labelsLoaded, setLabelsLoaded] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n  const [hasLogLabels, setHasLogLabels] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n  const LAST_USED_LABELS_KEY = \"grafana.datasources.loki.browser.labels\";\n  const styles = (0,_grafana_ui__WEBPACK_IMPORTED_MODULE_4__.useStyles2)(getStyles);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (!isOpen) {\n      return;\n    }\n    datasource.languageProvider.fetchLabels().then((labels) => {\n      setLabelsLoaded(true);\n      setHasLogLabels(labels.length > 0);\n    });\n  }, [datasource, isOpen]);\n  const changeQuery = (value) => {\n    const { query, onChange: onChange2, onRunQuery } = props;\n    const nextQuery = { ...query, expr: value };\n    onChange2(nextQuery);\n    onRunQuery();\n  };\n  const onChange = (selector) => {\n    changeQuery(selector);\n    onClose();\n  };\n  const reportInteractionAndClose = () => {\n    (0,_grafana_runtime__WEBPACK_IMPORTED_MODULE_5__.reportInteraction)(\"grafana_loki_label_browser_closed\", {\n      app,\n      closeType: \"modalClose\"\n    });\n    onClose();\n  };\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_6__.Modal, { isOpen, title: \"Label browser\", onDismiss: reportInteractionAndClose, className: styles.modal }, !labelsLoaded && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_7__.LoadingPlaceholder, { text: \"Loading labels...\" }), labelsLoaded && !hasLogLabels && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"p\", null, \"No labels found.\"), labelsLoaded && hasLogLabels && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(app_core_components_LocalStorageValueProvider__WEBPACK_IMPORTED_MODULE_2__.LocalStorageValueProvider, { storageKey: LAST_USED_LABELS_KEY, defaultValue: [] }, (lastUsedLabels, onLastUsedLabelsSave, onLastUsedLabelsDelete) => {\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n      _components_LokiLabelBrowser__WEBPACK_IMPORTED_MODULE_3__.LokiLabelBrowser,\n      {\n        languageProvider: datasource.languageProvider,\n        onChange,\n        lastUsedLabels,\n        storeLastUsedLabels: onLastUsedLabelsSave,\n        deleteLastUsedLabels: onLastUsedLabelsDelete,\n        app\n      }\n    );\n  }));\n};\nconst getStyles = (theme) => {\n  return {\n    modal: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n      width: 85vw;\n      ${theme.breakpoints.down(\"md\")} {\n        width: 100%;\n      }\n    `\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL3F1ZXJ5YnVpbGRlci9jb21wb25lbnRzL0xhYmVsQnJvd3Nlck1vZGFsLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFvQjtBQUN1QjtBQUdUO0FBQ29CO0FBQ1o7QUFFVDtBQWMxQixNQUFNLG9CQUFvQixDQUFDLFVBQWlCO0FBQ2pELFFBQU0sRUFBRSxRQUFRLFNBQVMsWUFBWSxJQUFJLElBQUk7QUFDN0MsUUFBTSxDQUFDLGNBQWMsZUFBZSxJQUFJLCtDQUFRLENBQUMsS0FBSztBQUN0RCxRQUFNLENBQUMsY0FBYyxlQUFlLElBQUksK0NBQVEsQ0FBQyxLQUFLO0FBQ3RELFFBQU0sdUJBQXVCO0FBRTdCLFFBQU0sU0FBUyx1REFBVSxDQUFDLFNBQVM7QUFFbkMsa0RBQVMsQ0FBQyxNQUFNO0FBQ2QsUUFBSSxDQUFDLFFBQVE7QUFDWDtBQUFBLElBQ0Y7QUFFQSxlQUFXLGlCQUFpQixZQUFZLEVBQUUsS0FBSyxDQUFDLFdBQVc7QUFDekQsc0JBQWdCLElBQUk7QUFDcEIsc0JBQWdCLE9BQU8sU0FBUyxDQUFDO0FBQUEsSUFDbkMsQ0FBQztBQUFBLEVBQ0gsR0FBRyxDQUFDLFlBQVksTUFBTSxDQUFDO0FBRXZCLFFBQU0sY0FBYyxDQUFDLFVBQWtCO0FBQ3JDLFVBQU0sRUFBRSxPQUFPLFVBQUFBLFdBQVUsV0FBVyxJQUFJO0FBQ3hDLFVBQU0sWUFBWSxFQUFFLEdBQUcsT0FBTyxNQUFNLE1BQU07QUFDMUMsSUFBQUEsVUFBUyxTQUFTO0FBQ2xCLGVBQVc7QUFBQSxFQUNiO0FBRUEsUUFBTSxXQUFXLENBQUMsYUFBcUI7QUFDckMsZ0JBQVksUUFBUTtBQUNwQixZQUFRO0FBQUEsRUFDVjtBQUVBLFFBQU0sNEJBQTRCLE1BQU07QUFDdEMsdUVBQWlCLENBQUMscUNBQXFDO0FBQUEsTUFDckQ7QUFBQSxNQUNBLFdBQVc7QUFBQSxJQUNiLENBQUM7QUFDRCxZQUFRO0FBQUEsRUFDVjtBQUVBLFNBQ0UsMkVBQUMsOENBQUssSUFBQyxRQUFnQixPQUFNLGlCQUFnQixXQUFXLDJCQUEyQixXQUFXLE9BQU8sU0FDbEcsQ0FBQyxnQkFBZ0IsMkVBQUMsMkRBQWtCLElBQUMsTUFBSyxxQkFBb0IsR0FDOUQsZ0JBQWdCLENBQUMsZ0JBQWdCLDJFQUFDLFdBQUUsa0JBQWdCLEdBQ3BELGdCQUFnQixnQkFDZiwyRUFBQyxvR0FBeUIsSUFBVyxZQUFZLHNCQUFzQixjQUFjLENBQUMsS0FDbkYsQ0FBQyxnQkFBZ0Isc0JBQXNCLDJCQUEyQjtBQUNqRSxXQUNFO0FBQUEsTUFBQywwRUFBZ0I7QUFBaEI7QUFBQSxRQUNDLGtCQUFrQixXQUFXO0FBQUEsUUFDN0I7QUFBQSxRQUNBO0FBQUEsUUFDQSxxQkFBcUI7QUFBQSxRQUNyQixzQkFBc0I7QUFBQSxRQUN0QjtBQUFBO0FBQUEsSUFDRjtBQUFBLEVBRUosQ0FDRixDQUVKO0FBRUo7QUFFQSxNQUFNLFlBQVksQ0FBQyxVQUF5QjtBQUMxQyxTQUFPO0FBQUEsSUFDTCxPQUFPLGlEQUFHO0FBQUg7QUFBQSxRQUVILE1BQU0sWUFBWSxLQUFLLElBQUk7QUFBQTtBQUFBO0FBQUE7QUFBQSxFQUlqQztBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ3JhZmFuYS8uL3B1YmxpYy9hcHAvcGx1Z2lucy9kYXRhc291cmNlL2xva2kvcXVlcnlidWlsZGVyL2NvbXBvbmVudHMvTGFiZWxCcm93c2VyTW9kYWwudHN4PzkxYTgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vY3NzJztcbmltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgeyBDb3JlQXBwLCBHcmFmYW5hVGhlbWUyIH0gZnJvbSAnQGdyYWZhbmEvZGF0YSc7XG5pbXBvcnQgeyByZXBvcnRJbnRlcmFjdGlvbiB9IGZyb20gJ0BncmFmYW5hL3J1bnRpbWUnO1xuaW1wb3J0IHsgTG9hZGluZ1BsYWNlaG9sZGVyLCBNb2RhbCwgdXNlU3R5bGVzMiB9IGZyb20gJ0BncmFmYW5hL3VpJztcbmltcG9ydCB7IExvY2FsU3RvcmFnZVZhbHVlUHJvdmlkZXIgfSBmcm9tICdhcHAvY29yZS9jb21wb25lbnRzL0xvY2FsU3RvcmFnZVZhbHVlUHJvdmlkZXInO1xuXG5pbXBvcnQgeyBMb2tpTGFiZWxCcm93c2VyIH0gZnJvbSAnLi4vLi4vY29tcG9uZW50cy9Mb2tpTGFiZWxCcm93c2VyJztcbmltcG9ydCB7IExva2lEYXRhc291cmNlIH0gZnJvbSAnLi4vLi4vZGF0YXNvdXJjZSc7XG5pbXBvcnQgeyBMb2tpUXVlcnkgfSBmcm9tICcuLi8uLi90eXBlcyc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgUHJvcHMge1xuICBpc09wZW46IGJvb2xlYW47XG4gIGRhdGFzb3VyY2U6IExva2lEYXRhc291cmNlO1xuICBxdWVyeTogTG9raVF1ZXJ5O1xuICBhcHA/OiBDb3JlQXBwO1xuICBvbkNsb3NlOiAoKSA9PiB2b2lkO1xuICBvbkNoYW5nZTogKHF1ZXJ5OiBMb2tpUXVlcnkpID0+IHZvaWQ7XG4gIG9uUnVuUXVlcnk6ICgpID0+IHZvaWQ7XG59XG5cbmV4cG9ydCBjb25zdCBMYWJlbEJyb3dzZXJNb2RhbCA9IChwcm9wczogUHJvcHMpID0+IHtcbiAgY29uc3QgeyBpc09wZW4sIG9uQ2xvc2UsIGRhdGFzb3VyY2UsIGFwcCB9ID0gcHJvcHM7XG4gIGNvbnN0IFtsYWJlbHNMb2FkZWQsIHNldExhYmVsc0xvYWRlZF0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFtoYXNMb2dMYWJlbHMsIHNldEhhc0xvZ0xhYmVsc10gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IExBU1RfVVNFRF9MQUJFTFNfS0VZID0gJ2dyYWZhbmEuZGF0YXNvdXJjZXMubG9raS5icm93c2VyLmxhYmVscyc7XG5cbiAgY29uc3Qgc3R5bGVzID0gdXNlU3R5bGVzMihnZXRTdHlsZXMpO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKCFpc09wZW4pIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBkYXRhc291cmNlLmxhbmd1YWdlUHJvdmlkZXIuZmV0Y2hMYWJlbHMoKS50aGVuKChsYWJlbHMpID0+IHtcbiAgICAgIHNldExhYmVsc0xvYWRlZCh0cnVlKTtcbiAgICAgIHNldEhhc0xvZ0xhYmVscyhsYWJlbHMubGVuZ3RoID4gMCk7XG4gICAgfSk7XG4gIH0sIFtkYXRhc291cmNlLCBpc09wZW5dKTtcblxuICBjb25zdCBjaGFuZ2VRdWVyeSA9ICh2YWx1ZTogc3RyaW5nKSA9PiB7XG4gICAgY29uc3QgeyBxdWVyeSwgb25DaGFuZ2UsIG9uUnVuUXVlcnkgfSA9IHByb3BzO1xuICAgIGNvbnN0IG5leHRRdWVyeSA9IHsgLi4ucXVlcnksIGV4cHI6IHZhbHVlIH07XG4gICAgb25DaGFuZ2UobmV4dFF1ZXJ5KTtcbiAgICBvblJ1blF1ZXJ5KCk7XG4gIH07XG5cbiAgY29uc3Qgb25DaGFuZ2UgPSAoc2VsZWN0b3I6IHN0cmluZykgPT4ge1xuICAgIGNoYW5nZVF1ZXJ5KHNlbGVjdG9yKTtcbiAgICBvbkNsb3NlKCk7XG4gIH07XG5cbiAgY29uc3QgcmVwb3J0SW50ZXJhY3Rpb25BbmRDbG9zZSA9ICgpID0+IHtcbiAgICByZXBvcnRJbnRlcmFjdGlvbignZ3JhZmFuYV9sb2tpX2xhYmVsX2Jyb3dzZXJfY2xvc2VkJywge1xuICAgICAgYXBwLFxuICAgICAgY2xvc2VUeXBlOiAnbW9kYWxDbG9zZScsXG4gICAgfSk7XG4gICAgb25DbG9zZSgpO1xuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPE1vZGFsIGlzT3Blbj17aXNPcGVufSB0aXRsZT1cIkxhYmVsIGJyb3dzZXJcIiBvbkRpc21pc3M9e3JlcG9ydEludGVyYWN0aW9uQW5kQ2xvc2V9IGNsYXNzTmFtZT17c3R5bGVzLm1vZGFsfT5cbiAgICAgIHshbGFiZWxzTG9hZGVkICYmIDxMb2FkaW5nUGxhY2Vob2xkZXIgdGV4dD1cIkxvYWRpbmcgbGFiZWxzLi4uXCIgLz59XG4gICAgICB7bGFiZWxzTG9hZGVkICYmICFoYXNMb2dMYWJlbHMgJiYgPHA+Tm8gbGFiZWxzIGZvdW5kLjwvcD59XG4gICAgICB7bGFiZWxzTG9hZGVkICYmIGhhc0xvZ0xhYmVscyAmJiAoXG4gICAgICAgIDxMb2NhbFN0b3JhZ2VWYWx1ZVByb3ZpZGVyPHN0cmluZ1tdPiBzdG9yYWdlS2V5PXtMQVNUX1VTRURfTEFCRUxTX0tFWX0gZGVmYXVsdFZhbHVlPXtbXX0+XG4gICAgICAgICAgeyhsYXN0VXNlZExhYmVscywgb25MYXN0VXNlZExhYmVsc1NhdmUsIG9uTGFzdFVzZWRMYWJlbHNEZWxldGUpID0+IHtcbiAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgIDxMb2tpTGFiZWxCcm93c2VyXG4gICAgICAgICAgICAgICAgbGFuZ3VhZ2VQcm92aWRlcj17ZGF0YXNvdXJjZS5sYW5ndWFnZVByb3ZpZGVyfVxuICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtvbkNoYW5nZX1cbiAgICAgICAgICAgICAgICBsYXN0VXNlZExhYmVscz17bGFzdFVzZWRMYWJlbHN9XG4gICAgICAgICAgICAgICAgc3RvcmVMYXN0VXNlZExhYmVscz17b25MYXN0VXNlZExhYmVsc1NhdmV9XG4gICAgICAgICAgICAgICAgZGVsZXRlTGFzdFVzZWRMYWJlbHM9e29uTGFzdFVzZWRMYWJlbHNEZWxldGV9XG4gICAgICAgICAgICAgICAgYXBwPXthcHB9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICApO1xuICAgICAgICAgIH19XG4gICAgICAgIDwvTG9jYWxTdG9yYWdlVmFsdWVQcm92aWRlcj5cbiAgICAgICl9XG4gICAgPC9Nb2RhbD5cbiAgKTtcbn07XG5cbmNvbnN0IGdldFN0eWxlcyA9ICh0aGVtZTogR3JhZmFuYVRoZW1lMikgPT4ge1xuICByZXR1cm4ge1xuICAgIG1vZGFsOiBjc3NgXG4gICAgICB3aWR0aDogODV2dztcbiAgICAgICR7dGhlbWUuYnJlYWtwb2ludHMuZG93bignbWQnKX0ge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgIH1cbiAgICBgLFxuICB9O1xufTtcbiJdLCJuYW1lcyI6WyJvbkNoYW5nZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/querybuilder/components/LabelBrowserModal.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/querybuilder/components/LokiQueryBuilder.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LokiQueryBuilder: () => (/* binding */ LokiQueryBuilder)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/types/data.ts\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/types/time.ts\");\n/* harmony import */ var _grafana_experimental__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-experimental-virtual-ba767552fe/0/cache/@grafana-experimental-npm-1.6.1-f052d2ae51-64c32bc9e3.zip/node_modules/@grafana/experimental/dist/esm/QueryEditor/EditorRow.js\");\n/* harmony import */ var app_plugins_datasource_prometheus_querybuilder_shared_LabelFilters__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/plugins/datasource/prometheus/querybuilder/shared/LabelFilters.tsx\");\n/* harmony import */ var app_plugins_datasource_prometheus_querybuilder_shared_OperationExplainedBox__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/plugins/datasource/prometheus/querybuilder/shared/OperationExplainedBox.tsx\");\n/* harmony import */ var app_plugins_datasource_prometheus_querybuilder_shared_OperationList__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./public/app/plugins/datasource/prometheus/querybuilder/shared/OperationList.tsx\");\n/* harmony import */ var app_plugins_datasource_prometheus_querybuilder_shared_OperationListExplained__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./public/app/plugins/datasource/prometheus/querybuilder/shared/OperationListExplained.tsx\");\n/* harmony import */ var app_plugins_datasource_prometheus_querybuilder_shared_OperationsEditorRow__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./public/app/plugins/datasource/prometheus/querybuilder/shared/OperationsEditorRow.tsx\");\n/* harmony import */ var app_plugins_datasource_prometheus_querybuilder_shared_QueryBuilderHints__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./public/app/plugins/datasource/prometheus/querybuilder/shared/QueryBuilderHints.tsx\");\n/* harmony import */ var app_plugins_datasource_prometheus_querybuilder_shared_RawQuery__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\"./public/app/plugins/datasource/prometheus/querybuilder/shared/RawQuery.tsx\");\n/* harmony import */ var _components_LokiQueryEditor__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(\"./public/app/plugins/datasource/loki/components/LokiQueryEditor.tsx\");\n/* harmony import */ var _languageUtils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(\"./public/app/plugins/datasource/loki/languageUtils.ts\");\n/* harmony import */ var _syntax__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(\"./public/app/plugins/datasource/loki/syntax.ts\");\n/* harmony import */ var _LokiQueryModeller__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(\"./public/app/plugins/datasource/loki/querybuilder/LokiQueryModeller.ts\");\n/* harmony import */ var _parsing__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(\"./public/app/plugins/datasource/loki/querybuilder/parsing.ts\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(\"./public/app/plugins/datasource/loki/querybuilder/types.ts\");\n/* harmony import */ var _LokiQueryBuilderExplained__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(\"./public/app/plugins/datasource/loki/querybuilder/components/LokiQueryBuilderExplained.tsx\");\n/* harmony import */ var _NestedQueryList__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(\"./public/app/plugins/datasource/loki/querybuilder/components/NestedQueryList.tsx\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst LokiQueryBuilder = react__WEBPACK_IMPORTED_MODULE_0___default().memo(({ datasource, query, onChange, onRunQuery, showExplain }) => {\n  const [sampleData, setSampleData] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)();\n  const [highlightedOp, setHighlightedOp] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(void 0);\n  const onChangeLabels = (labels) => {\n    onChange({ ...query, labels });\n  };\n  const withTemplateVariableOptions = async (optionsPromise) => {\n    const options = await optionsPromise;\n    return [...datasource.getVariables(), ...options].map((value) => ({ label: value, value }));\n  };\n  const onGetLabelNames = async (forLabel) => {\n    const labelsToConsider = query.labels.filter((x) => x !== forLabel);\n    if (labelsToConsider.length === 0) {\n      return await datasource.languageProvider.fetchLabels();\n    }\n    const expr = _LokiQueryModeller__WEBPACK_IMPORTED_MODULE_11__.lokiQueryModeller.renderLabels(labelsToConsider);\n    const series = await datasource.languageProvider.fetchSeriesLabels(expr);\n    const labelsNamesToConsider = labelsToConsider.map((l) => l.label);\n    const labelNames = Object.keys(series).filter((name) => !labelsNamesToConsider.includes(name)).sort();\n    return labelNames;\n  };\n  const onGetLabelValues = async (forLabel) => {\n    if (!forLabel.label) {\n      return [];\n    }\n    let values;\n    const labelsToConsider = query.labels.filter((x) => x !== forLabel);\n    if (labelsToConsider.length === 0) {\n      values = await datasource.languageProvider.fetchLabelValues(forLabel.label);\n    } else {\n      const expr = _LokiQueryModeller__WEBPACK_IMPORTED_MODULE_11__.lokiQueryModeller.renderLabels(labelsToConsider);\n      const result = await datasource.languageProvider.fetchSeriesLabels(expr);\n      values = result[datasource.interpolateString(forLabel.label)];\n    }\n    return values ? values.map((v) => (0,_languageUtils__WEBPACK_IMPORTED_MODULE_9__.escapeLabelValueInSelector)(v, forLabel.op)) : [];\n  };\n  const labelFilterRequired = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    const { labels, operations: op } = query;\n    if (!labels.length && op.length) {\n      if (op.length === 1 && op[0].id === _types__WEBPACK_IMPORTED_MODULE_13__.LokiOperationId.LineContains && op[0].params[0] === \"\") {\n        return false;\n      }\n      return true;\n    }\n    return false;\n  }, [query]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    const onGetSampleData = async () => {\n      const lokiQuery = { expr: _LokiQueryModeller__WEBPACK_IMPORTED_MODULE_11__.lokiQueryModeller.renderQuery(query), refId: \"data-samples\" };\n      const series = await datasource.getDataSamples(lokiQuery);\n      const sampleData2 = { series, state: _grafana_data__WEBPACK_IMPORTED_MODULE_16__.LoadingState.Done, timeRange: (0,_grafana_data__WEBPACK_IMPORTED_MODULE_17__.getDefaultTimeRange)() };\n      setSampleData(sampleData2);\n    };\n    onGetSampleData().catch(console.error);\n  }, [datasource, query]);\n  const lang = { grammar: _syntax__WEBPACK_IMPORTED_MODULE_10__[\"default\"], name: \"logql\" };\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", { \"data-testid\": _components_LokiQueryEditor__WEBPACK_IMPORTED_MODULE_8__.testIds.editor }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_grafana_experimental__WEBPACK_IMPORTED_MODULE_18__.EditorRow, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n    app_plugins_datasource_prometheus_querybuilder_shared_LabelFilters__WEBPACK_IMPORTED_MODULE_1__.LabelFilters,\n    {\n      onGetLabelNames: (forLabel) => withTemplateVariableOptions(onGetLabelNames(forLabel)),\n      onGetLabelValues: (forLabel) => withTemplateVariableOptions(onGetLabelValues(forLabel)),\n      labelsFilters: query.labels,\n      onChange: onChangeLabels,\n      labelFilterRequired\n    }\n  )), showExplain && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n    app_plugins_datasource_prometheus_querybuilder_shared_OperationExplainedBox__WEBPACK_IMPORTED_MODULE_2__.OperationExplainedBox,\n    {\n      stepNumber: 1,\n      title: /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(app_plugins_datasource_prometheus_querybuilder_shared_RawQuery__WEBPACK_IMPORTED_MODULE_7__.RawQuery, { query: `${_LokiQueryModeller__WEBPACK_IMPORTED_MODULE_11__.lokiQueryModeller.renderLabels(query.labels)}`, lang })\n    },\n    _LokiQueryBuilderExplained__WEBPACK_IMPORTED_MODULE_14__.EXPLAIN_LABEL_FILTER_CONTENT\n  ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(app_plugins_datasource_prometheus_querybuilder_shared_OperationsEditorRow__WEBPACK_IMPORTED_MODULE_5__.OperationsEditorRow, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n    app_plugins_datasource_prometheus_querybuilder_shared_OperationList__WEBPACK_IMPORTED_MODULE_3__.OperationList,\n    {\n      queryModeller: _LokiQueryModeller__WEBPACK_IMPORTED_MODULE_11__.lokiQueryModeller,\n      query,\n      onChange,\n      onRunQuery,\n      datasource,\n      highlightedOp\n    }\n  ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n    app_plugins_datasource_prometheus_querybuilder_shared_QueryBuilderHints__WEBPACK_IMPORTED_MODULE_6__.QueryBuilderHints,\n    {\n      datasource,\n      query,\n      onChange,\n      data: sampleData,\n      queryModeller: _LokiQueryModeller__WEBPACK_IMPORTED_MODULE_11__.lokiQueryModeller,\n      buildVisualQueryFromString: _parsing__WEBPACK_IMPORTED_MODULE_12__.buildVisualQueryFromString\n    }\n  )), showExplain && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n    app_plugins_datasource_prometheus_querybuilder_shared_OperationListExplained__WEBPACK_IMPORTED_MODULE_4__.OperationListExplained,\n    {\n      stepNumber: 2,\n      queryModeller: _LokiQueryModeller__WEBPACK_IMPORTED_MODULE_11__.lokiQueryModeller,\n      query,\n      lang,\n      onMouseEnter: (op) => {\n        setHighlightedOp(op);\n      },\n      onMouseLeave: () => {\n        setHighlightedOp(void 0);\n      }\n    }\n  ), query.binaryQueries && query.binaryQueries.length > 0 && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n    _NestedQueryList__WEBPACK_IMPORTED_MODULE_15__.NestedQueryList,\n    {\n      query,\n      datasource,\n      onChange,\n      onRunQuery,\n      showExplain\n    }\n  ));\n});\nLokiQueryBuilder.displayName = \"LokiQueryBuilder\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/querybuilder/components/LokiQueryBuilder.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/querybuilder/components/LokiQueryBuilderContainer.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LokiQueryBuilderContainer: () => (/* binding */ LokiQueryBuilderContainer)\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./.yarn/__virtual__/@reduxjs-toolkit-virtual-75570b104b/0/cache/@reduxjs-toolkit-npm-1.9.3-cbad5da1de-d965fc6197.zip/node_modules/@reduxjs/toolkit/dist/redux-toolkit.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _components_LokiQueryEditor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/plugins/datasource/loki/components/LokiQueryEditor.tsx\");\n/* harmony import */ var _LokiQueryModeller__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/plugins/datasource/loki/querybuilder/LokiQueryModeller.ts\");\n/* harmony import */ var _parsing__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./public/app/plugins/datasource/loki/querybuilder/parsing.ts\");\n/* harmony import */ var _LokiQueryBuilder__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./public/app/plugins/datasource/loki/querybuilder/components/LokiQueryBuilder.tsx\");\n/* harmony import */ var _QueryPreview__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./public/app/plugins/datasource/loki/querybuilder/components/QueryPreview.tsx\");\n\n\n\n\n\n\n\n\nfunction LokiQueryBuilderContainer(props) {\n  const { query, onChange, onRunQuery, datasource, showExplain } = props;\n  const [state, dispatch] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useReducer)(stateSlice.reducer, {\n    expr: query.expr,\n    // Use initial visual query only if query.expr is empty string\n    visQuery: query.expr === \"\" ? {\n      labels: [],\n      operations: [{ id: \"__line_contains\", params: [\"\"] }]\n    } : void 0\n  });\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    dispatch(exprChanged(query.expr));\n  }, [query.expr]);\n  const onVisQueryChange = (visQuery) => {\n    const expr = _LokiQueryModeller__WEBPACK_IMPORTED_MODULE_2__.lokiQueryModeller.renderQuery(visQuery);\n    dispatch(visualQueryChange({ visQuery, expr }));\n    onChange({ ...props.query, expr });\n  };\n  if (!state.visQuery) {\n    return null;\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n    _LokiQueryBuilder__WEBPACK_IMPORTED_MODULE_4__.LokiQueryBuilder,\n    {\n      query: state.visQuery,\n      datasource,\n      onChange: onVisQueryChange,\n      onRunQuery,\n      showExplain,\n      \"data-testid\": _components_LokiQueryEditor__WEBPACK_IMPORTED_MODULE_1__.testIds.editor\n    }\n  ), query.expr !== \"\" && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_QueryPreview__WEBPACK_IMPORTED_MODULE_5__.QueryPreview, { query: query.expr }));\n}\nconst initialState = { expr: \"\" };\nconst stateSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_6__.createSlice)({\n  name: \"loki-builder-container\",\n  initialState,\n  reducers: {\n    visualQueryChange: (state, action) => {\n      state.expr = action.payload.expr;\n      state.visQuery = action.payload.visQuery;\n    },\n    exprChanged: (state, action) => {\n      if (!state.visQuery || state.expr !== action.payload) {\n        state.expr = action.payload;\n        const parseResult = (0,_parsing__WEBPACK_IMPORTED_MODULE_3__.buildVisualQueryFromString)(action.payload);\n        state.visQuery = parseResult.query;\n      }\n    }\n  }\n});\nconst { visualQueryChange, exprChanged } = stateSlice.actions;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL3F1ZXJ5YnVpbGRlci9jb21wb25lbnRzL0xva2lRdWVyeUJ1aWxkZXJDb250YWluZXIudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBMkM7QUFDRTtBQUVyQjtBQUdVO0FBQ1M7QUFHVjtBQUNKO0FBa0J0QixTQUFTLDBCQUEwQixPQUFjO0FBQ3RELFFBQU0sRUFBRSxPQUFPLFVBQVUsWUFBWSxZQUFZLFlBQVksSUFBSTtBQUNqRSxRQUFNLENBQUMsT0FBTyxRQUFRLElBQUksaURBQVUsQ0FBQyxXQUFXLFNBQVM7QUFBQSxJQUN2RCxNQUFNLE1BQU07QUFBQTtBQUFBLElBRVosVUFDRSxNQUFNLFNBQVMsS0FDWDtBQUFBLE1BQ0UsUUFBUSxDQUFDO0FBQUEsTUFDVCxZQUFZLENBQUMsRUFBRSxJQUFJLG1CQUFtQixRQUFRLENBQUMsRUFBRSxFQUFFLENBQUM7QUFBQSxJQUN0RCxJQUNBO0FBQUEsRUFDUixDQUFDO0FBR0Qsa0RBQVMsQ0FBQyxNQUFNO0FBQ2QsYUFBUyxZQUFZLE1BQU0sSUFBSSxDQUFDO0FBQUEsRUFDbEMsR0FBRyxDQUFDLE1BQU0sSUFBSSxDQUFDO0FBRWYsUUFBTSxtQkFBbUIsQ0FBQyxhQUE4QjtBQUN0RCxVQUFNLE9BQU8saUVBQWlCLENBQUMsWUFBWSxRQUFRO0FBQ25ELGFBQVMsa0JBQWtCLEVBQUUsVUFBVSxLQUFLLENBQUMsQ0FBQztBQUM5QyxhQUFTLEVBQUUsR0FBRyxNQUFNLE9BQU8sS0FBVyxDQUFDO0FBQUEsRUFDekM7QUFFQSxNQUFJLENBQUMsTUFBTSxVQUFVO0FBQ25CLFdBQU87QUFBQSxFQUNUO0FBRUEsU0FDRSwwSUFDRTtBQUFBLElBQUMsK0RBQWdCO0FBQWhCO0FBQUEsTUFDQyxPQUFPLE1BQU07QUFBQSxNQUNiO0FBQUEsTUFDQSxVQUFVO0FBQUEsTUFDVjtBQUFBLE1BQ0E7QUFBQSxNQUNBLGVBQWEsZ0VBQU8sQ0FBQztBQUFBO0FBQUEsRUFDdkIsR0FDQyxNQUFNLFNBQVMsTUFBTSwyRUFBQyx1REFBWSxJQUFDLE9BQU8sTUFBTSxNQUFNLENBQ3pEO0FBRUo7QUFFQSxNQUFNLGVBQXNCLEVBQUUsTUFBTSxHQUFHO0FBRXZDLE1BQU0sYUFBYSw2REFBVyxDQUFDO0FBQUEsRUFDN0IsTUFBTTtBQUFBLEVBQ047QUFBQSxFQUNBLFVBQVU7QUFBQSxJQUNSLG1CQUFtQixDQUFDLE9BQU8sV0FBdUU7QUFDaEcsWUFBTSxPQUFPLE9BQU8sUUFBUTtBQUM1QixZQUFNLFdBQVcsT0FBTyxRQUFRO0FBQUEsSUFDbEM7QUFBQSxJQUNBLGFBQWEsQ0FBQyxPQUFPLFdBQWtDO0FBQ3JELFVBQUksQ0FBQyxNQUFNLFlBQVksTUFBTSxTQUFTLE9BQU8sU0FBUztBQUNwRCxjQUFNLE9BQU8sT0FBTztBQUNwQixjQUFNLGNBQWMsb0VBQTBCLENBQUMsT0FBTyxPQUFPO0FBQzdELGNBQU0sV0FBVyxZQUFZO0FBQUEsTUFDL0I7QUFBQSxJQUNGO0FBQUEsRUFDRjtBQUNGLENBQUM7QUFFRCxNQUFNLEVBQUUsbUJBQW1CLFlBQVksSUFBSSxXQUFXIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ3JhZmFuYS8uL3B1YmxpYy9hcHAvcGx1Z2lucy9kYXRhc291cmNlL2xva2kvcXVlcnlidWlsZGVyL2NvbXBvbmVudHMvTG9raVF1ZXJ5QnVpbGRlckNvbnRhaW5lci50c3g/OWQxOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVTbGljZSwgUGF5bG9hZEFjdGlvbiB9IGZyb20gJ0ByZWR1eGpzL3Rvb2xraXQnO1xuaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlUmVkdWNlciB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHsgdGVzdElkcyB9IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvTG9raVF1ZXJ5RWRpdG9yJztcbmltcG9ydCB7IExva2lEYXRhc291cmNlIH0gZnJvbSAnLi4vLi4vZGF0YXNvdXJjZSc7XG5pbXBvcnQgeyBMb2tpUXVlcnkgfSBmcm9tICcuLi8uLi90eXBlcyc7XG5pbXBvcnQgeyBsb2tpUXVlcnlNb2RlbGxlciB9IGZyb20gJy4uL0xva2lRdWVyeU1vZGVsbGVyJztcbmltcG9ydCB7IGJ1aWxkVmlzdWFsUXVlcnlGcm9tU3RyaW5nIH0gZnJvbSAnLi4vcGFyc2luZyc7XG5pbXBvcnQgeyBMb2tpVmlzdWFsUXVlcnkgfSBmcm9tICcuLi90eXBlcyc7XG5cbmltcG9ydCB7IExva2lRdWVyeUJ1aWxkZXIgfSBmcm9tICcuL0xva2lRdWVyeUJ1aWxkZXInO1xuaW1wb3J0IHsgUXVlcnlQcmV2aWV3IH0gZnJvbSAnLi9RdWVyeVByZXZpZXcnO1xuXG5leHBvcnQgaW50ZXJmYWNlIFByb3BzIHtcbiAgcXVlcnk6IExva2lRdWVyeTtcbiAgZGF0YXNvdXJjZTogTG9raURhdGFzb3VyY2U7XG4gIG9uQ2hhbmdlOiAodXBkYXRlOiBMb2tpUXVlcnkpID0+IHZvaWQ7XG4gIG9uUnVuUXVlcnk6ICgpID0+IHZvaWQ7XG4gIHNob3dFeHBsYWluOiBib29sZWFuO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFN0YXRlIHtcbiAgdmlzUXVlcnk/OiBMb2tpVmlzdWFsUXVlcnk7XG4gIGV4cHI6IHN0cmluZztcbn1cblxuLyoqXG4gKiBUaGlzIGNvbXBvbmVudCBpcyBoZXJlIGp1c3QgdG8gY29udGFpbiB0aGUgdHJhbnNsYXRpb24gbG9naWMgYmV0d2VlbiBzdHJpbmcgcXVlcnkgYW5kIHRoZSB2aXN1YWwgcXVlcnkgYnVpbGRlciBtb2RlbC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIExva2lRdWVyeUJ1aWxkZXJDb250YWluZXIocHJvcHM6IFByb3BzKSB7XG4gIGNvbnN0IHsgcXVlcnksIG9uQ2hhbmdlLCBvblJ1blF1ZXJ5LCBkYXRhc291cmNlLCBzaG93RXhwbGFpbiB9ID0gcHJvcHM7XG4gIGNvbnN0IFtzdGF0ZSwgZGlzcGF0Y2hdID0gdXNlUmVkdWNlcihzdGF0ZVNsaWNlLnJlZHVjZXIsIHtcbiAgICBleHByOiBxdWVyeS5leHByLFxuICAgIC8vIFVzZSBpbml0aWFsIHZpc3VhbCBxdWVyeSBvbmx5IGlmIHF1ZXJ5LmV4cHIgaXMgZW1wdHkgc3RyaW5nXG4gICAgdmlzUXVlcnk6XG4gICAgICBxdWVyeS5leHByID09PSAnJ1xuICAgICAgICA/IHtcbiAgICAgICAgICAgIGxhYmVsczogW10sXG4gICAgICAgICAgICBvcGVyYXRpb25zOiBbeyBpZDogJ19fbGluZV9jb250YWlucycsIHBhcmFtczogWycnXSB9XSxcbiAgICAgICAgICB9XG4gICAgICAgIDogdW5kZWZpbmVkLFxuICB9KTtcblxuICAvLyBPbmx5IHJlYnVpbGQgdmlzdWFsIHF1ZXJ5IGlmIGV4cHIgY2hhbmdlcyBmcm9tIG91dHNpZGVcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBkaXNwYXRjaChleHByQ2hhbmdlZChxdWVyeS5leHByKSk7XG4gIH0sIFtxdWVyeS5leHByXSk7XG5cbiAgY29uc3Qgb25WaXNRdWVyeUNoYW5nZSA9ICh2aXNRdWVyeTogTG9raVZpc3VhbFF1ZXJ5KSA9PiB7XG4gICAgY29uc3QgZXhwciA9IGxva2lRdWVyeU1vZGVsbGVyLnJlbmRlclF1ZXJ5KHZpc1F1ZXJ5KTtcbiAgICBkaXNwYXRjaCh2aXN1YWxRdWVyeUNoYW5nZSh7IHZpc1F1ZXJ5LCBleHByIH0pKTtcbiAgICBvbkNoYW5nZSh7IC4uLnByb3BzLnF1ZXJ5LCBleHByOiBleHByIH0pO1xuICB9O1xuXG4gIGlmICghc3RhdGUudmlzUXVlcnkpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxMb2tpUXVlcnlCdWlsZGVyXG4gICAgICAgIHF1ZXJ5PXtzdGF0ZS52aXNRdWVyeX1cbiAgICAgICAgZGF0YXNvdXJjZT17ZGF0YXNvdXJjZX1cbiAgICAgICAgb25DaGFuZ2U9e29uVmlzUXVlcnlDaGFuZ2V9XG4gICAgICAgIG9uUnVuUXVlcnk9e29uUnVuUXVlcnl9XG4gICAgICAgIHNob3dFeHBsYWluPXtzaG93RXhwbGFpbn1cbiAgICAgICAgZGF0YS10ZXN0aWQ9e3Rlc3RJZHMuZWRpdG9yfVxuICAgICAgLz5cbiAgICAgIHtxdWVyeS5leHByICE9PSAnJyAmJiA8UXVlcnlQcmV2aWV3IHF1ZXJ5PXtxdWVyeS5leHByfSAvPn1cbiAgICA8Lz5cbiAgKTtcbn1cblxuY29uc3QgaW5pdGlhbFN0YXRlOiBTdGF0ZSA9IHsgZXhwcjogJycgfTtcblxuY29uc3Qgc3RhdGVTbGljZSA9IGNyZWF0ZVNsaWNlKHtcbiAgbmFtZTogJ2xva2ktYnVpbGRlci1jb250YWluZXInLFxuICBpbml0aWFsU3RhdGUsXG4gIHJlZHVjZXJzOiB7XG4gICAgdmlzdWFsUXVlcnlDaGFuZ2U6IChzdGF0ZSwgYWN0aW9uOiBQYXlsb2FkQWN0aW9uPHsgdmlzUXVlcnk6IExva2lWaXN1YWxRdWVyeTsgZXhwcjogc3RyaW5nIH0+KSA9PiB7XG4gICAgICBzdGF0ZS5leHByID0gYWN0aW9uLnBheWxvYWQuZXhwcjtcbiAgICAgIHN0YXRlLnZpc1F1ZXJ5ID0gYWN0aW9uLnBheWxvYWQudmlzUXVlcnk7XG4gICAgfSxcbiAgICBleHByQ2hhbmdlZDogKHN0YXRlLCBhY3Rpb246IFBheWxvYWRBY3Rpb248c3RyaW5nPikgPT4ge1xuICAgICAgaWYgKCFzdGF0ZS52aXNRdWVyeSB8fCBzdGF0ZS5leHByICE9PSBhY3Rpb24ucGF5bG9hZCkge1xuICAgICAgICBzdGF0ZS5leHByID0gYWN0aW9uLnBheWxvYWQ7XG4gICAgICAgIGNvbnN0IHBhcnNlUmVzdWx0ID0gYnVpbGRWaXN1YWxRdWVyeUZyb21TdHJpbmcoYWN0aW9uLnBheWxvYWQpO1xuICAgICAgICBzdGF0ZS52aXNRdWVyeSA9IHBhcnNlUmVzdWx0LnF1ZXJ5O1xuICAgICAgfVxuICAgIH0sXG4gIH0sXG59KTtcblxuY29uc3QgeyB2aXN1YWxRdWVyeUNoYW5nZSwgZXhwckNoYW5nZWQgfSA9IHN0YXRlU2xpY2UuYWN0aW9ucztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/querybuilder/components/LokiQueryBuilderContainer.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/querybuilder/components/LokiQueryBuilderExplained.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EXPLAIN_LABEL_FILTER_CONTENT: () => (/* binding */ EXPLAIN_LABEL_FILTER_CONTENT),\n/* harmony export */   LokiQueryBuilderExplained: () => (/* binding */ LokiQueryBuilderExplained)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _grafana_experimental__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-experimental-virtual-ba767552fe/0/cache/@grafana-experimental-npm-1.6.1-f052d2ae51-64c32bc9e3.zip/node_modules/@grafana/experimental/dist/esm/QueryEditor/Stack.js\");\n/* harmony import */ var app_plugins_datasource_prometheus_querybuilder_shared_OperationExplainedBox__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/plugins/datasource/prometheus/querybuilder/shared/OperationExplainedBox.tsx\");\n/* harmony import */ var app_plugins_datasource_prometheus_querybuilder_shared_OperationListExplained__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/plugins/datasource/prometheus/querybuilder/shared/OperationListExplained.tsx\");\n/* harmony import */ var app_plugins_datasource_prometheus_querybuilder_shared_RawQuery__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./public/app/plugins/datasource/prometheus/querybuilder/shared/RawQuery.tsx\");\n/* harmony import */ var _syntax__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./public/app/plugins/datasource/loki/syntax.ts\");\n/* harmony import */ var _LokiQueryModeller__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./public/app/plugins/datasource/loki/querybuilder/LokiQueryModeller.ts\");\n/* harmony import */ var _parsing__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./public/app/plugins/datasource/loki/querybuilder/parsing.ts\");\n\n\n\n\n\n\n\n\n\nconst EXPLAIN_LABEL_FILTER_CONTENT = \"Fetch all log lines matching label filters.\";\nconst LokiQueryBuilderExplained = react__WEBPACK_IMPORTED_MODULE_0___default().memo(({ query }) => {\n  const visQuery = (0,_parsing__WEBPACK_IMPORTED_MODULE_6__.buildVisualQueryFromString)(query || \"\").query;\n  const lang = { grammar: _syntax__WEBPACK_IMPORTED_MODULE_4__.lokiGrammar, name: \"lokiql\" };\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_grafana_experimental__WEBPACK_IMPORTED_MODULE_7__.Stack, { gap: 0, direction: \"column\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n    app_plugins_datasource_prometheus_querybuilder_shared_OperationExplainedBox__WEBPACK_IMPORTED_MODULE_1__.OperationExplainedBox,\n    {\n      stepNumber: 1,\n      title: /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(app_plugins_datasource_prometheus_querybuilder_shared_RawQuery__WEBPACK_IMPORTED_MODULE_3__.RawQuery, { query: `${_LokiQueryModeller__WEBPACK_IMPORTED_MODULE_5__.lokiQueryModeller.renderLabels(visQuery.labels)}`, lang })\n    },\n    EXPLAIN_LABEL_FILTER_CONTENT\n  ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n    app_plugins_datasource_prometheus_querybuilder_shared_OperationListExplained__WEBPACK_IMPORTED_MODULE_2__.OperationListExplained,\n    {\n      stepNumber: 2,\n      queryModeller: _LokiQueryModeller__WEBPACK_IMPORTED_MODULE_5__.lokiQueryModeller,\n      query: visQuery,\n      lang\n    }\n  ));\n});\nLokiQueryBuilderExplained.displayName = \"LokiQueryBuilderExplained\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL3F1ZXJ5YnVpbGRlci9jb21wb25lbnRzL0xva2lRdWVyeUJ1aWxkZXJFeHBsYWluZWQudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFrQjtBQUVJO0FBQ2dCO0FBQ0M7QUFDZDtBQUVHO0FBQ007QUFDUztBQUdwQyxNQUFNLCtCQUErQjtBQU1yQyxNQUFNLDRCQUE0QixpREFBVSxDQUFRLENBQUMsRUFBRSxNQUFNLE1BQU07QUFDeEUsUUFBTSxXQUFXLG9FQUEwQixDQUFDLFNBQVMsRUFBRSxFQUFFO0FBQ3pELFFBQU0sT0FBTyxFQUFFLFNBQVMsZ0RBQVcsRUFBRSxNQUFNLFNBQVM7QUFFcEQsU0FDRSwyRUFBQyx3REFBSyxJQUFDLEtBQUssR0FBRyxXQUFVLFlBQ3ZCO0FBQUEsSUFBQyw4SEFBcUI7QUFBckI7QUFBQSxNQUNDLFlBQVk7QUFBQSxNQUNaLE9BQU8sMkVBQUMsb0dBQVEsSUFBQyxPQUFPLEdBQUcsaUVBQWlCLENBQUMsYUFBYSxTQUFTLE1BQU0sS0FBSyxNQUFZO0FBQUE7QUFBQSxJQUV6RjtBQUFBLEVBQ0gsR0FDQTtBQUFBLElBQUMsZ0lBQXNCO0FBQXRCO0FBQUEsTUFDQyxZQUFZO0FBQUEsTUFDWixlQUFlLGlFQUFpQjtBQUFqQixNQUNmLE9BQU87QUFBQSxNQUNQO0FBQUE7QUFBQSxFQUNGLENBQ0Y7QUFFSixDQUFDO0FBRUQsMEJBQTBCLGNBQWMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ncmFmYW5hLy4vcHVibGljL2FwcC9wbHVnaW5zL2RhdGFzb3VyY2UvbG9raS9xdWVyeWJ1aWxkZXIvY29tcG9uZW50cy9Mb2tpUXVlcnlCdWlsZGVyRXhwbGFpbmVkLnRzeD8xODExIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB7IFN0YWNrIH0gZnJvbSAnQGdyYWZhbmEvZXhwZXJpbWVudGFsJztcbmltcG9ydCB7IE9wZXJhdGlvbkV4cGxhaW5lZEJveCB9IGZyb20gJ2FwcC9wbHVnaW5zL2RhdGFzb3VyY2UvcHJvbWV0aGV1cy9xdWVyeWJ1aWxkZXIvc2hhcmVkL09wZXJhdGlvbkV4cGxhaW5lZEJveCc7XG5pbXBvcnQgeyBPcGVyYXRpb25MaXN0RXhwbGFpbmVkIH0gZnJvbSAnYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9wcm9tZXRoZXVzL3F1ZXJ5YnVpbGRlci9zaGFyZWQvT3BlcmF0aW9uTGlzdEV4cGxhaW5lZCc7XG5pbXBvcnQgeyBSYXdRdWVyeSB9IGZyb20gJ2FwcC9wbHVnaW5zL2RhdGFzb3VyY2UvcHJvbWV0aGV1cy9xdWVyeWJ1aWxkZXIvc2hhcmVkL1Jhd1F1ZXJ5JztcblxuaW1wb3J0IHsgbG9raUdyYW1tYXIgfSBmcm9tICcuLi8uLi9zeW50YXgnO1xuaW1wb3J0IHsgbG9raVF1ZXJ5TW9kZWxsZXIgfSBmcm9tICcuLi9Mb2tpUXVlcnlNb2RlbGxlcic7XG5pbXBvcnQgeyBidWlsZFZpc3VhbFF1ZXJ5RnJvbVN0cmluZyB9IGZyb20gJy4uL3BhcnNpbmcnO1xuaW1wb3J0IHsgTG9raVZpc3VhbFF1ZXJ5IH0gZnJvbSAnLi4vdHlwZXMnO1xuXG5leHBvcnQgY29uc3QgRVhQTEFJTl9MQUJFTF9GSUxURVJfQ09OVEVOVCA9ICdGZXRjaCBhbGwgbG9nIGxpbmVzIG1hdGNoaW5nIGxhYmVsIGZpbHRlcnMuJztcblxuZXhwb3J0IGludGVyZmFjZSBQcm9wcyB7XG4gIHF1ZXJ5OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBjb25zdCBMb2tpUXVlcnlCdWlsZGVyRXhwbGFpbmVkID0gUmVhY3QubWVtbzxQcm9wcz4oKHsgcXVlcnkgfSkgPT4ge1xuICBjb25zdCB2aXNRdWVyeSA9IGJ1aWxkVmlzdWFsUXVlcnlGcm9tU3RyaW5nKHF1ZXJ5IHx8ICcnKS5xdWVyeTtcbiAgY29uc3QgbGFuZyA9IHsgZ3JhbW1hcjogbG9raUdyYW1tYXIsIG5hbWU6ICdsb2tpcWwnIH07XG5cbiAgcmV0dXJuIChcbiAgICA8U3RhY2sgZ2FwPXswfSBkaXJlY3Rpb249XCJjb2x1bW5cIj5cbiAgICAgIDxPcGVyYXRpb25FeHBsYWluZWRCb3hcbiAgICAgICAgc3RlcE51bWJlcj17MX1cbiAgICAgICAgdGl0bGU9ezxSYXdRdWVyeSBxdWVyeT17YCR7bG9raVF1ZXJ5TW9kZWxsZXIucmVuZGVyTGFiZWxzKHZpc1F1ZXJ5LmxhYmVscyl9YH0gbGFuZz17bGFuZ30gLz59XG4gICAgICA+XG4gICAgICAgIHtFWFBMQUlOX0xBQkVMX0ZJTFRFUl9DT05URU5UfVxuICAgICAgPC9PcGVyYXRpb25FeHBsYWluZWRCb3g+XG4gICAgICA8T3BlcmF0aW9uTGlzdEV4cGxhaW5lZDxMb2tpVmlzdWFsUXVlcnk+XG4gICAgICAgIHN0ZXBOdW1iZXI9ezJ9XG4gICAgICAgIHF1ZXJ5TW9kZWxsZXI9e2xva2lRdWVyeU1vZGVsbGVyfVxuICAgICAgICBxdWVyeT17dmlzUXVlcnl9XG4gICAgICAgIGxhbmc9e2xhbmd9XG4gICAgICAvPlxuICAgIDwvU3RhY2s+XG4gICk7XG59KTtcblxuTG9raVF1ZXJ5QnVpbGRlckV4cGxhaW5lZC5kaXNwbGF5TmFtZSA9ICdMb2tpUXVlcnlCdWlsZGVyRXhwbGFpbmVkJztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/querybuilder/components/LokiQueryBuilderExplained.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/querybuilder/components/LokiQueryBuilderOptions.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LokiQueryBuilderOptions: () => (/* binding */ LokiQueryBuilderOptions)\n/* harmony export */ });\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/lodash-npm-4.17.21-6382451519-eb835a2e51.zip/node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/datetime/durationutil.ts\");\n/* harmony import */ var _grafana_experimental__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-experimental-virtual-ba767552fe/0/cache/@grafana-experimental-npm-1.6.1-f052d2ae51-64c32bc9e3.zip/node_modules/@grafana/experimental/dist/esm/QueryEditor/EditorRow.js\");\n/* harmony import */ var _grafana_experimental__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-experimental-virtual-ba767552fe/0/cache/@grafana-experimental-npm-1.6.1-f052d2ae51-64c32bc9e3.zip/node_modules/@grafana/experimental/dist/esm/QueryEditor/EditorField.js\");\n/* harmony import */ var _grafana_runtime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-runtime-virtual-68c57d4c0c/1/packages/grafana-runtime/src/analytics/utils.ts\");\n/* harmony import */ var _grafana_runtime__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-runtime-virtual-68c57d4c0c/1/packages/grafana-runtime/src/config.ts\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Input/AutoSizeInput.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Forms/RadioButtonGroup/RadioButtonGroup.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Select/Select.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Alert/Alert.tsx\");\n/* harmony import */ var app_plugins_datasource_prometheus_querybuilder_shared_QueryOptionGroup__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/plugins/datasource/prometheus/querybuilder/shared/QueryOptionGroup.tsx\");\n/* harmony import */ var _components_LokiOptionFields__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./public/app/plugins/datasource/loki/components/LokiOptionFields.tsx\");\n/* harmony import */ var _queryUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./public/app/plugins/datasource/loki/queryUtils.ts\");\n\n\n\n\n\n\n\n\n\n\nconst LokiQueryBuilderOptions = react__WEBPACK_IMPORTED_MODULE_1___default().memo(\n  ({ app, query, onChange, onRunQuery, maxLines, queryStats }) => {\n    const [splitDurationValid, setSplitDurationValid] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const onQueryTypeChange = (value) => {\n      onChange({ ...query, queryType: value });\n      onRunQuery();\n    };\n    const onResolutionChange = (option) => {\n      (0,_grafana_runtime__WEBPACK_IMPORTED_MODULE_5__.reportInteraction)(\"grafana_loki_resolution_clicked\", {\n        app,\n        resolution: option.value\n      });\n      onChange({ ...query, resolution: option.value });\n      onRunQuery();\n    };\n    const onChunkRangeChange = (evt) => {\n      const value = evt.currentTarget.value;\n      if (!(0,_grafana_data__WEBPACK_IMPORTED_MODULE_6__.isValidDuration)(value)) {\n        setSplitDurationValid(false);\n        return;\n      }\n      setSplitDurationValid(true);\n      onChange({ ...query, splitDuration: value });\n      onRunQuery();\n    };\n    const onLegendFormatChanged = (evt) => {\n      onChange({ ...query, legendFormat: evt.currentTarget.value });\n      onRunQuery();\n    };\n    function onMaxLinesChange(e) {\n      const newMaxLines = (0,_components_LokiOptionFields__WEBPACK_IMPORTED_MODULE_3__.preprocessMaxLines)(e.currentTarget.value);\n      if (query.maxLines !== newMaxLines) {\n        onChange({ ...query, maxLines: newMaxLines });\n        onRunQuery();\n      }\n    }\n    function onStepChange(e) {\n      onChange({ ...query, step: (0,lodash__WEBPACK_IMPORTED_MODULE_0__.trim)(e.currentTarget.value) });\n      onRunQuery();\n    }\n    const queryType = (0,_queryUtils__WEBPACK_IMPORTED_MODULE_4__.getLokiQueryType)(query);\n    const isLogQuery = (0,_queryUtils__WEBPACK_IMPORTED_MODULE_4__.isLogsQuery)(query.expr);\n    const isValidStep = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => {\n      if (!query.step || (0,_grafana_data__WEBPACK_IMPORTED_MODULE_6__.isValidGrafanaDuration)(query.step) || !isNaN(Number(query.step))) {\n        return true;\n      }\n      return false;\n    }, [query.step]);\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_experimental__WEBPACK_IMPORTED_MODULE_7__.EditorRow, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n      app_plugins_datasource_prometheus_querybuilder_shared_QueryOptionGroup__WEBPACK_IMPORTED_MODULE_2__.QueryOptionGroup,\n      {\n        title: \"Options\",\n        collapsedInfo: getCollapsedInfo(query, queryType, maxLines, isLogQuery, isValidStep),\n        queryStats\n      },\n      /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n        _grafana_experimental__WEBPACK_IMPORTED_MODULE_8__.EditorField,\n        {\n          label: \"Legend\",\n          tooltip: \"Series name override or template. Ex. {{hostname}} will be replaced with label value for hostname.\"\n        },\n        /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n          _grafana_ui__WEBPACK_IMPORTED_MODULE_9__.AutoSizeInput,\n          {\n            placeholder: \"{{label}}\",\n            type: \"string\",\n            minWidth: 14,\n            defaultValue: query.legendFormat,\n            onCommitChange: onLegendFormatChanged\n          }\n        )\n      ),\n      /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_experimental__WEBPACK_IMPORTED_MODULE_8__.EditorField, { label: \"Type\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_10__.RadioButtonGroup, { options: _components_LokiOptionFields__WEBPACK_IMPORTED_MODULE_3__.queryTypeOptions, value: queryType, onChange: onQueryTypeChange })),\n      isLogQuery && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_experimental__WEBPACK_IMPORTED_MODULE_8__.EditorField, { label: \"Line limit\", tooltip: \"Upper limit for number of log lines returned by query.\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n        _grafana_ui__WEBPACK_IMPORTED_MODULE_9__.AutoSizeInput,\n        {\n          className: \"width-4\",\n          placeholder: maxLines.toString(),\n          type: \"number\",\n          min: 0,\n          defaultValue: query.maxLines?.toString() ?? \"\",\n          onCommitChange: onMaxLinesChange\n        }\n      )),\n      !isLogQuery && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement((react__WEBPACK_IMPORTED_MODULE_1___default().Fragment), null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n        _grafana_experimental__WEBPACK_IMPORTED_MODULE_8__.EditorField,\n        {\n          label: \"Step\",\n          tooltip: \"Use the step parameter when making metric queries to Loki. If not filled, Grafana's calculated interval will be used. Example valid values: 1s, 5m, 10h, 1d.\",\n          invalid: !isValidStep,\n          error: \"Invalid step. Example valid values: 1s, 5m, 10h, 1d.\"\n        },\n        /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n          _grafana_ui__WEBPACK_IMPORTED_MODULE_9__.AutoSizeInput,\n          {\n            className: \"width-6\",\n            placeholder: \"auto\",\n            type: \"string\",\n            defaultValue: query.step ?? \"\",\n            onCommitChange: onStepChange\n          }\n        )\n      ), query.resolution !== void 0 && query.resolution > 1 && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement((react__WEBPACK_IMPORTED_MODULE_1___default().Fragment), null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n        _grafana_experimental__WEBPACK_IMPORTED_MODULE_8__.EditorField,\n        {\n          label: \"Resolution\",\n          tooltip: \"Changes the step parameter of Loki metrics range queries. With a resolution of 1/1, each pixel corresponds to one data point. 1/10 retrieves one data point per 10 pixels. Lower resolutions perform better.\"\n        },\n        /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n          _grafana_ui__WEBPACK_IMPORTED_MODULE_11__.Select,\n          {\n            isSearchable: false,\n            onChange: onResolutionChange,\n            options: _components_LokiOptionFields__WEBPACK_IMPORTED_MODULE_3__.RESOLUTION_OPTIONS,\n            value: query.resolution || 1,\n            \"aria-label\": \"Select resolution\"\n          }\n        )\n      ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n        _grafana_ui__WEBPACK_IMPORTED_MODULE_12__.Alert,\n        {\n          severity: \"warning\",\n          title: \"The 'Resolution' is deprecated. Use 'Step' editor instead to change step parameter.\"\n        }\n      ))),\n      _grafana_runtime__WEBPACK_IMPORTED_MODULE_13__.config.featureToggles.lokiQuerySplittingConfig && _grafana_runtime__WEBPACK_IMPORTED_MODULE_13__.config.featureToggles.lokiQuerySplitting && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n        _grafana_experimental__WEBPACK_IMPORTED_MODULE_8__.EditorField,\n        {\n          label: \"Split Duration\",\n          tooltip: \"Defines the duration of a single query when query splitting is enabled.\"\n        },\n        /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n          _grafana_ui__WEBPACK_IMPORTED_MODULE_9__.AutoSizeInput,\n          {\n            minWidth: 14,\n            type: \"string\",\n            min: 0,\n            defaultValue: query.splitDuration ?? \"1d\",\n            onCommitChange: onChunkRangeChange,\n            invalid: !splitDurationValid\n          }\n        )\n      )\n    ));\n  }\n);\nfunction getCollapsedInfo(query, queryType, maxLines, isLogQuery, isValidStep) {\n  const queryTypeLabel = _components_LokiOptionFields__WEBPACK_IMPORTED_MODULE_3__.queryTypeOptions.find((x) => x.value === queryType);\n  const resolutionLabel = _components_LokiOptionFields__WEBPACK_IMPORTED_MODULE_3__.RESOLUTION_OPTIONS.find((x) => x.value === (query.resolution ?? 1));\n  const items = [];\n  if (query.legendFormat) {\n    items.push(`Legend: ${query.legendFormat}`);\n  }\n  items.push(`Type: ${queryTypeLabel?.label}`);\n  if (isLogQuery) {\n    items.push(`Line limit: ${query.maxLines ?? maxLines}`);\n  }\n  if (!isLogQuery) {\n    if (query.step) {\n      items.push(`Step: ${isValidStep ? query.step : \"Invalid value\"}`);\n    }\n    if (query.resolution) {\n      items.push(`Resolution: ${resolutionLabel?.label}`);\n    }\n  }\n  return items;\n}\nLokiQueryBuilderOptions.displayName = \"LokiQueryBuilderOptions\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/querybuilder/components/LokiQueryBuilderOptions.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/querybuilder/components/LokiQueryCodeEditor.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LokiQueryCodeEditor: () => (/* binding */ LokiQueryCodeEditor)\n/* harmony export */ });\n/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/@emotion-css-npm-11.11.2-dbfa42cf83-1edea109df.zip/node_modules/@emotion/css/dist/emotion-css.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _grafana_runtime__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-runtime-virtual-68c57d4c0c/1/packages/grafana-runtime/src/config.ts\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/themes/ThemeContext.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Layout/Layout.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/IconButton/IconButton.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Tooltip/Tooltip.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Icon/Icon.tsx\");\n/* harmony import */ var app_core_utils_browser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/core/utils/browser.ts\");\n/* harmony import */ var _components_LokiQueryEditor__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./public/app/plugins/datasource/loki/components/LokiQueryEditor.tsx\");\n/* harmony import */ var _components_LokiQueryField__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./public/app/plugins/datasource/loki/components/LokiQueryField.tsx\");\n/* harmony import */ var _components_stats__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./public/app/plugins/datasource/loki/components/stats.ts\");\n/* harmony import */ var _queryUtils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./public/app/plugins/datasource/loki/queryUtils.ts\");\n/* harmony import */ var _LokiQueryBuilderExplained__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\"./public/app/plugins/datasource/loki/querybuilder/components/LokiQueryBuilderExplained.tsx\");\n\n\n\n\n\n\n\n\n\n\n\nfunction LokiQueryCodeEditor({\n  query,\n  datasource,\n  range,\n  onRunQuery,\n  onChange,\n  data,\n  app,\n  showExplain,\n  history,\n  setQueryStats\n}) {\n  const styles = (0,_grafana_ui__WEBPACK_IMPORTED_MODULE_8__.useStyles2)(getStyles);\n  const lokiFormatQuery = _grafana_runtime__WEBPACK_IMPORTED_MODULE_9__.config.featureToggles.lokiFormatQuery;\n  const onClickFormatQueryButton = async () => onChange({ ...query, expr: (0,_queryUtils__WEBPACK_IMPORTED_MODULE_6__.formatLogqlQuery)(query.expr, datasource) });\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: styles.wrapper }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n    _components_LokiQueryField__WEBPACK_IMPORTED_MODULE_4__.LokiQueryField,\n    {\n      datasource,\n      query,\n      range,\n      onRunQuery,\n      onChange,\n      history,\n      data,\n      app,\n      \"data-testid\": _components_LokiQueryEditor__WEBPACK_IMPORTED_MODULE_3__.testIds.editor,\n      onQueryType: async (query2) => {\n        const stats = await (0,_components_stats__WEBPACK_IMPORTED_MODULE_5__.getStats)(datasource, query2);\n        setQueryStats(stats);\n      },\n      ExtraFieldElement: /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement((react__WEBPACK_IMPORTED_MODULE_1___default().Fragment), null, lokiFormatQuery && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: styles.buttonGroup }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_10__.HorizontalGroup, { spacing: \"sm\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n        _grafana_ui__WEBPACK_IMPORTED_MODULE_11__.IconButton,\n        {\n          onClick: onClickFormatQueryButton,\n          name: \"brackets-curly\",\n          size: \"xs\",\n          tooltip: \"Format query\"\n        }\n      ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_12__.Tooltip, { content: `Use ${(0,app_core_utils_browser__WEBPACK_IMPORTED_MODULE_2__.getModKey)()}+z to undo` }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_13__.Icon, { className: styles.hint, name: \"keyboard\" }))))))\n    }\n  ), showExplain && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_LokiQueryBuilderExplained__WEBPACK_IMPORTED_MODULE_7__.LokiQueryBuilderExplained, { query: query.expr }));\n}\nconst getStyles = (theme) => {\n  return {\n    wrapper: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n      max-width: 100%;\n      .gf-form {\n        margin-bottom: 0.5;\n      }\n    `,\n    buttonGroup: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n      border: 1px solid ${theme.colors.border.medium};\n      border-top: none;\n      padding: ${theme.spacing(0.5, 0.5, 0.5, 0.5)};\n      margin-bottom: ${theme.spacing(0.5)};\n      display: flex;\n      flex-grow: 1;\n      justify-content: end;\n      font-size: ${theme.typography.bodySmall.fontSize};\n    `,\n    hint: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n      color: ${theme.colors.text.disabled};\n      white-space: nowrap;\n      cursor: help;\n    `\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL3F1ZXJ5YnVpbGRlci9jb21wb25lbnRzL0xva2lRdWVyeUNvZGVFZGl0b3IudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQW9CO0FBQ0Y7QUFHSztBQUNnRDtBQUM3QztBQUVGO0FBQ087QUFDTjtBQUVRO0FBR1M7QUFPbkMsU0FBUyxvQkFBb0I7QUFBQSxFQUNsQztBQUFBLEVBQ0E7QUFBQSxFQUNBO0FBQUEsRUFDQTtBQUFBLEVBQ0E7QUFBQSxFQUNBO0FBQUEsRUFDQTtBQUFBLEVBQ0E7QUFBQSxFQUNBO0FBQUEsRUFDQTtBQUNGLEdBQVU7QUFDUixRQUFNLFNBQVMsdURBQVUsQ0FBQyxTQUFTO0FBRW5DLFFBQU0sa0JBQWtCLG9EQUFNLENBQUMsZUFBZTtBQUM5QyxRQUFNLDJCQUEyQixZQUFZLFNBQVMsRUFBRSxHQUFHLE9BQU8sTUFBTSw2REFBZ0IsQ0FBQyxNQUFNLE1BQU0sVUFBVSxFQUFFLENBQUM7QUFFbEgsU0FDRSwyRUFBQyxTQUFJLFdBQVcsT0FBTyxXQUNyQjtBQUFBLElBQUMsc0VBQWM7QUFBZDtBQUFBLE1BQ0M7QUFBQSxNQUNBO0FBQUEsTUFDQTtBQUFBLE1BQ0E7QUFBQSxNQUNBO0FBQUEsTUFDQTtBQUFBLE1BQ0E7QUFBQSxNQUNBO0FBQUEsTUFDQSxlQUFhLGdFQUFPLENBQUM7QUFBQSxNQUNyQixhQUFhLE9BQU9BLFdBQWtCO0FBQ3BDLGNBQU0sUUFBUSxNQUFNLDJEQUFRLENBQUMsWUFBWUEsTUFBSztBQUM5QyxzQkFBYyxLQUFLO0FBQUEsTUFDckI7QUFBQSxNQUNBLG1CQUNFLDBJQUNHLG1CQUNDLDJFQUFDLFNBQUksV0FBVyxPQUFPLGVBQ3JCLDJFQUFDLGFBQ0MsMkVBQUMseURBQWUsSUFBQyxTQUFRLFFBQ3ZCO0FBQUEsUUFBQyxvREFBVTtBQUFWO0FBQUEsVUFDQyxTQUFTO0FBQUEsVUFDVCxNQUFLO0FBQUEsVUFDTCxNQUFLO0FBQUEsVUFDTCxTQUFRO0FBQUE7QUFBQSxNQUNWLEdBQ0EsMkVBQUMsaURBQU8sSUFBQyxTQUFTLE9BQU8saUVBQVMsQ0FBQyxpQkFDakMsMkVBQUMsOENBQUksSUFBQyxXQUFXLE9BQU8sTUFBTSxNQUFLLFlBQVcsQ0FDaEQsQ0FDRixDQUNGLENBQ0YsQ0FFSjtBQUFBO0FBQUEsRUFFSixHQUNDLGVBQWUsMkVBQUMsaUZBQXlCLElBQUMsT0FBTyxNQUFNLE1BQU0sQ0FDaEU7QUFFSjtBQUVBLE1BQU0sWUFBWSxDQUFDLFVBQXlCO0FBQzFDLFNBQU87QUFBQSxJQUNMLFNBQVMsaURBQUc7QUFBSDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsSUFNVCxhQUFhLGlEQUFHO0FBQUgsMEJBQ1MsTUFBTSxPQUFPLE9BQU87QUFBQTtBQUFBLGlCQUU3QixNQUFNLFFBQVEsS0FBSyxLQUFLLEtBQUssR0FBRztBQUFBLHVCQUMxQixNQUFNLFFBQVEsR0FBRztBQUFBO0FBQUE7QUFBQTtBQUFBLG1CQUlyQixNQUFNLFdBQVcsVUFBVTtBQUFBO0FBQUEsSUFFMUMsTUFBTSxpREFBRztBQUFILGVBQ0ssTUFBTSxPQUFPLEtBQUs7QUFBQTtBQUFBO0FBQUE7QUFBQSxFQUkvQjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ3JhZmFuYS8uL3B1YmxpYy9hcHAvcGx1Z2lucy9kYXRhc291cmNlL2xva2kvcXVlcnlidWlsZGVyL2NvbXBvbmVudHMvTG9raVF1ZXJ5Q29kZUVkaXRvci50c3g/MWQ2NiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9jc3MnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHsgR3JhZmFuYVRoZW1lMiB9IGZyb20gJ0BncmFmYW5hL2RhdGEnO1xuaW1wb3J0IHsgY29uZmlnIH0gZnJvbSAnQGdyYWZhbmEvcnVudGltZSc7XG5pbXBvcnQgeyB1c2VTdHlsZXMyLCBIb3Jpem9udGFsR3JvdXAsIEljb25CdXR0b24sIFRvb2x0aXAsIEljb24gfSBmcm9tICdAZ3JhZmFuYS91aSc7XG5pbXBvcnQgeyBnZXRNb2RLZXkgfSBmcm9tICdhcHAvY29yZS91dGlscy9icm93c2VyJztcblxuaW1wb3J0IHsgdGVzdElkcyB9IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvTG9raVF1ZXJ5RWRpdG9yJztcbmltcG9ydCB7IExva2lRdWVyeUZpZWxkIH0gZnJvbSAnLi4vLi4vY29tcG9uZW50cy9Mb2tpUXVlcnlGaWVsZCc7XG5pbXBvcnQgeyBnZXRTdGF0cyB9IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvc3RhdHMnO1xuaW1wb3J0IHsgTG9raVF1ZXJ5RWRpdG9yUHJvcHMgfSBmcm9tICcuLi8uLi9jb21wb25lbnRzL3R5cGVzJztcbmltcG9ydCB7IGZvcm1hdExvZ3FsUXVlcnkgfSBmcm9tICcuLi8uLi9xdWVyeVV0aWxzJztcbmltcG9ydCB7IFF1ZXJ5U3RhdHMgfSBmcm9tICcuLi8uLi90eXBlcyc7XG5cbmltcG9ydCB7IExva2lRdWVyeUJ1aWxkZXJFeHBsYWluZWQgfSBmcm9tICcuL0xva2lRdWVyeUJ1aWxkZXJFeHBsYWluZWQnO1xuXG50eXBlIFByb3BzID0gTG9raVF1ZXJ5RWRpdG9yUHJvcHMgJiB7XG4gIHNob3dFeHBsYWluOiBib29sZWFuO1xuICBzZXRRdWVyeVN0YXRzOiBSZWFjdC5EaXNwYXRjaDxSZWFjdC5TZXRTdGF0ZUFjdGlvbjxRdWVyeVN0YXRzIHwgbnVsbD4+O1xufTtcblxuZXhwb3J0IGZ1bmN0aW9uIExva2lRdWVyeUNvZGVFZGl0b3Ioe1xuICBxdWVyeSxcbiAgZGF0YXNvdXJjZSxcbiAgcmFuZ2UsXG4gIG9uUnVuUXVlcnksXG4gIG9uQ2hhbmdlLFxuICBkYXRhLFxuICBhcHAsXG4gIHNob3dFeHBsYWluLFxuICBoaXN0b3J5LFxuICBzZXRRdWVyeVN0YXRzLFxufTogUHJvcHMpIHtcbiAgY29uc3Qgc3R5bGVzID0gdXNlU3R5bGVzMihnZXRTdHlsZXMpO1xuXG4gIGNvbnN0IGxva2lGb3JtYXRRdWVyeSA9IGNvbmZpZy5mZWF0dXJlVG9nZ2xlcy5sb2tpRm9ybWF0UXVlcnk7XG4gIGNvbnN0IG9uQ2xpY2tGb3JtYXRRdWVyeUJ1dHRvbiA9IGFzeW5jICgpID0+IG9uQ2hhbmdlKHsgLi4ucXVlcnksIGV4cHI6IGZvcm1hdExvZ3FsUXVlcnkocXVlcnkuZXhwciwgZGF0YXNvdXJjZSkgfSk7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLndyYXBwZXJ9PlxuICAgICAgPExva2lRdWVyeUZpZWxkXG4gICAgICAgIGRhdGFzb3VyY2U9e2RhdGFzb3VyY2V9XG4gICAgICAgIHF1ZXJ5PXtxdWVyeX1cbiAgICAgICAgcmFuZ2U9e3JhbmdlfVxuICAgICAgICBvblJ1blF1ZXJ5PXtvblJ1blF1ZXJ5fVxuICAgICAgICBvbkNoYW5nZT17b25DaGFuZ2V9XG4gICAgICAgIGhpc3Rvcnk9e2hpc3Rvcnl9XG4gICAgICAgIGRhdGE9e2RhdGF9XG4gICAgICAgIGFwcD17YXBwfVxuICAgICAgICBkYXRhLXRlc3RpZD17dGVzdElkcy5lZGl0b3J9XG4gICAgICAgIG9uUXVlcnlUeXBlPXthc3luYyAocXVlcnk6IHN0cmluZykgPT4ge1xuICAgICAgICAgIGNvbnN0IHN0YXRzID0gYXdhaXQgZ2V0U3RhdHMoZGF0YXNvdXJjZSwgcXVlcnkpO1xuICAgICAgICAgIHNldFF1ZXJ5U3RhdHMoc3RhdHMpO1xuICAgICAgICB9fVxuICAgICAgICBFeHRyYUZpZWxkRWxlbWVudD17XG4gICAgICAgICAgPD5cbiAgICAgICAgICAgIHtsb2tpRm9ybWF0UXVlcnkgJiYgKFxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmJ1dHRvbkdyb3VwfT5cbiAgICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgICAgPEhvcml6b250YWxHcm91cCBzcGFjaW5nPVwic21cIj5cbiAgICAgICAgICAgICAgICAgICAgPEljb25CdXR0b25cbiAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXtvbkNsaWNrRm9ybWF0UXVlcnlCdXR0b259XG4gICAgICAgICAgICAgICAgICAgICAgbmFtZT1cImJyYWNrZXRzLWN1cmx5XCJcbiAgICAgICAgICAgICAgICAgICAgICBzaXplPVwieHNcIlxuICAgICAgICAgICAgICAgICAgICAgIHRvb2x0aXA9XCJGb3JtYXQgcXVlcnlcIlxuICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICA8VG9vbHRpcCBjb250ZW50PXtgVXNlICR7Z2V0TW9kS2V5KCl9K3ogdG8gdW5kb2B9PlxuICAgICAgICAgICAgICAgICAgICAgIDxJY29uIGNsYXNzTmFtZT17c3R5bGVzLmhpbnR9IG5hbWU9XCJrZXlib2FyZFwiIC8+XG4gICAgICAgICAgICAgICAgICAgIDwvVG9vbHRpcD5cbiAgICAgICAgICAgICAgICAgIDwvSG9yaXpvbnRhbEdyb3VwPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICl9XG4gICAgICAgICAgPC8+XG4gICAgICAgIH1cbiAgICAgIC8+XG4gICAgICB7c2hvd0V4cGxhaW4gJiYgPExva2lRdWVyeUJ1aWxkZXJFeHBsYWluZWQgcXVlcnk9e3F1ZXJ5LmV4cHJ9IC8+fVxuICAgIDwvZGl2PlxuICApO1xufVxuXG5jb25zdCBnZXRTdHlsZXMgPSAodGhlbWU6IEdyYWZhbmFUaGVtZTIpID0+IHtcbiAgcmV0dXJuIHtcbiAgICB3cmFwcGVyOiBjc3NgXG4gICAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgICAuZ2YtZm9ybSB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDAuNTtcbiAgICAgIH1cbiAgICBgLFxuICAgIGJ1dHRvbkdyb3VwOiBjc3NgXG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAke3RoZW1lLmNvbG9ycy5ib3JkZXIubWVkaXVtfTtcbiAgICAgIGJvcmRlci10b3A6IG5vbmU7XG4gICAgICBwYWRkaW5nOiAke3RoZW1lLnNwYWNpbmcoMC41LCAwLjUsIDAuNSwgMC41KX07XG4gICAgICBtYXJnaW4tYm90dG9tOiAke3RoZW1lLnNwYWNpbmcoMC41KX07XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgZmxleC1ncm93OiAxO1xuICAgICAganVzdGlmeS1jb250ZW50OiBlbmQ7XG4gICAgICBmb250LXNpemU6ICR7dGhlbWUudHlwb2dyYXBoeS5ib2R5U21hbGwuZm9udFNpemV9O1xuICAgIGAsXG4gICAgaGludDogY3NzYFxuICAgICAgY29sb3I6ICR7dGhlbWUuY29sb3JzLnRleHQuZGlzYWJsZWR9O1xuICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICAgIGN1cnNvcjogaGVscDtcbiAgICBgLFxuICB9O1xufTtcbiJdLCJuYW1lcyI6WyJxdWVyeSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/querybuilder/components/LokiQueryCodeEditor.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/querybuilder/components/NestedQuery.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NestedQuery: () => (/* binding */ NestedQuery)\n/* harmony export */ });\n/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/@emotion-css-npm-11.11.2-dbfa42cf83-1edea109df.zip/node_modules/@emotion/css/dist/emotion-css.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/utils/selectUtils.ts\");\n/* harmony import */ var _grafana_experimental__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-experimental-virtual-ba767552fe/0/cache/@grafana-experimental-npm-1.6.1-f052d2ae51-64c32bc9e3.zip/node_modules/@grafana/experimental/dist/esm/QueryEditor/FlexItem.js\");\n/* harmony import */ var _grafana_experimental__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-experimental-virtual-ba767552fe/0/cache/@grafana-experimental-npm-1.6.1-f052d2ae51-64c32bc9e3.zip/node_modules/@grafana/experimental/dist/esm/QueryEditor/EditorRows.js\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/themes/ThemeContext.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Select/Select.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Input/AutoSizeInput.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/IconButton/IconButton.tsx\");\n/* harmony import */ var _binaryScalarOperations__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/plugins/datasource/loki/querybuilder/binaryScalarOperations.ts\");\n/* harmony import */ var _LokiQueryBuilder__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./public/app/plugins/datasource/loki/querybuilder/components/LokiQueryBuilder.tsx\");\n\n\n\n\n\n\n\n\nconst NestedQuery = react__WEBPACK_IMPORTED_MODULE_1___default().memo(\n  ({ nestedQuery, index, datasource, onChange, onRemove, onRunQuery, showExplain }) => {\n    const styles = (0,_grafana_ui__WEBPACK_IMPORTED_MODULE_4__.useStyles2)(getStyles);\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: styles.card }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: styles.header }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: styles.name }, \"Operator\"), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n      _grafana_ui__WEBPACK_IMPORTED_MODULE_5__.Select,\n      {\n        \"aria-label\": \"Select operator\",\n        width: \"auto\",\n        options: operators,\n        value: (0,_grafana_data__WEBPACK_IMPORTED_MODULE_6__.toOption)(nestedQuery.operator),\n        onChange: (value) => {\n          onChange(index, {\n            ...nestedQuery,\n            operator: value.value\n          });\n        }\n      }\n    ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: styles.name }, \"Vector matches\"), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: styles.vectorMatchWrapper }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n      _grafana_ui__WEBPACK_IMPORTED_MODULE_5__.Select,\n      {\n        width: \"auto\",\n        value: nestedQuery.vectorMatchesType || \"on\",\n        allowCustomValue: true,\n        options: [\n          { value: \"on\", label: \"on\" },\n          { value: \"ignoring\", label: \"ignoring\" }\n        ],\n        onChange: (val) => {\n          onChange(index, {\n            ...nestedQuery,\n            vectorMatchesType: val.value\n          });\n        }\n      }\n    ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n      _grafana_ui__WEBPACK_IMPORTED_MODULE_7__.AutoSizeInput,\n      {\n        className: styles.vectorMatchInput,\n        minWidth: 20,\n        defaultValue: nestedQuery.vectorMatches,\n        onCommitChange: (evt) => {\n          onChange(index, {\n            ...nestedQuery,\n            vectorMatches: evt.currentTarget.value,\n            vectorMatchesType: nestedQuery.vectorMatchesType || \"on\"\n          });\n        }\n      }\n    )), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_experimental__WEBPACK_IMPORTED_MODULE_8__.FlexItem, { grow: 1 }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_9__.IconButton, { name: \"times\", size: \"sm\", onClick: () => onRemove(index), tooltip: \"Remove nested query\" })), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: styles.body }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_experimental__WEBPACK_IMPORTED_MODULE_10__.EditorRows, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n      _LokiQueryBuilder__WEBPACK_IMPORTED_MODULE_3__.LokiQueryBuilder,\n      {\n        showExplain,\n        query: nestedQuery.query,\n        datasource,\n        onRunQuery,\n        onChange: (update) => {\n          onChange(index, { ...nestedQuery, query: update });\n        }\n      }\n    ))));\n  }\n);\nconst operators = _binaryScalarOperations__WEBPACK_IMPORTED_MODULE_2__.binaryScalarDefs.map((def) => ({ label: def.sign, value: def.sign }));\nNestedQuery.displayName = \"NestedQuery\";\nconst getStyles = (theme) => {\n  return {\n    card: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)({\n      label: \"card\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      gap: theme.spacing(0.5)\n    }),\n    header: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)({\n      label: \"header\",\n      padding: theme.spacing(0.5, 0.5, 0.5, 1),\n      gap: theme.spacing(1),\n      display: \"flex\",\n      alignItems: \"center\"\n    }),\n    name: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)({\n      label: \"name\",\n      whiteSpace: \"nowrap\"\n    }),\n    body: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)({\n      label: \"body\",\n      paddingLeft: theme.spacing(2)\n    }),\n    vectorMatchInput: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)({\n      label: \"vectorMatchInput\",\n      marginLeft: -1\n    }),\n    vectorMatchWrapper: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)({\n      label: \"vectorMatchWrapper\",\n      display: \"flex\"\n    })\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/querybuilder/components/NestedQuery.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/querybuilder/components/NestedQueryList.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NestedQueryList: () => (/* binding */ NestedQueryList)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _grafana_experimental__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-experimental-virtual-ba767552fe/0/cache/@grafana-experimental-npm-1.6.1-f052d2ae51-64c32bc9e3.zip/node_modules/@grafana/experimental/dist/esm/QueryEditor/Stack.js\");\n/* harmony import */ var _NestedQuery__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/plugins/datasource/loki/querybuilder/components/NestedQuery.tsx\");\n\n\n\n\nfunction NestedQueryList({ query, datasource, onChange, onRunQuery, showExplain }) {\n  const nestedQueries = query.binaryQueries ?? [];\n  const onNestedQueryUpdate = (index, update) => {\n    const updatedList = [...nestedQueries];\n    updatedList.splice(index, 1, update);\n    onChange({ ...query, binaryQueries: updatedList });\n  };\n  const onRemove = (index) => {\n    const updatedList = [...nestedQueries.slice(0, index), ...nestedQueries.slice(index + 1)];\n    onChange({ ...query, binaryQueries: updatedList });\n  };\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_grafana_experimental__WEBPACK_IMPORTED_MODULE_2__.Stack, { direction: \"column\", gap: 1 }, nestedQueries.map((nestedQuery, index) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n    _NestedQuery__WEBPACK_IMPORTED_MODULE_1__.NestedQuery,\n    {\n      key: index.toString(),\n      nestedQuery,\n      index,\n      onChange: onNestedQueryUpdate,\n      datasource,\n      onRemove,\n      onRunQuery,\n      showExplain\n    }\n  )));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL3F1ZXJ5YnVpbGRlci9jb21wb25lbnRzL05lc3RlZFF1ZXJ5TGlzdC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQWtCO0FBRUk7QUFLTTtBQVVyQixTQUFTLGdCQUFnQixFQUFFLE9BQU8sWUFBWSxVQUFVLFlBQVksWUFBWSxHQUFVO0FBQy9GLFFBQU0sZ0JBQWdCLE1BQU0saUJBQWlCLENBQUM7QUFFOUMsUUFBTSxzQkFBc0IsQ0FBQyxPQUFlLFdBQWtDO0FBQzVFLFVBQU0sY0FBYyxDQUFDLEdBQUcsYUFBYTtBQUNyQyxnQkFBWSxPQUFPLE9BQU8sR0FBRyxNQUFNO0FBQ25DLGFBQVMsRUFBRSxHQUFHLE9BQU8sZUFBZSxZQUFZLENBQUM7QUFBQSxFQUNuRDtBQUVBLFFBQU0sV0FBVyxDQUFDLFVBQWtCO0FBQ2xDLFVBQU0sY0FBYyxDQUFDLEdBQUcsY0FBYyxNQUFNLEdBQUcsS0FBSyxHQUFHLEdBQUcsY0FBYyxNQUFNLFFBQVEsQ0FBQyxDQUFDO0FBQ3hGLGFBQVMsRUFBRSxHQUFHLE9BQU8sZUFBZSxZQUFZLENBQUM7QUFBQSxFQUNuRDtBQUVBLFNBQ0UsMkVBQUMsd0RBQUssSUFBQyxXQUFVLFVBQVMsS0FBSyxLQUM1QixjQUFjLElBQUksQ0FBQyxhQUFhLFVBQy9CO0FBQUEsSUFBQyxxREFBVztBQUFYO0FBQUEsTUFDQyxLQUFLLE1BQU0sU0FBUztBQUFBLE1BQ3BCO0FBQUEsTUFDQTtBQUFBLE1BQ0EsVUFBVTtBQUFBLE1BQ1Y7QUFBQSxNQUNBO0FBQUEsTUFDQTtBQUFBLE1BQ0E7QUFBQTtBQUFBLEVBQ0YsQ0FDRCxDQUNIO0FBRUoiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ncmFmYW5hLy4vcHVibGljL2FwcC9wbHVnaW5zL2RhdGFzb3VyY2UvbG9raS9xdWVyeWJ1aWxkZXIvY29tcG9uZW50cy9OZXN0ZWRRdWVyeUxpc3QudHN4P2Y4YTUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHsgU3RhY2sgfSBmcm9tICdAZ3JhZmFuYS9leHBlcmltZW50YWwnO1xuXG5pbXBvcnQgeyBMb2tpRGF0YXNvdXJjZSB9IGZyb20gJy4uLy4uL2RhdGFzb3VyY2UnO1xuaW1wb3J0IHsgTG9raVZpc3VhbFF1ZXJ5LCBMb2tpVmlzdWFsUXVlcnlCaW5hcnkgfSBmcm9tICcuLi90eXBlcyc7XG5cbmltcG9ydCB7IE5lc3RlZFF1ZXJ5IH0gZnJvbSAnLi9OZXN0ZWRRdWVyeSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgUHJvcHMge1xuICBxdWVyeTogTG9raVZpc3VhbFF1ZXJ5O1xuICBkYXRhc291cmNlOiBMb2tpRGF0YXNvdXJjZTtcbiAgc2hvd0V4cGxhaW46IGJvb2xlYW47XG4gIG9uQ2hhbmdlOiAocXVlcnk6IExva2lWaXN1YWxRdWVyeSkgPT4gdm9pZDtcbiAgb25SdW5RdWVyeTogKCkgPT4gdm9pZDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIE5lc3RlZFF1ZXJ5TGlzdCh7IHF1ZXJ5LCBkYXRhc291cmNlLCBvbkNoYW5nZSwgb25SdW5RdWVyeSwgc2hvd0V4cGxhaW4gfTogUHJvcHMpIHtcbiAgY29uc3QgbmVzdGVkUXVlcmllcyA9IHF1ZXJ5LmJpbmFyeVF1ZXJpZXMgPz8gW107XG5cbiAgY29uc3Qgb25OZXN0ZWRRdWVyeVVwZGF0ZSA9IChpbmRleDogbnVtYmVyLCB1cGRhdGU6IExva2lWaXN1YWxRdWVyeUJpbmFyeSkgPT4ge1xuICAgIGNvbnN0IHVwZGF0ZWRMaXN0ID0gWy4uLm5lc3RlZFF1ZXJpZXNdO1xuICAgIHVwZGF0ZWRMaXN0LnNwbGljZShpbmRleCwgMSwgdXBkYXRlKTtcbiAgICBvbkNoYW5nZSh7IC4uLnF1ZXJ5LCBiaW5hcnlRdWVyaWVzOiB1cGRhdGVkTGlzdCB9KTtcbiAgfTtcblxuICBjb25zdCBvblJlbW92ZSA9IChpbmRleDogbnVtYmVyKSA9PiB7XG4gICAgY29uc3QgdXBkYXRlZExpc3QgPSBbLi4ubmVzdGVkUXVlcmllcy5zbGljZSgwLCBpbmRleCksIC4uLm5lc3RlZFF1ZXJpZXMuc2xpY2UoaW5kZXggKyAxKV07XG4gICAgb25DaGFuZ2UoeyAuLi5xdWVyeSwgYmluYXJ5UXVlcmllczogdXBkYXRlZExpc3QgfSk7XG4gIH07XG5cbiAgcmV0dXJuIChcbiAgICA8U3RhY2sgZGlyZWN0aW9uPVwiY29sdW1uXCIgZ2FwPXsxfT5cbiAgICAgIHtuZXN0ZWRRdWVyaWVzLm1hcCgobmVzdGVkUXVlcnksIGluZGV4KSA9PiAoXG4gICAgICAgIDxOZXN0ZWRRdWVyeVxuICAgICAgICAgIGtleT17aW5kZXgudG9TdHJpbmcoKX1cbiAgICAgICAgICBuZXN0ZWRRdWVyeT17bmVzdGVkUXVlcnl9XG4gICAgICAgICAgaW5kZXg9e2luZGV4fVxuICAgICAgICAgIG9uQ2hhbmdlPXtvbk5lc3RlZFF1ZXJ5VXBkYXRlfVxuICAgICAgICAgIGRhdGFzb3VyY2U9e2RhdGFzb3VyY2V9XG4gICAgICAgICAgb25SZW1vdmU9e29uUmVtb3ZlfVxuICAgICAgICAgIG9uUnVuUXVlcnk9e29uUnVuUXVlcnl9XG4gICAgICAgICAgc2hvd0V4cGxhaW49e3Nob3dFeHBsYWlufVxuICAgICAgICAvPlxuICAgICAgKSl9XG4gICAgPC9TdGFjaz5cbiAgKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/querybuilder/components/NestedQueryList.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/querybuilder/components/QueryPattern.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryPattern: () => (/* binding */ QueryPattern)\n/* harmony export */ });\n/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/@emotion-css-npm-11.11.2-dbfa42cf83-1edea109df.zip/node_modules/@emotion/css/dist/emotion-css.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/themes/ThemeContext.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Card/Card.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Button/Button.tsx\");\n/* harmony import */ var app_plugins_datasource_prometheus_querybuilder_shared_RawQuery__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/plugins/datasource/prometheus/querybuilder/shared/RawQuery.tsx\");\n/* harmony import */ var _syntax__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./public/app/plugins/datasource/loki/syntax.ts\");\n/* harmony import */ var _LokiQueryModeller__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./public/app/plugins/datasource/loki/querybuilder/LokiQueryModeller.ts\");\n\n\n\n\n\n\n\nconst QueryPattern = (props) => {\n  const { pattern, onPatternSelect, hasNewQueryOption, hasPreviousQuery, selectedPatternName, setSelectedPatternName } = props;\n  const styles = (0,_grafana_ui__WEBPACK_IMPORTED_MODULE_5__.useStyles2)(getStyles);\n  const lang = { grammar: _syntax__WEBPACK_IMPORTED_MODULE_3__[\"default\"], name: \"logql\" };\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_6__.Card, { className: styles.card }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_6__.Card.Heading, null, pattern.name), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: styles.rawQueryContainer }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n    app_plugins_datasource_prometheus_querybuilder_shared_RawQuery__WEBPACK_IMPORTED_MODULE_2__.RawQuery,\n    {\n      query: _LokiQueryModeller__WEBPACK_IMPORTED_MODULE_4__.lokiQueryModeller.renderQuery({ labels: [], operations: pattern.operations }),\n      lang,\n      className: styles.rawQuery\n    }\n  )), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_6__.Card.Actions, null, selectedPatternName !== pattern.name ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n    _grafana_ui__WEBPACK_IMPORTED_MODULE_7__.Button,\n    {\n      size: \"sm\",\n      onClick: () => {\n        if (hasPreviousQuery) {\n          setSelectedPatternName(pattern.name);\n        } else {\n          onPatternSelect(pattern);\n        }\n      }\n    },\n    \"Use this query\"\n  ) : /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement((react__WEBPACK_IMPORTED_MODULE_1___default().Fragment), null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: styles.spacing }, `If you would like to use this query, ${hasNewQueryOption ? \"you can either replace your current query or create a new query\" : \"your current query will be replaced\"}.`), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_7__.Button, { size: \"sm\", fill: \"outline\", onClick: () => setSelectedPatternName(null) }, \"Back\"), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n    _grafana_ui__WEBPACK_IMPORTED_MODULE_7__.Button,\n    {\n      size: \"sm\",\n      onClick: () => {\n        onPatternSelect(pattern);\n      }\n    },\n    \"Replace query\"\n  ), hasNewQueryOption && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n    _grafana_ui__WEBPACK_IMPORTED_MODULE_7__.Button,\n    {\n      size: \"sm\",\n      onClick: () => {\n        onPatternSelect(pattern, true);\n      }\n    },\n    \"Create new query\"\n  ))));\n};\nconst getStyles = (theme) => {\n  return {\n    card: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n      width: 49.5%;\n      display: flex;\n      flex-direction: column;\n    `,\n    rawQueryContainer: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n      flex-grow: 1;\n    `,\n    rawQuery: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n      background-color: ${theme.colors.background.primary};\n      padding: ${theme.spacing(1)};\n      margin-top: ${theme.spacing(1)};\n    `,\n    spacing: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n      margin-bottom: ${theme.spacing(1)};\n    `\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL3F1ZXJ5YnVpbGRlci9jb21wb25lbnRzL1F1ZXJ5UGF0dGVybi50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBb0I7QUFDRjtBQUd1QjtBQUNoQjtBQUVBO0FBQ1M7QUFZM0IsTUFBTSxlQUFlLENBQUMsVUFBaUI7QUFDNUMsUUFBTSxFQUFFLFNBQVMsaUJBQWlCLG1CQUFtQixrQkFBa0IscUJBQXFCLHVCQUF1QixJQUNqSDtBQUVGLFFBQU0sU0FBUyx1REFBVSxDQUFDLFNBQVM7QUFDbkMsUUFBTSxPQUFPLEVBQUUsU0FBUywrQ0FBWSxFQUFFLE1BQU0sUUFBUTtBQUVwRCxTQUNFLDJFQUFDLDZDQUFJLElBQUMsV0FBVyxPQUFPLFFBQ3RCLDJFQUFDLDZDQUFJLENBQUMsU0FBTCxNQUFjLFFBQVEsSUFBSyxHQUM1QiwyRUFBQyxTQUFJLFdBQVcsT0FBTyxxQkFDckI7QUFBQSxJQUFDLG9HQUFRO0FBQVI7QUFBQSxNQUNDLE9BQU8saUVBQWlCLENBQUMsWUFBWSxFQUFFLFFBQVEsQ0FBQyxHQUFHLFlBQVksUUFBUSxXQUFXLENBQUM7QUFBQSxNQUNuRjtBQUFBLE1BQ0EsV0FBVyxPQUFPO0FBQUE7QUFBQSxFQUNwQixDQUNGLEdBQ0EsMkVBQUMsNkNBQUksQ0FBQyxTQUFMLE1BQ0Usd0JBQXdCLFFBQVEsT0FDL0I7QUFBQSxJQUFDLCtDQUFNO0FBQU47QUFBQSxNQUNDLE1BQUs7QUFBQSxNQUNMLFNBQVMsTUFBTTtBQUNiLFlBQUksa0JBQWtCO0FBRXBCLGlDQUF1QixRQUFRLElBQUk7QUFBQSxRQUNyQyxPQUFPO0FBQ0wsMEJBQWdCLE9BQU87QUFBQSxRQUN6QjtBQUFBLE1BQ0Y7QUFBQTtBQUFBLElBQ0Q7QUFBQSxFQUVELElBRUEsMElBQ0UsMkVBQUMsU0FBSSxXQUFXLE9BQU8sV0FDcEIsd0NBQ0Msb0JBQ0ksb0VBQ0Esd0NBRVIsR0FDQSwyRUFBQywrQ0FBTSxJQUFDLE1BQUssTUFBSyxNQUFLLFdBQVUsU0FBUyxNQUFNLHVCQUF1QixJQUFJLEtBQUcsTUFFOUUsR0FDQTtBQUFBLElBQUMsK0NBQU07QUFBTjtBQUFBLE1BQ0MsTUFBSztBQUFBLE1BQ0wsU0FBUyxNQUFNO0FBQ2Isd0JBQWdCLE9BQU87QUFBQSxNQUN6QjtBQUFBO0FBQUEsSUFDRDtBQUFBLEVBRUQsR0FDQyxxQkFDQztBQUFBLElBQUMsK0NBQU07QUFBTjtBQUFBLE1BQ0MsTUFBSztBQUFBLE1BQ0wsU0FBUyxNQUFNO0FBQ2Isd0JBQWdCLFNBQVMsSUFBSTtBQUFBLE1BQy9CO0FBQUE7QUFBQSxJQUNEO0FBQUEsRUFFRCxDQUVKLENBRUosQ0FDRjtBQUVKO0FBRUEsTUFBTSxZQUFZLENBQUMsVUFBeUI7QUFDMUMsU0FBTztBQUFBLElBQ0wsTUFBTSxpREFBRztBQUFIO0FBQUE7QUFBQTtBQUFBO0FBQUEsSUFLTixtQkFBbUIsaURBQUc7QUFBSDtBQUFBO0FBQUEsSUFHbkIsVUFBVSxpREFBRztBQUFILDBCQUNZLE1BQU0sT0FBTyxXQUFXO0FBQUEsaUJBQ2pDLE1BQU0sUUFBUSxDQUFDO0FBQUEsb0JBQ1osTUFBTSxRQUFRLENBQUM7QUFBQTtBQUFBLElBRS9CLFNBQVMsaURBQUc7QUFBSCx1QkFDVSxNQUFNLFFBQVEsQ0FBQztBQUFBO0FBQUEsRUFFcEM7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2dyYWZhbmEvLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL3F1ZXJ5YnVpbGRlci9jb21wb25lbnRzL1F1ZXJ5UGF0dGVybi50c3g/OTMxZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9jc3MnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHsgR3JhZmFuYVRoZW1lMiB9IGZyb20gJ0BncmFmYW5hL2RhdGEnO1xuaW1wb3J0IHsgQnV0dG9uLCBDYXJkLCB1c2VTdHlsZXMyIH0gZnJvbSAnQGdyYWZhbmEvdWknO1xuaW1wb3J0IHsgUmF3UXVlcnkgfSBmcm9tICdhcHAvcGx1Z2lucy9kYXRhc291cmNlL3Byb21ldGhldXMvcXVlcnlidWlsZGVyL3NoYXJlZC9SYXdRdWVyeSc7XG5cbmltcG9ydCBsb2dxbEdyYW1tYXIgZnJvbSAnLi4vLi4vc3ludGF4JztcbmltcG9ydCB7IGxva2lRdWVyeU1vZGVsbGVyIH0gZnJvbSAnLi4vTG9raVF1ZXJ5TW9kZWxsZXInO1xuaW1wb3J0IHsgTG9raVF1ZXJ5UGF0dGVybiB9IGZyb20gJy4uL3R5cGVzJztcblxudHlwZSBQcm9wcyA9IHtcbiAgcGF0dGVybjogTG9raVF1ZXJ5UGF0dGVybjtcbiAgaGFzTmV3UXVlcnlPcHRpb246IGJvb2xlYW47XG4gIGhhc1ByZXZpb3VzUXVlcnk6IGJvb2xlYW47XG4gIHNlbGVjdGVkUGF0dGVybk5hbWU6IHN0cmluZyB8IG51bGw7XG4gIHNldFNlbGVjdGVkUGF0dGVybk5hbWU6IChuYW1lOiBzdHJpbmcgfCBudWxsKSA9PiB2b2lkO1xuICBvblBhdHRlcm5TZWxlY3Q6IChwYXR0ZXJuOiBMb2tpUXVlcnlQYXR0ZXJuLCBzZWxlY3RBc05ld1F1ZXJ5PzogYm9vbGVhbikgPT4gdm9pZDtcbn07XG5cbmV4cG9ydCBjb25zdCBRdWVyeVBhdHRlcm4gPSAocHJvcHM6IFByb3BzKSA9PiB7XG4gIGNvbnN0IHsgcGF0dGVybiwgb25QYXR0ZXJuU2VsZWN0LCBoYXNOZXdRdWVyeU9wdGlvbiwgaGFzUHJldmlvdXNRdWVyeSwgc2VsZWN0ZWRQYXR0ZXJuTmFtZSwgc2V0U2VsZWN0ZWRQYXR0ZXJuTmFtZSB9ID1cbiAgICBwcm9wcztcblxuICBjb25zdCBzdHlsZXMgPSB1c2VTdHlsZXMyKGdldFN0eWxlcyk7XG4gIGNvbnN0IGxhbmcgPSB7IGdyYW1tYXI6IGxvZ3FsR3JhbW1hciwgbmFtZTogJ2xvZ3FsJyB9O1xuXG4gIHJldHVybiAoXG4gICAgPENhcmQgY2xhc3NOYW1lPXtzdHlsZXMuY2FyZH0+XG4gICAgICA8Q2FyZC5IZWFkaW5nPntwYXR0ZXJuLm5hbWV9PC9DYXJkLkhlYWRpbmc+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLnJhd1F1ZXJ5Q29udGFpbmVyfT5cbiAgICAgICAgPFJhd1F1ZXJ5XG4gICAgICAgICAgcXVlcnk9e2xva2lRdWVyeU1vZGVsbGVyLnJlbmRlclF1ZXJ5KHsgbGFiZWxzOiBbXSwgb3BlcmF0aW9uczogcGF0dGVybi5vcGVyYXRpb25zIH0pfVxuICAgICAgICAgIGxhbmc9e2xhbmd9XG4gICAgICAgICAgY2xhc3NOYW1lPXtzdHlsZXMucmF3UXVlcnl9XG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxDYXJkLkFjdGlvbnM+XG4gICAgICAgIHtzZWxlY3RlZFBhdHRlcm5OYW1lICE9PSBwYXR0ZXJuLm5hbWUgPyAoXG4gICAgICAgICAgPEJ1dHRvblxuICAgICAgICAgICAgc2l6ZT1cInNtXCJcbiAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgICAgaWYgKGhhc1ByZXZpb3VzUXVlcnkpIHtcbiAgICAgICAgICAgICAgICAvLyBJZiB1c2VyIGhhcyBwcmV2aW91cyBxdWVyeSwgd2UgbmVlZCB0byBjb25maXJtIHRoYXQgdGhleSB3YW50IHRvIHJlcGxhY2UgaXRcbiAgICAgICAgICAgICAgICBzZXRTZWxlY3RlZFBhdHRlcm5OYW1lKHBhdHRlcm4ubmFtZSk7XG4gICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgb25QYXR0ZXJuU2VsZWN0KHBhdHRlcm4pO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9fVxuICAgICAgICAgID5cbiAgICAgICAgICAgIFVzZSB0aGlzIHF1ZXJ5XG4gICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICkgOiAoXG4gICAgICAgICAgPD5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMuc3BhY2luZ30+XG4gICAgICAgICAgICAgIHtgSWYgeW91IHdvdWxkIGxpa2UgdG8gdXNlIHRoaXMgcXVlcnksICR7XG4gICAgICAgICAgICAgICAgaGFzTmV3UXVlcnlPcHRpb25cbiAgICAgICAgICAgICAgICAgID8gJ3lvdSBjYW4gZWl0aGVyIHJlcGxhY2UgeW91ciBjdXJyZW50IHF1ZXJ5IG9yIGNyZWF0ZSBhIG5ldyBxdWVyeSdcbiAgICAgICAgICAgICAgICAgIDogJ3lvdXIgY3VycmVudCBxdWVyeSB3aWxsIGJlIHJlcGxhY2VkJ1xuICAgICAgICAgICAgICB9LmB9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxCdXR0b24gc2l6ZT1cInNtXCIgZmlsbD1cIm91dGxpbmVcIiBvbkNsaWNrPXsoKSA9PiBzZXRTZWxlY3RlZFBhdHRlcm5OYW1lKG51bGwpfT5cbiAgICAgICAgICAgICAgQmFja1xuICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgICAgIHNpemU9XCJzbVwiXG4gICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgICAgICBvblBhdHRlcm5TZWxlY3QocGF0dGVybik7XG4gICAgICAgICAgICAgIH19XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIFJlcGxhY2UgcXVlcnlcbiAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgICAge2hhc05ld1F1ZXJ5T3B0aW9uICYmIChcbiAgICAgICAgICAgICAgPEJ1dHRvblxuICAgICAgICAgICAgICAgIHNpemU9XCJzbVwiXG4gICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4ge1xuICAgICAgICAgICAgICAgICAgb25QYXR0ZXJuU2VsZWN0KHBhdHRlcm4sIHRydWUpO1xuICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICBDcmVhdGUgbmV3IHF1ZXJ5XG4gICAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgICAgKX1cbiAgICAgICAgICA8Lz5cbiAgICAgICAgKX1cbiAgICAgIDwvQ2FyZC5BY3Rpb25zPlxuICAgIDwvQ2FyZD5cbiAgKTtcbn07XG5cbmNvbnN0IGdldFN0eWxlcyA9ICh0aGVtZTogR3JhZmFuYVRoZW1lMikgPT4ge1xuICByZXR1cm4ge1xuICAgIGNhcmQ6IGNzc2BcbiAgICAgIHdpZHRoOiA0OS41JTtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGAsXG4gICAgcmF3UXVlcnlDb250YWluZXI6IGNzc2BcbiAgICAgIGZsZXgtZ3JvdzogMTtcbiAgICBgLFxuICAgIHJhd1F1ZXJ5OiBjc3NgXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke3RoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kLnByaW1hcnl9O1xuICAgICAgcGFkZGluZzogJHt0aGVtZS5zcGFjaW5nKDEpfTtcbiAgICAgIG1hcmdpbi10b3A6ICR7dGhlbWUuc3BhY2luZygxKX07XG4gICAgYCxcbiAgICBzcGFjaW5nOiBjc3NgXG4gICAgICBtYXJnaW4tYm90dG9tOiAke3RoZW1lLnNwYWNpbmcoMSl9O1xuICAgIGAsXG4gIH07XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/querybuilder/components/QueryPattern.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/querybuilder/components/QueryPatternsModal.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryPatternsModal: () => (/* binding */ QueryPatternsModal)\n/* harmony export */ });\n/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/@emotion-css-npm-11.11.2-dbfa42cf83-1edea109df.zip/node_modules/@emotion/css/dist/emotion-css.esm.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/cache/lodash-npm-4.17.21-6382451519-eb835a2e51.zip/node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _grafana_runtime__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-runtime-virtual-68c57d4c0c/1/packages/grafana-runtime/src/analytics/utils.ts\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/themes/ThemeContext.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Modal/Modal.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Collapse/Collapse.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Button/Button.tsx\");\n/* harmony import */ var app_core_utils_query__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./public/app/core/utils/query.ts\");\n/* harmony import */ var _LokiQueryModeller__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./public/app/plugins/datasource/loki/querybuilder/LokiQueryModeller.ts\");\n/* harmony import */ var _parsing__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./public/app/plugins/datasource/loki/querybuilder/parsing.ts\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./public/app/plugins/datasource/loki/querybuilder/types.ts\");\n/* harmony import */ var _QueryPattern__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\"./public/app/plugins/datasource/loki/querybuilder/components/QueryPattern.tsx\");\n\n\n\n\n\n\n\n\n\n\n\nconst QueryPatternsModal = (props) => {\n  const { isOpen, onClose, onChange, onAddQuery, query, queries, app } = props;\n  const [openTabs, setOpenTabs] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)([]);\n  const [selectedPatternName, setSelectedPatternName] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n  const styles = (0,_grafana_ui__WEBPACK_IMPORTED_MODULE_8__.useStyles2)(getStyles);\n  const hasNewQueryOption = !!onAddQuery;\n  const hasPreviousQuery = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(\n    () => (0,_parsing__WEBPACK_IMPORTED_MODULE_5__.buildVisualQueryFromString)(query.expr).query.operations.length > 0,\n    [query.expr]\n  );\n  const onPatternSelect = (pattern, selectAsNewQuery = false) => {\n    const visualQuery = (0,_parsing__WEBPACK_IMPORTED_MODULE_5__.buildVisualQueryFromString)(selectAsNewQuery ? \"\" : query.expr);\n    (0,_grafana_runtime__WEBPACK_IMPORTED_MODULE_9__.reportInteraction)(\"grafana_loki_query_patterns_selected\", {\n      version: \"v2\",\n      app: app ?? \"\",\n      editorMode: query.editorMode,\n      selectedPattern: pattern.name,\n      preSelectedOperationsCount: visualQuery.query.operations.length,\n      preSelectedLabelsCount: visualQuery.query.labels.length,\n      createNewQuery: hasNewQueryOption && selectAsNewQuery\n    });\n    visualQuery.query.operations = pattern.operations;\n    if (hasNewQueryOption && selectAsNewQuery) {\n      onAddQuery({\n        ...query,\n        refId: (0,app_core_utils_query__WEBPACK_IMPORTED_MODULE_3__.getNextRefIdChar)(queries ?? [query]),\n        expr: _LokiQueryModeller__WEBPACK_IMPORTED_MODULE_4__.lokiQueryModeller.renderQuery(visualQuery.query)\n      });\n    } else {\n      onChange({\n        ...query,\n        expr: _LokiQueryModeller__WEBPACK_IMPORTED_MODULE_4__.lokiQueryModeller.renderQuery(visualQuery.query)\n      });\n    }\n    setSelectedPatternName(null);\n    onClose();\n  };\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_10__.Modal, { isOpen, title: \"Kick start your query\", onDismiss: onClose, className: styles.modal }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", { className: styles.spacing }, \"Kick start your query by selecting one of these queries. You can then continue to complete your query.\"), Object.values(_types__WEBPACK_IMPORTED_MODULE_6__.LokiQueryPatternType).map((patternType) => {\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\n      _grafana_ui__WEBPACK_IMPORTED_MODULE_11__.Collapse,\n      {\n        key: patternType,\n        label: `${(0,lodash__WEBPACK_IMPORTED_MODULE_1__.capitalize)(patternType)} query starters`,\n        isOpen: openTabs.includes(patternType),\n        collapsible: true,\n        onToggle: () => setOpenTabs(\n          (tabs) => (\n            // close tab if it's already open, otherwise open it\n            tabs.includes(patternType) ? tabs.filter((t) => t !== patternType) : [...tabs, patternType]\n          )\n        )\n      },\n      /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", { className: styles.cardsContainer }, _LokiQueryModeller__WEBPACK_IMPORTED_MODULE_4__.lokiQueryModeller.getQueryPatterns().filter((pattern) => pattern.type === patternType).map((pattern) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\n        _QueryPattern__WEBPACK_IMPORTED_MODULE_7__.QueryPattern,\n        {\n          key: pattern.name,\n          pattern,\n          hasNewQueryOption,\n          hasPreviousQuery,\n          onPatternSelect,\n          selectedPatternName,\n          setSelectedPatternName\n        }\n      )))\n    );\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_12__.Button, { variant: \"secondary\", onClick: onClose }, \"Close\"));\n};\nconst getStyles = (theme) => {\n  return {\n    cardsContainer: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n      display: flex;\n      flex-direction: row;\n      flex-wrap: wrap;\n      justify-content: space-between;\n    `,\n    spacing: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n      margin-bottom: ${theme.spacing(1)};\n    `,\n    modal: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n      width: 85vw;\n      ${theme.breakpoints.down(\"md\")} {\n        width: 100%;\n      }\n    `\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/querybuilder/components/QueryPatternsModal.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/querybuilder/components/QueryPreview.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryPreview: () => (/* binding */ QueryPreview)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _grafana_experimental__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-experimental-virtual-ba767552fe/0/cache/@grafana-experimental-npm-1.6.1-f052d2ae51-64c32bc9e3.zip/node_modules/@grafana/experimental/dist/esm/QueryEditor/EditorRow.js\");\n/* harmony import */ var _grafana_experimental__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-experimental-virtual-ba767552fe/0/cache/@grafana-experimental-npm-1.6.1-f052d2ae51-64c32bc9e3.zip/node_modules/@grafana/experimental/dist/esm/QueryEditor/EditorFieldGroup.js\");\n/* harmony import */ var _prometheus_querybuilder_shared_RawQuery__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/plugins/datasource/prometheus/querybuilder/shared/RawQuery.tsx\");\n/* harmony import */ var _syntax__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/plugins/datasource/loki/syntax.ts\");\n\n\n\n\n\nfunction QueryPreview({ query }) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_grafana_experimental__WEBPACK_IMPORTED_MODULE_3__.EditorRow, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_grafana_experimental__WEBPACK_IMPORTED_MODULE_4__.EditorFieldGroup, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_prometheus_querybuilder_shared_RawQuery__WEBPACK_IMPORTED_MODULE_1__.RawQuery, { query, lang: { grammar: _syntax__WEBPACK_IMPORTED_MODULE_2__.lokiGrammar, name: \"lokiql\" } })));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL3F1ZXJ5YnVpbGRlci9jb21wb25lbnRzL1F1ZXJ5UHJldmlldy50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBa0I7QUFFMEI7QUFFbkI7QUFDRztBQU1yQixTQUFTLGFBQWEsRUFBRSxNQUFNLEdBQVU7QUFDN0MsU0FDRSwyRUFBQyw0REFBUyxRQUNSLDJFQUFDLG1FQUFnQixRQUNmLDJFQUFDLDhFQUFRLElBQUMsT0FBYyxNQUFNLEVBQUUsU0FBUyxnREFBVyxFQUFFLE1BQU0sU0FBUyxHQUFHLENBQzFFLENBQ0Y7QUFFSiIsInNvdXJjZXMiOlsid2VicGFjazovL2dyYWZhbmEvLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL3F1ZXJ5YnVpbGRlci9jb21wb25lbnRzL1F1ZXJ5UHJldmlldy50c3g/OWMxZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgeyBFZGl0b3JSb3csIEVkaXRvckZpZWxkR3JvdXAgfSBmcm9tICdAZ3JhZmFuYS9leHBlcmltZW50YWwnO1xuXG5pbXBvcnQgeyBSYXdRdWVyeSB9IGZyb20gJy4uLy4uLy4uL3Byb21ldGhldXMvcXVlcnlidWlsZGVyL3NoYXJlZC9SYXdRdWVyeSc7XG5pbXBvcnQgeyBsb2tpR3JhbW1hciB9IGZyb20gJy4uLy4uL3N5bnRheCc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgUHJvcHMge1xuICBxdWVyeTogc3RyaW5nO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gUXVlcnlQcmV2aWV3KHsgcXVlcnkgfTogUHJvcHMpIHtcbiAgcmV0dXJuIChcbiAgICA8RWRpdG9yUm93PlxuICAgICAgPEVkaXRvckZpZWxkR3JvdXA+XG4gICAgICAgIDxSYXdRdWVyeSBxdWVyeT17cXVlcnl9IGxhbmc9e3sgZ3JhbW1hcjogbG9raUdyYW1tYXIsIG5hbWU6ICdsb2tpcWwnIH19IC8+XG4gICAgICA8L0VkaXRvckZpZWxkR3JvdXA+XG4gICAgPC9FZGl0b3JSb3c+XG4gICk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/querybuilder/components/QueryPreview.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/querybuilder/components/UnwrapParamEditor.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UnwrapParamEditor: () => (/* binding */ UnwrapParamEditor)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/utils/selectUtils.ts\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Select/Select.tsx\");\n/* harmony import */ var _prometheus_querybuilder_shared_operationUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/plugins/datasource/prometheus/querybuilder/shared/operationUtils.ts\");\n/* harmony import */ var _components_monaco_query_field_monaco_completion_provider_validation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/plugins/datasource/loki/components/monaco-query-field/monaco-completion-provider/validation.ts\");\n/* harmony import */ var _datasource__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./public/app/plugins/datasource/loki/datasource.ts\");\n/* harmony import */ var _queryUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./public/app/plugins/datasource/loki/queryUtils.ts\");\n/* harmony import */ var _responseUtils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./public/app/plugins/datasource/loki/responseUtils.ts\");\n/* harmony import */ var _LokiQueryModeller__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./public/app/plugins/datasource/loki/querybuilder/LokiQueryModeller.ts\");\n\n\n\n\n\n\n\n\n\n\nfunction UnwrapParamEditor({\n  onChange,\n  index,\n  operationIndex,\n  value,\n  query,\n  datasource\n}) {\n  const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({});\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\n    _grafana_ui__WEBPACK_IMPORTED_MODULE_7__.Select,\n    {\n      inputId: (0,_prometheus_querybuilder_shared_operationUtils__WEBPACK_IMPORTED_MODULE_1__.getOperationParamId)(operationIndex, index),\n      onOpenMenu: async () => {\n        if (datasource instanceof _datasource__WEBPACK_IMPORTED_MODULE_3__.LokiDatasource) {\n          setState({ isLoading: true });\n          const options = await loadUnwrapOptions(query, datasource);\n          setState({ options, isLoading: void 0 });\n        }\n      },\n      isLoading: state.isLoading,\n      allowCustomValue: true,\n      noOptionsMessage: \"No labels found\",\n      loadingMessage: \"Loading labels\",\n      options: state.options,\n      value: value ? (0,_grafana_data__WEBPACK_IMPORTED_MODULE_8__.toOption)(value.toString()) : null,\n      onChange: (value2) => {\n        if (value2.value) {\n          onChange(index, value2.value);\n        }\n      }\n    }\n  );\n}\nasync function loadUnwrapOptions(query, datasource) {\n  const queryExpr = _LokiQueryModeller__WEBPACK_IMPORTED_MODULE_6__.lokiQueryModeller.renderQuery(query);\n  const logExpr = (0,_queryUtils__WEBPACK_IMPORTED_MODULE_4__.getLogQueryFromMetricsQuery)(queryExpr);\n  if ((0,_queryUtils__WEBPACK_IMPORTED_MODULE_4__.isQueryWithError)(datasource.interpolateString(logExpr, _components_monaco_query_field_monaco_completion_provider_validation__WEBPACK_IMPORTED_MODULE_2__.placeHolderScopedVars))) {\n    return [];\n  }\n  const samples = await datasource.getDataSamples({ expr: logExpr, refId: \"unwrap_samples\" });\n  const unwrapLabels = (0,_responseUtils__WEBPACK_IMPORTED_MODULE_5__.extractUnwrapLabelKeysFromDataFrame)(samples[0]);\n  const labelOptions = unwrapLabels.map((label) => ({\n    label,\n    value: label\n  }));\n  return labelOptions;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL3F1ZXJ5YnVpbGRlci9jb21wb25lbnRzL1Vud3JhcFBhcmFtRWRpdG9yLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBZ0M7QUFFVTtBQUNuQjtBQUVhO0FBRUU7QUFDUDtBQUMrQjtBQUNWO0FBQ2xCO0FBRzNCLFNBQVMsa0JBQWtCO0FBQUEsRUFDaEM7QUFBQSxFQUNBO0FBQUEsRUFDQTtBQUFBLEVBQ0E7QUFBQSxFQUNBO0FBQUEsRUFDQTtBQUNGLEdBQTBDO0FBQ3hDLFFBQU0sQ0FBQyxPQUFPLFFBQVEsSUFBSSwrQ0FBUSxDQUcvQixDQUFDLENBQUM7QUFFTCxTQUNFO0FBQUEsSUFBQywrQ0FBTTtBQUFOO0FBQUEsTUFDQyxTQUFTLG1HQUFtQixDQUFDLGdCQUFnQixLQUFLO0FBQUEsTUFDbEQsWUFBWSxZQUFZO0FBRXRCLFlBQUksc0JBQXNCLHVEQUFjLEVBQUU7QUFDeEMsbUJBQVMsRUFBRSxXQUFXLEtBQUssQ0FBQztBQUM1QixnQkFBTSxVQUFVLE1BQU0sa0JBQWtCLE9BQU8sVUFBVTtBQUN6RCxtQkFBUyxFQUFFLFNBQVMsV0FBVyxPQUFVLENBQUM7QUFBQSxRQUM1QztBQUFBLE1BQ0Y7QUFBQSxNQUNBLFdBQVcsTUFBTTtBQUFBLE1BQ2pCLGtCQUFnQjtBQUFBLE1BQ2hCLGtCQUFpQjtBQUFBLE1BQ2pCLGdCQUFlO0FBQUEsTUFDZixTQUFTLE1BQU07QUFBQSxNQUNmLE9BQU8sUUFBUSx1REFBUSxDQUFDLE1BQU0sU0FBUyxDQUFDLElBQUk7QUFBQSxNQUM1QyxVQUFVLENBQUNBLFdBQVU7QUFDbkIsWUFBSUEsT0FBTSxPQUFPO0FBQ2YsbUJBQVMsT0FBT0EsT0FBTSxLQUFLO0FBQUEsUUFDN0I7QUFBQSxNQUNGO0FBQUE7QUFBQSxFQUNGO0FBRUo7QUFFQSxlQUFlLGtCQUNiLE9BQ0EsWUFDeUM7QUFDekMsUUFBTSxZQUFZLGlFQUFpQixDQUFDLFlBQVksS0FBSztBQUNyRCxRQUFNLFVBQVUsd0VBQTJCLENBQUMsU0FBUztBQUNyRCxNQUFJLDZEQUFnQixDQUFDLFdBQVcsa0JBQWtCLFNBQVMsdUhBQXFCLENBQUMsR0FBRztBQUNsRixXQUFPLENBQUM7QUFBQSxFQUNWO0FBRUEsUUFBTSxVQUFVLE1BQU0sV0FBVyxlQUFlLEVBQUUsTUFBTSxTQUFTLE9BQU8saUJBQWlCLENBQUM7QUFDMUYsUUFBTSxlQUFlLG1GQUFtQyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBRW5FLFFBQU0sZUFBZSxhQUFhLElBQUksQ0FBQyxXQUFXO0FBQUEsSUFDaEQ7QUFBQSxJQUNBLE9BQU87QUFBQSxFQUNULEVBQUU7QUFFRixTQUFPO0FBQ1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ncmFmYW5hLy4vcHVibGljL2FwcC9wbHVnaW5zL2RhdGFzb3VyY2UvbG9raS9xdWVyeWJ1aWxkZXIvY29tcG9uZW50cy9VbndyYXBQYXJhbUVkaXRvci50c3g/ODRhMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB7IFNlbGVjdGFibGVWYWx1ZSwgdG9PcHRpb24gfSBmcm9tICdAZ3JhZmFuYS9kYXRhJztcbmltcG9ydCB7IFNlbGVjdCB9IGZyb20gJ0BncmFmYW5hL3VpJztcblxuaW1wb3J0IHsgZ2V0T3BlcmF0aW9uUGFyYW1JZCB9IGZyb20gJy4uLy4uLy4uL3Byb21ldGhldXMvcXVlcnlidWlsZGVyL3NoYXJlZC9vcGVyYXRpb25VdGlscyc7XG5pbXBvcnQgeyBRdWVyeUJ1aWxkZXJPcGVyYXRpb25QYXJhbUVkaXRvclByb3BzIH0gZnJvbSAnLi4vLi4vLi4vcHJvbWV0aGV1cy9xdWVyeWJ1aWxkZXIvc2hhcmVkL3R5cGVzJztcbmltcG9ydCB7IHBsYWNlSG9sZGVyU2NvcGVkVmFycyB9IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvbW9uYWNvLXF1ZXJ5LWZpZWxkL21vbmFjby1jb21wbGV0aW9uLXByb3ZpZGVyL3ZhbGlkYXRpb24nO1xuaW1wb3J0IHsgTG9raURhdGFzb3VyY2UgfSBmcm9tICcuLi8uLi9kYXRhc291cmNlJztcbmltcG9ydCB7IGdldExvZ1F1ZXJ5RnJvbU1ldHJpY3NRdWVyeSwgaXNRdWVyeVdpdGhFcnJvciB9IGZyb20gJy4uLy4uL3F1ZXJ5VXRpbHMnO1xuaW1wb3J0IHsgZXh0cmFjdFVud3JhcExhYmVsS2V5c0Zyb21EYXRhRnJhbWUgfSBmcm9tICcuLi8uLi9yZXNwb25zZVV0aWxzJztcbmltcG9ydCB7IGxva2lRdWVyeU1vZGVsbGVyIH0gZnJvbSAnLi4vTG9raVF1ZXJ5TW9kZWxsZXInO1xuaW1wb3J0IHsgTG9raVZpc3VhbFF1ZXJ5IH0gZnJvbSAnLi4vdHlwZXMnO1xuXG5leHBvcnQgZnVuY3Rpb24gVW53cmFwUGFyYW1FZGl0b3Ioe1xuICBvbkNoYW5nZSxcbiAgaW5kZXgsXG4gIG9wZXJhdGlvbkluZGV4LFxuICB2YWx1ZSxcbiAgcXVlcnksXG4gIGRhdGFzb3VyY2UsXG59OiBRdWVyeUJ1aWxkZXJPcGVyYXRpb25QYXJhbUVkaXRvclByb3BzKSB7XG4gIGNvbnN0IFtzdGF0ZSwgc2V0U3RhdGVdID0gdXNlU3RhdGU8e1xuICAgIG9wdGlvbnM/OiBBcnJheTxTZWxlY3RhYmxlVmFsdWU8c3RyaW5nPj47XG4gICAgaXNMb2FkaW5nPzogYm9vbGVhbjtcbiAgfT4oe30pO1xuXG4gIHJldHVybiAoXG4gICAgPFNlbGVjdFxuICAgICAgaW5wdXRJZD17Z2V0T3BlcmF0aW9uUGFyYW1JZChvcGVyYXRpb25JbmRleCwgaW5kZXgpfVxuICAgICAgb25PcGVuTWVudT17YXN5bmMgKCkgPT4ge1xuICAgICAgICAvLyBUaGlzIGNoZWNrIGlzIGFsd2F5cyB0cnVlLCB3ZSBkbyBpdCB0byBtYWtlIHR5cGVzY3JpcHQgaGFwcHlcbiAgICAgICAgaWYgKGRhdGFzb3VyY2UgaW5zdGFuY2VvZiBMb2tpRGF0YXNvdXJjZSkge1xuICAgICAgICAgIHNldFN0YXRlKHsgaXNMb2FkaW5nOiB0cnVlIH0pO1xuICAgICAgICAgIGNvbnN0IG9wdGlvbnMgPSBhd2FpdCBsb2FkVW53cmFwT3B0aW9ucyhxdWVyeSwgZGF0YXNvdXJjZSk7XG4gICAgICAgICAgc2V0U3RhdGUoeyBvcHRpb25zLCBpc0xvYWRpbmc6IHVuZGVmaW5lZCB9KTtcbiAgICAgICAgfVxuICAgICAgfX1cbiAgICAgIGlzTG9hZGluZz17c3RhdGUuaXNMb2FkaW5nfVxuICAgICAgYWxsb3dDdXN0b21WYWx1ZVxuICAgICAgbm9PcHRpb25zTWVzc2FnZT1cIk5vIGxhYmVscyBmb3VuZFwiXG4gICAgICBsb2FkaW5nTWVzc2FnZT1cIkxvYWRpbmcgbGFiZWxzXCJcbiAgICAgIG9wdGlvbnM9e3N0YXRlLm9wdGlvbnN9XG4gICAgICB2YWx1ZT17dmFsdWUgPyB0b09wdGlvbih2YWx1ZS50b1N0cmluZygpKSA6IG51bGx9XG4gICAgICBvbkNoYW5nZT17KHZhbHVlKSA9PiB7XG4gICAgICAgIGlmICh2YWx1ZS52YWx1ZSkge1xuICAgICAgICAgIG9uQ2hhbmdlKGluZGV4LCB2YWx1ZS52YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgIH19XG4gICAgLz5cbiAgKTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gbG9hZFVud3JhcE9wdGlvbnMoXG4gIHF1ZXJ5OiBMb2tpVmlzdWFsUXVlcnksXG4gIGRhdGFzb3VyY2U6IExva2lEYXRhc291cmNlXG4pOiBQcm9taXNlPEFycmF5PFNlbGVjdGFibGVWYWx1ZTxzdHJpbmc+Pj4ge1xuICBjb25zdCBxdWVyeUV4cHIgPSBsb2tpUXVlcnlNb2RlbGxlci5yZW5kZXJRdWVyeShxdWVyeSk7XG4gIGNvbnN0IGxvZ0V4cHIgPSBnZXRMb2dRdWVyeUZyb21NZXRyaWNzUXVlcnkocXVlcnlFeHByKTtcbiAgaWYgKGlzUXVlcnlXaXRoRXJyb3IoZGF0YXNvdXJjZS5pbnRlcnBvbGF0ZVN0cmluZyhsb2dFeHByLCBwbGFjZUhvbGRlclNjb3BlZFZhcnMpKSkge1xuICAgIHJldHVybiBbXTtcbiAgfVxuXG4gIGNvbnN0IHNhbXBsZXMgPSBhd2FpdCBkYXRhc291cmNlLmdldERhdGFTYW1wbGVzKHsgZXhwcjogbG9nRXhwciwgcmVmSWQ6ICd1bndyYXBfc2FtcGxlcycgfSk7XG4gIGNvbnN0IHVud3JhcExhYmVscyA9IGV4dHJhY3RVbndyYXBMYWJlbEtleXNGcm9tRGF0YUZyYW1lKHNhbXBsZXNbMF0pO1xuXG4gIGNvbnN0IGxhYmVsT3B0aW9ucyA9IHVud3JhcExhYmVscy5tYXAoKGxhYmVsKSA9PiAoe1xuICAgIGxhYmVsLFxuICAgIHZhbHVlOiBsYWJlbCxcbiAgfSkpO1xuXG4gIHJldHVybiBsYWJlbE9wdGlvbnM7XG59XG4iXSwibmFtZXMiOlsidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/querybuilder/components/UnwrapParamEditor.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/querybuilder/operationUtils.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addLokiOperation: () => (/* binding */ addLokiOperation),\n/* harmony export */   addNestedQueryHandler: () => (/* binding */ addNestedQueryHandler),\n/* harmony export */   createRangeOperation: () => (/* binding */ createRangeOperation),\n/* harmony export */   createRangeOperationWithGrouping: () => (/* binding */ createRangeOperationWithGrouping),\n/* harmony export */   getLineFilterRenderer: () => (/* binding */ getLineFilterRenderer),\n/* harmony export */   getRangeAggregationWithGroupingRenderer: () => (/* binding */ getRangeAggregationWithGroupingRenderer),\n/* harmony export */   isConflictingFilter: () => (/* binding */ isConflictingFilter),\n/* harmony export */   labelFilterRenderer: () => (/* binding */ labelFilterRenderer),\n/* harmony export */   pipelineRenderer: () => (/* binding */ pipelineRenderer)\n/* harmony export */ });\n/* harmony import */ var _prometheus_querybuilder_components_LabelParamEditor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./public/app/plugins/datasource/prometheus/querybuilder/components/LabelParamEditor.tsx\");\n/* harmony import */ var _prometheus_querybuilder_shared_operationUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/plugins/datasource/prometheus/querybuilder/shared/operationUtils.ts\");\n/* harmony import */ var _syntax__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/plugins/datasource/loki/syntax.ts\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./public/app/plugins/datasource/loki/querybuilder/types.ts\");\n\n\n\n\n\nfunction createRangeOperation(name, isRangeOperationWithGrouping) {\n  const params = [getRangeVectorParamDef()];\n  const defaultParams = [\"$__interval\"];\n  let paramChangedHandler = void 0;\n  if (name === _types__WEBPACK_IMPORTED_MODULE_3__.LokiOperationId.QuantileOverTime) {\n    defaultParams.push(\"0.95\");\n    params.push({\n      name: \"Quantile\",\n      type: \"number\"\n    });\n  }\n  if (isRangeOperationWithGrouping) {\n    params.push({\n      name: \"By label\",\n      type: \"string\",\n      restParam: true,\n      optional: true\n    });\n    paramChangedHandler = (0,_prometheus_querybuilder_shared_operationUtils__WEBPACK_IMPORTED_MODULE_1__.getOnLabelAddedHandler)(`__${name}_by`);\n  }\n  return {\n    id: name,\n    name: (0,_prometheus_querybuilder_shared_operationUtils__WEBPACK_IMPORTED_MODULE_1__.getPromAndLokiOperationDisplayName)(name),\n    params,\n    defaultParams,\n    alternativesKey: \"range function\",\n    category: _types__WEBPACK_IMPORTED_MODULE_3__.LokiVisualQueryOperationCategory.RangeFunctions,\n    orderRank: _types__WEBPACK_IMPORTED_MODULE_3__.LokiOperationOrder.RangeVectorFunction,\n    renderer: operationWithRangeVectorRenderer,\n    addOperationHandler: addLokiOperation,\n    paramChangedHandler,\n    explainHandler: (op, def) => {\n      let opDocs = _syntax__WEBPACK_IMPORTED_MODULE_2__.FUNCTIONS.find((x) => x.insertText === op.id)?.documentation ?? \"\";\n      if (op.params[0] === \"$__interval\") {\n        return `${opDocs} \\`$__interval\\` is a variable that will be replaced with the [calculated interval](https://grafana.com/docs/grafana/latest/dashboards/variables/add-template-variables/#__interval) based on the time range and width of the graph. In Dashboards, you can affect the interval variable using **Max data points** and **Min interval**. You can find these options under **Query options** right of the data source select dropdown.`;\n      } else {\n        return `${opDocs} The [range vector](https://grafana.com/docs/loki/latest/logql/metric_queries/#range-vector-aggregation) is set to \\`${op.params[0]}\\`.`;\n      }\n    }\n  };\n}\nfunction createRangeOperationWithGrouping(name) {\n  const rangeOperation = createRangeOperation(name, true);\n  const params = rangeOperation.params.slice(0, -1);\n  const operations = [\n    rangeOperation,\n    {\n      id: `__${name}_by`,\n      name: `${(0,_prometheus_querybuilder_shared_operationUtils__WEBPACK_IMPORTED_MODULE_1__.getPromAndLokiOperationDisplayName)(name)} by`,\n      params: [\n        ...params,\n        {\n          name: \"Label\",\n          type: \"string\",\n          restParam: true,\n          optional: true,\n          editor: _prometheus_querybuilder_components_LabelParamEditor__WEBPACK_IMPORTED_MODULE_0__.LabelParamEditor\n        }\n      ],\n      defaultParams: [...rangeOperation.defaultParams, \"\"],\n      alternativesKey: \"range function with grouping\",\n      category: _types__WEBPACK_IMPORTED_MODULE_3__.LokiVisualQueryOperationCategory.RangeFunctions,\n      renderer: getRangeAggregationWithGroupingRenderer(name, \"by\"),\n      paramChangedHandler: (0,_prometheus_querybuilder_shared_operationUtils__WEBPACK_IMPORTED_MODULE_1__.getLastLabelRemovedHandler)(name),\n      explainHandler: (0,_prometheus_querybuilder_shared_operationUtils__WEBPACK_IMPORTED_MODULE_1__.getAggregationExplainer)(name, \"by\"),\n      addOperationHandler: addLokiOperation,\n      hideFromList: true\n    },\n    {\n      id: `__${name}_without`,\n      name: `${(0,_prometheus_querybuilder_shared_operationUtils__WEBPACK_IMPORTED_MODULE_1__.getPromAndLokiOperationDisplayName)(name)} without`,\n      params: [\n        ...params,\n        {\n          name: \"Label\",\n          type: \"string\",\n          restParam: true,\n          optional: true,\n          editor: _prometheus_querybuilder_components_LabelParamEditor__WEBPACK_IMPORTED_MODULE_0__.LabelParamEditor\n        }\n      ],\n      defaultParams: [...rangeOperation.defaultParams, \"\"],\n      alternativesKey: \"range function with grouping\",\n      category: _types__WEBPACK_IMPORTED_MODULE_3__.LokiVisualQueryOperationCategory.RangeFunctions,\n      renderer: getRangeAggregationWithGroupingRenderer(name, \"without\"),\n      paramChangedHandler: (0,_prometheus_querybuilder_shared_operationUtils__WEBPACK_IMPORTED_MODULE_1__.getLastLabelRemovedHandler)(name),\n      explainHandler: (0,_prometheus_querybuilder_shared_operationUtils__WEBPACK_IMPORTED_MODULE_1__.getAggregationExplainer)(name, \"without\"),\n      addOperationHandler: addLokiOperation,\n      hideFromList: true\n    }\n  ];\n  return operations;\n}\nfunction getRangeAggregationWithGroupingRenderer(aggregation, grouping) {\n  return function aggregationRenderer(model, def, innerExpr) {\n    const restParamIndex = def.params.findIndex((param) => param.restParam);\n    const params = model.params.slice(0, restParamIndex);\n    const restParams = model.params.slice(restParamIndex);\n    if (params.length === 2 && aggregation === _types__WEBPACK_IMPORTED_MODULE_3__.LokiOperationId.QuantileOverTime) {\n      return `${aggregation}(${params[1]}, ${innerExpr} [${params[0]}]) ${grouping} (${restParams.join(\", \")})`;\n    }\n    return `${aggregation}(${innerExpr} [${params[0]}]) ${grouping} (${restParams.join(\", \")})`;\n  };\n}\nfunction operationWithRangeVectorRenderer(model, def, innerExpr) {\n  const params = model.params ?? [];\n  const rangeVector = params[0] ?? \"$__interval\";\n  if (params.length === 2 && model.id === _types__WEBPACK_IMPORTED_MODULE_3__.LokiOperationId.QuantileOverTime) {\n    const quantile = params[1];\n    return `${model.id}(${quantile}, ${innerExpr} [${rangeVector}])`;\n  }\n  return `${model.id}(${innerExpr} [${params[0] ?? \"$__interval\"}])`;\n}\nfunction labelFilterRenderer(model, def, innerExpr) {\n  const integerOperators = [\"<\", \"<=\", \">\", \">=\"];\n  if (integerOperators.includes(String(model.params[1]))) {\n    return `${innerExpr} | ${model.params[0]} ${model.params[1]} ${model.params[2]}`;\n  }\n  return `${innerExpr} | ${model.params[0]} ${model.params[1]} \\`${model.params[2]}\\``;\n}\nfunction isConflictingFilter(operation, queryOperations) {\n  const operationIsNegative = operation.params[1].toString().startsWith(\"!\");\n  const candidates = queryOperations.filter(\n    (queryOperation) => queryOperation.id === _types__WEBPACK_IMPORTED_MODULE_3__.LokiOperationId.LabelFilter && queryOperation.params[0] === operation.params[0] && queryOperation.params[2] === operation.params[2]\n  );\n  const conflict = candidates.some((candidate) => {\n    if (operationIsNegative && candidate.params[1].toString().startsWith(\"!\") === false) {\n      return true;\n    }\n    if (operationIsNegative === false && candidate.params[1].toString().startsWith(\"!\")) {\n      return true;\n    }\n    return false;\n  });\n  return conflict;\n}\nfunction pipelineRenderer(model, def, innerExpr) {\n  return `${innerExpr} | ${model.id}`;\n}\nfunction isRangeVectorFunction(def) {\n  return def.category === _types__WEBPACK_IMPORTED_MODULE_3__.LokiVisualQueryOperationCategory.RangeFunctions;\n}\nfunction getIndexOfOrLast(operations, queryModeller, condition) {\n  const index = operations.findIndex((x) => {\n    const opDef = queryModeller.getOperationDef(x.id);\n    if (!opDef) {\n      return false;\n    }\n    return condition(opDef);\n  });\n  return index === -1 ? operations.length : index;\n}\nfunction addLokiOperation(def, query, modeller) {\n  const newOperation = {\n    id: def.id,\n    params: def.defaultParams\n  };\n  const operations = [...query.operations];\n  const existingRangeVectorFunction = operations.find((x) => {\n    const opDef = modeller.getOperationDef(x.id);\n    if (!opDef) {\n      return false;\n    }\n    return isRangeVectorFunction(opDef);\n  });\n  switch (def.category) {\n    case _types__WEBPACK_IMPORTED_MODULE_3__.LokiVisualQueryOperationCategory.Aggregations:\n    case _types__WEBPACK_IMPORTED_MODULE_3__.LokiVisualQueryOperationCategory.Functions:\n      if (!existingRangeVectorFunction) {\n        const placeToInsert2 = getIndexOfOrLast(\n          operations,\n          modeller,\n          (def2) => def2.category === _types__WEBPACK_IMPORTED_MODULE_3__.LokiVisualQueryOperationCategory.Functions\n        );\n        operations.splice(placeToInsert2, 0, { id: _types__WEBPACK_IMPORTED_MODULE_3__.LokiOperationId.Rate, params: [\"$__interval\"] });\n      }\n      operations.push(newOperation);\n      break;\n    case _types__WEBPACK_IMPORTED_MODULE_3__.LokiVisualQueryOperationCategory.RangeFunctions:\n      if (existingRangeVectorFunction) {\n        const index = operations.indexOf(existingRangeVectorFunction);\n        operations[index] = newOperation;\n        break;\n      }\n    default:\n      const placeToInsert = getIndexOfOrLast(\n        operations,\n        modeller,\n        (x) => (def.orderRank ?? 100) < (x.orderRank ?? 100)\n      );\n      operations.splice(placeToInsert, 0, newOperation);\n      break;\n  }\n  return {\n    ...query,\n    operations\n  };\n}\nfunction addNestedQueryHandler(def, query) {\n  return {\n    ...query,\n    binaryQueries: [\n      ...query.binaryQueries ?? [],\n      {\n        operator: \"/\",\n        query\n      }\n    ]\n  };\n}\nfunction getLineFilterRenderer(operation, caseInsensitive) {\n  return function lineFilterRenderer(model, def, innerExpr) {\n    if (caseInsensitive) {\n      return `${innerExpr} ${operation} \\`(?i)${model.params[0]}\\``;\n    }\n    return `${innerExpr} ${operation} \\`${model.params[0]}\\``;\n  };\n}\nfunction getRangeVectorParamDef() {\n  return {\n    name: \"Range\",\n    type: \"string\",\n    options: [\"$__interval\", \"$__range\", \"1m\", \"5m\", \"10m\", \"1h\", \"24h\"]\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/querybuilder/operationUtils.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/querybuilder/operations.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkParamsAreValid: () => (/* binding */ checkParamsAreValid),\n/* harmony export */   explainOperator: () => (/* binding */ explainOperator),\n/* harmony export */   getDefinitionById: () => (/* binding */ getDefinitionById),\n/* harmony export */   getOperationDefinitions: () => (/* binding */ getOperationDefinitions)\n/* harmony export */ });\n/* harmony import */ var _prometheus_querybuilder_shared_operationUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./public/app/plugins/datasource/prometheus/querybuilder/shared/operationUtils.ts\");\n/* harmony import */ var _binaryScalarOperations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/plugins/datasource/loki/querybuilder/binaryScalarOperations.ts\");\n/* harmony import */ var _components_UnwrapParamEditor__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/plugins/datasource/loki/querybuilder/components/UnwrapParamEditor.tsx\");\n/* harmony import */ var _operationUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./public/app/plugins/datasource/loki/querybuilder/operationUtils.ts\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./public/app/plugins/datasource/loki/querybuilder/types.ts\");\n\n\n\n\n\n\nfunction getOperationDefinitions() {\n  const aggregations = [\n    _types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationId.Sum,\n    _types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationId.Min,\n    _types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationId.Max,\n    _types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationId.Avg,\n    _types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationId.Stddev,\n    _types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationId.Stdvar,\n    _types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationId.Count\n  ].flatMap(\n    (opId) => (0,_prometheus_querybuilder_shared_operationUtils__WEBPACK_IMPORTED_MODULE_0__.createAggregationOperation)(opId, {\n      addOperationHandler: _operationUtils__WEBPACK_IMPORTED_MODULE_3__.addLokiOperation,\n      orderRank: _types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationOrder.Last\n    })\n  );\n  const aggregationsWithParam = [_types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationId.TopK, _types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationId.BottomK].flatMap((opId) => {\n    return (0,_prometheus_querybuilder_shared_operationUtils__WEBPACK_IMPORTED_MODULE_0__.createAggregationOperationWithParam)(\n      opId,\n      {\n        params: [{ name: \"K-value\", type: \"number\" }],\n        defaultParams: [5]\n      },\n      {\n        addOperationHandler: _operationUtils__WEBPACK_IMPORTED_MODULE_3__.addLokiOperation,\n        orderRank: _types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationOrder.Last\n      }\n    );\n  });\n  const rangeOperations = [\n    (0,_operationUtils__WEBPACK_IMPORTED_MODULE_3__.createRangeOperation)(_types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationId.Rate),\n    (0,_operationUtils__WEBPACK_IMPORTED_MODULE_3__.createRangeOperation)(_types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationId.RateCounter),\n    (0,_operationUtils__WEBPACK_IMPORTED_MODULE_3__.createRangeOperation)(_types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationId.CountOverTime),\n    (0,_operationUtils__WEBPACK_IMPORTED_MODULE_3__.createRangeOperation)(_types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationId.SumOverTime),\n    (0,_operationUtils__WEBPACK_IMPORTED_MODULE_3__.createRangeOperation)(_types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationId.BytesRate),\n    (0,_operationUtils__WEBPACK_IMPORTED_MODULE_3__.createRangeOperation)(_types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationId.BytesOverTime),\n    (0,_operationUtils__WEBPACK_IMPORTED_MODULE_3__.createRangeOperation)(_types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationId.AbsentOverTime)\n  ];\n  const rangeOperationsWithGrouping = [\n    ...(0,_operationUtils__WEBPACK_IMPORTED_MODULE_3__.createRangeOperationWithGrouping)(_types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationId.AvgOverTime),\n    ...(0,_operationUtils__WEBPACK_IMPORTED_MODULE_3__.createRangeOperationWithGrouping)(_types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationId.MaxOverTime),\n    ...(0,_operationUtils__WEBPACK_IMPORTED_MODULE_3__.createRangeOperationWithGrouping)(_types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationId.MinOverTime),\n    ...(0,_operationUtils__WEBPACK_IMPORTED_MODULE_3__.createRangeOperationWithGrouping)(_types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationId.FirstOverTime),\n    ...(0,_operationUtils__WEBPACK_IMPORTED_MODULE_3__.createRangeOperationWithGrouping)(_types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationId.LastOverTime),\n    ...(0,_operationUtils__WEBPACK_IMPORTED_MODULE_3__.createRangeOperationWithGrouping)(_types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationId.StdvarOverTime),\n    ...(0,_operationUtils__WEBPACK_IMPORTED_MODULE_3__.createRangeOperationWithGrouping)(_types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationId.StddevOverTime),\n    ...(0,_operationUtils__WEBPACK_IMPORTED_MODULE_3__.createRangeOperationWithGrouping)(_types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationId.QuantileOverTime)\n  ];\n  const list = [\n    ...aggregations,\n    ...aggregationsWithParam,\n    ...rangeOperations,\n    ...rangeOperationsWithGrouping,\n    {\n      id: _types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationId.Json,\n      name: \"Json\",\n      params: [\n        {\n          name: \"Expression\",\n          type: \"string\",\n          restParam: true,\n          optional: true,\n          minWidth: 18,\n          placeholder: 'server=\"servers[0]\"',\n          description: \"Using expressions with your json parser will extract only the specified json fields to labels. You can specify one or more expressions in this way. All expressions must be quoted.\"\n        }\n      ],\n      defaultParams: [],\n      alternativesKey: \"format\",\n      category: _types__WEBPACK_IMPORTED_MODULE_4__.LokiVisualQueryOperationCategory.Formats,\n      orderRank: _types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationOrder.Parsers,\n      renderer: (model, def, innerExpr) => `${innerExpr} | json ${model.params.join(\", \")}`.trim(),\n      addOperationHandler: _operationUtils__WEBPACK_IMPORTED_MODULE_3__.addLokiOperation,\n      explainHandler: () => `This will extract keys and values from a [json](https://grafana.com/docs/loki/latest/logql/log_queries/#json) formatted log line as labels. The extracted labels can be used in label filter expressions and used as values for a range aggregation via the unwrap operation.`\n    },\n    {\n      id: _types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationId.Logfmt,\n      name: \"Logfmt\",\n      params: [],\n      defaultParams: [],\n      alternativesKey: \"format\",\n      category: _types__WEBPACK_IMPORTED_MODULE_4__.LokiVisualQueryOperationCategory.Formats,\n      orderRank: _types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationOrder.Parsers,\n      renderer: _operationUtils__WEBPACK_IMPORTED_MODULE_3__.pipelineRenderer,\n      addOperationHandler: _operationUtils__WEBPACK_IMPORTED_MODULE_3__.addLokiOperation,\n      explainHandler: () => `This will extract all keys and values from a [logfmt](https://grafana.com/docs/loki/latest/logql/log_queries/#logfmt) formatted log line as labels. The extracted labels can be used in label filter expressions and used as values for a range aggregation via the unwrap operation.`\n    },\n    {\n      id: _types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationId.Regexp,\n      name: \"Regexp\",\n      params: [\n        {\n          name: \"String\",\n          type: \"string\",\n          hideName: true,\n          placeholder: \"<re>\",\n          description: \"The regexp expression that matches the structure of a log line.\",\n          minWidth: 20\n        }\n      ],\n      defaultParams: [\"\"],\n      alternativesKey: \"format\",\n      category: _types__WEBPACK_IMPORTED_MODULE_4__.LokiVisualQueryOperationCategory.Formats,\n      orderRank: _types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationOrder.Parsers,\n      renderer: (model, def, innerExpr) => `${innerExpr} | regexp \\`${model.params[0]}\\``,\n      addOperationHandler: _operationUtils__WEBPACK_IMPORTED_MODULE_3__.addLokiOperation,\n      explainHandler: () => `The [regexp parser](https://grafana.com/docs/loki/latest/logql/log_queries/#regular-expression) takes a single parameter | regexp \"<re>\" which is the regular expression using the Golang RE2 syntax. The regular expression must contain a least one named sub-match (e.g (?P<name>re)), each sub-match will extract a different label. The expression matches the structure of a log line. The extracted labels can be used in label filter expressions and used as values for a range aggregation via the unwrap operation.`\n    },\n    {\n      id: _types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationId.Pattern,\n      name: \"Pattern\",\n      params: [\n        {\n          name: \"String\",\n          type: \"string\",\n          hideName: true,\n          placeholder: \"<pattern-expression>\",\n          description: \"The expression that matches the structure of a log line.\",\n          minWidth: 20\n        }\n      ],\n      defaultParams: [\"\"],\n      alternativesKey: \"format\",\n      category: _types__WEBPACK_IMPORTED_MODULE_4__.LokiVisualQueryOperationCategory.Formats,\n      orderRank: _types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationOrder.Parsers,\n      renderer: (model, def, innerExpr) => `${innerExpr} | pattern \\`${model.params[0]}\\``,\n      addOperationHandler: _operationUtils__WEBPACK_IMPORTED_MODULE_3__.addLokiOperation,\n      explainHandler: () => `The [pattern parser](https://grafana.com/docs/loki/latest/logql/log_queries/#pattern) allows the explicit extraction of fields from log lines by defining a pattern expression (| pattern \\`<pattern-expression>\\`). The expression matches the structure of a log line. The extracted labels can be used in label filter expressions and used as values for a range aggregation via the unwrap operation.`\n    },\n    {\n      id: _types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationId.Unpack,\n      name: \"Unpack\",\n      params: [],\n      defaultParams: [],\n      alternativesKey: \"format\",\n      category: _types__WEBPACK_IMPORTED_MODULE_4__.LokiVisualQueryOperationCategory.Formats,\n      orderRank: _types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationOrder.Parsers,\n      renderer: _operationUtils__WEBPACK_IMPORTED_MODULE_3__.pipelineRenderer,\n      addOperationHandler: _operationUtils__WEBPACK_IMPORTED_MODULE_3__.addLokiOperation,\n      explainHandler: () => `This will extract all keys and values from a JSON log line, [unpacking](https://grafana.com/docs/loki/latest/logql/log_queries/#unpack) all embedded labels in the pack stage. The extracted labels can be used in label filter expressions and used as values for a range aggregation via the unwrap operation.`\n    },\n    {\n      id: _types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationId.LineFormat,\n      name: \"Line format\",\n      params: [\n        {\n          name: \"String\",\n          type: \"string\",\n          hideName: true,\n          placeholder: \"{{.status_code}}\",\n          description: \"A line template that can refer to stream labels and extracted labels.\",\n          minWidth: 20\n        }\n      ],\n      defaultParams: [\"\"],\n      alternativesKey: \"format\",\n      category: _types__WEBPACK_IMPORTED_MODULE_4__.LokiVisualQueryOperationCategory.Formats,\n      orderRank: _types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationOrder.PipeOperations,\n      renderer: (model, def, innerExpr) => `${innerExpr} | line_format \\`${model.params[0]}\\``,\n      addOperationHandler: _operationUtils__WEBPACK_IMPORTED_MODULE_3__.addLokiOperation,\n      explainHandler: () => `This will replace log line using a specified template. The template can refer to stream labels and extracted labels.\n\nExample: \\`{{.status_code}} - {{.message}}\\`\n\n[Read the docs](https://grafana.com/docs/loki/latest/logql/log_queries/#line-format-expression) for more.\n        `\n    },\n    {\n      id: _types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationId.LabelFormat,\n      name: \"Label format\",\n      params: [\n        { name: \"Label\", type: \"string\" },\n        { name: \"Rename to\", type: \"string\" }\n      ],\n      defaultParams: [\"\", \"\"],\n      alternativesKey: \"format\",\n      category: _types__WEBPACK_IMPORTED_MODULE_4__.LokiVisualQueryOperationCategory.Formats,\n      orderRank: _types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationOrder.PipeOperations,\n      renderer: (model, def, innerExpr) => `${innerExpr} | label_format ${model.params[1]}=${model.params[0]}`,\n      addOperationHandler: _operationUtils__WEBPACK_IMPORTED_MODULE_3__.addLokiOperation,\n      explainHandler: () => `This will change name of label to desired new label. In the example below, label \"error_level\" will be renamed to \"level\".\n\nExample: \\`\\`error_level=\\`level\\` \\`\\`\n\n[Read the docs](https://grafana.com/docs/loki/latest/logql/log_queries/#labels-format-expression) for more.\n        `\n    },\n    {\n      id: _types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationId.LineContains,\n      name: \"Line contains\",\n      params: [\n        {\n          name: \"String\",\n          type: \"string\",\n          hideName: true,\n          placeholder: \"Text to find\",\n          description: \"Find log lines that contains this text\",\n          minWidth: 20,\n          runQueryOnEnter: true\n        }\n      ],\n      defaultParams: [\"\"],\n      alternativesKey: \"line filter\",\n      category: _types__WEBPACK_IMPORTED_MODULE_4__.LokiVisualQueryOperationCategory.LineFilters,\n      orderRank: _types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationOrder.LineFilters,\n      renderer: (0,_operationUtils__WEBPACK_IMPORTED_MODULE_3__.getLineFilterRenderer)(\"|=\"),\n      addOperationHandler: _operationUtils__WEBPACK_IMPORTED_MODULE_3__.addLokiOperation,\n      explainHandler: (op) => `Return log lines that contain string \\`${op.params[0]}\\`.`\n    },\n    {\n      id: _types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationId.LineContainsNot,\n      name: \"Line does not contain\",\n      params: [\n        {\n          name: \"String\",\n          type: \"string\",\n          hideName: true,\n          placeholder: \"Text to exclude\",\n          description: \"Find log lines that does not contain this text\",\n          minWidth: 26,\n          runQueryOnEnter: true\n        }\n      ],\n      defaultParams: [\"\"],\n      alternativesKey: \"line filter\",\n      category: _types__WEBPACK_IMPORTED_MODULE_4__.LokiVisualQueryOperationCategory.LineFilters,\n      orderRank: _types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationOrder.LineFilters,\n      renderer: (0,_operationUtils__WEBPACK_IMPORTED_MODULE_3__.getLineFilterRenderer)(\"!=\"),\n      addOperationHandler: _operationUtils__WEBPACK_IMPORTED_MODULE_3__.addLokiOperation,\n      explainHandler: (op) => `Return log lines that does not contain string \\`${op.params[0]}\\`.`\n    },\n    {\n      id: _types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationId.LineContainsCaseInsensitive,\n      name: \"Line contains case insensitive\",\n      params: [\n        {\n          name: \"String\",\n          type: \"string\",\n          hideName: true,\n          placeholder: \"Text to find\",\n          description: \"Find log lines that contains this text\",\n          minWidth: 33,\n          runQueryOnEnter: true\n        }\n      ],\n      defaultParams: [\"\"],\n      alternativesKey: \"line filter\",\n      category: _types__WEBPACK_IMPORTED_MODULE_4__.LokiVisualQueryOperationCategory.LineFilters,\n      orderRank: _types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationOrder.LineFilters,\n      renderer: (0,_operationUtils__WEBPACK_IMPORTED_MODULE_3__.getLineFilterRenderer)(\"|~\", true),\n      addOperationHandler: _operationUtils__WEBPACK_IMPORTED_MODULE_3__.addLokiOperation,\n      explainHandler: (op) => `Return log lines that match regex \\`(?i)${op.params[0]}\\`.`\n    },\n    {\n      id: _types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationId.LineContainsNotCaseInsensitive,\n      name: \"Line does not contain case insensitive\",\n      params: [\n        {\n          name: \"String\",\n          type: \"string\",\n          hideName: true,\n          placeholder: \"Text to exclude\",\n          description: \"Find log lines that does not contain this text\",\n          minWidth: 40,\n          runQueryOnEnter: true\n        }\n      ],\n      defaultParams: [\"\"],\n      alternativesKey: \"line filter\",\n      category: _types__WEBPACK_IMPORTED_MODULE_4__.LokiVisualQueryOperationCategory.LineFilters,\n      orderRank: _types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationOrder.LineFilters,\n      renderer: (0,_operationUtils__WEBPACK_IMPORTED_MODULE_3__.getLineFilterRenderer)(\"!~\", true),\n      addOperationHandler: _operationUtils__WEBPACK_IMPORTED_MODULE_3__.addLokiOperation,\n      explainHandler: (op) => `Return log lines that does not match regex \\`(?i)${op.params[0]}\\`.`\n    },\n    {\n      id: _types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationId.LineMatchesRegex,\n      name: \"Line contains regex match\",\n      params: [\n        {\n          name: \"Regex\",\n          type: \"string\",\n          hideName: true,\n          placeholder: \"Pattern to match\",\n          description: \"Find log lines that match this regex pattern\",\n          minWidth: 30,\n          runQueryOnEnter: true\n        }\n      ],\n      defaultParams: [\"\"],\n      alternativesKey: \"line filter\",\n      category: _types__WEBPACK_IMPORTED_MODULE_4__.LokiVisualQueryOperationCategory.LineFilters,\n      orderRank: _types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationOrder.LineFilters,\n      renderer: (0,_operationUtils__WEBPACK_IMPORTED_MODULE_3__.getLineFilterRenderer)(\"|~\"),\n      addOperationHandler: _operationUtils__WEBPACK_IMPORTED_MODULE_3__.addLokiOperation,\n      explainHandler: (op) => `Return log lines that match a \\`RE2\\` regex pattern. \\`${op.params[0]}\\`.`\n    },\n    {\n      id: _types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationId.LineMatchesRegexNot,\n      name: \"Line does not match regex\",\n      params: [\n        {\n          name: \"Regex\",\n          type: \"string\",\n          hideName: true,\n          placeholder: \"Pattern to exclude\",\n          description: \"Find log lines that does not match this regex pattern\",\n          minWidth: 30,\n          runQueryOnEnter: true\n        }\n      ],\n      defaultParams: [\"\"],\n      alternativesKey: \"line filter\",\n      category: _types__WEBPACK_IMPORTED_MODULE_4__.LokiVisualQueryOperationCategory.LineFilters,\n      orderRank: _types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationOrder.LineFilters,\n      renderer: (0,_operationUtils__WEBPACK_IMPORTED_MODULE_3__.getLineFilterRenderer)(\"!~\"),\n      addOperationHandler: _operationUtils__WEBPACK_IMPORTED_MODULE_3__.addLokiOperation,\n      explainHandler: (op) => `Return log lines that doesn't match a \\`RE2\\` regex pattern. \\`${op.params[0]}\\`.`\n    },\n    {\n      id: _types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationId.LineFilterIpMatches,\n      name: \"IP line filter expression\",\n      params: [\n        {\n          name: \"Operator\",\n          type: \"string\",\n          minWidth: 16,\n          options: [_types__WEBPACK_IMPORTED_MODULE_4__.lokiOperators.contains, _types__WEBPACK_IMPORTED_MODULE_4__.lokiOperators.doesNotContain]\n        },\n        {\n          name: \"Pattern\",\n          type: \"string\",\n          placeholder: \"<pattern>\",\n          minWidth: 16,\n          runQueryOnEnter: true\n        }\n      ],\n      defaultParams: [\"|=\", \"\"],\n      alternativesKey: \"line filter\",\n      category: _types__WEBPACK_IMPORTED_MODULE_4__.LokiVisualQueryOperationCategory.LineFilters,\n      orderRank: _types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationOrder.LineFilters,\n      renderer: (op, def, innerExpr) => `${innerExpr} ${op.params[0]} ip(\\`${op.params[1]}\\`)`,\n      addOperationHandler: _operationUtils__WEBPACK_IMPORTED_MODULE_3__.addLokiOperation,\n      explainHandler: (op) => `Return log lines using IP matching of \\`${op.params[1]}\\``\n    },\n    {\n      id: _types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationId.LabelFilter,\n      name: \"Label filter expression\",\n      params: [\n        { name: \"Label\", type: \"string\", minWidth: 14 },\n        {\n          name: \"Operator\",\n          type: \"string\",\n          minWidth: 14,\n          options: [\n            _types__WEBPACK_IMPORTED_MODULE_4__.lokiOperators.equals,\n            _types__WEBPACK_IMPORTED_MODULE_4__.lokiOperators.doesNotEqual,\n            _types__WEBPACK_IMPORTED_MODULE_4__.lokiOperators.matchesRegex,\n            _types__WEBPACK_IMPORTED_MODULE_4__.lokiOperators.doesNotMatchRegex,\n            _types__WEBPACK_IMPORTED_MODULE_4__.lokiOperators.greaterThan,\n            _types__WEBPACK_IMPORTED_MODULE_4__.lokiOperators.lessThan,\n            _types__WEBPACK_IMPORTED_MODULE_4__.lokiOperators.greaterThanOrEqual,\n            _types__WEBPACK_IMPORTED_MODULE_4__.lokiOperators.lessThanOrEqual\n          ]\n        },\n        { name: \"Value\", type: \"string\", minWidth: 14 }\n      ],\n      defaultParams: [\"\", \"=\", \"\"],\n      alternativesKey: \"label filter\",\n      category: _types__WEBPACK_IMPORTED_MODULE_4__.LokiVisualQueryOperationCategory.LabelFilters,\n      orderRank: _types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationOrder.PipeOperations,\n      renderer: _operationUtils__WEBPACK_IMPORTED_MODULE_3__.labelFilterRenderer,\n      addOperationHandler: _operationUtils__WEBPACK_IMPORTED_MODULE_3__.addLokiOperation,\n      explainHandler: () => `Label expression filter allows filtering using original and extracted labels.`\n    },\n    {\n      id: _types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationId.LabelFilterIpMatches,\n      name: \"IP label filter expression\",\n      params: [\n        { name: \"Label\", type: \"string\", minWidth: 14 },\n        {\n          name: \"Operator\",\n          type: \"string\",\n          minWidth: 14,\n          options: [_types__WEBPACK_IMPORTED_MODULE_4__.lokiOperators.equals, _types__WEBPACK_IMPORTED_MODULE_4__.lokiOperators.doesNotEqual]\n        },\n        { name: \"Value\", type: \"string\", minWidth: 14 }\n      ],\n      defaultParams: [\"\", \"=\", \"\"],\n      alternativesKey: \"label filter\",\n      category: _types__WEBPACK_IMPORTED_MODULE_4__.LokiVisualQueryOperationCategory.LabelFilters,\n      orderRank: _types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationOrder.PipeOperations,\n      renderer: (model, def, innerExpr) => `${innerExpr} | ${model.params[0]} ${model.params[1]} ip(\\`${model.params[2]}\\`)`,\n      addOperationHandler: _operationUtils__WEBPACK_IMPORTED_MODULE_3__.addLokiOperation,\n      explainHandler: (op) => `Return log lines using IP matching of \\`${op.params[2]}\\` for \\`${op.params[0]}\\` label`\n    },\n    {\n      id: _types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationId.LabelFilterNoErrors,\n      name: \"No pipeline errors\",\n      params: [],\n      defaultParams: [],\n      alternativesKey: \"label filter\",\n      category: _types__WEBPACK_IMPORTED_MODULE_4__.LokiVisualQueryOperationCategory.LabelFilters,\n      orderRank: _types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationOrder.NoErrors,\n      renderer: (model, def, innerExpr) => `${innerExpr} | __error__=\\`\\``,\n      addOperationHandler: _operationUtils__WEBPACK_IMPORTED_MODULE_3__.addLokiOperation,\n      explainHandler: () => `Filter out all formatting and parsing errors.`\n    },\n    {\n      id: _types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationId.Unwrap,\n      name: \"Unwrap\",\n      params: [\n        {\n          name: \"Identifier\",\n          type: \"string\",\n          hideName: true,\n          minWidth: 16,\n          placeholder: \"Label key\",\n          editor: _components_UnwrapParamEditor__WEBPACK_IMPORTED_MODULE_2__.UnwrapParamEditor\n        },\n        {\n          name: \"Conversion function\",\n          hideName: true,\n          type: \"string\",\n          options: [\"duration\", \"duration_seconds\", \"bytes\"],\n          optional: true\n        }\n      ],\n      defaultParams: [\"\", \"\"],\n      alternativesKey: \"format\",\n      category: _types__WEBPACK_IMPORTED_MODULE_4__.LokiVisualQueryOperationCategory.Formats,\n      orderRank: _types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationOrder.Unwrap,\n      renderer: (op, def, innerExpr) => `${innerExpr} | unwrap ${op.params[1] ? `${op.params[1]}(${op.params[0]})` : op.params[0]}`,\n      addOperationHandler: _operationUtils__WEBPACK_IMPORTED_MODULE_3__.addLokiOperation,\n      explainHandler: (op) => {\n        let label = String(op.params[0]).length > 0 ? op.params[0] : \"<label>\";\n        return `Use the extracted label \\`${label}\\` as sample values instead of log lines for the subsequent range aggregation.${op.params[1] ? ` Conversion function \\`${op.params[1]}\\` wrapping \\`${label}\\` will attempt to convert this label from a specific format (e.g. 3k, 500ms).` : \"\"}`;\n      }\n    },\n    {\n      id: _types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationId.Decolorize,\n      name: \"Decolorize\",\n      params: [],\n      defaultParams: [],\n      alternativesKey: \"format\",\n      category: _types__WEBPACK_IMPORTED_MODULE_4__.LokiVisualQueryOperationCategory.Formats,\n      orderRank: _types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationOrder.PipeOperations,\n      renderer: (op, def, innerExpr) => `${innerExpr} | decolorize`,\n      addOperationHandler: _operationUtils__WEBPACK_IMPORTED_MODULE_3__.addLokiOperation,\n      explainHandler: () => `This will remove ANSI color codes from log lines.`\n    },\n    ..._binaryScalarOperations__WEBPACK_IMPORTED_MODULE_1__.binaryScalarOperations,\n    {\n      id: _types__WEBPACK_IMPORTED_MODULE_4__.LokiOperationId.NestedQuery,\n      name: \"Binary operation with query\",\n      params: [],\n      defaultParams: [],\n      category: _types__WEBPACK_IMPORTED_MODULE_4__.LokiVisualQueryOperationCategory.BinaryOps,\n      renderer: (model, def, innerExpr) => innerExpr,\n      addOperationHandler: _operationUtils__WEBPACK_IMPORTED_MODULE_3__.addNestedQueryHandler\n    }\n  ];\n  return list;\n}\nconst definitions = getOperationDefinitions();\nfunction explainOperator(id) {\n  const definition = definitions.find((operation) => operation.id === id);\n  const explain = definition?.explainHandler?.({ id: \"\", params: [\"<value>\"] }) || \"\";\n  return explain.replace(/\\[(.*)\\]\\(.*\\)/g, \"$1\");\n}\nfunction getDefinitionById(id) {\n  return definitions.find((x) => x.id === id);\n}\nfunction checkParamsAreValid(def, params) {\n  if (params.length < def.params.filter((param) => !param.optional).length) {\n    return false;\n  }\n  return true;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/querybuilder/operations.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/querybuilder/parsing.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildVisualQueryFromString: () => (/* binding */ buildVisualQueryFromString),\n/* harmony export */   handleExpression: () => (/* binding */ handleExpression),\n/* harmony export */   handleQuotes: () => (/* binding */ handleQuotes)\n/* harmony export */ });\n/* harmony import */ var _prometheus_io_lezer_promql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/__virtual__/@prometheus-io-lezer-promql-virtual-ded3c03445/0/cache/@prometheus-io-lezer-promql-npm-0.37.0-dcde65254c-17722456a6.zip/node_modules/@prometheus-io/lezer-promql/dist/index.es.js\");\n/* harmony import */ var _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-lezer-logql-virtual-0b75aafe9e/0/cache/@grafana-lezer-logql-npm-0.1.11-91e9d74a76-6a624b9a8d.zip/node_modules/@grafana/lezer-logql/index.es.js\");\n/* harmony import */ var _prometheus_querybuilder_shared_parsingUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/plugins/datasource/prometheus/querybuilder/shared/parsingUtils.ts\");\n/* harmony import */ var _binaryScalarOperations__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./public/app/plugins/datasource/loki/querybuilder/binaryScalarOperations.ts\");\n/* harmony import */ var _operations__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./public/app/plugins/datasource/loki/querybuilder/operations.ts\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./public/app/plugins/datasource/loki/querybuilder/types.ts\");\n\n\n\n\n\n\n\nfunction buildVisualQueryFromString(expr) {\n  const replacedExpr = (0,_prometheus_querybuilder_shared_parsingUtils__WEBPACK_IMPORTED_MODULE_2__.replaceVariables)(expr);\n  const tree = _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.parser.parse(replacedExpr);\n  const node = tree.topNode;\n  const visQuery = {\n    labels: [],\n    operations: []\n  };\n  const context = {\n    query: visQuery,\n    errors: []\n  };\n  try {\n    handleExpression(replacedExpr, node, context);\n  } catch (err) {\n    console.error(err);\n    if (err instanceof Error) {\n      context.errors.push({\n        text: err.message\n      });\n    }\n  }\n  if (isEmptyQuery(context.query)) {\n    context.errors = [];\n  }\n  return context;\n}\nfunction handleExpression(expr, node, context) {\n  const visQuery = context.query;\n  switch (node.type.id) {\n    case _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.Matcher: {\n      visQuery.labels.push(getLabel(expr, node));\n      const err = node.getChild(_prometheus_querybuilder_shared_parsingUtils__WEBPACK_IMPORTED_MODULE_2__.ErrorId);\n      if (err) {\n        context.errors.push((0,_prometheus_querybuilder_shared_parsingUtils__WEBPACK_IMPORTED_MODULE_2__.makeError)(expr, err));\n      }\n      break;\n    }\n    case _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.LineFilter: {\n      const { operation, error } = getLineFilter(expr, node);\n      if (operation) {\n        visQuery.operations.push(operation);\n      }\n      if (error) {\n        context.errors.push(createNotSupportedError(expr, node, error));\n      }\n      break;\n    }\n    case _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.LabelParser: {\n      visQuery.operations.push(getLabelParser(expr, node));\n      break;\n    }\n    case _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.LabelFilter: {\n      const { operation, error } = getLabelFilter(expr, node);\n      if (operation) {\n        visQuery.operations.push(operation);\n      }\n      if (error) {\n        context.errors.push(createNotSupportedError(expr, node, error));\n      }\n      break;\n    }\n    case _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.JsonExpressionParser: {\n      visQuery.operations.push(getJsonExpressionParser(expr, node));\n      break;\n    }\n    case _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.LineFormatExpr: {\n      visQuery.operations.push(getLineFormat(expr, node));\n      break;\n    }\n    case _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.LabelFormatMatcher: {\n      visQuery.operations.push(getLabelFormat(expr, node));\n      break;\n    }\n    case _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.UnwrapExpr: {\n      const { operation, error } = handleUnwrapExpr(expr, node, context);\n      if (operation) {\n        visQuery.operations.push(operation);\n      }\n      if (error) {\n        context.errors.push(createNotSupportedError(expr, node, error));\n      }\n      break;\n    }\n    case _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.Decolorize: {\n      visQuery.operations.push(getDecolorize());\n      break;\n    }\n    case _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.RangeAggregationExpr: {\n      visQuery.operations.push(handleRangeAggregation(expr, node, context));\n      break;\n    }\n    case _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.VectorAggregationExpr: {\n      visQuery.operations.push(handleVectorAggregation(expr, node, context));\n      break;\n    }\n    case _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.BinOpExpr: {\n      handleBinary(expr, node, context);\n      break;\n    }\n    case _prometheus_querybuilder_shared_parsingUtils__WEBPACK_IMPORTED_MODULE_2__.ErrorId: {\n      if (isIntervalVariableError(node)) {\n        break;\n      }\n      context.errors.push((0,_prometheus_querybuilder_shared_parsingUtils__WEBPACK_IMPORTED_MODULE_2__.makeError)(expr, node));\n      break;\n    }\n    default: {\n      let child = node.firstChild;\n      while (child) {\n        handleExpression(expr, child, context);\n        child = child.nextSibling;\n      }\n    }\n  }\n}\nfunction getLabel(expr, node) {\n  const labelNode = node.getChild(_grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.Identifier);\n  const label = (0,_prometheus_querybuilder_shared_parsingUtils__WEBPACK_IMPORTED_MODULE_2__.getString)(expr, labelNode);\n  const op = (0,_prometheus_querybuilder_shared_parsingUtils__WEBPACK_IMPORTED_MODULE_2__.getString)(expr, labelNode.nextSibling);\n  let value = (0,_prometheus_querybuilder_shared_parsingUtils__WEBPACK_IMPORTED_MODULE_2__.getString)(expr, node.getChild(_grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.String));\n  value = value.substring(1, value.length - 1);\n  return {\n    label,\n    op,\n    value\n  };\n}\nfunction getLineFilter(expr, node) {\n  const filter = (0,_prometheus_querybuilder_shared_parsingUtils__WEBPACK_IMPORTED_MODULE_2__.getString)(expr, node.getChild(_grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.Filter));\n  const filterExpr = handleQuotes((0,_prometheus_querybuilder_shared_parsingUtils__WEBPACK_IMPORTED_MODULE_2__.getString)(expr, node.getChild(_grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.String)));\n  const ipLineFilter = node.getChild(_grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.FilterOp)?.getChild(_grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.Ip);\n  if (ipLineFilter) {\n    return {\n      operation: {\n        id: _types__WEBPACK_IMPORTED_MODULE_5__.LokiOperationId.LineFilterIpMatches,\n        params: [filter, filterExpr]\n      }\n    };\n  }\n  const mapFilter = {\n    \"|=\": _types__WEBPACK_IMPORTED_MODULE_5__.LokiOperationId.LineContains,\n    \"!=\": _types__WEBPACK_IMPORTED_MODULE_5__.LokiOperationId.LineContainsNot,\n    \"|~\": _types__WEBPACK_IMPORTED_MODULE_5__.LokiOperationId.LineMatchesRegex,\n    \"!~\": _types__WEBPACK_IMPORTED_MODULE_5__.LokiOperationId.LineMatchesRegexNot\n  };\n  return {\n    operation: {\n      id: mapFilter[filter],\n      params: [filterExpr]\n    }\n  };\n}\nfunction getLabelParser(expr, node) {\n  const parserNode = node.firstChild;\n  const parser2 = (0,_prometheus_querybuilder_shared_parsingUtils__WEBPACK_IMPORTED_MODULE_2__.getString)(expr, parserNode);\n  const string = handleQuotes((0,_prometheus_querybuilder_shared_parsingUtils__WEBPACK_IMPORTED_MODULE_2__.getString)(expr, node.getChild(_grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.String)));\n  let params = !!string ? [string] : [];\n  const opDef = (0,_operations__WEBPACK_IMPORTED_MODULE_4__.getDefinitionById)(parser2);\n  if (opDef && !(0,_operations__WEBPACK_IMPORTED_MODULE_4__.checkParamsAreValid)(opDef, params)) {\n    params = opDef?.defaultParams || [];\n  }\n  return {\n    id: parser2,\n    params\n  };\n}\nfunction getJsonExpressionParser(expr, node) {\n  const parserNode = node.getChild(_grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.Json);\n  const parser2 = (0,_prometheus_querybuilder_shared_parsingUtils__WEBPACK_IMPORTED_MODULE_2__.getString)(expr, parserNode);\n  const params = [...(0,_prometheus_querybuilder_shared_parsingUtils__WEBPACK_IMPORTED_MODULE_2__.getAllByType)(expr, node, _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.JsonExpression)];\n  return {\n    id: parser2,\n    params\n  };\n}\nfunction getLabelFilter(expr, node) {\n  if (node.getChild(_grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.Or) || node.getChild(_grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.And) || node.getChild(\"Comma\")) {\n    return {\n      error: 'Label filter with comma, \"and\", \"or\" not supported in query builder'\n    };\n  }\n  if (node.firstChild.type.id === _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.IpLabelFilter) {\n    const ipLabelFilter = node.firstChild;\n    const label2 = ipLabelFilter?.getChild(_grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.Identifier);\n    const op2 = label2?.nextSibling;\n    const value2 = ipLabelFilter?.getChild(_grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.String);\n    const valueString = handleQuotes((0,_prometheus_querybuilder_shared_parsingUtils__WEBPACK_IMPORTED_MODULE_2__.getString)(expr, value2));\n    return {\n      operation: {\n        id: _types__WEBPACK_IMPORTED_MODULE_5__.LokiOperationId.LabelFilterIpMatches,\n        params: [(0,_prometheus_querybuilder_shared_parsingUtils__WEBPACK_IMPORTED_MODULE_2__.getString)(expr, label2), (0,_prometheus_querybuilder_shared_parsingUtils__WEBPACK_IMPORTED_MODULE_2__.getString)(expr, op2), valueString]\n      }\n    };\n  }\n  const id = _types__WEBPACK_IMPORTED_MODULE_5__.LokiOperationId.LabelFilter;\n  if (node.firstChild.type.id === _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.UnitFilter) {\n    const filter2 = node.firstChild.firstChild;\n    const label2 = filter2.firstChild;\n    const op2 = label2.nextSibling;\n    const value2 = op2.nextSibling;\n    const valueString = handleQuotes((0,_prometheus_querybuilder_shared_parsingUtils__WEBPACK_IMPORTED_MODULE_2__.getString)(expr, value2));\n    return {\n      operation: {\n        id,\n        params: [(0,_prometheus_querybuilder_shared_parsingUtils__WEBPACK_IMPORTED_MODULE_2__.getString)(expr, label2), (0,_prometheus_querybuilder_shared_parsingUtils__WEBPACK_IMPORTED_MODULE_2__.getString)(expr, op2), valueString]\n      }\n    };\n  }\n  const filter = node.firstChild;\n  const label = filter.firstChild;\n  const op = label.nextSibling;\n  const value = op.nextSibling;\n  const params = [(0,_prometheus_querybuilder_shared_parsingUtils__WEBPACK_IMPORTED_MODULE_2__.getString)(expr, label), (0,_prometheus_querybuilder_shared_parsingUtils__WEBPACK_IMPORTED_MODULE_2__.getString)(expr, op), handleQuotes((0,_prometheus_querybuilder_shared_parsingUtils__WEBPACK_IMPORTED_MODULE_2__.getString)(expr, value))];\n  if (params.join(\"\") === `__error__=`) {\n    return {\n      operation: {\n        id: _types__WEBPACK_IMPORTED_MODULE_5__.LokiOperationId.LabelFilterNoErrors,\n        params: []\n      }\n    };\n  }\n  return {\n    operation: {\n      id,\n      params\n    }\n  };\n}\nfunction getLineFormat(expr, node) {\n  const id = _types__WEBPACK_IMPORTED_MODULE_5__.LokiOperationId.LineFormat;\n  const string = handleQuotes((0,_prometheus_querybuilder_shared_parsingUtils__WEBPACK_IMPORTED_MODULE_2__.getString)(expr, node.getChild(_grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.String)));\n  return {\n    id,\n    params: [string]\n  };\n}\nfunction getLabelFormat(expr, node) {\n  const id = _types__WEBPACK_IMPORTED_MODULE_5__.LokiOperationId.LabelFormat;\n  const renameTo = node.getChild(_grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.Identifier);\n  const op = renameTo.nextSibling;\n  const originalLabel = op.nextSibling;\n  return {\n    id,\n    params: [(0,_prometheus_querybuilder_shared_parsingUtils__WEBPACK_IMPORTED_MODULE_2__.getString)(expr, originalLabel), handleQuotes((0,_prometheus_querybuilder_shared_parsingUtils__WEBPACK_IMPORTED_MODULE_2__.getString)(expr, renameTo))]\n  };\n}\nfunction getDecolorize() {\n  const id = _types__WEBPACK_IMPORTED_MODULE_5__.LokiOperationId.Decolorize;\n  return {\n    id,\n    params: []\n  };\n}\nfunction handleUnwrapExpr(expr, node, context) {\n  const unwrapExprChild = node.getChild(_grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.UnwrapExpr);\n  const labelFilterChild = node.getChild(_grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.LabelFilter);\n  const unwrapChild = node.getChild(_grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.Unwrap);\n  if (unwrapExprChild) {\n    handleExpression(expr, unwrapExprChild, context);\n  }\n  if (labelFilterChild) {\n    handleExpression(expr, labelFilterChild, context);\n  }\n  if (unwrapChild) {\n    if (unwrapChild.nextSibling?.type.id === _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.ConvOp) {\n      const convOp = unwrapChild.nextSibling;\n      const identifier = convOp.nextSibling;\n      return {\n        operation: {\n          id: _types__WEBPACK_IMPORTED_MODULE_5__.LokiOperationId.Unwrap,\n          params: [(0,_prometheus_querybuilder_shared_parsingUtils__WEBPACK_IMPORTED_MODULE_2__.getString)(expr, identifier), (0,_prometheus_querybuilder_shared_parsingUtils__WEBPACK_IMPORTED_MODULE_2__.getString)(expr, convOp)]\n        }\n      };\n    }\n    return {\n      operation: {\n        id: _types__WEBPACK_IMPORTED_MODULE_5__.LokiOperationId.Unwrap,\n        params: [(0,_prometheus_querybuilder_shared_parsingUtils__WEBPACK_IMPORTED_MODULE_2__.getString)(expr, unwrapChild?.nextSibling), \"\"]\n      }\n    };\n  }\n  return {};\n}\nfunction handleRangeAggregation(expr, node, context) {\n  const nameNode = node.getChild(_grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.RangeOp);\n  const funcName = (0,_prometheus_querybuilder_shared_parsingUtils__WEBPACK_IMPORTED_MODULE_2__.getString)(expr, nameNode);\n  const number = node.getChild(_grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.Number);\n  const logExpr = node.getChild(_grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.LogRangeExpr);\n  const params = number !== null && number !== void 0 ? [(0,_prometheus_querybuilder_shared_parsingUtils__WEBPACK_IMPORTED_MODULE_2__.getString)(expr, number)] : [];\n  const range = logExpr?.getChild(_grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.Range);\n  const rangeValue = range ? (0,_prometheus_querybuilder_shared_parsingUtils__WEBPACK_IMPORTED_MODULE_2__.getString)(expr, range) : null;\n  if (rangeValue) {\n    params.unshift(rangeValue.substring(1, rangeValue.length - 1));\n  }\n  const op = {\n    id: funcName,\n    params\n  };\n  if (logExpr) {\n    handleExpression(expr, logExpr, context);\n  }\n  return op;\n}\nfunction handleVectorAggregation(expr, node, context) {\n  const nameNode = node.getChild(_grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.VectorOp);\n  let funcName = (0,_prometheus_querybuilder_shared_parsingUtils__WEBPACK_IMPORTED_MODULE_2__.getString)(expr, nameNode);\n  const grouping = node.getChild(_grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.Grouping);\n  const params = [];\n  const numberNode = node.getChild(_grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.Number);\n  if (numberNode) {\n    params.push(Number((0,_prometheus_querybuilder_shared_parsingUtils__WEBPACK_IMPORTED_MODULE_2__.getString)(expr, numberNode)));\n  }\n  if (grouping) {\n    const byModifier = grouping.getChild(_grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.By);\n    if (byModifier && funcName) {\n      funcName = `__${funcName}_by`;\n    }\n    const withoutModifier = grouping.getChild(_grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.Without);\n    if (withoutModifier) {\n      funcName = `__${funcName}_without`;\n    }\n    params.push(...(0,_prometheus_querybuilder_shared_parsingUtils__WEBPACK_IMPORTED_MODULE_2__.getAllByType)(expr, grouping, _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.Identifier));\n  }\n  const metricExpr = node.getChild(_grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.MetricExpr);\n  const op = { id: funcName, params };\n  if (metricExpr) {\n    handleExpression(expr, metricExpr, context);\n  }\n  return op;\n}\nconst operatorToOpName = _binaryScalarOperations__WEBPACK_IMPORTED_MODULE_3__.binaryScalarDefs.reduce((acc, def) => {\n  acc[def.sign] = {\n    id: def.id,\n    comparison: def.comparison\n  };\n  return acc;\n}, {});\nfunction handleBinary(expr, node, context) {\n  const visQuery = context.query;\n  const left = node.firstChild;\n  const op = (0,_prometheus_querybuilder_shared_parsingUtils__WEBPACK_IMPORTED_MODULE_2__.getString)(expr, left.nextSibling);\n  const binModifier = getBinaryModifier(expr, node.getChild(_prometheus_io_lezer_promql__WEBPACK_IMPORTED_MODULE_0__.BinModifiers));\n  const right = node.lastChild;\n  const opDef = operatorToOpName[op];\n  const leftNumber = getLastChildWithSelector(left, \"MetricExpr.LiteralExpr.Number\");\n  const rightNumber = getLastChildWithSelector(right, \"MetricExpr.LiteralExpr.Number\");\n  const rightBinary = right.getChild(_grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.BinOpExpr);\n  if (leftNumber) {\n  } else {\n    handleExpression(expr, left, context);\n  }\n  if (rightNumber) {\n    visQuery.operations.push((0,_prometheus_querybuilder_shared_parsingUtils__WEBPACK_IMPORTED_MODULE_2__.makeBinOp)(opDef, expr, right, !!binModifier?.isBool));\n  } else if (rightBinary) {\n    const leftMostChild = (0,_prometheus_querybuilder_shared_parsingUtils__WEBPACK_IMPORTED_MODULE_2__.getLeftMostChild)(right);\n    if (leftMostChild?.name === \"Number\") {\n      visQuery.operations.push((0,_prometheus_querybuilder_shared_parsingUtils__WEBPACK_IMPORTED_MODULE_2__.makeBinOp)(opDef, expr, leftMostChild, !!binModifier?.isBool));\n    }\n    handleExpression(expr, right, context);\n  } else {\n    visQuery.binaryQueries = visQuery.binaryQueries || [];\n    const binQuery = {\n      operator: op,\n      query: {\n        labels: [],\n        operations: []\n      }\n    };\n    if (binModifier?.isMatcher) {\n      binQuery.vectorMatchesType = binModifier.matchType;\n      binQuery.vectorMatches = binModifier.matches;\n    }\n    visQuery.binaryQueries.push(binQuery);\n    handleExpression(expr, right, {\n      query: binQuery.query,\n      errors: context.errors\n    });\n  }\n}\nfunction getBinaryModifier(expr, node) {\n  if (!node) {\n    return void 0;\n  }\n  if (node.getChild(_grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.Bool)) {\n    return { isBool: true, isMatcher: false };\n  } else {\n    const matcher = node.getChild(_prometheus_io_lezer_promql__WEBPACK_IMPORTED_MODULE_0__.OnOrIgnoring);\n    if (!matcher) {\n      return void 0;\n    }\n    const labels = (0,_prometheus_querybuilder_shared_parsingUtils__WEBPACK_IMPORTED_MODULE_2__.getString)(expr, matcher.getChild(_grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.GroupingLabels)?.getChild(_grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.GroupingLabelList));\n    return {\n      isMatcher: true,\n      isBool: false,\n      matches: labels,\n      matchType: matcher.getChild(_grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.On) ? \"on\" : \"ignoring\"\n    };\n  }\n}\nfunction isIntervalVariableError(node) {\n  return node?.parent?.type.id === _grafana_lezer_logql__WEBPACK_IMPORTED_MODULE_1__.Range;\n}\nfunction handleQuotes(string) {\n  if (string[0] === `\"` && string[string.length - 1] === `\"`) {\n    return string.substring(1, string.length - 1).replace(/\\\\\"/g, '\"').replace(/\\\\\\\\/g, \"\\\\\");\n  }\n  return string.replace(/`/g, \"\");\n}\nfunction getLastChildWithSelector(node, selector) {\n  let child = node;\n  const children = selector.split(\".\");\n  for (const s of children) {\n    child = child.getChild(s);\n    if (!child) {\n      return null;\n    }\n  }\n  return child;\n}\nfunction createNotSupportedError(expr, node, error) {\n  const err = (0,_prometheus_querybuilder_shared_parsingUtils__WEBPACK_IMPORTED_MODULE_2__.makeError)(expr, node);\n  err.text = `${error}: ${err.text}`;\n  return err;\n}\nfunction isEmptyQuery(query) {\n  if (query.labels.length === 0 && query.operations.length === 0) {\n    return true;\n  }\n  return false;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/querybuilder/parsing.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/querybuilder/state.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   changeEditorMode: () => (/* binding */ changeEditorMode),\n/* harmony export */   getDefaultEditorMode: () => (/* binding */ getDefaultEditorMode),\n/* harmony export */   getQueryWithDefaults: () => (/* binding */ getQueryWithDefaults)\n/* harmony export */ });\n/* harmony import */ var app_core_store__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./public/app/core/store.ts\");\n/* harmony import */ var _prometheus_querybuilder_shared_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/plugins/datasource/prometheus/querybuilder/shared/types.ts\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/plugins/datasource/loki/types.ts\");\n\n\n\n\nconst queryEditorModeDefaultLocalStorageKey = \"LokiQueryEditorModeDefault\";\nfunction changeEditorMode(query, editorMode, onChange) {\n  if (query.expr === \"\") {\n    app_core_store__WEBPACK_IMPORTED_MODULE_0__[\"default\"].set(queryEditorModeDefaultLocalStorageKey, editorMode);\n  }\n  onChange({ ...query, editorMode });\n}\nfunction getDefaultEditorMode(expr) {\n  if (expr != null && expr !== \"\") {\n    return _prometheus_querybuilder_shared_types__WEBPACK_IMPORTED_MODULE_1__.QueryEditorMode.Code;\n  }\n  const value = app_core_store__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(queryEditorModeDefaultLocalStorageKey);\n  switch (value) {\n    case \"code\":\n      return _prometheus_querybuilder_shared_types__WEBPACK_IMPORTED_MODULE_1__.QueryEditorMode.Code;\n    case \"builder\":\n    default:\n      return _prometheus_querybuilder_shared_types__WEBPACK_IMPORTED_MODULE_1__.QueryEditorMode.Builder;\n  }\n}\nfunction getQueryWithDefaults(query) {\n  let result = query;\n  if (!query.editorMode) {\n    result = { ...query, editorMode: getDefaultEditorMode(query.expr) };\n  }\n  if (query.expr == null) {\n    result = { ...result, expr: \"\" };\n  }\n  if (query.queryType == null) {\n    result = { ...result, queryType: _types__WEBPACK_IMPORTED_MODULE_2__.LokiQueryType.Range };\n  }\n  return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL3F1ZXJ5YnVpbGRlci9zdGF0ZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQWtCO0FBRWM7QUFDUztBQUV6QyxNQUFNLHdDQUF3QztBQUV2QyxTQUFTLGlCQUFpQixPQUFrQixZQUE2QixVQUFzQztBQUVwSCxNQUFJLE1BQU0sU0FBUyxJQUFJO0FBQ3JCLDBEQUFLLENBQUMsSUFBSSx1Q0FBdUMsVUFBVTtBQUFBLEVBQzdEO0FBRUEsV0FBUyxFQUFFLEdBQUcsT0FBTyxXQUFXLENBQUM7QUFDbkM7QUFFTyxTQUFTLHFCQUFxQixNQUFjO0FBRWpELE1BQUksUUFBUSxRQUFRLFNBQVMsSUFBSTtBQUMvQixXQUFPLGtGQUFlLENBQUM7QUFBQSxFQUN6QjtBQUVBLFFBQU0sUUFBNEIsc0RBQUssQ0FBQyxJQUFJLHFDQUFxQztBQUNqRixVQUFRLE9BQU87QUFBQSxJQUNiLEtBQUs7QUFDSCxhQUFPLGtGQUFlLENBQUM7QUFBQSxJQUV6QixLQUFLO0FBQUEsSUFDTDtBQUNFLGFBQU8sa0ZBQWUsQ0FBQztBQUFBLEVBQzNCO0FBQ0Y7QUFLTyxTQUFTLHFCQUFxQixPQUE2QjtBQUVoRSxNQUFJLFNBQVM7QUFFYixNQUFJLENBQUMsTUFBTSxZQUFZO0FBQ3JCLGFBQVMsRUFBRSxHQUFHLE9BQU8sWUFBWSxxQkFBcUIsTUFBTSxJQUFJLEVBQUU7QUFBQSxFQUNwRTtBQUVBLE1BQUksTUFBTSxRQUFRLE1BQU07QUFDdEIsYUFBUyxFQUFFLEdBQUcsUUFBUSxNQUFNLEdBQUc7QUFBQSxFQUNqQztBQUVBLE1BQUksTUFBTSxhQUFhLE1BQU07QUFFM0IsYUFBUyxFQUFFLEdBQUcsUUFBUSxXQUFXLGlEQUFhLENBQUMsTUFBTTtBQUFBLEVBQ3ZEO0FBRUEsU0FBTztBQUNUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ3JhZmFuYS8uL3B1YmxpYy9hcHAvcGx1Z2lucy9kYXRhc291cmNlL2xva2kvcXVlcnlidWlsZGVyL3N0YXRlLnRzP2YxMmEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHN0b3JlIGZyb20gJ2FwcC9jb3JlL3N0b3JlJztcblxuaW1wb3J0IHsgUXVlcnlFZGl0b3JNb2RlIH0gZnJvbSAnLi4vLi4vcHJvbWV0aGV1cy9xdWVyeWJ1aWxkZXIvc2hhcmVkL3R5cGVzJztcbmltcG9ydCB7IExva2lRdWVyeSwgTG9raVF1ZXJ5VHlwZSB9IGZyb20gJy4uL3R5cGVzJztcblxuY29uc3QgcXVlcnlFZGl0b3JNb2RlRGVmYXVsdExvY2FsU3RvcmFnZUtleSA9ICdMb2tpUXVlcnlFZGl0b3JNb2RlRGVmYXVsdCc7XG5cbmV4cG9ydCBmdW5jdGlvbiBjaGFuZ2VFZGl0b3JNb2RlKHF1ZXJ5OiBMb2tpUXVlcnksIGVkaXRvck1vZGU6IFF1ZXJ5RWRpdG9yTW9kZSwgb25DaGFuZ2U6IChxdWVyeTogTG9raVF1ZXJ5KSA9PiB2b2lkKSB7XG4gIC8vIElmIGVtcHR5IHF1ZXJ5IHN0b3JlIG5ldyBtb2RlIGFzIGRlZmF1bHRcbiAgaWYgKHF1ZXJ5LmV4cHIgPT09ICcnKSB7XG4gICAgc3RvcmUuc2V0KHF1ZXJ5RWRpdG9yTW9kZURlZmF1bHRMb2NhbFN0b3JhZ2VLZXksIGVkaXRvck1vZGUpO1xuICB9XG5cbiAgb25DaGFuZ2UoeyAuLi5xdWVyeSwgZWRpdG9yTW9kZSB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldERlZmF1bHRFZGl0b3JNb2RlKGV4cHI6IHN0cmluZykge1xuICAvLyBJZiB3ZSBhbHJlYWR5IGhhdmUgYW4gZXhwcmVzc2lvbiBkZWZhdWx0IHRvIGNvZGUgdmlld1xuICBpZiAoZXhwciAhPSBudWxsICYmIGV4cHIgIT09ICcnKSB7XG4gICAgcmV0dXJuIFF1ZXJ5RWRpdG9yTW9kZS5Db2RlO1xuICB9XG5cbiAgY29uc3QgdmFsdWU6IHN0cmluZyB8IHVuZGVmaW5lZCA9IHN0b3JlLmdldChxdWVyeUVkaXRvck1vZGVEZWZhdWx0TG9jYWxTdG9yYWdlS2V5KTtcbiAgc3dpdGNoICh2YWx1ZSkge1xuICAgIGNhc2UgJ2NvZGUnOlxuICAgICAgcmV0dXJuIFF1ZXJ5RWRpdG9yTW9kZS5Db2RlO1xuXG4gICAgY2FzZSAnYnVpbGRlcic6XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiBRdWVyeUVkaXRvck1vZGUuQnVpbGRlcjtcbiAgfVxufVxuXG4vKipcbiAqIFJldHVybnMgcXVlcnkgd2l0aCBkZWZhdWx0cywgYW5kIGJvb2xlYW4gdHJ1ZS9mYWxzZSBkZXBlbmRpbmcgb24gY2hhbmdlIHdhcyByZXF1aXJlZFxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0UXVlcnlXaXRoRGVmYXVsdHMocXVlcnk6IExva2lRdWVyeSk6IExva2lRdWVyeSB7XG4gIC8vIElmIG5vIGV4cHIgKGllIG5ldyBxdWVyeSkgdGhlbiBkZWZhdWx0IHRvIGJ1aWxkZXJcbiAgbGV0IHJlc3VsdCA9IHF1ZXJ5O1xuXG4gIGlmICghcXVlcnkuZWRpdG9yTW9kZSkge1xuICAgIHJlc3VsdCA9IHsgLi4ucXVlcnksIGVkaXRvck1vZGU6IGdldERlZmF1bHRFZGl0b3JNb2RlKHF1ZXJ5LmV4cHIpIH07XG4gIH1cblxuICBpZiAocXVlcnkuZXhwciA9PSBudWxsKSB7XG4gICAgcmVzdWx0ID0geyAuLi5yZXN1bHQsIGV4cHI6ICcnIH07XG4gIH1cblxuICBpZiAocXVlcnkucXVlcnlUeXBlID09IG51bGwpIHtcbiAgICAvLyBEZWZhdWx0IHRvIHJhbmdlIHF1ZXJ5XG4gICAgcmVzdWx0ID0geyAuLi5yZXN1bHQsIHF1ZXJ5VHlwZTogTG9raVF1ZXJ5VHlwZS5SYW5nZSB9O1xuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/querybuilder/state.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/querybuilder/types.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LokiOperationId: () => (/* binding */ LokiOperationId),\n/* harmony export */   LokiOperationOrder: () => (/* binding */ LokiOperationOrder),\n/* harmony export */   LokiQueryPatternType: () => (/* binding */ LokiQueryPatternType),\n/* harmony export */   LokiVisualQueryOperationCategory: () => (/* binding */ LokiVisualQueryOperationCategory),\n/* harmony export */   lokiOperators: () => (/* binding */ lokiOperators)\n/* harmony export */ });\n\nvar LokiQueryPatternType = /* @__PURE__ */ ((LokiQueryPatternType2) => {\n  LokiQueryPatternType2[\"Log\"] = \"log\";\n  LokiQueryPatternType2[\"Metric\"] = \"metric\";\n  return LokiQueryPatternType2;\n})(LokiQueryPatternType || {});\nvar LokiVisualQueryOperationCategory = /* @__PURE__ */ ((LokiVisualQueryOperationCategory2) => {\n  LokiVisualQueryOperationCategory2[\"Aggregations\"] = \"Aggregations\";\n  LokiVisualQueryOperationCategory2[\"RangeFunctions\"] = \"Range functions\";\n  LokiVisualQueryOperationCategory2[\"Functions\"] = \"Functions\";\n  LokiVisualQueryOperationCategory2[\"Formats\"] = \"Formats\";\n  LokiVisualQueryOperationCategory2[\"LineFilters\"] = \"Line filters\";\n  LokiVisualQueryOperationCategory2[\"LabelFilters\"] = \"Label filters\";\n  LokiVisualQueryOperationCategory2[\"BinaryOps\"] = \"Binary operations\";\n  return LokiVisualQueryOperationCategory2;\n})(LokiVisualQueryOperationCategory || {});\nvar LokiOperationId = /* @__PURE__ */ ((LokiOperationId2) => {\n  LokiOperationId2[\"Json\"] = \"json\";\n  LokiOperationId2[\"Logfmt\"] = \"logfmt\";\n  LokiOperationId2[\"Regexp\"] = \"regexp\";\n  LokiOperationId2[\"Pattern\"] = \"pattern\";\n  LokiOperationId2[\"Unpack\"] = \"unpack\";\n  LokiOperationId2[\"LineFormat\"] = \"line_format\";\n  LokiOperationId2[\"LabelFormat\"] = \"label_format\";\n  LokiOperationId2[\"Decolorize\"] = \"decolorize\";\n  LokiOperationId2[\"Rate\"] = \"rate\";\n  LokiOperationId2[\"RateCounter\"] = \"rate_counter\";\n  LokiOperationId2[\"CountOverTime\"] = \"count_over_time\";\n  LokiOperationId2[\"SumOverTime\"] = \"sum_over_time\";\n  LokiOperationId2[\"AvgOverTime\"] = \"avg_over_time\";\n  LokiOperationId2[\"MaxOverTime\"] = \"max_over_time\";\n  LokiOperationId2[\"MinOverTime\"] = \"min_over_time\";\n  LokiOperationId2[\"FirstOverTime\"] = \"first_over_time\";\n  LokiOperationId2[\"LastOverTime\"] = \"last_over_time\";\n  LokiOperationId2[\"StdvarOverTime\"] = \"stdvar_over_time\";\n  LokiOperationId2[\"StddevOverTime\"] = \"stddev_over_time\";\n  LokiOperationId2[\"QuantileOverTime\"] = \"quantile_over_time\";\n  LokiOperationId2[\"BytesRate\"] = \"bytes_rate\";\n  LokiOperationId2[\"BytesOverTime\"] = \"bytes_over_time\";\n  LokiOperationId2[\"AbsentOverTime\"] = \"absent_over_time\";\n  LokiOperationId2[\"Sum\"] = \"sum\";\n  LokiOperationId2[\"Avg\"] = \"avg\";\n  LokiOperationId2[\"Min\"] = \"min\";\n  LokiOperationId2[\"Max\"] = \"max\";\n  LokiOperationId2[\"Stddev\"] = \"stddev\";\n  LokiOperationId2[\"Stdvar\"] = \"stdvar\";\n  LokiOperationId2[\"Count\"] = \"count\";\n  LokiOperationId2[\"TopK\"] = \"topk\";\n  LokiOperationId2[\"BottomK\"] = \"bottomk\";\n  LokiOperationId2[\"LineContains\"] = \"__line_contains\";\n  LokiOperationId2[\"LineContainsNot\"] = \"__line_contains_not\";\n  LokiOperationId2[\"LineContainsCaseInsensitive\"] = \"__line_contains_case_insensitive\";\n  LokiOperationId2[\"LineContainsNotCaseInsensitive\"] = \"__line_contains_not_case_insensitive\";\n  LokiOperationId2[\"LineMatchesRegex\"] = \"__line_matches_regex\";\n  LokiOperationId2[\"LineMatchesRegexNot\"] = \"__line_matches_regex_not\";\n  LokiOperationId2[\"LineFilterIpMatches\"] = \"__line_filter_ip_matches\";\n  LokiOperationId2[\"LabelFilter\"] = \"__label_filter\";\n  LokiOperationId2[\"LabelFilterNoErrors\"] = \"__label_filter_no_errors\";\n  LokiOperationId2[\"LabelFilterIpMatches\"] = \"__label_filter_ip_marches\";\n  LokiOperationId2[\"Unwrap\"] = \"unwrap\";\n  LokiOperationId2[\"SumBy\"] = \"__sum_by\";\n  LokiOperationId2[\"SumWithout\"] = \"__sum_without\";\n  LokiOperationId2[\"Addition\"] = \"__addition\";\n  LokiOperationId2[\"Subtraction\"] = \"__subtraction\";\n  LokiOperationId2[\"MultiplyBy\"] = \"__multiply_by\";\n  LokiOperationId2[\"DivideBy\"] = \"__divide_by\";\n  LokiOperationId2[\"Modulo\"] = \"__modulo\";\n  LokiOperationId2[\"Exponent\"] = \"__exponent\";\n  LokiOperationId2[\"NestedQuery\"] = \"__nested_query\";\n  LokiOperationId2[\"EqualTo\"] = \"__equal_to\";\n  LokiOperationId2[\"NotEqualTo\"] = \"__not_equal_to\";\n  LokiOperationId2[\"GreaterThan\"] = \"__greater_than\";\n  LokiOperationId2[\"LessThan\"] = \"__less_than\";\n  LokiOperationId2[\"GreaterOrEqual\"] = \"__greater_or_equal\";\n  LokiOperationId2[\"LessOrEqual\"] = \"__less_or_equal\";\n  return LokiOperationId2;\n})(LokiOperationId || {});\nvar LokiOperationOrder = /* @__PURE__ */ ((LokiOperationOrder2) => {\n  LokiOperationOrder2[LokiOperationOrder2[\"LineFilters\"] = 1] = \"LineFilters\";\n  LokiOperationOrder2[LokiOperationOrder2[\"Parsers\"] = 2] = \"Parsers\";\n  LokiOperationOrder2[LokiOperationOrder2[\"PipeOperations\"] = 3] = \"PipeOperations\";\n  LokiOperationOrder2[LokiOperationOrder2[\"Unwrap\"] = 4] = \"Unwrap\";\n  LokiOperationOrder2[LokiOperationOrder2[\"NoErrors\"] = 5] = \"NoErrors\";\n  LokiOperationOrder2[LokiOperationOrder2[\"RangeVectorFunction\"] = 5] = \"RangeVectorFunction\";\n  LokiOperationOrder2[LokiOperationOrder2[\"Last\"] = 6] = \"Last\";\n  return LokiOperationOrder2;\n})(LokiOperationOrder || {});\nconst lokiOperators = {\n  equals: { label: \"=\", value: \"=\", description: \"Equals\", isMultiValue: false },\n  doesNotEqual: { label: \"!=\", value: \"!=\", description: \"Does not equal\", isMultiValue: false },\n  matchesRegex: { label: \"=~\", value: \"=~\", description: \"Matches regex\", isMultiValue: true },\n  doesNotMatchRegex: { label: \"!~\", value: \"!~\", description: \"Does not match regex\", isMultiValue: true },\n  greaterThan: { label: \">\", value: \">\", description: \"Greater than\", isMultiValue: false },\n  greaterThanOrEqual: { label: \">=\", value: \">=\", description: \"Greater than or equal to\", isMultiValue: false },\n  lessThan: { label: \"<\", value: \"<\", description: \"Less than\", isMultiValue: false },\n  lessThanOrEqual: { label: \"<=\", value: \"<=\", description: \"Less than or equal to\", isMultiValue: false },\n  contains: { label: \"|=\", value: \"|=\", description: \"Contains\", isMultiValue: false },\n  doesNotContain: { label: \"!=\", value: \"!=\", description: \"Does not contain\", isMultiValue: false }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/querybuilder/types.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/responseUtils.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cloneQueryResponse: () => (/* binding */ cloneQueryResponse),\n/* harmony export */   combineResponses: () => (/* binding */ combineResponses),\n/* harmony export */   dataFrameHasLevelLabel: () => (/* binding */ dataFrameHasLevelLabel),\n/* harmony export */   dataFrameHasLokiError: () => (/* binding */ dataFrameHasLokiError),\n/* harmony export */   extractHasErrorLabelFromDataFrame: () => (/* binding */ extractHasErrorLabelFromDataFrame),\n/* harmony export */   extractLabelKeysFromDataFrame: () => (/* binding */ extractLabelKeysFromDataFrame),\n/* harmony export */   extractLevelLikeLabelFromDataFrame: () => (/* binding */ extractLevelLikeLabelFromDataFrame),\n/* harmony export */   extractLogParserFromDataFrame: () => (/* binding */ extractLogParserFromDataFrame),\n/* harmony export */   extractUnwrapLabelKeysFromDataFrame: () => (/* binding */ extractUnwrapLabelKeysFromDataFrame)\n/* harmony export */ });\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/types/dataFrame.ts\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/datetime/durationutil.ts\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/types/dataFrameTypes.ts\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/dataframe/frameComparisons.ts\");\n/* harmony import */ var _languageUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./public/app/plugins/datasource/loki/languageUtils.ts\");\n/* harmony import */ var _lineParser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/plugins/datasource/loki/lineParser.ts\");\n\n\n\n\nfunction dataFrameHasLokiError(frame) {\n  const labelSets = frame.fields.find((f) => f.name === \"labels\")?.values ?? [];\n  return labelSets.some((labels) => labels.__error__ !== void 0);\n}\nfunction dataFrameHasLevelLabel(frame) {\n  const labelSets = frame.fields.find((f) => f.name === \"labels\")?.values ?? [];\n  return labelSets.some((labels) => labels.level !== void 0);\n}\nfunction extractLogParserFromDataFrame(frame) {\n  const lineField = frame.fields.find((field) => field.type === _grafana_data__WEBPACK_IMPORTED_MODULE_2__.FieldType.string);\n  if (lineField == null) {\n    return { hasJSON: false, hasLogfmt: false, hasPack: false };\n  }\n  const logLines = lineField.values;\n  let hasJSON = false;\n  let hasLogfmt = false;\n  let hasPack = false;\n  logLines.forEach((line) => {\n    if ((0,_lineParser__WEBPACK_IMPORTED_MODULE_1__.isLogLineJSON)(line)) {\n      hasJSON = true;\n      hasPack = (0,_lineParser__WEBPACK_IMPORTED_MODULE_1__.isLogLinePacked)(line);\n    }\n    if ((0,_lineParser__WEBPACK_IMPORTED_MODULE_1__.isLogLineLogfmt)(line)) {\n      hasLogfmt = true;\n    }\n  });\n  return { hasLogfmt, hasJSON, hasPack };\n}\nfunction extractLabelKeysFromDataFrame(frame) {\n  const labelsArray = frame?.fields?.find((field) => field.name === \"labels\")?.values ?? [];\n  if (!labelsArray?.length) {\n    return [];\n  }\n  return Object.keys(labelsArray[0]);\n}\nfunction extractUnwrapLabelKeysFromDataFrame(frame) {\n  const labelsArray = frame?.fields?.find((field) => field.name === \"labels\")?.values ?? [];\n  if (!labelsArray?.length) {\n    return [];\n  }\n  const possibleUnwrapLabels = Object.keys(labelsArray[0]).filter((key) => {\n    const value = labelsArray[0][key];\n    if (!value) {\n      return false;\n    }\n    return !isNaN(Number(value)) || (0,_grafana_data__WEBPACK_IMPORTED_MODULE_3__.isValidGoDuration)(value) || (0,_languageUtils__WEBPACK_IMPORTED_MODULE_0__.isBytesString)(value);\n  });\n  return possibleUnwrapLabels.filter((label) => labelsArray.every((obj) => obj[label]));\n}\nfunction extractHasErrorLabelFromDataFrame(frame) {\n  const labelField = frame.fields.find((field) => field.name === \"labels\" && field.type === _grafana_data__WEBPACK_IMPORTED_MODULE_2__.FieldType.other);\n  if (labelField == null) {\n    return false;\n  }\n  const labels = labelField.values;\n  return labels.some((label) => label[\"__error__\"]);\n}\nfunction extractLevelLikeLabelFromDataFrame(frame) {\n  const labelField = frame.fields.find((field) => field.name === \"labels\" && field.type === _grafana_data__WEBPACK_IMPORTED_MODULE_2__.FieldType.other);\n  if (labelField == null) {\n    return null;\n  }\n  const labelsArray = labelField.values.slice(0, 2);\n  let levelLikeLabel = null;\n  for (let labels of labelsArray) {\n    const label = Object.keys(labels).find((label2) => label2 === \"lvl\" || label2.includes(\"level\"));\n    if (label) {\n      levelLikeLabel = label;\n      break;\n    }\n  }\n  return levelLikeLabel;\n}\nfunction shouldCombine(frame1, frame2) {\n  if (frame1.refId !== frame2.refId) {\n    return false;\n  }\n  const frameType1 = frame1.meta?.type;\n  const frameType2 = frame2.meta?.type;\n  if (frameType1 !== frameType2) {\n    return false;\n  }\n  if (frameType1 === _grafana_data__WEBPACK_IMPORTED_MODULE_4__.DataFrameType.TimeSeriesMulti) {\n    const field1 = frame1.fields.find((f) => f.type === _grafana_data__WEBPACK_IMPORTED_MODULE_2__.FieldType.number);\n    const field2 = frame2.fields.find((f) => f.type === _grafana_data__WEBPACK_IMPORTED_MODULE_2__.FieldType.number);\n    if (field1 === void 0 || field2 === void 0) {\n      return false;\n    }\n    return (0,_grafana_data__WEBPACK_IMPORTED_MODULE_5__.shallowCompare)(field1.labels ?? {}, field2.labels ?? {});\n  }\n  const customType1 = frame1.meta?.custom?.frameType;\n  const customType2 = frame2.meta?.custom?.frameType;\n  if (customType1 === \"LabeledTimeValues\" && customType2 === \"LabeledTimeValues\") {\n    return true;\n  }\n  return false;\n}\nfunction combineResponses(currentResult, newResult) {\n  if (!currentResult) {\n    return cloneQueryResponse(newResult);\n  }\n  newResult.data.forEach((newFrame) => {\n    const currentFrame = currentResult.data.find((frame) => shouldCombine(frame, newFrame));\n    if (!currentFrame) {\n      currentResult.data.push(cloneDataFrame(newFrame));\n      return;\n    }\n    combineFrames(currentFrame, newFrame);\n  });\n  const mergedErrors = [...currentResult.errors ?? [], ...newResult.errors ?? []];\n  if (mergedErrors.length > 0) {\n    currentResult.errors = mergedErrors;\n  }\n  const mergedError = currentResult.error ?? newResult.error;\n  if (mergedError != null) {\n    currentResult.error = mergedError;\n  }\n  const mergedTraceIds = [...currentResult.traceIds ?? [], ...newResult.traceIds ?? []];\n  if (mergedTraceIds.length > 0) {\n    currentResult.traceIds = mergedTraceIds;\n  }\n  return currentResult;\n}\nfunction combineFrames(dest, source) {\n  const totalFields = dest.fields.length;\n  for (let i = 0; i < totalFields; i++) {\n    dest.fields[i].values = [].concat.apply(source.fields[i].values, dest.fields[i].values);\n    if (source.fields[i].nanos) {\n      const nanos = dest.fields[i].nanos?.slice() || [];\n      dest.fields[i].nanos = source.fields[i].nanos?.concat(nanos);\n    }\n  }\n  dest.length += source.length;\n  dest.meta = {\n    ...dest.meta,\n    stats: getCombinedMetadataStats(dest.meta?.stats ?? [], source.meta?.stats ?? [])\n  };\n}\nconst TOTAL_BYTES_STAT = \"Summary: total bytes processed\";\nfunction getCombinedMetadataStats(destStats, sourceStats) {\n  const destStat = destStats.find((s) => s.displayName === TOTAL_BYTES_STAT);\n  const sourceStat = sourceStats.find((s) => s.displayName === TOTAL_BYTES_STAT);\n  if (sourceStat != null && destStat != null) {\n    return [{ value: sourceStat.value + destStat.value, displayName: TOTAL_BYTES_STAT, unit: destStat.unit }];\n  }\n  const eitherStat = sourceStat ?? destStat;\n  if (eitherStat != null) {\n    return [eitherStat];\n  }\n  return [];\n}\nfunction cloneQueryResponse(response) {\n  const newResponse = {\n    ...response,\n    data: response.data.map(cloneDataFrame)\n  };\n  return newResponse;\n}\nfunction cloneDataFrame(frame) {\n  return {\n    ...frame,\n    fields: frame.fields.map((field) => ({\n      ...field,\n      values: field.values\n    }))\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/responseUtils.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/sortDataFrame.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SortDirection: () => (/* binding */ SortDirection),\n/* harmony export */   sortDataFrameByTime: () => (/* binding */ sortDataFrameByTime)\n/* harmony export */ });\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/vector/SortedVector.ts\");\n\n\nvar SortDirection = /* @__PURE__ */ ((SortDirection2) => {\n  SortDirection2[SortDirection2[\"Ascending\"] = 0] = \"Ascending\";\n  SortDirection2[SortDirection2[\"Descending\"] = 1] = \"Descending\";\n  return SortDirection2;\n})(SortDirection || {});\nfunction makeIndex(field, dir) {\n  const fieldValues = field.values;\n  const index = Array(fieldValues.length);\n  for (let i = 0; i < index.length; i++) {\n    index[i] = i;\n  }\n  const isAsc = dir === 0 /* Ascending */;\n  index.sort((a, b) => {\n    const valA = fieldValues[a];\n    const valB = fieldValues[b];\n    if (valA < valB) {\n      return isAsc ? -1 : 1;\n    }\n    if (valA > valB) {\n      return isAsc ? 1 : -1;\n    }\n    return 0;\n  });\n  return index;\n}\nfunction sortDataFrameByTime(frame, dir) {\n  const { fields, ...rest } = frame;\n  const tsNsField = fields.find((field) => field.name === \"tsNs\");\n  if (tsNsField === void 0) {\n    throw new Error(\"missing nanosecond-timestamp field. should never happen\");\n  }\n  const index = makeIndex(tsNsField, dir);\n  return {\n    ...rest,\n    fields: fields.map((field) => ({\n      ...field,\n      values: new _grafana_data__WEBPACK_IMPORTED_MODULE_0__.SortedVector(field.values, index).toArray()\n    }))\n  };\n  return frame;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL3NvcnREYXRhRnJhbWUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUErQztBQUV4QyxJQUFLLGdCQUFMLGtCQUFLQSxtQkFBTDtBQUNMLEVBQUFBLDhCQUFBO0FBQ0EsRUFBQUEsOEJBQUE7QUFGVSxTQUFBQTtBQUFBO0FBZVosU0FBUyxVQUFVLE9BQXNCLEtBQThCO0FBQ3JFLFFBQU0sY0FBd0IsTUFBTTtBQUdwQyxRQUFNLFFBQVEsTUFBTSxZQUFZLE1BQU07QUFDdEMsV0FBUyxJQUFJLEdBQUcsSUFBSSxNQUFNLFFBQVEsS0FBSztBQUNyQyxVQUFNLENBQUMsSUFBSTtBQUFBLEVBQ2I7QUFFQSxRQUFNLFFBQVEsUUFBUTtBQUV0QixRQUFNLEtBQUssQ0FBQyxHQUFXLE1BQXNCO0FBRzNDLFVBQU0sT0FBTyxZQUFZLENBQUM7QUFDMUIsVUFBTSxPQUFPLFlBQVksQ0FBQztBQUMxQixRQUFJLE9BQU8sTUFBTTtBQUNmLGFBQU8sUUFBUSxLQUFLO0FBQUEsSUFDdEI7QUFFQSxRQUFJLE9BQU8sTUFBTTtBQUNmLGFBQU8sUUFBUSxJQUFJO0FBQUEsSUFDckI7QUFFQSxXQUFPO0FBQUEsRUFDVCxDQUFDO0FBRUQsU0FBTztBQUNUO0FBSU8sU0FBUyxvQkFBb0IsT0FBa0IsS0FBK0I7QUFDbkYsUUFBTSxFQUFFLFFBQVEsR0FBRyxLQUFLLElBQUk7QUFNNUIsUUFBTSxZQUFZLE9BQU8sS0FBSyxDQUFDLFVBQVUsTUFBTSxTQUFTLE1BQU07QUFDOUQsTUFBSSxjQUFjLFFBQVc7QUFDM0IsVUFBTSxJQUFJLE1BQU0seURBQXlEO0FBQUEsRUFDM0U7QUFFQSxRQUFNLFFBQVEsVUFBVSxXQUFXLEdBQUc7QUFFdEMsU0FBTztBQUFBLElBQ0wsR0FBRztBQUFBLElBQ0gsUUFBUSxPQUFPLElBQUksQ0FBQyxXQUFXO0FBQUEsTUFDN0IsR0FBRztBQUFBLE1BQ0gsUUFBUSxJQUFJLHVEQUFZLENBQUMsTUFBTSxRQUFRLEtBQUssRUFBRSxRQUFRO0FBQUEsSUFDeEQsRUFBRTtBQUFBLEVBQ0o7QUFFQSxTQUFPO0FBQ1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ncmFmYW5hLy4vcHVibGljL2FwcC9wbHVnaW5zL2RhdGFzb3VyY2UvbG9raS9zb3J0RGF0YUZyYW1lLnRzPzE4OGUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGF0YUZyYW1lLCBGaWVsZCwgU29ydGVkVmVjdG9yIH0gZnJvbSAnQGdyYWZhbmEvZGF0YSc7XG5cbmV4cG9ydCBlbnVtIFNvcnREaXJlY3Rpb24ge1xuICBBc2NlbmRpbmcsXG4gIERlc2NlbmRpbmcsXG59XG5cbi8vIGNyZWF0ZXMgdGhlIGBpbmRleGAgZm9yIHRoZSBzb3J0aW5nLlxuLy8gdGhpcyBpcyBuZWVkZWQgYnkgdGhlIGBTb3J0ZWRWZWN0b3JgLlxuLy8gdGhlIGluZGV4IGlzIGFuIGFycmF5IG9mIG51bWJlcnMsIGFuZCBpdCBkZWZpbmVzIGFuIG9yZGVyLlxuLy8gYXQgZXZlcnkgc2xvdCBpbiB0aGUgaW5kZXggdGhlIHZhbHVlcyBpcyB0aGUgcG9zaXRpb24gb2Zcbi8vIHRoZSBzb3J0ZWQgaXRlbS5cbi8vIGZvciBleGFtcGxlLCBhbiBpbmRleCBvZiBbMywxLDJdIG1lYW5zIHRoYXRcbi8vIGluIHRoZSBkYXRhZnJhbWUsIHRoYXQgaGFzIDMgcm93cywgYWZ0ZXIgc29ydGluZzpcbi8vIC0gdGhlIHRoaXJkIHJvdyB3aWxsIGJlY29tZSB0aGUgZmlyc3Rcbi8vIC0gdGhlIGZpcnN0IHJvdyB3aWxsIGJlY29tZSB0aGUgc2Vjb25kXG4vLyAtIHRoZSBzZWNvbmQgcm93IHdpbGwgYmVjb21lIHRoZSB0aGlyZFxuZnVuY3Rpb24gbWFrZUluZGV4KGZpZWxkOiBGaWVsZDxzdHJpbmc+LCBkaXI6IFNvcnREaXJlY3Rpb24pOiBudW1iZXJbXSB7XG4gIGNvbnN0IGZpZWxkVmFsdWVzOiBzdHJpbmdbXSA9IGZpZWxkLnZhbHVlcztcblxuICAvLyB3ZSBmaXJzdCBidWlsZCBhbiBhcnJheSB3aGljaCBpcyBbMCwxLDIsMy4uLi5dXG4gIGNvbnN0IGluZGV4ID0gQXJyYXkoZmllbGRWYWx1ZXMubGVuZ3RoKTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBpbmRleC5sZW5ndGg7IGkrKykge1xuICAgIGluZGV4W2ldID0gaTtcbiAgfVxuXG4gIGNvbnN0IGlzQXNjID0gZGlyID09PSBTb3J0RGlyZWN0aW9uLkFzY2VuZGluZztcblxuICBpbmRleC5zb3J0KChhOiBudW1iZXIsIGI6IG51bWJlcik6IG51bWJlciA9PiB7XG4gICAgLy8gd2UgbmVlZCB0byBhbnN3ZXIgdGhpcyBxdWVzdGlvbjpcbiAgICAvLyBpbiB0aGUgZmllbGQtdXNlZC1mb3Itc29ydGluZywgaG93IHdvdWxkIHdlIGNvbXBhcmUgdmFsdWUtYXQtaW5kZXgtYSB0byB2YWx1ZS1hdC1pbmRleC1iP1xuICAgIGNvbnN0IHZhbEEgPSBmaWVsZFZhbHVlc1thXTtcbiAgICBjb25zdCB2YWxCID0gZmllbGRWYWx1ZXNbYl07XG4gICAgaWYgKHZhbEEgPCB2YWxCKSB7XG4gICAgICByZXR1cm4gaXNBc2MgPyAtMSA6IDE7XG4gICAgfVxuXG4gICAgaWYgKHZhbEEgPiB2YWxCKSB7XG4gICAgICByZXR1cm4gaXNBc2MgPyAxIDogLTE7XG4gICAgfVxuXG4gICAgcmV0dXJuIDA7XG4gIH0pO1xuXG4gIHJldHVybiBpbmRleDtcbn1cblxuLy8gc29ydCBhIGRhdGFmcmFtZSB0aGF0IGlzIGluIHRoZSBMb2tpIGZvcm1hdCBhc2NlbmRpbmcgb3IgZGVzY2VuZGluZyxcbi8vIGJhc2VkIG9uIHRoZSBuYW5vc2Vjb25kLXRpbWVzdGFtcFxuZXhwb3J0IGZ1bmN0aW9uIHNvcnREYXRhRnJhbWVCeVRpbWUoZnJhbWU6IERhdGFGcmFtZSwgZGlyOiBTb3J0RGlyZWN0aW9uKTogRGF0YUZyYW1lIHtcbiAgY29uc3QgeyBmaWVsZHMsIC4uLnJlc3QgfSA9IGZyYW1lO1xuXG4gIC8vIHdlIHVzZSB0aGUgYXBwcm9hY2ggdXNlZCBpbiBAZ3JhZmFuYS9kYXRhL3NvcnREYXRhZnJhbWUuXG4gIC8vIHdlIGNhbm5vdCB1c2UgaXQgZGlyZWN0bHksIGJlY2F1c2Ugb3VyIHRzTnMgZmllbGQgaGFzIGEgdHlwZT10aW1lLFxuICAvLyBzbyB3ZSBoYXZlIHRvIGJ1aWxkIHRoZSBgaW5kZXhgIG1hbnVhbGx5LlxuXG4gIGNvbnN0IHRzTnNGaWVsZCA9IGZpZWxkcy5maW5kKChmaWVsZCkgPT4gZmllbGQubmFtZSA9PT0gJ3RzTnMnKTtcbiAgaWYgKHRzTnNGaWVsZCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdtaXNzaW5nIG5hbm9zZWNvbmQtdGltZXN0YW1wIGZpZWxkLiBzaG91bGQgbmV2ZXIgaGFwcGVuJyk7XG4gIH1cblxuICBjb25zdCBpbmRleCA9IG1ha2VJbmRleCh0c05zRmllbGQsIGRpcik7XG5cbiAgcmV0dXJuIHtcbiAgICAuLi5yZXN0LFxuICAgIGZpZWxkczogZmllbGRzLm1hcCgoZmllbGQpID0+ICh7XG4gICAgICAuLi5maWVsZCxcbiAgICAgIHZhbHVlczogbmV3IFNvcnRlZFZlY3RvcihmaWVsZC52YWx1ZXMsIGluZGV4KS50b0FycmF5KCksXG4gICAgfSkpLFxuICB9O1xuXG4gIHJldHVybiBmcmFtZTtcbn1cbiJdLCJuYW1lcyI6WyJTb3J0RGlyZWN0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/sortDataFrame.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/streaming.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   doLokiChannelStream: () => (/* binding */ doLokiChannelStream),\n/* harmony export */   getLiveStreamKey: () => (/* binding */ getLiveStreamKey)\n/* harmony export */ });\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/cache/rxjs-npm-7.8.0-722f1c7172-61b4d4fd32.zip/node_modules/rxjs/dist/esm5/internal/observable/defer.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./.yarn/cache/rxjs-npm-7.8.0-722f1c7172-61b4d4fd32.zip/node_modules/rxjs/dist/esm5/internal/operators/mergeMap.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./.yarn/cache/rxjs-npm-7.8.0-722f1c7172-61b4d4fd32.zip/node_modules/rxjs/dist/esm5/internal/operators/map.js\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/dataframe/StreamingDataFrame.ts\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/types/live.ts\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/types/data.ts\");\n/* harmony import */ var _grafana_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-runtime-virtual-68c57d4c0c/1/packages/grafana-runtime/src/services/live.ts\");\n\n\n\n\nasync function getLiveStreamKey(query) {\n  const str = JSON.stringify({ expr: query.expr });\n  const msgUint8 = new TextEncoder().encode(str);\n  const hashBuffer = await crypto.subtle.digest(\"SHA-1\", msgUint8);\n  const hashArray = Array.from(new Uint8Array(hashBuffer.slice(0, 8)));\n  return hashArray.map((b) => b.toString(16).padStart(2, \"0\")).join(\"\");\n}\nfunction doLokiChannelStream(query, ds, options) {\n  const range = options.range;\n  const maxDelta = range.to.valueOf() - range.from.valueOf() + 1e3;\n  let maxLength = options.maxDataPoints ?? 1e3;\n  if (maxLength > 100) {\n    maxLength *= 2;\n  }\n  let frame = void 0;\n  const updateFrame = (msg) => {\n    if (msg?.message) {\n      const p = msg.message;\n      if (!frame) {\n        frame = _grafana_data__WEBPACK_IMPORTED_MODULE_0__.StreamingDataFrame.fromDataFrameJSON(p, {\n          maxLength,\n          maxDelta,\n          displayNameFormat: query.legendFormat\n        });\n      } else {\n        frame.push(p);\n      }\n    }\n    return frame;\n  };\n  return (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.defer)(() => getLiveStreamKey(query)).pipe(\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.mergeMap)((key) => {\n      return (0,_grafana_runtime__WEBPACK_IMPORTED_MODULE_3__.getGrafanaLiveSrv)().getStream({\n        scope: _grafana_data__WEBPACK_IMPORTED_MODULE_4__.LiveChannelScope.DataSource,\n        namespace: ds.uid,\n        path: `tail/${key}`,\n        data: {\n          ...query,\n          timeRange: {\n            from: range.from.valueOf().toString(),\n            to: range.to.valueOf().toString()\n          }\n        }\n      }).pipe(\n        (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.map)((evt) => {\n          const frame2 = updateFrame(evt);\n          return {\n            data: frame2 ? [frame2] : [],\n            state: _grafana_data__WEBPACK_IMPORTED_MODULE_6__.LoadingState.Streaming\n          };\n        })\n      );\n    })\n  );\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL3N0cmVhbWluZy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQWlEO0FBUzFDO0FBQzJCO0FBVTNCLGVBQWUsaUJBQWlCLE9BQW1DO0FBQ3hFLFFBQU0sTUFBTSxLQUFLLFVBQVUsRUFBRSxNQUFNLE1BQU0sS0FBSyxDQUFDO0FBRS9DLFFBQU0sV0FBVyxJQUFJLFlBQVksRUFBRSxPQUFPLEdBQUc7QUFDN0MsUUFBTSxhQUFhLE1BQU0sT0FBTyxPQUFPLE9BQU8sU0FBUyxRQUFRO0FBQy9ELFFBQU0sWUFBWSxNQUFNLEtBQUssSUFBSSxXQUFXLFdBQVcsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO0FBQ25FLFNBQU8sVUFBVSxJQUFJLENBQUMsTUFBTSxFQUFFLFNBQVMsRUFBRSxFQUFFLFNBQVMsR0FBRyxHQUFHLENBQUMsRUFBRSxLQUFLLEVBQUU7QUFDdEU7QUFHTyxTQUFTLG9CQUNkLE9BQ0EsSUFDQSxTQUMrQjtBQUUvQixRQUFNLFFBQVEsUUFBUTtBQUN0QixRQUFNLFdBQVcsTUFBTSxHQUFHLFFBQVEsSUFBSSxNQUFNLEtBQUssUUFBUSxJQUFJO0FBQzdELE1BQUksWUFBWSxRQUFRLGlCQUFpQjtBQUN6QyxNQUFJLFlBQVksS0FBSztBQUVuQixpQkFBYTtBQUFBLEVBQ2Y7QUFFQSxNQUFJLFFBQXdDO0FBQzVDLFFBQU0sY0FBYyxDQUFDLFFBQWE7QUFDaEMsUUFBSSxLQUFLLFNBQVM7QUFDaEIsWUFBTSxJQUFJLElBQUk7QUFDZCxVQUFJLENBQUMsT0FBTztBQUNWLGdCQUFRLDZEQUFrQixDQUFDLGtCQUFrQixHQUFHO0FBQUEsVUFDOUM7QUFBQSxVQUNBO0FBQUEsVUFDQSxtQkFBbUIsTUFBTTtBQUFBLFFBQzNCLENBQUM7QUFBQSxNQUNILE9BQU87QUFDTCxjQUFNLEtBQUssQ0FBQztBQUFBLE1BQ2Q7QUFBQSxJQUNGO0FBQ0EsV0FBTztBQUFBLEVBQ1Q7QUFFQSxTQUFPLDJDQUFLLENBQUMsTUFBTSxpQkFBaUIsS0FBSyxDQUFDLEVBQUU7QUFBQSxJQUMxQyw4Q0FBUSxDQUFDLENBQUMsUUFBUTtBQUNoQixhQUFPLG1FQUFpQixDQUFDLEVBQ3RCLFVBQWU7QUFBQSxRQUNkLE9BQU8sMkRBQWdCLENBQUM7QUFBQSxRQUN4QixXQUFXLEdBQUc7QUFBQSxRQUNkLE1BQU0sUUFBUTtBQUFBLFFBQ2QsTUFBTTtBQUFBLFVBQ0osR0FBRztBQUFBLFVBQ0gsV0FBVztBQUFBLFlBQ1QsTUFBTSxNQUFNLEtBQUssUUFBUSxFQUFFLFNBQVM7QUFBQSxZQUNwQyxJQUFJLE1BQU0sR0FBRyxRQUFRLEVBQUUsU0FBUztBQUFBLFVBQ2xDO0FBQUEsUUFDRjtBQUFBLE1BQ0YsQ0FBQyxFQUNBO0FBQUEsUUFDQyx5Q0FBRyxDQUFDLENBQUMsUUFBUTtBQUNYLGdCQUFNQSxTQUFRLFlBQVksR0FBRztBQUM3QixpQkFBTztBQUFBLFlBQ0wsTUFBTUEsU0FBUSxDQUFDQSxNQUFLLElBQUksQ0FBQztBQUFBLFlBQ3pCLE9BQU8sdURBQVksQ0FBQztBQUFBLFVBQ3RCO0FBQUEsUUFDRixDQUFDO0FBQUEsTUFDSDtBQUFBLElBQ0osQ0FBQztBQUFBLEVBQ0g7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2dyYWZhbmEvLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL3N0cmVhbWluZy50cz9iZTVkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG1hcCwgT2JzZXJ2YWJsZSwgZGVmZXIsIG1lcmdlTWFwIH0gZnJvbSAncnhqcyc7XG5cbmltcG9ydCB7XG4gIERhdGFGcmFtZUpTT04sXG4gIERhdGFRdWVyeVJlcXVlc3QsXG4gIERhdGFRdWVyeVJlc3BvbnNlLFxuICBMaXZlQ2hhbm5lbFNjb3BlLFxuICBMb2FkaW5nU3RhdGUsXG4gIFN0cmVhbWluZ0RhdGFGcmFtZSxcbn0gZnJvbSAnQGdyYWZhbmEvZGF0YSc7XG5pbXBvcnQgeyBnZXRHcmFmYW5hTGl2ZVNydiB9IGZyb20gJ0BncmFmYW5hL3J1bnRpbWUnO1xuXG5pbXBvcnQgeyBMb2tpRGF0YXNvdXJjZSB9IGZyb20gJy4vZGF0YXNvdXJjZSc7XG5pbXBvcnQgeyBMb2tpUXVlcnkgfSBmcm9tICcuL3R5cGVzJztcblxuLyoqXG4gKiBDYWxjdWxhdGUgYSB1bmlxdWUga2V5IGZvciB0aGUgcXVlcnkuICBUaGUga2V5IGlzIHVzZWQgdG8gcGljayBhIGNoYW5uZWwgYW5kIHNob3VsZFxuICogYmUgdW5pcXVlIGZvciBlYWNoIGRpc3RpbmN0IHF1ZXJ5IGV4ZWN1dGlvbiBwbGFuLiAgVGhpcyBrZXkgaXMgbm90IHNlY3VyZSBhbmQgaXMgb25seSBwaWNrZWQgdG8gYXZvaWRcbiAqIHBvc3NpYmxlIGNvbGxpc2lvbnNcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldExpdmVTdHJlYW1LZXkocXVlcnk6IExva2lRdWVyeSk6IFByb21pc2U8c3RyaW5nPiB7XG4gIGNvbnN0IHN0ciA9IEpTT04uc3RyaW5naWZ5KHsgZXhwcjogcXVlcnkuZXhwciB9KTtcblxuICBjb25zdCBtc2dVaW50OCA9IG5ldyBUZXh0RW5jb2RlcigpLmVuY29kZShzdHIpOyAvLyBlbmNvZGUgYXMgKHV0Zi04KSBVaW50OEFycmF5XG4gIGNvbnN0IGhhc2hCdWZmZXIgPSBhd2FpdCBjcnlwdG8uc3VidGxlLmRpZ2VzdCgnU0hBLTEnLCBtc2dVaW50OCk7IC8vIGhhc2ggdGhlIG1lc3NhZ2VcbiAgY29uc3QgaGFzaEFycmF5ID0gQXJyYXkuZnJvbShuZXcgVWludDhBcnJheShoYXNoQnVmZmVyLnNsaWNlKDAsIDgpKSk7IC8vIGZpcnN0IDggYnl0ZXNcbiAgcmV0dXJuIGhhc2hBcnJheS5tYXAoKGIpID0+IGIudG9TdHJpbmcoMTYpLnBhZFN0YXJ0KDIsICcwJykpLmpvaW4oJycpO1xufVxuXG4vLyBUaGlzIHdpbGwgZ2V0IGJvdGggdjEgYW5kIHYyIHJlc3VsdCBmb3JtYXRzXG5leHBvcnQgZnVuY3Rpb24gZG9Mb2tpQ2hhbm5lbFN0cmVhbShcbiAgcXVlcnk6IExva2lRdWVyeSxcbiAgZHM6IExva2lEYXRhc291cmNlLFxuICBvcHRpb25zOiBEYXRhUXVlcnlSZXF1ZXN0PExva2lRdWVyeT5cbik6IE9ic2VydmFibGU8RGF0YVF1ZXJ5UmVzcG9uc2U+IHtcbiAgLy8gbWF4aW11bSB0aW1lIHRvIGtlZXAgdmFsdWVzXG4gIGNvbnN0IHJhbmdlID0gb3B0aW9ucy5yYW5nZTtcbiAgY29uc3QgbWF4RGVsdGEgPSByYW5nZS50by52YWx1ZU9mKCkgLSByYW5nZS5mcm9tLnZhbHVlT2YoKSArIDEwMDA7XG4gIGxldCBtYXhMZW5ndGggPSBvcHRpb25zLm1heERhdGFQb2ludHMgPz8gMTAwMDtcbiAgaWYgKG1heExlbmd0aCA+IDEwMCkge1xuICAgIC8vIGZvciBzbWFsbCBidWZmZXJzLCBrZWVwIHRoZW0gc21hbGxcbiAgICBtYXhMZW5ndGggKj0gMjtcbiAgfVxuXG4gIGxldCBmcmFtZTogU3RyZWFtaW5nRGF0YUZyYW1lIHwgdW5kZWZpbmVkID0gdW5kZWZpbmVkO1xuICBjb25zdCB1cGRhdGVGcmFtZSA9IChtc2c6IGFueSkgPT4ge1xuICAgIGlmIChtc2c/Lm1lc3NhZ2UpIHtcbiAgICAgIGNvbnN0IHAgPSBtc2cubWVzc2FnZSBhcyBEYXRhRnJhbWVKU09OO1xuICAgICAgaWYgKCFmcmFtZSkge1xuICAgICAgICBmcmFtZSA9IFN0cmVhbWluZ0RhdGFGcmFtZS5mcm9tRGF0YUZyYW1lSlNPTihwLCB7XG4gICAgICAgICAgbWF4TGVuZ3RoLFxuICAgICAgICAgIG1heERlbHRhLFxuICAgICAgICAgIGRpc3BsYXlOYW1lRm9ybWF0OiBxdWVyeS5sZWdlbmRGb3JtYXQsXG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZnJhbWUucHVzaChwKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGZyYW1lO1xuICB9O1xuXG4gIHJldHVybiBkZWZlcigoKSA9PiBnZXRMaXZlU3RyZWFtS2V5KHF1ZXJ5KSkucGlwZShcbiAgICBtZXJnZU1hcCgoa2V5KSA9PiB7XG4gICAgICByZXR1cm4gZ2V0R3JhZmFuYUxpdmVTcnYoKVxuICAgICAgICAuZ2V0U3RyZWFtPGFueT4oe1xuICAgICAgICAgIHNjb3BlOiBMaXZlQ2hhbm5lbFNjb3BlLkRhdGFTb3VyY2UsXG4gICAgICAgICAgbmFtZXNwYWNlOiBkcy51aWQsXG4gICAgICAgICAgcGF0aDogYHRhaWwvJHtrZXl9YCxcbiAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICAuLi5xdWVyeSxcbiAgICAgICAgICAgIHRpbWVSYW5nZToge1xuICAgICAgICAgICAgICBmcm9tOiByYW5nZS5mcm9tLnZhbHVlT2YoKS50b1N0cmluZygpLFxuICAgICAgICAgICAgICB0bzogcmFuZ2UudG8udmFsdWVPZigpLnRvU3RyaW5nKCksXG4gICAgICAgICAgICB9LFxuICAgICAgICAgIH0sXG4gICAgICAgIH0pXG4gICAgICAgIC5waXBlKFxuICAgICAgICAgIG1hcCgoZXZ0KSA9PiB7XG4gICAgICAgICAgICBjb25zdCBmcmFtZSA9IHVwZGF0ZUZyYW1lKGV2dCk7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICBkYXRhOiBmcmFtZSA/IFtmcmFtZV0gOiBbXSxcbiAgICAgICAgICAgICAgc3RhdGU6IExvYWRpbmdTdGF0ZS5TdHJlYW1pbmcsXG4gICAgICAgICAgICB9O1xuICAgICAgICAgIH0pXG4gICAgICAgICk7XG4gICAgfSlcbiAgKTtcbn1cbiJdLCJuYW1lcyI6WyJmcmFtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/streaming.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/tracking.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   onDashboardLoadedHandler: () => (/* binding */ onDashboardLoadedHandler),\n/* harmony export */   trackGroupedQueries: () => (/* binding */ trackGroupedQueries),\n/* harmony export */   trackQuery: () => (/* binding */ trackQuery)\n/* harmony export */ });\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/types/app.ts\");\n/* harmony import */ var _grafana_runtime__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-runtime-virtual-68c57d4c0c/1/packages/grafana-runtime/src/analytics/utils.ts\");\n/* harmony import */ var _grafana_runtime__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-runtime-virtual-68c57d4c0c/1/packages/grafana-runtime/src/config.ts\");\n/* harmony import */ var app_features_variables_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./public/app/features/variables/utils.ts\");\n/* harmony import */ var _prometheus_querybuilder_shared_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/plugins/datasource/prometheus/querybuilder/shared/types.ts\");\n/* harmony import */ var _datasource__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/plugins/datasource/loki/datasource.ts\");\n/* harmony import */ var _plugin_json__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./public/app/plugins/datasource/loki/plugin.json\");\n/* harmony import */ var _queryUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./public/app/plugins/datasource/loki/queryUtils.ts\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./public/app/plugins/datasource/loki/types.ts\");\n\n\n\n\n\n\n\n\n\nconst onDashboardLoadedHandler = ({\n  payload: { dashboardId, orgId, grafanaVersion, queries }\n}) => {\n  try {\n    const lokiQueries = queries[_plugin_json__WEBPACK_IMPORTED_MODULE_3__.id].filter((query) => !query.hide).map((query) => (0,_queryUtils__WEBPACK_IMPORTED_MODULE_4__.getNormalizedLokiQuery)(query));\n    if (!lokiQueries?.length) {\n      return;\n    }\n    const logsQueries = lokiQueries.filter((query) => (0,_queryUtils__WEBPACK_IMPORTED_MODULE_4__.isLogsQuery)(query.expr));\n    const metricQueries = lokiQueries.filter((query) => !(0,_queryUtils__WEBPACK_IMPORTED_MODULE_4__.isLogsQuery)(query.expr));\n    const instantQueries = lokiQueries.filter((query) => query.queryType === _types__WEBPACK_IMPORTED_MODULE_5__.LokiQueryType.Instant);\n    const rangeQueries = lokiQueries.filter((query) => query.queryType === _types__WEBPACK_IMPORTED_MODULE_5__.LokiQueryType.Range);\n    const builderModeQueries = lokiQueries.filter((query) => query.editorMode === _prometheus_querybuilder_shared_types__WEBPACK_IMPORTED_MODULE_1__.QueryEditorMode.Builder);\n    const codeModeQueries = lokiQueries.filter((query) => query.editorMode === _prometheus_querybuilder_shared_types__WEBPACK_IMPORTED_MODULE_1__.QueryEditorMode.Code);\n    const queriesWithTemplateVariables = lokiQueries.filter(isQueryWithTemplateVariables);\n    const queriesWithChangedResolution = lokiQueries.filter(isQueryWithChangedResolution);\n    const queriesWithChangedLineLimit = lokiQueries.filter(isQueryWithChangedLineLimit);\n    const queriesWithChangedLegend = lokiQueries.filter(isQueryWithChangedLegend);\n    const event = {\n      grafana_version: grafanaVersion,\n      dashboard_id: dashboardId,\n      org_id: orgId,\n      queries_count: lokiQueries.length,\n      logs_queries_count: logsQueries.length,\n      metric_queries_count: metricQueries.length,\n      instant_queries_count: instantQueries.length,\n      range_queries_count: rangeQueries.length,\n      builder_mode_queries_count: builderModeQueries.length,\n      code_mode_queries_count: codeModeQueries.length,\n      queries_with_template_variables_count: queriesWithTemplateVariables.length,\n      queries_with_changed_resolution_count: queriesWithChangedResolution.length,\n      queries_with_changed_line_limit_count: queriesWithChangedLineLimit.length,\n      queries_with_changed_legend_count: queriesWithChangedLegend.length\n    };\n    (0,_grafana_runtime__WEBPACK_IMPORTED_MODULE_6__.reportInteraction)(\"grafana_loki_dashboard_loaded\", event);\n  } catch (error) {\n    console.error(\"error in loki tracking handler\", error);\n  }\n};\nconst isQueryWithTemplateVariables = (query) => {\n  return app_features_variables_utils__WEBPACK_IMPORTED_MODULE_0__.variableRegex.test(query.expr);\n};\nconst isQueryWithChangedResolution = (query) => {\n  if (!query.resolution) {\n    return false;\n  }\n  return query.resolution !== 1;\n};\nconst isQueryWithChangedLineLimit = (query) => {\n  return query.maxLines !== null && query.maxLines !== void 0;\n};\nconst isQueryWithChangedLegend = (query) => {\n  if (!query.legendFormat) {\n    return false;\n  }\n  return query.legendFormat !== \"\";\n};\nconst shouldNotReportBasedOnRefId = (refId) => {\n  const starters = [_datasource__WEBPACK_IMPORTED_MODULE_2__.REF_ID_STARTER_ANNOTATION, _datasource__WEBPACK_IMPORTED_MODULE_2__.REF_ID_STARTER_LOG_ROW_CONTEXT, _datasource__WEBPACK_IMPORTED_MODULE_2__.REF_ID_STARTER_LOG_VOLUME];\n  if (refId === _datasource__WEBPACK_IMPORTED_MODULE_2__.REF_ID_DATA_SAMPLES || starters.some((starter) => refId.startsWith(starter))) {\n    return true;\n  }\n  return false;\n};\nconst calculateTotalBytes = (response) => {\n  let totalBytes = 0;\n  for (const frame of response.data) {\n    const byteKey = frame.meta?.custom?.lokiQueryStatKey;\n    if (byteKey) {\n      totalBytes += frame.meta?.stats?.find((stat) => stat.displayName === byteKey)?.value ?? 0;\n    }\n  }\n  return totalBytes;\n};\nfunction trackQuery(response, request, startTime, trackingSettings = {}, extraPayload = {}) {\n  const { app, targets: queries } = request;\n  if (app === _grafana_data__WEBPACK_IMPORTED_MODULE_7__.CoreApp.Dashboard || app === _grafana_data__WEBPACK_IMPORTED_MODULE_7__.CoreApp.PanelViewer) {\n    return;\n  }\n  let totalBytes = calculateTotalBytes(response);\n  for (const query of queries) {\n    if (shouldNotReportBasedOnRefId(query.refId)) {\n      return;\n    }\n    (0,_grafana_runtime__WEBPACK_IMPORTED_MODULE_6__.reportInteraction)(\"grafana_loki_query_executed\", {\n      app,\n      grafana_version: _grafana_runtime__WEBPACK_IMPORTED_MODULE_8__.config.buildInfo.version,\n      editor_mode: query.editorMode,\n      has_data: response.data.some((frame) => frame.length > 0),\n      has_error: response.error !== void 0,\n      legend: query.legendFormat,\n      line_limit: query.maxLines,\n      parsed_query: (0,_queryUtils__WEBPACK_IMPORTED_MODULE_4__.parseToNodeNamesArray)(query.expr).join(\",\"),\n      obfuscated_query: (0,_queryUtils__WEBPACK_IMPORTED_MODULE_4__.obfuscate)(query.expr),\n      query_type: (0,_queryUtils__WEBPACK_IMPORTED_MODULE_4__.isLogsQuery)(query.expr) ? \"logs\" : \"metric\",\n      query_vector_type: query.queryType,\n      resolution: query.resolution,\n      simultaneously_executed_query_count: queries.filter((query2) => !query2.hide).length,\n      simultaneously_hidden_query_count: queries.filter((query2) => query2.hide).length,\n      time_range_from: request?.range?.from?.toISOString(),\n      time_range_to: request?.range?.to?.toISOString(),\n      time_taken: Date.now() - startTime.getTime(),\n      bytes_processed: totalBytes,\n      is_split: false,\n      predefined_operations_applied: trackingSettings.predefinedOperations ? query.expr.includes(trackingSettings.predefinedOperations) : \"n/a\",\n      ...extraPayload\n    });\n  }\n}\nfunction trackGroupedQueries(response, groupedRequests, originalRequest, startTime, trackingSettings = {}) {\n  const splittingPayload = {\n    split_query_group_count: groupedRequests.length,\n    split_query_largest_partition_size: Math.max(...groupedRequests.map(({ partition }) => partition.length)),\n    split_query_total_request_count: groupedRequests.reduce((total, { partition }) => total + partition.length, 0),\n    is_split: true,\n    simultaneously_executed_query_count: originalRequest.targets.filter((query) => !query.hide).length,\n    simultaneously_hidden_query_count: originalRequest.targets.filter((query) => query.hide).length\n  };\n  for (const group of groupedRequests) {\n    const split_query_partition_size = group.partition.length;\n    trackQuery(response, group.request, startTime, trackingSettings, {\n      ...splittingPayload,\n      split_query_partition_size\n    });\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/tracking.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/types.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LokiQueryDirection: () => (/* reexport safe */ _dataquery_gen__WEBPACK_IMPORTED_MODULE_0__.LokiQueryDirection),\n/* harmony export */   LokiQueryType: () => (/* reexport safe */ _dataquery_gen__WEBPACK_IMPORTED_MODULE_0__.LokiQueryType),\n/* harmony export */   LokiResultType: () => (/* binding */ LokiResultType),\n/* harmony export */   LokiVariableQueryType: () => (/* binding */ LokiVariableQueryType),\n/* harmony export */   SupportingQueryType: () => (/* reexport safe */ _dataquery_gen__WEBPACK_IMPORTED_MODULE_0__.SupportingQueryType)\n/* harmony export */ });\n/* harmony import */ var _dataquery_gen__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./public/app/plugins/datasource/loki/dataquery.gen.ts\");\n\n\n\nvar LokiResultType = /* @__PURE__ */ ((LokiResultType2) => {\n  LokiResultType2[\"Stream\"] = \"streams\";\n  LokiResultType2[\"Vector\"] = \"vector\";\n  LokiResultType2[\"Matrix\"] = \"matrix\";\n  return LokiResultType2;\n})(LokiResultType || {});\nvar LokiVariableQueryType = /* @__PURE__ */ ((LokiVariableQueryType2) => {\n  LokiVariableQueryType2[LokiVariableQueryType2[\"LabelNames\"] = 0] = \"LabelNames\";\n  LokiVariableQueryType2[LokiVariableQueryType2[\"LabelValues\"] = 1] = \"LabelValues\";\n  return LokiVariableQueryType2;\n})(LokiVariableQueryType || {});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL3R5cGVzLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFFb0c7QUFFbEM7QUFrQjNELElBQUssaUJBQUwsa0JBQUtBLG9CQUFMO0FBQ0wsRUFBQUEsZ0JBQUEsWUFBUztBQUNULEVBQUFBLGdCQUFBLFlBQVM7QUFDVCxFQUFBQSxnQkFBQSxZQUFTO0FBSEMsU0FBQUE7QUFBQTtBQW9ITCxJQUFLLHdCQUFMLGtCQUFLQywyQkFBTDtBQUNMLEVBQUFBLDhDQUFBO0FBQ0EsRUFBQUEsOENBQUE7QUFGVSxTQUFBQTtBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ3JhZmFuYS8uL3B1YmxpYy9hcHAvcGx1Z2lucy9kYXRhc291cmNlL2xva2kvdHlwZXMudHM/Y2I0MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEYXRhUXVlcnksIERhdGFRdWVyeVJlcXVlc3QsIERhdGFTb3VyY2VKc29uRGF0YSwgUXVlcnlSZXN1bHRNZXRhLCBTY29wZWRWYXJzLCBUaW1lUmFuZ2UgfSBmcm9tICdAZ3JhZmFuYS9kYXRhJztcblxuaW1wb3J0IHsgTG9raSBhcyBMb2tpUXVlcnlGcm9tU2NoZW1hLCBMb2tpUXVlcnlUeXBlLCBTdXBwb3J0aW5nUXVlcnlUeXBlLCBMb2tpUXVlcnlEaXJlY3Rpb24gfSBmcm9tICcuL2RhdGFxdWVyeS5nZW4nO1xuXG5leHBvcnQgeyBMb2tpUXVlcnlEaXJlY3Rpb24sIExva2lRdWVyeVR5cGUsIFN1cHBvcnRpbmdRdWVyeVR5cGUgfTtcblxuZXhwb3J0IGludGVyZmFjZSBMb2tpSW5zdGFudFF1ZXJ5UmVxdWVzdCB7XG4gIHF1ZXJ5OiBzdHJpbmc7XG4gIGxpbWl0PzogbnVtYmVyO1xuICB0aW1lPzogc3RyaW5nO1xuICBkaXJlY3Rpb24/OiBMb2tpUXVlcnlEaXJlY3Rpb247XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgTG9raVJhbmdlUXVlcnlSZXF1ZXN0IHtcbiAgcXVlcnk6IHN0cmluZztcbiAgbGltaXQ/OiBudW1iZXI7XG4gIHN0YXJ0PzogbnVtYmVyO1xuICBlbmQ/OiBudW1iZXI7XG4gIHN0ZXA/OiBudW1iZXI7XG4gIGRpcmVjdGlvbj86IExva2lRdWVyeURpcmVjdGlvbjtcbn1cblxuZXhwb3J0IGVudW0gTG9raVJlc3VsdFR5cGUge1xuICBTdHJlYW0gPSAnc3RyZWFtcycsXG4gIFZlY3RvciA9ICd2ZWN0b3InLFxuICBNYXRyaXggPSAnbWF0cml4Jyxcbn1cblxuZXhwb3J0IGludGVyZmFjZSBMb2tpUXVlcnkgZXh0ZW5kcyBMb2tpUXVlcnlGcm9tU2NoZW1hIHtcbiAgZGlyZWN0aW9uPzogTG9raVF1ZXJ5RGlyZWN0aW9uO1xuICAvKiogVXNlZCBvbmx5IHRvIGlkZW50aWZ5IHN1cHBvcnRpbmcgcXVlcmllcywgZS5nLiBsb2dzIHZvbHVtZSwgbG9ncyBzYW1wbGUgYW5kIGRhdGEgc2FtcGxlICovXG4gIHN1cHBvcnRpbmdRdWVyeVR5cGU/OiBTdXBwb3J0aW5nUXVlcnlUeXBlO1xuICAvLyBDVUUgYXV0b2dlbmVyYXRlcyBgcXVlcnlUeXBlYCBhcyBgP3N0cmluZ2AsIGFzIHRoYXQncyBob3cgaXQgaXMgZGVmaW5lZFxuICAvLyBpbiB0aGUgcGFyZW50LWludGVyZmFjZSAoaW4gRGF0YVF1ZXJ5KS5cbiAgLy8gdGhlIHRlbXBvcmFyeSBmaXggKHVudGlsIHRoaXMgZ2V0cyBpbXByb3ZlZCBpbiB0aGUgY29kZWdlbiksIGlzIHRvXG4gIC8vIG92ZXJyaWRlIGl0IGhlcmVcbiAgcXVlcnlUeXBlPzogTG9raVF1ZXJ5VHlwZTtcblxuICAvKipcbiAgICogVGhpcyBpcyBhIHByb3BlcnR5IGZvciB0aGUgZXhwZXJpbWVudGFsIHF1ZXJ5IHNwbGl0dGluZyBmZWF0dXJlLlxuICAgKiBAZXhwZXJpbWVudGFsXG4gICAqL1xuICBzcGxpdER1cmF0aW9uPzogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIExva2lPcHRpb25zIGV4dGVuZHMgRGF0YVNvdXJjZUpzb25EYXRhIHtcbiAgbWF4TGluZXM/OiBzdHJpbmc7XG4gIGRlcml2ZWRGaWVsZHM/OiBEZXJpdmVkRmllbGRDb25maWdbXTtcbiAgYWxlcnRtYW5hZ2VyPzogc3RyaW5nO1xuICBrZWVwQ29va2llcz86IHN0cmluZ1tdO1xuICBwcmVkZWZpbmVkT3BlcmF0aW9ucz86IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBMb2tpU3RhdHMge1xuICBbY29tcG9uZW50OiBzdHJpbmddOiB7XG4gICAgW2xhYmVsOiBzdHJpbmddOiBudW1iZXI7XG4gIH07XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgTG9raVZlY3RvclJlc3VsdCB7XG4gIG1ldHJpYzogeyBbbGFiZWw6IHN0cmluZ106IHN0cmluZyB9O1xuICB2YWx1ZTogW251bWJlciwgc3RyaW5nXTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBMb2tpVmVjdG9yUmVzcG9uc2Uge1xuICBzdGF0dXM6IHN0cmluZztcbiAgZGF0YToge1xuICAgIHJlc3VsdFR5cGU6IExva2lSZXN1bHRUeXBlLlZlY3RvcjtcbiAgICByZXN1bHQ6IExva2lWZWN0b3JSZXN1bHRbXTtcbiAgICBzdGF0cz86IExva2lTdGF0cztcbiAgfTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBMb2tpTWF0cml4UmVzdWx0IHtcbiAgbWV0cmljOiBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+O1xuICB2YWx1ZXM6IEFycmF5PFtudW1iZXIsIHN0cmluZ10+O1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIExva2lNYXRyaXhSZXNwb25zZSB7XG4gIHN0YXR1czogc3RyaW5nO1xuICBkYXRhOiB7XG4gICAgcmVzdWx0VHlwZTogTG9raVJlc3VsdFR5cGUuTWF0cml4O1xuICAgIHJlc3VsdDogTG9raU1hdHJpeFJlc3VsdFtdO1xuICAgIHN0YXRzPzogTG9raVN0YXRzO1xuICB9O1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIExva2lTdHJlYW1SZXN1bHQge1xuICBzdHJlYW06IFJlY29yZDxzdHJpbmcsIHN0cmluZz47XG4gIHZhbHVlczogQXJyYXk8W3N0cmluZywgc3RyaW5nXT47XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgTG9raVN0cmVhbVJlc3BvbnNlIHtcbiAgc3RhdHVzOiBzdHJpbmc7XG4gIGRhdGE6IHtcbiAgICByZXN1bHRUeXBlOiBMb2tpUmVzdWx0VHlwZS5TdHJlYW07XG4gICAgcmVzdWx0OiBMb2tpU3RyZWFtUmVzdWx0W107XG4gICAgc3RhdHM/OiBMb2tpU3RhdHM7XG4gIH07XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgTG9raVRhaWxSZXNwb25zZSB7XG4gIHN0cmVhbXM6IExva2lTdHJlYW1SZXN1bHRbXTtcbiAgZHJvcHBlZF9lbnRyaWVzPzogQXJyYXk8e1xuICAgIGxhYmVsczogUmVjb3JkPHN0cmluZywgc3RyaW5nPjtcbiAgICB0aW1lc3RhbXA6IHN0cmluZztcbiAgfT4gfCBudWxsO1xufVxuXG5leHBvcnQgdHlwZSBMb2tpUmVzdWx0ID0gTG9raVZlY3RvclJlc3VsdCB8IExva2lNYXRyaXhSZXN1bHQgfCBMb2tpU3RyZWFtUmVzdWx0O1xuZXhwb3J0IHR5cGUgTG9raVJlc3BvbnNlID0gTG9raVZlY3RvclJlc3BvbnNlIHwgTG9raU1hdHJpeFJlc3BvbnNlIHwgTG9raVN0cmVhbVJlc3BvbnNlO1xuXG5leHBvcnQgaW50ZXJmYWNlIExva2lMb2dzU3RyZWFtRW50cnkge1xuICBsaW5lOiBzdHJpbmc7XG4gIHRzOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgTG9raUV4cHJlc3Npb24ge1xuICByZWdleHA6IHN0cmluZztcbiAgcXVlcnk6IHN0cmluZztcbn1cblxuZXhwb3J0IHR5cGUgRGVyaXZlZEZpZWxkQ29uZmlnID0ge1xuICBtYXRjaGVyUmVnZXg6IHN0cmluZztcbiAgbmFtZTogc3RyaW5nO1xuICB1cmw/OiBzdHJpbmc7XG4gIHVybERpc3BsYXlMYWJlbD86IHN0cmluZztcbiAgZGF0YXNvdXJjZVVpZD86IHN0cmluZztcbn07XG5cbmV4cG9ydCBpbnRlcmZhY2UgVHJhbnNmb3JtZXJPcHRpb25zIHtcbiAgbGVnZW5kRm9ybWF0Pzogc3RyaW5nO1xuICBxdWVyeTogc3RyaW5nO1xuICByZWZJZDogc3RyaW5nO1xuICBzY29wZWRWYXJzOiBTY29wZWRWYXJzO1xuICBtZXRhPzogUXVlcnlSZXN1bHRNZXRhO1xufVxuXG5leHBvcnQgZW51bSBMb2tpVmFyaWFibGVRdWVyeVR5cGUge1xuICBMYWJlbE5hbWVzLFxuICBMYWJlbFZhbHVlcyxcbn1cblxuZXhwb3J0IGludGVyZmFjZSBMb2tpVmFyaWFibGVRdWVyeSBleHRlbmRzIERhdGFRdWVyeSB7XG4gIHR5cGU6IExva2lWYXJpYWJsZVF1ZXJ5VHlwZTtcbiAgbGFiZWw/OiBzdHJpbmc7XG4gIHN0cmVhbT86IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBRdWVyeVN0YXRzIHtcbiAgc3RyZWFtczogbnVtYmVyO1xuICBjaHVua3M6IG51bWJlcjtcbiAgYnl0ZXM6IG51bWJlcjtcbiAgZW50cmllczogbnVtYmVyO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIENvbnRleHRGaWx0ZXIge1xuICBlbmFibGVkOiBib29sZWFuO1xuICBsYWJlbDogc3RyaW5nO1xuICB2YWx1ZTogc3RyaW5nO1xuICBmcm9tUGFyc2VyOiBib29sZWFuO1xuICBkZXNjcmlwdGlvbj86IHN0cmluZztcbn1cblxuZXhwb3J0IHR5cGUgTG9raUdyb3VwZWRSZXF1ZXN0ID0geyByZXF1ZXN0OiBEYXRhUXVlcnlSZXF1ZXN0PExva2lRdWVyeT47IHBhcnRpdGlvbjogVGltZVJhbmdlW10gfTtcbiJdLCJuYW1lcyI6WyJMb2tpUmVzdWx0VHlwZSIsIkxva2lWYXJpYWJsZVF1ZXJ5VHlwZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/types.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/variables.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LokiVariableSupport: () => (/* binding */ LokiVariableSupport)\n/* harmony export */ });\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./.yarn/cache/rxjs-npm-7.8.0-722f1c7172-61b4d4fd32.zip/node_modules/rxjs/dist/esm5/internal/observable/from.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./.yarn/cache/rxjs-npm-7.8.0-722f1c7172-61b4d4fd32.zip/node_modules/rxjs/dist/esm5/internal/operators/map.js\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/types/variables.ts\");\n/* harmony import */ var _components_VariableQueryEditor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./public/app/plugins/datasource/loki/components/VariableQueryEditor.tsx\");\n\n\n\n\n\nclass LokiVariableSupport extends _grafana_data__WEBPACK_IMPORTED_MODULE_1__.CustomVariableSupport {\n  constructor(datasource) {\n    super();\n    this.datasource = datasource;\n    this.editor = _components_VariableQueryEditor__WEBPACK_IMPORTED_MODULE_0__.LokiVariableQueryEditor;\n    this.query = this.query.bind(this);\n  }\n  async execute(query) {\n    return this.datasource.metricFindQuery(query);\n  }\n  query(request) {\n    const result = this.execute(request.targets[0]);\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.from)(result).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => ({ data })));\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9sb2tpL3ZhcmlhYmxlcy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBaUM7QUFDYjtBQUV1RDtBQUVuQztBQUlqQyxNQUFNLDRCQUE0QixnRUFBcUIsQ0FBb0M7QUFBQSxFQUdoRyxZQUFvQixZQUE0QjtBQUM5QyxVQUFNO0FBRFk7QUFGcEIsa0JBQVMsb0ZBQXVCO0FBSTlCLFNBQUssUUFBUSxLQUFLLE1BQU0sS0FBSyxJQUFJO0FBQUEsRUFDbkM7QUFBQSxFQUVBLE1BQU0sUUFBUSxPQUEwQjtBQUN0QyxXQUFPLEtBQUssV0FBVyxnQkFBZ0IsS0FBSztBQUFBLEVBQzlDO0FBQUEsRUFFQSxNQUFNLFNBQTZFO0FBQ2pGLFVBQU0sU0FBUyxLQUFLLFFBQVEsUUFBUSxRQUFRLENBQUMsQ0FBQztBQUU5QyxXQUFPLDBDQUFJLENBQUMsTUFBTSxFQUFFLEtBQUssbURBQUcsQ0FBQyxDQUFDLFVBQVUsRUFBRSxLQUFLLEVBQUUsQ0FBQztBQUFBLEVBQ3BEO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ncmFmYW5hLy4vcHVibGljL2FwcC9wbHVnaW5zL2RhdGFzb3VyY2UvbG9raS92YXJpYWJsZXMudHM/YzVkMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBmcm9tLCBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBtYXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbmltcG9ydCB7IEN1c3RvbVZhcmlhYmxlU3VwcG9ydCwgRGF0YVF1ZXJ5UmVxdWVzdCwgRGF0YVF1ZXJ5UmVzcG9uc2UgfSBmcm9tICdAZ3JhZmFuYS9kYXRhJztcblxuaW1wb3J0IHsgTG9raVZhcmlhYmxlUXVlcnlFZGl0b3IgfSBmcm9tICcuL2NvbXBvbmVudHMvVmFyaWFibGVRdWVyeUVkaXRvcic7XG5pbXBvcnQgeyBMb2tpRGF0YXNvdXJjZSB9IGZyb20gJy4vZGF0YXNvdXJjZSc7XG5pbXBvcnQgeyBMb2tpVmFyaWFibGVRdWVyeSB9IGZyb20gJy4vdHlwZXMnO1xuXG5leHBvcnQgY2xhc3MgTG9raVZhcmlhYmxlU3VwcG9ydCBleHRlbmRzIEN1c3RvbVZhcmlhYmxlU3VwcG9ydDxMb2tpRGF0YXNvdXJjZSwgTG9raVZhcmlhYmxlUXVlcnk+IHtcbiAgZWRpdG9yID0gTG9raVZhcmlhYmxlUXVlcnlFZGl0b3I7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBkYXRhc291cmNlOiBMb2tpRGF0YXNvdXJjZSkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5xdWVyeSA9IHRoaXMucXVlcnkuYmluZCh0aGlzKTtcbiAgfVxuXG4gIGFzeW5jIGV4ZWN1dGUocXVlcnk6IExva2lWYXJpYWJsZVF1ZXJ5KSB7XG4gICAgcmV0dXJuIHRoaXMuZGF0YXNvdXJjZS5tZXRyaWNGaW5kUXVlcnkocXVlcnkpO1xuICB9XG5cbiAgcXVlcnkocmVxdWVzdDogRGF0YVF1ZXJ5UmVxdWVzdDxMb2tpVmFyaWFibGVRdWVyeT4pOiBPYnNlcnZhYmxlPERhdGFRdWVyeVJlc3BvbnNlPiB7XG4gICAgY29uc3QgcmVzdWx0ID0gdGhpcy5leGVjdXRlKHJlcXVlc3QudGFyZ2V0c1swXSk7XG5cbiAgICByZXR1cm4gZnJvbShyZXN1bHQpLnBpcGUobWFwKChkYXRhKSA9PiAoeyBkYXRhIH0pKSk7XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/loki/variables.ts\n");

/***/ }),

/***/ "./public/app/plugins/datasource/prometheus/querybuilder/shared/LabelFilterItem.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LabelFilterItem: () => (/* binding */ LabelFilterItem)\n/* harmony export */ });\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/lodash-npm-4.17.21-6382451519-eb835a2e51.zip/node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/utils/selectUtils.ts\");\n/* harmony import */ var _grafana_e2e_selectors__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(\"./packages/grafana-e2e-selectors/src/selectors/index.ts\");\n/* harmony import */ var _grafana_experimental__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-experimental-virtual-ba767552fe/0/cache/@grafana-experimental-npm-1.6.1-f052d2ae51-64c32bc9e3.zip/node_modules/@grafana/experimental/dist/esm/QueryEditor/InputGroup.js\");\n/* harmony import */ var _grafana_experimental__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-experimental-virtual-ba767552fe/0/cache/@grafana-experimental-npm-1.6.1-f052d2ae51-64c32bc9e3.zip/node_modules/@grafana/experimental/dist/esm/QueryEditor/AccessoryButton.js\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Forms/InlineField.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Select/Select.tsx\");\n/* harmony import */ var app_plugins_datasource_loki_querybuilder_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/plugins/datasource/loki/querybuilder/types.ts\");\n/* harmony import */ var _operationUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./public/app/plugins/datasource/prometheus/querybuilder/shared/operationUtils.ts\");\n\n\n\n\n\n\n\n\n\nfunction LabelFilterItem({\n  item,\n  items,\n  defaultOp,\n  onChange,\n  onDelete,\n  onGetLabelNames,\n  onGetLabelValues,\n  invalidLabel,\n  invalidValue\n}) {\n  const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({});\n  const [labelNamesMenuOpen, setLabelNamesMenuOpen] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n  const [labelValuesMenuOpen, setLabelValuesMenuOpen] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n  const CONFLICTING_LABEL_FILTER_ERROR_MESSAGE = \"You have conflicting label filters\";\n  const isMultiSelect = (operator = item.op) => {\n    return operators.find((op) => op.label === operator)?.isMultiValue;\n  };\n  const getSelectOptionsFromString = (item2) => {\n    if (item2) {\n      if (item2.indexOf(\"|\") > 0) {\n        return item2.split(\"|\");\n      }\n      return [item2];\n    }\n    return [];\n  };\n  const getOptions = () => {\n    const labelValues = state.labelValues ? [...state.labelValues] : [];\n    const selectedOptions = getSelectOptionsFromString(item?.value).map(_grafana_data__WEBPACK_IMPORTED_MODULE_4__.toOption);\n    return (0,lodash__WEBPACK_IMPORTED_MODULE_0__.uniqBy)([...selectedOptions, ...labelValues], \"value\");\n  };\n  const isConflicting = (0,_operationUtils__WEBPACK_IMPORTED_MODULE_3__.isConflictingSelector)(item, items);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { \"data-testid\": \"prometheus-dimensions-filter-item\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_5__.InlineField, { error: CONFLICTING_LABEL_FILTER_ERROR_MESSAGE, invalid: isConflicting ? true : void 0 }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_experimental__WEBPACK_IMPORTED_MODULE_6__.InputGroup, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n    _grafana_ui__WEBPACK_IMPORTED_MODULE_7__.Select,\n    {\n      placeholder: \"Select label\",\n      \"aria-label\": _grafana_e2e_selectors__WEBPACK_IMPORTED_MODULE_8__.selectors.components.QueryBuilder.labelSelect,\n      inputId: \"prometheus-dimensions-filter-item-key\",\n      width: \"auto\",\n      value: item.label ? (0,_grafana_data__WEBPACK_IMPORTED_MODULE_4__.toOption)(item.label) : null,\n      allowCustomValue: true,\n      onOpenMenu: async () => {\n        setState({ isLoadingLabelNames: true });\n        const labelNames = await onGetLabelNames(item);\n        setLabelNamesMenuOpen(true);\n        setState({ labelNames, isLoadingLabelNames: void 0 });\n      },\n      onCloseMenu: () => {\n        setLabelNamesMenuOpen(false);\n      },\n      isOpen: labelNamesMenuOpen,\n      isLoading: state.isLoadingLabelNames,\n      options: state.labelNames,\n      onChange: (change) => {\n        if (change.label) {\n          onChange({\n            ...item,\n            op: item.op ?? defaultOp,\n            label: change.label\n          });\n        }\n      },\n      invalid: isConflicting || invalidLabel\n    }\n  ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n    _grafana_ui__WEBPACK_IMPORTED_MODULE_7__.Select,\n    {\n      \"aria-label\": _grafana_e2e_selectors__WEBPACK_IMPORTED_MODULE_8__.selectors.components.QueryBuilder.matchOperatorSelect,\n      value: (0,_grafana_data__WEBPACK_IMPORTED_MODULE_4__.toOption)(item.op ?? defaultOp),\n      options: operators,\n      width: \"auto\",\n      onChange: (change) => {\n        if (change.value != null) {\n          onChange({\n            ...item,\n            op: change.value,\n            value: isMultiSelect(change.value) ? item.value : getSelectOptionsFromString(item?.value)[0]\n          });\n        }\n      },\n      invalid: isConflicting\n    }\n  ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n    _grafana_ui__WEBPACK_IMPORTED_MODULE_7__.Select,\n    {\n      placeholder: \"Select value\",\n      \"aria-label\": _grafana_e2e_selectors__WEBPACK_IMPORTED_MODULE_8__.selectors.components.QueryBuilder.valueSelect,\n      inputId: \"prometheus-dimensions-filter-item-value\",\n      width: \"auto\",\n      value: isMultiSelect() ? getSelectOptionsFromString(item?.value).map(_grafana_data__WEBPACK_IMPORTED_MODULE_4__.toOption) : getSelectOptionsFromString(item?.value).map(_grafana_data__WEBPACK_IMPORTED_MODULE_4__.toOption)[0],\n      allowCustomValue: true,\n      onOpenMenu: async () => {\n        setState({ isLoadingLabelValues: true });\n        const labelValues = await onGetLabelValues(item);\n        setState({\n          ...state,\n          labelValues,\n          isLoadingLabelValues: void 0\n        });\n        setLabelValuesMenuOpen(true);\n      },\n      onCloseMenu: () => {\n        setLabelValuesMenuOpen(false);\n      },\n      isOpen: labelValuesMenuOpen,\n      isMulti: isMultiSelect(),\n      isLoading: state.isLoadingLabelValues,\n      options: getOptions(),\n      onChange: (change) => {\n        if (change.value) {\n          onChange({\n            ...item,\n            value: change.value,\n            op: item.op ?? defaultOp\n          });\n        } else {\n          const changes = change.map((change2) => {\n            return change2.label;\n          }).join(\"|\");\n          onChange({ ...item, value: changes, op: item.op ?? defaultOp });\n        }\n      },\n      invalid: isConflicting || invalidValue\n    }\n  ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_experimental__WEBPACK_IMPORTED_MODULE_9__.AccessoryButton, { \"aria-label\": \"remove\", icon: \"times\", variant: \"secondary\", onClick: onDelete }))));\n}\nconst operators = [\n  app_plugins_datasource_loki_querybuilder_types__WEBPACK_IMPORTED_MODULE_2__.lokiOperators.equals,\n  app_plugins_datasource_loki_querybuilder_types__WEBPACK_IMPORTED_MODULE_2__.lokiOperators.doesNotEqual,\n  app_plugins_datasource_loki_querybuilder_types__WEBPACK_IMPORTED_MODULE_2__.lokiOperators.matchesRegex,\n  app_plugins_datasource_loki_querybuilder_types__WEBPACK_IMPORTED_MODULE_2__.lokiOperators.doesNotMatchRegex\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/prometheus/querybuilder/shared/LabelFilterItem.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/prometheus/querybuilder/shared/LabelFilters.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LabelFilters: () => (/* binding */ LabelFilters),\n/* harmony export */   MISSING_LABEL_FILTER_ERROR_MESSAGE: () => (/* binding */ MISSING_LABEL_FILTER_ERROR_MESSAGE)\n/* harmony export */ });\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/lodash-npm-4.17.21-6382451519-eb835a2e51.zip/node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _grafana_experimental__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-experimental-virtual-ba767552fe/0/cache/@grafana-experimental-npm-1.6.1-f052d2ae51-64c32bc9e3.zip/node_modules/@grafana/experimental/dist/esm/QueryEditor/EditorFieldGroup.js\");\n/* harmony import */ var _grafana_experimental__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-experimental-virtual-ba767552fe/0/cache/@grafana-experimental-npm-1.6.1-f052d2ae51-64c32bc9e3.zip/node_modules/@grafana/experimental/dist/esm/QueryEditor/EditorField.js\");\n/* harmony import */ var _grafana_experimental__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-experimental-virtual-ba767552fe/0/cache/@grafana-experimental-npm-1.6.1-f052d2ae51-64c32bc9e3.zip/node_modules/@grafana/experimental/dist/esm/QueryEditor/EditorList.js\");\n/* harmony import */ var _LabelFilterItem__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/plugins/datasource/prometheus/querybuilder/shared/LabelFilterItem.tsx\");\n\n\n\n\n\nconst MISSING_LABEL_FILTER_ERROR_MESSAGE = \"Select at least 1 label filter (label and value)\";\nfunction LabelFilters({\n  labelsFilters,\n  onChange,\n  onGetLabelNames,\n  onGetLabelValues,\n  labelFilterRequired\n}) {\n  const defaultOp = \"=\";\n  const [items, setItems] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([{ op: defaultOp }]);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (labelsFilters.length > 0) {\n      setItems(labelsFilters);\n    } else {\n      setItems([{ op: defaultOp }]);\n    }\n  }, [labelsFilters]);\n  const onLabelsChange = (newItems) => {\n    setItems(newItems);\n    const newLabels = newItems.filter((x) => x.label != null && x.value != null);\n    if (!(0,lodash__WEBPACK_IMPORTED_MODULE_0__.isEqual)(newLabels, labelsFilters)) {\n      onChange(newLabels);\n    }\n  };\n  const hasLabelFilter = items.some((item) => item.label && item.value);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_experimental__WEBPACK_IMPORTED_MODULE_3__.EditorFieldGroup, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n    _grafana_experimental__WEBPACK_IMPORTED_MODULE_4__.EditorField,\n    {\n      label: \"Label filters\",\n      error: MISSING_LABEL_FILTER_ERROR_MESSAGE,\n      invalid: labelFilterRequired && !hasLabelFilter\n    },\n    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n      _grafana_experimental__WEBPACK_IMPORTED_MODULE_5__.EditorList,\n      {\n        items,\n        onChange: onLabelsChange,\n        renderItem: (item, onChangeItem, onDelete) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n          _LabelFilterItem__WEBPACK_IMPORTED_MODULE_2__.LabelFilterItem,\n          {\n            item,\n            items,\n            defaultOp,\n            onChange: onChangeItem,\n            onDelete,\n            onGetLabelNames,\n            onGetLabelValues,\n            invalidLabel: labelFilterRequired && !item.label,\n            invalidValue: labelFilterRequired && !item.value\n          }\n        )\n      }\n    )\n  ));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9wcm9tZXRoZXVzL3F1ZXJ5YnVpbGRlci9zaGFyZWQvTGFiZWxGaWx0ZXJzLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUF3QjtBQUNtQjtBQUdlO0FBSTFCO0FBRXpCLE1BQU0scUNBQXFDO0FBVzNDLFNBQVMsYUFBYTtBQUFBLEVBQzNCO0FBQUEsRUFDQTtBQUFBLEVBQ0E7QUFBQSxFQUNBO0FBQUEsRUFDQTtBQUNGLEdBQVU7QUFDUixRQUFNLFlBQVk7QUFDbEIsUUFBTSxDQUFDLE9BQU8sUUFBUSxJQUFJLCtDQUFRLENBQTBDLENBQUMsRUFBRSxJQUFJLFVBQVUsQ0FBQyxDQUFDO0FBRS9GLGtEQUFTLENBQUMsTUFBTTtBQUNkLFFBQUksY0FBYyxTQUFTLEdBQUc7QUFDNUIsZUFBUyxhQUFhO0FBQUEsSUFDeEIsT0FBTztBQUNMLGVBQVMsQ0FBQyxFQUFFLElBQUksVUFBVSxDQUFDLENBQUM7QUFBQSxJQUM5QjtBQUFBLEVBQ0YsR0FBRyxDQUFDLGFBQWEsQ0FBQztBQUVsQixRQUFNLGlCQUFpQixDQUFDLGFBQXNEO0FBQzVFLGFBQVMsUUFBUTtBQUdqQixVQUFNLFlBQVksU0FBUyxPQUFPLENBQUMsTUFBTSxFQUFFLFNBQVMsUUFBUSxFQUFFLFNBQVMsSUFBSTtBQUMzRSxRQUFJLENBQUMsK0NBQU8sQ0FBQyxXQUFXLGFBQWEsR0FBRztBQUN0QyxlQUFTLFNBQXNDO0FBQUEsSUFDakQ7QUFBQSxFQUNGO0FBRUEsUUFBTSxpQkFBaUIsTUFBTSxLQUFLLENBQUMsU0FBUyxLQUFLLFNBQVMsS0FBSyxLQUFLO0FBRXBFLFNBQ0UsMkVBQUMsbUVBQWdCLFFBQ2Y7QUFBQSxJQUFDLDhEQUFXO0FBQVg7QUFBQSxNQUNDLE9BQU07QUFBQSxNQUNOLE9BQU87QUFBQSxNQUNQLFNBQVMsdUJBQXVCLENBQUM7QUFBQTtBQUFBLElBRWpDO0FBQUEsTUFBQyw2REFBVTtBQUFWO0FBQUEsUUFDQztBQUFBLFFBQ0EsVUFBVTtBQUFBLFFBQ1YsWUFBWSxDQUFDLE1BQXdDLGNBQWMsYUFDakU7QUFBQSxVQUFDLDZEQUFlO0FBQWY7QUFBQSxZQUNDO0FBQUEsWUFDQTtBQUFBLFlBQ0E7QUFBQSxZQUNBLFVBQVU7QUFBQSxZQUNWO0FBQUEsWUFDQTtBQUFBLFlBQ0E7QUFBQSxZQUNBLGNBQWMsdUJBQXVCLENBQUMsS0FBSztBQUFBLFlBQzNDLGNBQWMsdUJBQXVCLENBQUMsS0FBSztBQUFBO0FBQUEsUUFDN0M7QUFBQTtBQUFBLElBRUo7QUFBQSxFQUNGLENBQ0Y7QUFFSiIsInNvdXJjZXMiOlsid2VicGFjazovL2dyYWZhbmEvLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9wcm9tZXRoZXVzL3F1ZXJ5YnVpbGRlci9zaGFyZWQvTGFiZWxGaWx0ZXJzLnRzeD9mM2VkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzRXF1YWwgfSBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB7IFNlbGVjdGFibGVWYWx1ZSB9IGZyb20gJ0BncmFmYW5hL2RhdGEnO1xuaW1wb3J0IHsgRWRpdG9yRmllbGRHcm91cCwgRWRpdG9yRmllbGQsIEVkaXRvckxpc3QgfSBmcm9tICdAZ3JhZmFuYS9leHBlcmltZW50YWwnO1xuXG5pbXBvcnQgeyBRdWVyeUJ1aWxkZXJMYWJlbEZpbHRlciB9IGZyb20gJy4uL3NoYXJlZC90eXBlcyc7XG5cbmltcG9ydCB7IExhYmVsRmlsdGVySXRlbSB9IGZyb20gJy4vTGFiZWxGaWx0ZXJJdGVtJztcblxuZXhwb3J0IGNvbnN0IE1JU1NJTkdfTEFCRUxfRklMVEVSX0VSUk9SX01FU1NBR0UgPSAnU2VsZWN0IGF0IGxlYXN0IDEgbGFiZWwgZmlsdGVyIChsYWJlbCBhbmQgdmFsdWUpJztcblxuZXhwb3J0IGludGVyZmFjZSBQcm9wcyB7XG4gIGxhYmVsc0ZpbHRlcnM6IFF1ZXJ5QnVpbGRlckxhYmVsRmlsdGVyW107XG4gIG9uQ2hhbmdlOiAobGFiZWxGaWx0ZXJzOiBRdWVyeUJ1aWxkZXJMYWJlbEZpbHRlcltdKSA9PiB2b2lkO1xuICBvbkdldExhYmVsTmFtZXM6IChmb3JMYWJlbDogUGFydGlhbDxRdWVyeUJ1aWxkZXJMYWJlbEZpbHRlcj4pID0+IFByb21pc2U8U2VsZWN0YWJsZVZhbHVlW10+O1xuICBvbkdldExhYmVsVmFsdWVzOiAoZm9yTGFiZWw6IFBhcnRpYWw8UXVlcnlCdWlsZGVyTGFiZWxGaWx0ZXI+KSA9PiBQcm9taXNlPFNlbGVjdGFibGVWYWx1ZVtdPjtcbiAgLyoqIElmIHNldCB0byB0cnVlLCBjb21wb25lbnQgd2lsbCBzaG93IGVycm9yIG1lc3NhZ2UgdW50aWwgYXQgbGVhc3QgMSBmaWx0ZXIgaXMgc2VsZWN0ZWQgKi9cbiAgbGFiZWxGaWx0ZXJSZXF1aXJlZD86IGJvb2xlYW47XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBMYWJlbEZpbHRlcnMoe1xuICBsYWJlbHNGaWx0ZXJzLFxuICBvbkNoYW5nZSxcbiAgb25HZXRMYWJlbE5hbWVzLFxuICBvbkdldExhYmVsVmFsdWVzLFxuICBsYWJlbEZpbHRlclJlcXVpcmVkLFxufTogUHJvcHMpIHtcbiAgY29uc3QgZGVmYXVsdE9wID0gJz0nO1xuICBjb25zdCBbaXRlbXMsIHNldEl0ZW1zXSA9IHVzZVN0YXRlPEFycmF5PFBhcnRpYWw8UXVlcnlCdWlsZGVyTGFiZWxGaWx0ZXI+Pj4oW3sgb3A6IGRlZmF1bHRPcCB9XSk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAobGFiZWxzRmlsdGVycy5sZW5ndGggPiAwKSB7XG4gICAgICBzZXRJdGVtcyhsYWJlbHNGaWx0ZXJzKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc2V0SXRlbXMoW3sgb3A6IGRlZmF1bHRPcCB9XSk7XG4gICAgfVxuICB9LCBbbGFiZWxzRmlsdGVyc10pO1xuXG4gIGNvbnN0IG9uTGFiZWxzQ2hhbmdlID0gKG5ld0l0ZW1zOiBBcnJheTxQYXJ0aWFsPFF1ZXJ5QnVpbGRlckxhYmVsRmlsdGVyPj4pID0+IHtcbiAgICBzZXRJdGVtcyhuZXdJdGVtcyk7XG5cbiAgICAvLyBFeHRyYWN0IGZ1bGwgbGFiZWwgZmlsdGVycyB3aXRoIGJvdGggbGFiZWwgJiB2YWx1ZVxuICAgIGNvbnN0IG5ld0xhYmVscyA9IG5ld0l0ZW1zLmZpbHRlcigoeCkgPT4geC5sYWJlbCAhPSBudWxsICYmIHgudmFsdWUgIT0gbnVsbCk7XG4gICAgaWYgKCFpc0VxdWFsKG5ld0xhYmVscywgbGFiZWxzRmlsdGVycykpIHtcbiAgICAgIG9uQ2hhbmdlKG5ld0xhYmVscyBhcyBRdWVyeUJ1aWxkZXJMYWJlbEZpbHRlcltdKTtcbiAgICB9XG4gIH07XG5cbiAgY29uc3QgaGFzTGFiZWxGaWx0ZXIgPSBpdGVtcy5zb21lKChpdGVtKSA9PiBpdGVtLmxhYmVsICYmIGl0ZW0udmFsdWUpO1xuXG4gIHJldHVybiAoXG4gICAgPEVkaXRvckZpZWxkR3JvdXA+XG4gICAgICA8RWRpdG9yRmllbGRcbiAgICAgICAgbGFiZWw9XCJMYWJlbCBmaWx0ZXJzXCJcbiAgICAgICAgZXJyb3I9e01JU1NJTkdfTEFCRUxfRklMVEVSX0VSUk9SX01FU1NBR0V9XG4gICAgICAgIGludmFsaWQ9e2xhYmVsRmlsdGVyUmVxdWlyZWQgJiYgIWhhc0xhYmVsRmlsdGVyfVxuICAgICAgPlxuICAgICAgICA8RWRpdG9yTGlzdFxuICAgICAgICAgIGl0ZW1zPXtpdGVtc31cbiAgICAgICAgICBvbkNoYW5nZT17b25MYWJlbHNDaGFuZ2V9XG4gICAgICAgICAgcmVuZGVySXRlbT17KGl0ZW06IFBhcnRpYWw8UXVlcnlCdWlsZGVyTGFiZWxGaWx0ZXI+LCBvbkNoYW5nZUl0ZW0sIG9uRGVsZXRlKSA9PiAoXG4gICAgICAgICAgICA8TGFiZWxGaWx0ZXJJdGVtXG4gICAgICAgICAgICAgIGl0ZW09e2l0ZW19XG4gICAgICAgICAgICAgIGl0ZW1zPXtpdGVtc31cbiAgICAgICAgICAgICAgZGVmYXVsdE9wPXtkZWZhdWx0T3B9XG4gICAgICAgICAgICAgIG9uQ2hhbmdlPXtvbkNoYW5nZUl0ZW19XG4gICAgICAgICAgICAgIG9uRGVsZXRlPXtvbkRlbGV0ZX1cbiAgICAgICAgICAgICAgb25HZXRMYWJlbE5hbWVzPXtvbkdldExhYmVsTmFtZXN9XG4gICAgICAgICAgICAgIG9uR2V0TGFiZWxWYWx1ZXM9e29uR2V0TGFiZWxWYWx1ZXN9XG4gICAgICAgICAgICAgIGludmFsaWRMYWJlbD17bGFiZWxGaWx0ZXJSZXF1aXJlZCAmJiAhaXRlbS5sYWJlbH1cbiAgICAgICAgICAgICAgaW52YWxpZFZhbHVlPXtsYWJlbEZpbHRlclJlcXVpcmVkICYmICFpdGVtLnZhbHVlfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICApfVxuICAgICAgICAvPlxuICAgICAgPC9FZGl0b3JGaWVsZD5cbiAgICA8L0VkaXRvckZpZWxkR3JvdXA+XG4gICk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/prometheus/querybuilder/shared/LabelFilters.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/prometheus/querybuilder/shared/OperationEditor.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OperationEditor: () => (/* binding */ OperationEditor)\n/* harmony export */ });\n/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/@emotion-css-npm-11.11.2-dbfa42cf83-1edea109df.zip/node_modules/@emotion/css/dist/emotion-css.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_beautiful_dnd__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(\"./.yarn/__virtual__/react-beautiful-dnd-virtual-daef784a91/0/cache/react-beautiful-dnd-npm-13.1.1-ddc8adf565-5f90f7c0ab.zip/node_modules/react-beautiful-dnd/dist/react-beautiful-dnd.esm.js\");\n/* harmony import */ var _grafana_experimental__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-experimental-virtual-ba767552fe/0/cache/@grafana-experimental-npm-1.6.1-f052d2ae51-64c32bc9e3.zip/node_modules/@grafana/experimental/dist/esm/QueryEditor/Stack.js\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/themes/ThemeContext.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Tooltip/Tooltip.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Icon/Icon.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Button/Button.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Forms/InlineField.tsx\");\n/* harmony import */ var app_plugins_datasource_loki_querybuilder_operationUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/plugins/datasource/loki/querybuilder/operationUtils.ts\");\n/* harmony import */ var app_plugins_datasource_loki_querybuilder_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./public/app/plugins/datasource/loki/querybuilder/types.ts\");\n/* harmony import */ var _OperationHeader__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./public/app/plugins/datasource/prometheus/querybuilder/shared/OperationHeader.tsx\");\n/* harmony import */ var _OperationParamEditor__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./public/app/plugins/datasource/prometheus/querybuilder/shared/OperationParamEditor.tsx\");\n/* harmony import */ var _operationUtils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./public/app/plugins/datasource/prometheus/querybuilder/shared/operationUtils.ts\");\n\n\n\n\n\n\n\n\n\n\n\nfunction OperationEditor({\n  operation,\n  index,\n  onRemove,\n  onChange,\n  onRunQuery,\n  queryModeller,\n  query,\n  datasource,\n  flash,\n  highlight\n}) {\n  const def = queryModeller.getOperationDef(operation.id);\n  const shouldFlash = useFlash(flash);\n  const isConflicting = operation.id === app_plugins_datasource_loki_querybuilder_types__WEBPACK_IMPORTED_MODULE_3__.LokiOperationId.LabelFilter && (0,app_plugins_datasource_loki_querybuilder_operationUtils__WEBPACK_IMPORTED_MODULE_2__.isConflictingFilter)(operation, query.operations);\n  const theme = (0,_grafana_ui__WEBPACK_IMPORTED_MODULE_7__.useTheme2)();\n  const styles = getStyles(theme, isConflicting);\n  if (!def) {\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"span\", null, \"Operation \", operation.id, \" not found\");\n  }\n  const onParamValueChanged = (paramIdx, value) => {\n    const update = { ...operation, params: [...operation.params] };\n    update.params[paramIdx] = value;\n    callParamChangedThenOnChange(def, update, index, paramIdx, onChange);\n  };\n  const onAddRestParam = () => {\n    const update = { ...operation, params: [...operation.params, \"\"] };\n    callParamChangedThenOnChange(def, update, index, operation.params.length, onChange);\n  };\n  const onRemoveRestParam = (paramIdx) => {\n    const update = {\n      ...operation,\n      params: [...operation.params.slice(0, paramIdx), ...operation.params.slice(paramIdx + 1)]\n    };\n    callParamChangedThenOnChange(def, update, index, paramIdx, onChange);\n  };\n  const operationElements = [];\n  for (let paramIndex = 0; paramIndex < operation.params.length; paramIndex++) {\n    const paramDef = def.params[Math.min(def.params.length - 1, paramIndex)];\n    const Editor = (0,_OperationParamEditor__WEBPACK_IMPORTED_MODULE_5__.getOperationParamEditor)(paramDef);\n    operationElements.push(\n      /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: styles.paramRow, key: `${paramIndex}-1` }, !paramDef.hideName && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: styles.paramName }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"label\", { htmlFor: (0,_operationUtils__WEBPACK_IMPORTED_MODULE_6__.getOperationParamId)(index, paramIndex) }, paramDef.name), paramDef.description && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_8__.Tooltip, { placement: \"top\", content: paramDef.description, theme: \"info\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_9__.Icon, { name: \"info-circle\", size: \"sm\", className: styles.infoIcon }))), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: styles.paramValue }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_experimental__WEBPACK_IMPORTED_MODULE_10__.Stack, { gap: 0.5, direction: \"row\", alignItems: \"center\", wrap: false }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n        Editor,\n        {\n          index: paramIndex,\n          paramDef,\n          value: operation.params[paramIndex],\n          operation,\n          operationIndex: index,\n          onChange: onParamValueChanged,\n          onRunQuery,\n          query,\n          datasource\n        }\n      ), paramDef.restParam && (operation.params.length > def.params.length || paramDef.optional) && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n        _grafana_ui__WEBPACK_IMPORTED_MODULE_11__.Button,\n        {\n          \"data-testid\": `operations.${index}.remove-rest-param`,\n          size: \"sm\",\n          fill: \"text\",\n          icon: \"times\",\n          variant: \"secondary\",\n          title: `Remove ${paramDef.name}`,\n          onClick: () => onRemoveRestParam(paramIndex)\n        }\n      ))))\n    );\n  }\n  let restParam;\n  if (def.params.length > 0) {\n    const lastParamDef = def.params[def.params.length - 1];\n    if (lastParamDef.restParam) {\n      restParam = renderAddRestParamButton(lastParamDef, onAddRestParam, index, operation.params.length, styles);\n    }\n  }\n  const isInvalid = (isDragging) => {\n    if (isDragging) {\n      return void 0;\n    }\n    return isConflicting ? true : void 0;\n  };\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(react_beautiful_dnd__WEBPACK_IMPORTED_MODULE_12__.Draggable, { draggableId: `operation-${index}`, index }, (provided, snapshot) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n    _grafana_ui__WEBPACK_IMPORTED_MODULE_13__.InlineField,\n    {\n      error: \"You have conflicting label filters\",\n      invalid: isInvalid(snapshot.isDragging),\n      className: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.cx)(styles.error, styles.cardWrapper)\n    },\n    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n      \"div\",\n      {\n        className: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.cx)(\n          styles.card,\n          (shouldFlash || highlight) && styles.cardHighlight,\n          isConflicting && styles.cardError\n        ),\n        ref: provided.innerRef,\n        ...provided.draggableProps,\n        \"data-testid\": `operations.${index}.wrapper`\n      },\n      /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n        _OperationHeader__WEBPACK_IMPORTED_MODULE_4__.OperationHeader,\n        {\n          operation,\n          dragHandleProps: provided.dragHandleProps,\n          def,\n          index,\n          onChange,\n          onRemove,\n          queryModeller\n        }\n      ),\n      /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: styles.body }, operationElements),\n      restParam,\n      index < query.operations.length - 1 && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: styles.arrow }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: styles.arrowLine }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: styles.arrowArrow }))\n    )\n  ));\n}\nfunction useFlash(flash) {\n  const [keepFlash, setKeepFlash] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    let t;\n    if (flash) {\n      t = setTimeout(() => {\n        setKeepFlash(false);\n      }, 1e3);\n    } else {\n      setKeepFlash(true);\n    }\n    return () => clearTimeout(t);\n  }, [flash]);\n  return keepFlash && flash;\n}\nfunction renderAddRestParamButton(paramDef, onAddRestParam, operationIndex, paramIndex, styles) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: styles.restParam, key: `${paramIndex}-2` }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n    _grafana_ui__WEBPACK_IMPORTED_MODULE_11__.Button,\n    {\n      size: \"sm\",\n      icon: \"plus\",\n      title: `Add ${paramDef.name}`,\n      variant: \"secondary\",\n      onClick: onAddRestParam,\n      \"data-testid\": `operations.${operationIndex}.add-rest-param`\n    },\n    paramDef.name\n  ));\n}\nfunction callParamChangedThenOnChange(def, operation, operationIndex, paramIndex, onChange) {\n  if (def.paramChangedHandler) {\n    onChange(operationIndex, def.paramChangedHandler(paramIndex, operation, def));\n  } else {\n    onChange(operationIndex, operation);\n  }\n}\nconst getStyles = (theme, isConflicting) => {\n  return {\n    cardWrapper: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)({\n      alignItems: \"stretch\"\n    }),\n    error: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)({\n      marginBottom: theme.spacing(1)\n    }),\n    card: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)({\n      background: theme.colors.background.primary,\n      border: `1px solid ${theme.colors.border.medium}`,\n      cursor: \"grab\",\n      borderRadius: theme.shape.borderRadius(1),\n      position: \"relative\",\n      transition: \"all 0.5s ease-in 0s\",\n      height: isConflicting ? \"auto\" : \"100%\"\n    }),\n    cardError: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)({\n      boxShadow: `0px 0px 4px 0px ${theme.colors.warning.main}`,\n      border: `1px solid ${theme.colors.warning.main}`\n    }),\n    cardHighlight: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)({\n      boxShadow: `0px 0px 4px 0px ${theme.colors.primary.border}`,\n      border: `1px solid ${theme.colors.primary.border}`\n    }),\n    infoIcon: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)({\n      marginLeft: theme.spacing(0.5),\n      color: theme.colors.text.secondary,\n      \":hover\": {\n        color: theme.colors.text.primary\n      }\n    }),\n    body: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)({\n      margin: theme.spacing(1, 1, 0.5, 1),\n      display: \"table\"\n    }),\n    paramRow: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)({\n      label: \"paramRow\",\n      display: \"table-row\",\n      verticalAlign: \"middle\"\n    }),\n    paramName: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)({\n      display: \"table-cell\",\n      padding: theme.spacing(0, 1, 0, 0),\n      fontSize: theme.typography.bodySmall.fontSize,\n      fontWeight: theme.typography.fontWeightMedium,\n      verticalAlign: \"middle\",\n      height: \"32px\"\n    }),\n    paramValue: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)({\n      label: \"paramValue\",\n      display: \"table-cell\",\n      verticalAlign: \"middle\"\n    }),\n    restParam: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)({\n      padding: theme.spacing(0, 1, 1, 1)\n    }),\n    arrow: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)({\n      position: \"absolute\",\n      top: \"0\",\n      right: \"-18px\",\n      display: \"flex\"\n    }),\n    arrowLine: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)({\n      height: \"2px\",\n      width: \"8px\",\n      backgroundColor: theme.colors.border.strong,\n      position: \"relative\",\n      top: \"14px\"\n    }),\n    arrowArrow: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)({\n      width: 0,\n      height: 0,\n      borderTop: `5px solid transparent`,\n      borderBottom: `5px solid transparent`,\n      borderLeft: `7px solid ${theme.colors.border.strong}`,\n      position: \"relative\",\n      top: \"10px\"\n    })\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/prometheus/querybuilder/shared/OperationEditor.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/prometheus/querybuilder/shared/OperationHeader.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OperationHeader: () => (/* binding */ OperationHeader)\n/* harmony export */ });\n/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/@emotion-css-npm-11.11.2-dbfa42cf83-1edea109df.zip/node_modules/@emotion/css/dist/emotion-css.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _grafana_experimental__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-experimental-virtual-ba767552fe/0/cache/@grafana-experimental-npm-1.6.1-f052d2ae51-64c32bc9e3.zip/node_modules/@grafana/experimental/dist/esm/QueryEditor/FlexItem.js\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/themes/ThemeContext.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Button/Button.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Select/Select.tsx\");\n/* harmony import */ var _OperationInfoButton__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/plugins/datasource/prometheus/querybuilder/shared/OperationInfoButton.tsx\");\n\n\n\n\n\n\nconst OperationHeader = react__WEBPACK_IMPORTED_MODULE_1___default().memo(\n  ({ operation, def, index, onChange, onRemove, queryModeller, dragHandleProps }) => {\n    const styles = (0,_grafana_ui__WEBPACK_IMPORTED_MODULE_3__.useStyles2)(getStyles);\n    const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({});\n    const onToggleSwitcher = () => {\n      if (state.isOpen) {\n        setState({ ...state, isOpen: false });\n      } else {\n        const alternatives = queryModeller.getAlternativeOperations(def.alternativesKey).map((alt) => ({ label: alt.name, value: alt }));\n        setState({ isOpen: true, alternatives });\n      }\n    };\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: styles.header }, !state.isOpen && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement((react__WEBPACK_IMPORTED_MODULE_1___default().Fragment), null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { ...dragHandleProps }, def.name ?? def.id), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_experimental__WEBPACK_IMPORTED_MODULE_4__.FlexItem, { grow: 1 }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: `${styles.operationHeaderButtons} operation-header-show-on-hover` }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n      _grafana_ui__WEBPACK_IMPORTED_MODULE_5__.Button,\n      {\n        icon: \"angle-down\",\n        size: \"sm\",\n        onClick: onToggleSwitcher,\n        fill: \"text\",\n        variant: \"secondary\",\n        title: \"Click to view alternative operations\"\n      }\n    ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_OperationInfoButton__WEBPACK_IMPORTED_MODULE_2__.OperationInfoButton, { def, operation }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n      _grafana_ui__WEBPACK_IMPORTED_MODULE_5__.Button,\n      {\n        icon: \"times\",\n        size: \"sm\",\n        onClick: () => onRemove(index),\n        fill: \"text\",\n        variant: \"secondary\",\n        title: \"Remove operation\"\n      }\n    ))), state.isOpen && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: styles.selectWrapper }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n      _grafana_ui__WEBPACK_IMPORTED_MODULE_6__.Select,\n      {\n        autoFocus: true,\n        openMenuOnFocus: true,\n        placeholder: \"Replace with\",\n        options: state.alternatives,\n        isOpen: true,\n        onCloseMenu: onToggleSwitcher,\n        onChange: (value) => {\n          if (value.value) {\n            const newDef = queryModeller.getOperationDef(value.value.id);\n            const newParams = [...newDef.defaultParams];\n            for (let i = 0; i < Math.min(operation.params.length, newParams.length); i++) {\n              if (newDef.params[i].type === def.params[i].type) {\n                newParams[i] = operation.params[i];\n              }\n            }\n            const changedOp = { ...operation, params: newParams, id: value.value.id };\n            onChange(index, def.changeTypeHandler ? def.changeTypeHandler(changedOp, newDef) : changedOp);\n          }\n        }\n      }\n    )));\n  }\n);\nOperationHeader.displayName = \"OperationHeader\";\nconst getStyles = (theme) => {\n  return {\n    header: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)({\n      borderBottom: `1px solid ${theme.colors.border.medium}`,\n      padding: theme.spacing(0.5, 0.5, 0.5, 1),\n      display: \"flex\",\n      alignItems: \"center\"\n    }),\n    operationHeaderButtons: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)({\n      opacity: 1\n    }),\n    selectWrapper: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)({\n      paddingRight: theme.spacing(2)\n    })\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/prometheus/querybuilder/shared/OperationHeader.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/prometheus/querybuilder/shared/OperationInfoButton.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OperationInfoButton: () => (/* binding */ OperationInfoButton)\n/* harmony export */ });\n/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/@emotion-css-npm-11.11.2-dbfa42cf83-1edea109df.zip/node_modules/@emotion/css/dist/emotion-css.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_popper_tooltip__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./.yarn/__virtual__/react-popper-tooltip-virtual-09b5eebcd2/0/cache/react-popper-tooltip-npm-4.4.2-54ed1200c6-516988b925.zip/node_modules/react-popper-tooltip/dist/esm/react-popper-tooltip.js\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/text/markdown.ts\");\n/* harmony import */ var _grafana_experimental__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-experimental-virtual-ba767552fe/0/cache/@grafana-experimental-npm-1.6.1-f052d2ae51-64c32bc9e3.zip/node_modules/@grafana/experimental/dist/esm/QueryEditor/FlexItem.js\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/themes/ThemeContext.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Button/Button.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Portal/Portal.tsx\");\n\n\n\n\n\n\n\nconst OperationInfoButton = react__WEBPACK_IMPORTED_MODULE_1___default().memo(({ def, operation }) => {\n  const styles = (0,_grafana_ui__WEBPACK_IMPORTED_MODULE_2__.useStyles2)(getStyles);\n  const [show, setShow] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n  const { getTooltipProps, setTooltipRef, setTriggerRef, visible } = (0,react_popper_tooltip__WEBPACK_IMPORTED_MODULE_3__.usePopperTooltip)({\n    placement: \"top\",\n    visible: show,\n    offset: [0, 16],\n    onVisibleChange: setShow,\n    interactive: true,\n    trigger: [\"click\"]\n  });\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement((react__WEBPACK_IMPORTED_MODULE_1___default().Fragment), null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n    _grafana_ui__WEBPACK_IMPORTED_MODULE_4__.Button,\n    {\n      title: \"Click to show description\",\n      ref: setTriggerRef,\n      icon: \"info-circle\",\n      size: \"sm\",\n      variant: \"secondary\",\n      fill: \"text\"\n    }\n  ), visible && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_5__.Portal, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { ref: setTooltipRef, ...getTooltipProps(), className: styles.docBox }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: styles.docBoxHeader }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"span\", null, def.renderer(operation, def, \"<expr>\")), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_experimental__WEBPACK_IMPORTED_MODULE_6__.FlexItem, { grow: 1 }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n    _grafana_ui__WEBPACK_IMPORTED_MODULE_4__.Button,\n    {\n      icon: \"times\",\n      onClick: () => setShow(false),\n      fill: \"text\",\n      variant: \"secondary\",\n      title: \"Remove operation\"\n    }\n  )), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n    \"div\",\n    {\n      className: styles.docBoxBody,\n      dangerouslySetInnerHTML: { __html: getOperationDocs(def, operation) }\n    }\n  ))));\n});\nOperationInfoButton.displayName = \"OperationDocs\";\nconst getStyles = (theme) => {\n  return {\n    docBox: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)({\n      overflow: \"hidden\",\n      background: theme.colors.background.primary,\n      border: `1px solid ${theme.colors.border.strong}`,\n      boxShadow: theme.shadows.z3,\n      maxWidth: \"600px\",\n      padding: theme.spacing(1),\n      borderRadius: theme.shape.borderRadius(),\n      zIndex: theme.zIndex.tooltip\n    }),\n    docBoxHeader: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)({\n      fontSize: theme.typography.h5.fontSize,\n      fontFamily: theme.typography.fontFamilyMonospace,\n      paddingBottom: theme.spacing(1),\n      display: \"flex\",\n      alignItems: \"center\"\n    }),\n    docBoxBody: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)({\n      // The markdown paragraph has a marginBottom this removes it\n      marginBottom: theme.spacing(-1),\n      color: theme.colors.text.secondary\n    }),\n    signature: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)({\n      fontSize: theme.typography.bodySmall.fontSize,\n      fontFamily: theme.typography.fontFamilyMonospace\n    }),\n    dropdown: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)({\n      opacity: 0,\n      color: theme.colors.text.secondary\n    })\n  };\n};\nfunction getOperationDocs(def, op) {\n  return (0,_grafana_data__WEBPACK_IMPORTED_MODULE_7__.renderMarkdown)(def.explainHandler ? def.explainHandler(op, def) : def.documentation ?? \"no docs\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9wcm9tZXRoZXVzL3F1ZXJ5YnVpbGRlci9zaGFyZWQvT3BlcmF0aW9uSW5mb0J1dHRvbi50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBb0I7QUFDWTtBQUNDO0FBRWE7QUFDckI7QUFDa0I7QUFTcEMsTUFBTSxzQkFBc0IsaURBQVUsQ0FBUSxDQUFDLEVBQUUsS0FBSyxVQUFVLE1BQU07QUFDM0UsUUFBTSxTQUFTLHVEQUFVLENBQUMsU0FBUztBQUNuQyxRQUFNLENBQUMsTUFBTSxPQUFPLElBQUksK0NBQVEsQ0FBQyxLQUFLO0FBQ3RDLFFBQU0sRUFBRSxpQkFBaUIsZUFBZSxlQUFlLFFBQVEsSUFBSSxzRUFBZ0IsQ0FBQztBQUFBLElBQ2xGLFdBQVc7QUFBQSxJQUNYLFNBQVM7QUFBQSxJQUNULFFBQVEsQ0FBQyxHQUFHLEVBQUU7QUFBQSxJQUNkLGlCQUFpQjtBQUFBLElBQ2pCLGFBQWE7QUFBQSxJQUNiLFNBQVMsQ0FBQyxPQUFPO0FBQUEsRUFDbkIsQ0FBQztBQUVELFNBQ0UsMElBQ0U7QUFBQSxJQUFDLCtDQUFNO0FBQU47QUFBQSxNQUNDLE9BQU07QUFBQSxNQUNOLEtBQUs7QUFBQSxNQUNMLE1BQUs7QUFBQSxNQUNMLE1BQUs7QUFBQSxNQUNMLFNBQVE7QUFBQSxNQUNSLE1BQUs7QUFBQTtBQUFBLEVBQ1AsR0FDQyxXQUNDLDJFQUFDLCtDQUFNLFFBQ0wsMkVBQUMsU0FBSSxLQUFLLGVBQWdCLEdBQUcsZ0JBQWdCLEdBQUcsV0FBVyxPQUFPLFVBQ2hFLDJFQUFDLFNBQUksV0FBVyxPQUFPLGdCQUNyQiwyRUFBQyxjQUFNLElBQUksU0FBUyxXQUFXLEtBQUssUUFBUSxDQUFFLEdBQzlDLDJFQUFDLDJEQUFRLElBQUMsTUFBTSxHQUFHLEdBQ25CO0FBQUEsSUFBQywrQ0FBTTtBQUFOO0FBQUEsTUFDQyxNQUFLO0FBQUEsTUFDTCxTQUFTLE1BQU0sUUFBUSxLQUFLO0FBQUEsTUFDNUIsTUFBSztBQUFBLE1BQ0wsU0FBUTtBQUFBLE1BQ1IsT0FBTTtBQUFBO0FBQUEsRUFDUixDQUNGLEdBQ0E7QUFBQSxJQUFDO0FBQUE7QUFBQSxNQUNDLFdBQVcsT0FBTztBQUFBLE1BQ2xCLHlCQUF5QixFQUFFLFFBQVEsaUJBQWlCLEtBQUssU0FBUyxFQUFFO0FBQUE7QUFBQSxFQUNyRSxDQUNILENBQ0YsQ0FFSjtBQUVKLENBQUM7QUFFRCxvQkFBb0IsY0FBYztBQUVsQyxNQUFNLFlBQVksQ0FBQyxVQUF5QjtBQUMxQyxTQUFPO0FBQUEsSUFDTCxRQUFRLGlEQUFHLENBQUM7QUFBQSxNQUNWLFVBQVU7QUFBQSxNQUNWLFlBQVksTUFBTSxPQUFPLFdBQVc7QUFBQSxNQUNwQyxRQUFRLGFBQWEsTUFBTSxPQUFPLE9BQU87QUFBQSxNQUN6QyxXQUFXLE1BQU0sUUFBUTtBQUFBLE1BQ3pCLFVBQVU7QUFBQSxNQUNWLFNBQVMsTUFBTSxRQUFRLENBQUM7QUFBQSxNQUN4QixjQUFjLE1BQU0sTUFBTSxhQUFhO0FBQUEsTUFDdkMsUUFBUSxNQUFNLE9BQU87QUFBQSxJQUN2QixDQUFDO0FBQUEsSUFDRCxjQUFjLGlEQUFHLENBQUM7QUFBQSxNQUNoQixVQUFVLE1BQU0sV0FBVyxHQUFHO0FBQUEsTUFDOUIsWUFBWSxNQUFNLFdBQVc7QUFBQSxNQUM3QixlQUFlLE1BQU0sUUFBUSxDQUFDO0FBQUEsTUFDOUIsU0FBUztBQUFBLE1BQ1QsWUFBWTtBQUFBLElBQ2QsQ0FBQztBQUFBLElBQ0QsWUFBWSxpREFBRyxDQUFDO0FBQUE7QUFBQSxNQUVkLGNBQWMsTUFBTSxRQUFRLEVBQUU7QUFBQSxNQUM5QixPQUFPLE1BQU0sT0FBTyxLQUFLO0FBQUEsSUFDM0IsQ0FBQztBQUFBLElBQ0QsV0FBVyxpREFBRyxDQUFDO0FBQUEsTUFDYixVQUFVLE1BQU0sV0FBVyxVQUFVO0FBQUEsTUFDckMsWUFBWSxNQUFNLFdBQVc7QUFBQSxJQUMvQixDQUFDO0FBQUEsSUFDRCxVQUFVLGlEQUFHLENBQUM7QUFBQSxNQUNaLFNBQVM7QUFBQSxNQUNULE9BQU8sTUFBTSxPQUFPLEtBQUs7QUFBQSxJQUMzQixDQUFDO0FBQUEsRUFDSDtBQUNGO0FBQ0EsU0FBUyxpQkFBaUIsS0FBK0IsSUFBbUM7QUFDMUYsU0FBTyw2REFBYyxDQUFDLElBQUksaUJBQWlCLElBQUksZUFBZSxJQUFJLEdBQUcsSUFBSSxJQUFJLGlCQUFpQixTQUFTO0FBQ3pHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ3JhZmFuYS8uL3B1YmxpYy9hcHAvcGx1Z2lucy9kYXRhc291cmNlL3Byb21ldGhldXMvcXVlcnlidWlsZGVyL3NoYXJlZC9PcGVyYXRpb25JbmZvQnV0dG9uLnRzeD84N2U1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2Nzcyc7XG5pbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB1c2VQb3BwZXJUb29sdGlwIH0gZnJvbSAncmVhY3QtcG9wcGVyLXRvb2x0aXAnO1xuXG5pbXBvcnQgeyBHcmFmYW5hVGhlbWUyLCByZW5kZXJNYXJrZG93biB9IGZyb20gJ0BncmFmYW5hL2RhdGEnO1xuaW1wb3J0IHsgRmxleEl0ZW0gfSBmcm9tICdAZ3JhZmFuYS9leHBlcmltZW50YWwnO1xuaW1wb3J0IHsgQnV0dG9uLCBQb3J0YWwsIHVzZVN0eWxlczIgfSBmcm9tICdAZ3JhZmFuYS91aSc7XG5cbmltcG9ydCB7IFF1ZXJ5QnVpbGRlck9wZXJhdGlvbiwgUXVlcnlCdWlsZGVyT3BlcmF0aW9uRGVmIH0gZnJvbSAnLi90eXBlcyc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgUHJvcHMge1xuICBvcGVyYXRpb246IFF1ZXJ5QnVpbGRlck9wZXJhdGlvbjtcbiAgZGVmOiBRdWVyeUJ1aWxkZXJPcGVyYXRpb25EZWY7XG59XG5cbmV4cG9ydCBjb25zdCBPcGVyYXRpb25JbmZvQnV0dG9uID0gUmVhY3QubWVtbzxQcm9wcz4oKHsgZGVmLCBvcGVyYXRpb24gfSkgPT4ge1xuICBjb25zdCBzdHlsZXMgPSB1c2VTdHlsZXMyKGdldFN0eWxlcyk7XG4gIGNvbnN0IFtzaG93LCBzZXRTaG93XSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgeyBnZXRUb29sdGlwUHJvcHMsIHNldFRvb2x0aXBSZWYsIHNldFRyaWdnZXJSZWYsIHZpc2libGUgfSA9IHVzZVBvcHBlclRvb2x0aXAoe1xuICAgIHBsYWNlbWVudDogJ3RvcCcsXG4gICAgdmlzaWJsZTogc2hvdyxcbiAgICBvZmZzZXQ6IFswLCAxNl0sXG4gICAgb25WaXNpYmxlQ2hhbmdlOiBzZXRTaG93LFxuICAgIGludGVyYWN0aXZlOiB0cnVlLFxuICAgIHRyaWdnZXI6IFsnY2xpY2snXSxcbiAgfSk7XG5cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPEJ1dHRvblxuICAgICAgICB0aXRsZT1cIkNsaWNrIHRvIHNob3cgZGVzY3JpcHRpb25cIlxuICAgICAgICByZWY9e3NldFRyaWdnZXJSZWZ9XG4gICAgICAgIGljb249XCJpbmZvLWNpcmNsZVwiXG4gICAgICAgIHNpemU9XCJzbVwiXG4gICAgICAgIHZhcmlhbnQ9XCJzZWNvbmRhcnlcIlxuICAgICAgICBmaWxsPVwidGV4dFwiXG4gICAgICAvPlxuICAgICAge3Zpc2libGUgJiYgKFxuICAgICAgICA8UG9ydGFsPlxuICAgICAgICAgIDxkaXYgcmVmPXtzZXRUb29sdGlwUmVmfSB7Li4uZ2V0VG9vbHRpcFByb3BzKCl9IGNsYXNzTmFtZT17c3R5bGVzLmRvY0JveH0+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmRvY0JveEhlYWRlcn0+XG4gICAgICAgICAgICAgIDxzcGFuPntkZWYucmVuZGVyZXIob3BlcmF0aW9uLCBkZWYsICc8ZXhwcj4nKX08L3NwYW4+XG4gICAgICAgICAgICAgIDxGbGV4SXRlbSBncm93PXsxfSAvPlxuICAgICAgICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgICAgICAgaWNvbj1cInRpbWVzXCJcbiAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBzZXRTaG93KGZhbHNlKX1cbiAgICAgICAgICAgICAgICBmaWxsPVwidGV4dFwiXG4gICAgICAgICAgICAgICAgdmFyaWFudD1cInNlY29uZGFyeVwiXG4gICAgICAgICAgICAgICAgdGl0bGU9XCJSZW1vdmUgb3BlcmF0aW9uXCJcbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBjbGFzc05hbWU9e3N0eWxlcy5kb2NCb3hCb2R5fVxuICAgICAgICAgICAgICBkYW5nZXJvdXNseVNldElubmVySFRNTD17eyBfX2h0bWw6IGdldE9wZXJhdGlvbkRvY3MoZGVmLCBvcGVyYXRpb24pIH19XG4gICAgICAgICAgICA+PC9kaXY+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvUG9ydGFsPlxuICAgICAgKX1cbiAgICA8Lz5cbiAgKTtcbn0pO1xuXG5PcGVyYXRpb25JbmZvQnV0dG9uLmRpc3BsYXlOYW1lID0gJ09wZXJhdGlvbkRvY3MnO1xuXG5jb25zdCBnZXRTdHlsZXMgPSAodGhlbWU6IEdyYWZhbmFUaGVtZTIpID0+IHtcbiAgcmV0dXJuIHtcbiAgICBkb2NCb3g6IGNzcyh7XG4gICAgICBvdmVyZmxvdzogJ2hpZGRlbicsXG4gICAgICBiYWNrZ3JvdW5kOiB0aGVtZS5jb2xvcnMuYmFja2dyb3VuZC5wcmltYXJ5LFxuICAgICAgYm9yZGVyOiBgMXB4IHNvbGlkICR7dGhlbWUuY29sb3JzLmJvcmRlci5zdHJvbmd9YCxcbiAgICAgIGJveFNoYWRvdzogdGhlbWUuc2hhZG93cy56MyxcbiAgICAgIG1heFdpZHRoOiAnNjAwcHgnLFxuICAgICAgcGFkZGluZzogdGhlbWUuc3BhY2luZygxKSxcbiAgICAgIGJvcmRlclJhZGl1czogdGhlbWUuc2hhcGUuYm9yZGVyUmFkaXVzKCksXG4gICAgICB6SW5kZXg6IHRoZW1lLnpJbmRleC50b29sdGlwLFxuICAgIH0pLFxuICAgIGRvY0JveEhlYWRlcjogY3NzKHtcbiAgICAgIGZvbnRTaXplOiB0aGVtZS50eXBvZ3JhcGh5Lmg1LmZvbnRTaXplLFxuICAgICAgZm9udEZhbWlseTogdGhlbWUudHlwb2dyYXBoeS5mb250RmFtaWx5TW9ub3NwYWNlLFxuICAgICAgcGFkZGluZ0JvdHRvbTogdGhlbWUuc3BhY2luZygxKSxcbiAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgIH0pLFxuICAgIGRvY0JveEJvZHk6IGNzcyh7XG4gICAgICAvLyBUaGUgbWFya2Rvd24gcGFyYWdyYXBoIGhhcyBhIG1hcmdpbkJvdHRvbSB0aGlzIHJlbW92ZXMgaXRcbiAgICAgIG1hcmdpbkJvdHRvbTogdGhlbWUuc3BhY2luZygtMSksXG4gICAgICBjb2xvcjogdGhlbWUuY29sb3JzLnRleHQuc2Vjb25kYXJ5LFxuICAgIH0pLFxuICAgIHNpZ25hdHVyZTogY3NzKHtcbiAgICAgIGZvbnRTaXplOiB0aGVtZS50eXBvZ3JhcGh5LmJvZHlTbWFsbC5mb250U2l6ZSxcbiAgICAgIGZvbnRGYW1pbHk6IHRoZW1lLnR5cG9ncmFwaHkuZm9udEZhbWlseU1vbm9zcGFjZSxcbiAgICB9KSxcbiAgICBkcm9wZG93bjogY3NzKHtcbiAgICAgIG9wYWNpdHk6IDAsXG4gICAgICBjb2xvcjogdGhlbWUuY29sb3JzLnRleHQuc2Vjb25kYXJ5LFxuICAgIH0pLFxuICB9O1xufTtcbmZ1bmN0aW9uIGdldE9wZXJhdGlvbkRvY3MoZGVmOiBRdWVyeUJ1aWxkZXJPcGVyYXRpb25EZWYsIG9wOiBRdWVyeUJ1aWxkZXJPcGVyYXRpb24pOiBzdHJpbmcge1xuICByZXR1cm4gcmVuZGVyTWFya2Rvd24oZGVmLmV4cGxhaW5IYW5kbGVyID8gZGVmLmV4cGxhaW5IYW5kbGVyKG9wLCBkZWYpIDogZGVmLmRvY3VtZW50YXRpb24gPz8gJ25vIGRvY3MnKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/prometheus/querybuilder/shared/OperationInfoButton.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/prometheus/querybuilder/shared/OperationList.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OperationList: () => (/* binding */ OperationList)\n/* harmony export */ });\n/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/@emotion-css-npm-11.11.2-dbfa42cf83-1edea109df.zip/node_modules/@emotion/css/dist/emotion-css.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_beautiful_dnd__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./.yarn/__virtual__/react-beautiful-dnd-virtual-daef784a91/0/cache/react-beautiful-dnd-npm-13.1.1-ddc8adf565-5f90f7c0ab.zip/node_modules/react-beautiful-dnd/dist/react-beautiful-dnd.esm.js\");\n/* harmony import */ var react_use__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(\"./.yarn/__virtual__/react-use-virtual-dd7926f458/0/cache/react-use-npm-17.4.0-0ef4521544-0889da919b.zip/node_modules/react-use/esm/useMountedState.js\");\n/* harmony import */ var react_use__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(\"./.yarn/__virtual__/react-use-virtual-dd7926f458/0/cache/react-use-npm-17.4.0-0ef4521544-0889da919b.zip/node_modules/react-use/esm/usePrevious.js\");\n/* harmony import */ var _grafana_experimental__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-experimental-virtual-ba767552fe/0/cache/@grafana-experimental-npm-1.6.1-f052d2ae51-64c32bc9e3.zip/node_modules/@grafana/experimental/dist/esm/QueryEditor/Stack.js\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/themes/ThemeContext.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Cascader/Cascader.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Button/Button.tsx\");\n/* harmony import */ var _OperationEditor__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/plugins/datasource/prometheus/querybuilder/shared/OperationEditor.tsx\");\n\n\n\n\n\n\n\n\nfunction OperationList({\n  query,\n  datasource,\n  queryModeller,\n  onChange,\n  onRunQuery,\n  highlightedOp\n}) {\n  const styles = (0,_grafana_ui__WEBPACK_IMPORTED_MODULE_3__.useStyles2)(getStyles);\n  const { operations } = query;\n  const opsToHighlight = useOperationsHighlight(operations);\n  const [cascaderOpen, setCascaderOpen] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n  const onOperationChange = (index, update) => {\n    const updatedList = [...operations];\n    updatedList.splice(index, 1, update);\n    onChange({ ...query, operations: updatedList });\n  };\n  const onRemove = (index) => {\n    const updatedList = [...operations.slice(0, index), ...operations.slice(index + 1)];\n    onChange({ ...query, operations: updatedList });\n  };\n  const addOptions = queryModeller.getCategories().map((category) => {\n    return {\n      value: category,\n      label: category,\n      items: queryModeller.getOperationsForCategory(category).map((operation) => ({\n        value: operation.id,\n        label: operation.name,\n        isLeaf: true\n      }))\n    };\n  });\n  const onAddOperation = (value) => {\n    const operationDef = queryModeller.getOperationDef(value);\n    if (!operationDef) {\n      return;\n    }\n    onChange(operationDef.addOperationHandler(operationDef, query, queryModeller));\n    setCascaderOpen(false);\n  };\n  const onDragEnd = (result) => {\n    if (!result.destination) {\n      return;\n    }\n    const updatedList = [...operations];\n    const element = updatedList[result.source.index];\n    updatedList.splice(result.source.index, 1);\n    updatedList.splice(result.destination.index, 0, element);\n    onChange({ ...query, operations: updatedList });\n  };\n  const onCascaderBlur = () => {\n    setCascaderOpen(false);\n  };\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_experimental__WEBPACK_IMPORTED_MODULE_4__.Stack, { gap: 1, direction: \"column\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_experimental__WEBPACK_IMPORTED_MODULE_4__.Stack, { gap: 1 }, operations.length > 0 && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(react_beautiful_dnd__WEBPACK_IMPORTED_MODULE_5__.DragDropContext, { onDragEnd }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(react_beautiful_dnd__WEBPACK_IMPORTED_MODULE_5__.Droppable, { droppableId: \"sortable-field-mappings\", direction: \"horizontal\" }, (provided) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: styles.operationList, ref: provided.innerRef, ...provided.droppableProps }, operations.map((op, index) => {\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n      _OperationEditor__WEBPACK_IMPORTED_MODULE_2__.OperationEditor,\n      {\n        key: op.id + JSON.stringify(op.params) + index,\n        queryModeller,\n        index,\n        operation: op,\n        query,\n        datasource,\n        onChange: onOperationChange,\n        onRemove,\n        onRunQuery,\n        flash: opsToHighlight[index],\n        highlight: highlightedOp === op\n      }\n    );\n  }), provided.placeholder))), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: styles.addButton }, cascaderOpen ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n    _grafana_ui__WEBPACK_IMPORTED_MODULE_6__.Cascader,\n    {\n      options: addOptions,\n      onSelect: onAddOperation,\n      onBlur: onCascaderBlur,\n      autoFocus: true,\n      alwaysOpen: true,\n      hideActiveLevelLabel: true,\n      placeholder: \"Search\"\n    }\n  ) : /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_7__.Button, { icon: \"plus\", variant: \"secondary\", onClick: () => setCascaderOpen(true), title: \"Add operation\" }, \"Operations\"))));\n}\nfunction useOperationsHighlight(operations) {\n  const isMounted = (0,react_use__WEBPACK_IMPORTED_MODULE_8__[\"default\"])();\n  const prevOperations = (0,react_use__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(operations);\n  if (!isMounted()) {\n    return operations.map(() => false);\n  }\n  if (!prevOperations) {\n    return operations.map(() => true);\n  }\n  let newOps = [];\n  if (prevOperations.length - 1 === operations.length && operations.every((op) => prevOperations.includes(op))) {\n    return operations.map(() => false);\n  }\n  if (prevOperations.length + 1 === operations.length && prevOperations.every((op) => operations.includes(op))) {\n    const newOp = operations.find((op) => !prevOperations.includes(op));\n    newOps = operations.map((op) => {\n      return op === newOp;\n    });\n  } else {\n    newOps = operations.map((op, index) => {\n      return !isSameOp(op.id, prevOperations[index]?.id);\n    });\n  }\n  return newOps;\n}\nfunction isSameOp(op1, op2) {\n  return op1 === op2 || `__${op1}_by` === op2 || op1 === `__${op2}_by`;\n}\nconst getStyles = (theme) => {\n  return {\n    heading: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)({\n      label: \"heading\",\n      fontSize: 12,\n      fontWeight: theme.typography.fontWeightMedium,\n      marginBottom: 0\n    }),\n    operationList: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)({\n      label: \"operationList\",\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      gap: theme.spacing(2)\n    }),\n    addButton: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)({\n      label: \"addButton\",\n      width: 126,\n      paddingBottom: theme.spacing(1)\n    })\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9wcm9tZXRoZXVzL3F1ZXJ5YnVpbGRlci9zaGFyZWQvT3BlcmF0aW9uTGlzdC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFvQjtBQUNZO0FBQ3VCO0FBQ1Y7QUFHdkI7QUFDdUM7QUFFN0I7QUFhekIsU0FBUyxjQUE2QztBQUFBLEVBQzNEO0FBQUEsRUFDQTtBQUFBLEVBQ0E7QUFBQSxFQUNBO0FBQUEsRUFDQTtBQUFBLEVBQ0E7QUFDRixHQUFhO0FBQ1gsUUFBTSxTQUFTLHVEQUFVLENBQUMsU0FBUztBQUNuQyxRQUFNLEVBQUUsV0FBVyxJQUFJO0FBRXZCLFFBQU0saUJBQWlCLHVCQUF1QixVQUFVO0FBRXhELFFBQU0sQ0FBQyxjQUFjLGVBQWUsSUFBSSwrQ0FBUSxDQUFDLEtBQUs7QUFFdEQsUUFBTSxvQkFBb0IsQ0FBQyxPQUFlLFdBQWtDO0FBQzFFLFVBQU0sY0FBYyxDQUFDLEdBQUcsVUFBVTtBQUNsQyxnQkFBWSxPQUFPLE9BQU8sR0FBRyxNQUFNO0FBQ25DLGFBQVMsRUFBRSxHQUFHLE9BQU8sWUFBWSxZQUFZLENBQUM7QUFBQSxFQUNoRDtBQUVBLFFBQU0sV0FBVyxDQUFDLFVBQWtCO0FBQ2xDLFVBQU0sY0FBYyxDQUFDLEdBQUcsV0FBVyxNQUFNLEdBQUcsS0FBSyxHQUFHLEdBQUcsV0FBVyxNQUFNLFFBQVEsQ0FBQyxDQUFDO0FBQ2xGLGFBQVMsRUFBRSxHQUFHLE9BQU8sWUFBWSxZQUFZLENBQUM7QUFBQSxFQUNoRDtBQUVBLFFBQU0sYUFBK0IsY0FBYyxjQUFjLEVBQUUsSUFBSSxDQUFDLGFBQWE7QUFDbkYsV0FBTztBQUFBLE1BQ0wsT0FBTztBQUFBLE1BQ1AsT0FBTztBQUFBLE1BQ1AsT0FBTyxjQUFjLHlCQUF5QixRQUFRLEVBQUUsSUFBSSxDQUFDLGVBQWU7QUFBQSxRQUMxRSxPQUFPLFVBQVU7QUFBQSxRQUNqQixPQUFPLFVBQVU7QUFBQSxRQUNqQixRQUFRO0FBQUEsTUFDVixFQUFFO0FBQUEsSUFDSjtBQUFBLEVBQ0YsQ0FBQztBQUVELFFBQU0saUJBQWlCLENBQUMsVUFBa0I7QUFDeEMsVUFBTSxlQUFlLGNBQWMsZ0JBQWdCLEtBQUs7QUFDeEQsUUFBSSxDQUFDLGNBQWM7QUFDakI7QUFBQSxJQUNGO0FBQ0EsYUFBUyxhQUFhLG9CQUFvQixjQUFjLE9BQU8sYUFBYSxDQUFDO0FBQzdFLG9CQUFnQixLQUFLO0FBQUEsRUFDdkI7QUFFQSxRQUFNLFlBQVksQ0FBQyxXQUF1QjtBQUN4QyxRQUFJLENBQUMsT0FBTyxhQUFhO0FBQ3ZCO0FBQUEsSUFDRjtBQUVBLFVBQU0sY0FBYyxDQUFDLEdBQUcsVUFBVTtBQUNsQyxVQUFNLFVBQVUsWUFBWSxPQUFPLE9BQU8sS0FBSztBQUMvQyxnQkFBWSxPQUFPLE9BQU8sT0FBTyxPQUFPLENBQUM7QUFDekMsZ0JBQVksT0FBTyxPQUFPLFlBQVksT0FBTyxHQUFHLE9BQU87QUFDdkQsYUFBUyxFQUFFLEdBQUcsT0FBTyxZQUFZLFlBQVksQ0FBQztBQUFBLEVBQ2hEO0FBRUEsUUFBTSxpQkFBaUIsTUFBTTtBQUMzQixvQkFBZ0IsS0FBSztBQUFBLEVBQ3ZCO0FBRUEsU0FDRSwyRUFBQyx3REFBSyxJQUFDLEtBQUssR0FBRyxXQUFVLFlBQ3ZCLDJFQUFDLHdEQUFLLElBQUMsS0FBSyxLQUNULFdBQVcsU0FBUyxLQUNuQiwyRUFBQyxnRUFBZSxJQUFDLGFBQ2YsMkVBQUMsMERBQVMsSUFBQyxhQUFZLDJCQUEwQixXQUFVLGdCQUN4RCxDQUFDLGFBQ0EsMkVBQUMsU0FBSSxXQUFXLE9BQU8sZUFBZSxLQUFLLFNBQVMsVUFBVyxHQUFHLFNBQVMsa0JBQ3hFLFdBQVcsSUFBSSxDQUFDLElBQUksVUFBVTtBQUM3QixXQUNFO0FBQUEsTUFBQyw2REFBZTtBQUFmO0FBQUEsUUFDQyxLQUFLLEdBQUcsS0FBSyxLQUFLLFVBQVUsR0FBRyxNQUFNLElBQUk7QUFBQSxRQUN6QztBQUFBLFFBQ0E7QUFBQSxRQUNBLFdBQVc7QUFBQSxRQUNYO0FBQUEsUUFDQTtBQUFBLFFBQ0EsVUFBVTtBQUFBLFFBQ1Y7QUFBQSxRQUNBO0FBQUEsUUFDQSxPQUFPLGVBQWUsS0FBSztBQUFBLFFBQzNCLFdBQVcsa0JBQWtCO0FBQUE7QUFBQSxJQUMvQjtBQUFBLEVBRUosQ0FBQyxHQUNBLFNBQVMsV0FDWixDQUVKLENBQ0YsR0FFRiwyRUFBQyxTQUFJLFdBQVcsT0FBTyxhQUNwQixlQUNDO0FBQUEsSUFBQyxpREFBUTtBQUFSO0FBQUEsTUFDQyxTQUFTO0FBQUEsTUFDVCxVQUFVO0FBQUEsTUFDVixRQUFRO0FBQUEsTUFDUixXQUFXO0FBQUEsTUFDWCxZQUFZO0FBQUEsTUFDWixzQkFBc0I7QUFBQSxNQUN0QixhQUFhO0FBQUE7QUFBQSxFQUNmLElBRUEsMkVBQUMsK0NBQU0sSUFBQyxNQUFNLFFBQVEsU0FBUyxhQUFhLFNBQVMsTUFBTSxnQkFBZ0IsSUFBSSxHQUFHLE9BQU8sbUJBQWlCLFlBRTFHLENBRUosQ0FDRixDQUNGO0FBRUo7QUFRQSxTQUFTLHVCQUF1QixZQUFxQztBQUNuRSxRQUFNLFlBQVkscURBQWUsQ0FBQztBQUNsQyxRQUFNLGlCQUFpQixxREFBVyxDQUFDLFVBQVU7QUFFN0MsTUFBSSxDQUFDLFVBQVUsR0FBRztBQUNoQixXQUFPLFdBQVcsSUFBSSxNQUFNLEtBQUs7QUFBQSxFQUNuQztBQUVBLE1BQUksQ0FBQyxnQkFBZ0I7QUFDbkIsV0FBTyxXQUFXLElBQUksTUFBTSxJQUFJO0FBQUEsRUFDbEM7QUFFQSxNQUFJLFNBQW9CLENBQUM7QUFFekIsTUFBSSxlQUFlLFNBQVMsTUFBTSxXQUFXLFVBQVUsV0FBVyxNQUFNLENBQUMsT0FBTyxlQUFlLFNBQVMsRUFBRSxDQUFDLEdBQUc7QUFFNUcsV0FBTyxXQUFXLElBQUksTUFBTSxLQUFLO0FBQUEsRUFDbkM7QUFDQSxNQUFJLGVBQWUsU0FBUyxNQUFNLFdBQVcsVUFBVSxlQUFlLE1BQU0sQ0FBQyxPQUFPLFdBQVcsU0FBUyxFQUFFLENBQUMsR0FBRztBQUU1RyxVQUFNLFFBQVEsV0FBVyxLQUFLLENBQUMsT0FBTyxDQUFDLGVBQWUsU0FBUyxFQUFFLENBQUM7QUFDbEUsYUFBUyxXQUFXLElBQUksQ0FBQyxPQUFPO0FBQzlCLGFBQU8sT0FBTztBQUFBLElBQ2hCLENBQUM7QUFBQSxFQUNILE9BQU87QUFFTCxhQUFTLFdBQVcsSUFBSSxDQUFDLElBQUksVUFBVTtBQUNyQyxhQUFPLENBQUMsU0FBUyxHQUFHLElBQUksZUFBZSxLQUFLLEdBQUcsRUFBRTtBQUFBLElBQ25ELENBQUM7QUFBQSxFQUNIO0FBQ0EsU0FBTztBQUNUO0FBRUEsU0FBUyxTQUFTLEtBQWMsS0FBYztBQUM1QyxTQUFPLFFBQVEsT0FBTyxLQUFLLGFBQWEsT0FBTyxRQUFRLEtBQUs7QUFDOUQ7QUFFQSxNQUFNLFlBQVksQ0FBQyxVQUF5QjtBQUMxQyxTQUFPO0FBQUEsSUFDTCxTQUFTLGlEQUFHLENBQUM7QUFBQSxNQUNYLE9BQU87QUFBQSxNQUNQLFVBQVU7QUFBQSxNQUNWLFlBQVksTUFBTSxXQUFXO0FBQUEsTUFDN0IsY0FBYztBQUFBLElBQ2hCLENBQUM7QUFBQSxJQUNELGVBQWUsaURBQUcsQ0FBQztBQUFBLE1BQ2pCLE9BQU87QUFBQSxNQUNQLFNBQVM7QUFBQSxNQUNULFVBQVU7QUFBQSxNQUNWLEtBQUssTUFBTSxRQUFRLENBQUM7QUFBQSxJQUN0QixDQUFDO0FBQUEsSUFDRCxXQUFXLGlEQUFHLENBQUM7QUFBQSxNQUNiLE9BQU87QUFBQSxNQUNQLE9BQU87QUFBQSxNQUNQLGVBQWUsTUFBTSxRQUFRLENBQUM7QUFBQSxJQUNoQyxDQUFDO0FBQUEsRUFDSDtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ3JhZmFuYS8uL3B1YmxpYy9hcHAvcGx1Z2lucy9kYXRhc291cmNlL3Byb21ldGhldXMvcXVlcnlidWlsZGVyL3NoYXJlZC9PcGVyYXRpb25MaXN0LnRzeD8zYzE3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2Nzcyc7XG5pbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBEcmFnRHJvcENvbnRleHQsIERyb3BwYWJsZSwgRHJvcFJlc3VsdCB9IGZyb20gJ3JlYWN0LWJlYXV0aWZ1bC1kbmQnO1xuaW1wb3J0IHsgdXNlTW91bnRlZFN0YXRlLCB1c2VQcmV2aW91cyB9IGZyb20gJ3JlYWN0LXVzZSc7XG5cbmltcG9ydCB7IERhdGFTb3VyY2VBcGksIEdyYWZhbmFUaGVtZTIgfSBmcm9tICdAZ3JhZmFuYS9kYXRhJztcbmltcG9ydCB7IFN0YWNrIH0gZnJvbSAnQGdyYWZhbmEvZXhwZXJpbWVudGFsJztcbmltcG9ydCB7IEJ1dHRvbiwgQ2FzY2FkZXIsIENhc2NhZGVyT3B0aW9uLCB1c2VTdHlsZXMyIH0gZnJvbSAnQGdyYWZhbmEvdWknO1xuXG5pbXBvcnQgeyBPcGVyYXRpb25FZGl0b3IgfSBmcm9tICcuL09wZXJhdGlvbkVkaXRvcic7XG5pbXBvcnQgeyBRdWVyeUJ1aWxkZXJPcGVyYXRpb24sIFF1ZXJ5V2l0aE9wZXJhdGlvbnMsIFZpc3VhbFF1ZXJ5TW9kZWxsZXIgfSBmcm9tICcuL3R5cGVzJztcblxuZXhwb3J0IGludGVyZmFjZSBQcm9wczxUIGV4dGVuZHMgUXVlcnlXaXRoT3BlcmF0aW9ucz4ge1xuICBxdWVyeTogVDtcbiAgZGF0YXNvdXJjZTogRGF0YVNvdXJjZUFwaTtcbiAgb25DaGFuZ2U6IChxdWVyeTogVCkgPT4gdm9pZDtcbiAgb25SdW5RdWVyeTogKCkgPT4gdm9pZDtcbiAgcXVlcnlNb2RlbGxlcjogVmlzdWFsUXVlcnlNb2RlbGxlcjtcbiAgZXhwbGFpbk1vZGU/OiBib29sZWFuO1xuICBoaWdobGlnaHRlZE9wPzogUXVlcnlCdWlsZGVyT3BlcmF0aW9uO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gT3BlcmF0aW9uTGlzdDxUIGV4dGVuZHMgUXVlcnlXaXRoT3BlcmF0aW9ucz4oe1xuICBxdWVyeSxcbiAgZGF0YXNvdXJjZSxcbiAgcXVlcnlNb2RlbGxlcixcbiAgb25DaGFuZ2UsXG4gIG9uUnVuUXVlcnksXG4gIGhpZ2hsaWdodGVkT3AsXG59OiBQcm9wczxUPikge1xuICBjb25zdCBzdHlsZXMgPSB1c2VTdHlsZXMyKGdldFN0eWxlcyk7XG4gIGNvbnN0IHsgb3BlcmF0aW9ucyB9ID0gcXVlcnk7XG5cbiAgY29uc3Qgb3BzVG9IaWdobGlnaHQgPSB1c2VPcGVyYXRpb25zSGlnaGxpZ2h0KG9wZXJhdGlvbnMpO1xuXG4gIGNvbnN0IFtjYXNjYWRlck9wZW4sIHNldENhc2NhZGVyT3Blbl0gPSB1c2VTdGF0ZShmYWxzZSk7XG5cbiAgY29uc3Qgb25PcGVyYXRpb25DaGFuZ2UgPSAoaW5kZXg6IG51bWJlciwgdXBkYXRlOiBRdWVyeUJ1aWxkZXJPcGVyYXRpb24pID0+IHtcbiAgICBjb25zdCB1cGRhdGVkTGlzdCA9IFsuLi5vcGVyYXRpb25zXTtcbiAgICB1cGRhdGVkTGlzdC5zcGxpY2UoaW5kZXgsIDEsIHVwZGF0ZSk7XG4gICAgb25DaGFuZ2UoeyAuLi5xdWVyeSwgb3BlcmF0aW9uczogdXBkYXRlZExpc3QgfSk7XG4gIH07XG5cbiAgY29uc3Qgb25SZW1vdmUgPSAoaW5kZXg6IG51bWJlcikgPT4ge1xuICAgIGNvbnN0IHVwZGF0ZWRMaXN0ID0gWy4uLm9wZXJhdGlvbnMuc2xpY2UoMCwgaW5kZXgpLCAuLi5vcGVyYXRpb25zLnNsaWNlKGluZGV4ICsgMSldO1xuICAgIG9uQ2hhbmdlKHsgLi4ucXVlcnksIG9wZXJhdGlvbnM6IHVwZGF0ZWRMaXN0IH0pO1xuICB9O1xuXG4gIGNvbnN0IGFkZE9wdGlvbnM6IENhc2NhZGVyT3B0aW9uW10gPSBxdWVyeU1vZGVsbGVyLmdldENhdGVnb3JpZXMoKS5tYXAoKGNhdGVnb3J5KSA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHZhbHVlOiBjYXRlZ29yeSxcbiAgICAgIGxhYmVsOiBjYXRlZ29yeSxcbiAgICAgIGl0ZW1zOiBxdWVyeU1vZGVsbGVyLmdldE9wZXJhdGlvbnNGb3JDYXRlZ29yeShjYXRlZ29yeSkubWFwKChvcGVyYXRpb24pID0+ICh7XG4gICAgICAgIHZhbHVlOiBvcGVyYXRpb24uaWQsXG4gICAgICAgIGxhYmVsOiBvcGVyYXRpb24ubmFtZSxcbiAgICAgICAgaXNMZWFmOiB0cnVlLFxuICAgICAgfSkpLFxuICAgIH07XG4gIH0pO1xuXG4gIGNvbnN0IG9uQWRkT3BlcmF0aW9uID0gKHZhbHVlOiBzdHJpbmcpID0+IHtcbiAgICBjb25zdCBvcGVyYXRpb25EZWYgPSBxdWVyeU1vZGVsbGVyLmdldE9wZXJhdGlvbkRlZih2YWx1ZSk7XG4gICAgaWYgKCFvcGVyYXRpb25EZWYpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgb25DaGFuZ2Uob3BlcmF0aW9uRGVmLmFkZE9wZXJhdGlvbkhhbmRsZXIob3BlcmF0aW9uRGVmLCBxdWVyeSwgcXVlcnlNb2RlbGxlcikpO1xuICAgIHNldENhc2NhZGVyT3BlbihmYWxzZSk7XG4gIH07XG5cbiAgY29uc3Qgb25EcmFnRW5kID0gKHJlc3VsdDogRHJvcFJlc3VsdCkgPT4ge1xuICAgIGlmICghcmVzdWx0LmRlc3RpbmF0aW9uKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgdXBkYXRlZExpc3QgPSBbLi4ub3BlcmF0aW9uc107XG4gICAgY29uc3QgZWxlbWVudCA9IHVwZGF0ZWRMaXN0W3Jlc3VsdC5zb3VyY2UuaW5kZXhdO1xuICAgIHVwZGF0ZWRMaXN0LnNwbGljZShyZXN1bHQuc291cmNlLmluZGV4LCAxKTtcbiAgICB1cGRhdGVkTGlzdC5zcGxpY2UocmVzdWx0LmRlc3RpbmF0aW9uLmluZGV4LCAwLCBlbGVtZW50KTtcbiAgICBvbkNoYW5nZSh7IC4uLnF1ZXJ5LCBvcGVyYXRpb25zOiB1cGRhdGVkTGlzdCB9KTtcbiAgfTtcblxuICBjb25zdCBvbkNhc2NhZGVyQmx1ciA9ICgpID0+IHtcbiAgICBzZXRDYXNjYWRlck9wZW4oZmFsc2UpO1xuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPFN0YWNrIGdhcD17MX0gZGlyZWN0aW9uPVwiY29sdW1uXCI+XG4gICAgICA8U3RhY2sgZ2FwPXsxfT5cbiAgICAgICAge29wZXJhdGlvbnMubGVuZ3RoID4gMCAmJiAoXG4gICAgICAgICAgPERyYWdEcm9wQ29udGV4dCBvbkRyYWdFbmQ9e29uRHJhZ0VuZH0+XG4gICAgICAgICAgICA8RHJvcHBhYmxlIGRyb3BwYWJsZUlkPVwic29ydGFibGUtZmllbGQtbWFwcGluZ3NcIiBkaXJlY3Rpb249XCJob3Jpem9udGFsXCI+XG4gICAgICAgICAgICAgIHsocHJvdmlkZWQpID0+IChcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLm9wZXJhdGlvbkxpc3R9IHJlZj17cHJvdmlkZWQuaW5uZXJSZWZ9IHsuLi5wcm92aWRlZC5kcm9wcGFibGVQcm9wc30+XG4gICAgICAgICAgICAgICAgICB7b3BlcmF0aW9ucy5tYXAoKG9wLCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgICAgIDxPcGVyYXRpb25FZGl0b3JcbiAgICAgICAgICAgICAgICAgICAgICAgIGtleT17b3AuaWQgKyBKU09OLnN0cmluZ2lmeShvcC5wYXJhbXMpICsgaW5kZXh9XG4gICAgICAgICAgICAgICAgICAgICAgICBxdWVyeU1vZGVsbGVyPXtxdWVyeU1vZGVsbGVyfVxuICAgICAgICAgICAgICAgICAgICAgICAgaW5kZXg9e2luZGV4fVxuICAgICAgICAgICAgICAgICAgICAgICAgb3BlcmF0aW9uPXtvcH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHF1ZXJ5PXtxdWVyeX1cbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFzb3VyY2U9e2RhdGFzb3VyY2V9XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17b25PcGVyYXRpb25DaGFuZ2V9XG4gICAgICAgICAgICAgICAgICAgICAgICBvblJlbW92ZT17b25SZW1vdmV9XG4gICAgICAgICAgICAgICAgICAgICAgICBvblJ1blF1ZXJ5PXtvblJ1blF1ZXJ5fVxuICAgICAgICAgICAgICAgICAgICAgICAgZmxhc2g9e29wc1RvSGlnaGxpZ2h0W2luZGV4XX1cbiAgICAgICAgICAgICAgICAgICAgICAgIGhpZ2hsaWdodD17aGlnaGxpZ2h0ZWRPcCA9PT0gb3B9XG4gICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgICAgICAge3Byb3ZpZGVkLnBsYWNlaG9sZGVyfVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgPC9Ecm9wcGFibGU+XG4gICAgICAgICAgPC9EcmFnRHJvcENvbnRleHQ+XG4gICAgICAgICl9XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMuYWRkQnV0dG9ufT5cbiAgICAgICAgICB7Y2FzY2FkZXJPcGVuID8gKFxuICAgICAgICAgICAgPENhc2NhZGVyXG4gICAgICAgICAgICAgIG9wdGlvbnM9e2FkZE9wdGlvbnN9XG4gICAgICAgICAgICAgIG9uU2VsZWN0PXtvbkFkZE9wZXJhdGlvbn1cbiAgICAgICAgICAgICAgb25CbHVyPXtvbkNhc2NhZGVyQmx1cn1cbiAgICAgICAgICAgICAgYXV0b0ZvY3VzPXt0cnVlfVxuICAgICAgICAgICAgICBhbHdheXNPcGVuPXt0cnVlfVxuICAgICAgICAgICAgICBoaWRlQWN0aXZlTGV2ZWxMYWJlbD17dHJ1ZX1cbiAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9eydTZWFyY2gnfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICApIDogKFxuICAgICAgICAgICAgPEJ1dHRvbiBpY29uPXsncGx1cyd9IHZhcmlhbnQ9eydzZWNvbmRhcnknfSBvbkNsaWNrPXsoKSA9PiBzZXRDYXNjYWRlck9wZW4odHJ1ZSl9IHRpdGxlPXsnQWRkIG9wZXJhdGlvbid9PlxuICAgICAgICAgICAgICBPcGVyYXRpb25zXG4gICAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgICApfVxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvU3RhY2s+XG4gICAgPC9TdGFjaz5cbiAgKTtcbn1cblxuLyoqXG4gKiBSZXR1cm5zIGluZGV4ZXMgb2Ygb3BlcmF0aW9ucyB0aGF0IHNob3VsZCBiZSBoaWdobGlnaHRlZC4gV2UgY2hlY2sgdGhlIGRpZmYgb2Ygb3BlcmF0aW9ucyBhZGRlZCBidXQgYXQgdGhlIHNhbWUgdGltZVxuICogd2Ugd2FudCB0byBoaWdobGlnaHQgb3BlcmF0aW9ucyBvbmx5IGFmdGVyIHRoZSBpbml0aWFsIHJlbmRlciwgc28gd2UgY2hlY2sgZm9yIG1vdW50ZWQgc3RhdGUgYW5kIGNhbGN1bGF0ZSB0aGUgZGlmZlxuICogb25seSBhZnRlci5cbiAqIEBwYXJhbSBvcGVyYXRpb25zXG4gKi9cbmZ1bmN0aW9uIHVzZU9wZXJhdGlvbnNIaWdobGlnaHQob3BlcmF0aW9uczogUXVlcnlCdWlsZGVyT3BlcmF0aW9uW10pIHtcbiAgY29uc3QgaXNNb3VudGVkID0gdXNlTW91bnRlZFN0YXRlKCk7XG4gIGNvbnN0IHByZXZPcGVyYXRpb25zID0gdXNlUHJldmlvdXMob3BlcmF0aW9ucyk7XG5cbiAgaWYgKCFpc01vdW50ZWQoKSkge1xuICAgIHJldHVybiBvcGVyYXRpb25zLm1hcCgoKSA9PiBmYWxzZSk7XG4gIH1cblxuICBpZiAoIXByZXZPcGVyYXRpb25zKSB7XG4gICAgcmV0dXJuIG9wZXJhdGlvbnMubWFwKCgpID0+IHRydWUpO1xuICB9XG5cbiAgbGV0IG5ld09wczogYm9vbGVhbltdID0gW107XG5cbiAgaWYgKHByZXZPcGVyYXRpb25zLmxlbmd0aCAtIDEgPT09IG9wZXJhdGlvbnMubGVuZ3RoICYmIG9wZXJhdGlvbnMuZXZlcnkoKG9wKSA9PiBwcmV2T3BlcmF0aW9ucy5pbmNsdWRlcyhvcCkpKSB7XG4gICAgLy8gSW4gY2FzZSB3ZSByZW1vdmUgb25lIG9wIGFuZCBkb2VzIG5vdCBjaGFuZ2UgYW55IG9wcyB0aGVuIGRvbid0IGhpZ2hsaWdodCBhbnl0aGluZy5cbiAgICByZXR1cm4gb3BlcmF0aW9ucy5tYXAoKCkgPT4gZmFsc2UpO1xuICB9XG4gIGlmIChwcmV2T3BlcmF0aW9ucy5sZW5ndGggKyAxID09PSBvcGVyYXRpb25zLmxlbmd0aCAmJiBwcmV2T3BlcmF0aW9ucy5ldmVyeSgob3ApID0+IG9wZXJhdGlvbnMuaW5jbHVkZXMob3ApKSkge1xuICAgIC8vIElmIHdlIGFkZCBhIHNpbmdsZSBvcCBqdXN0IGZpbmQgaXQgYW5kIGhpZ2hsaWdodCBqdXN0IHRoYXQuXG4gICAgY29uc3QgbmV3T3AgPSBvcGVyYXRpb25zLmZpbmQoKG9wKSA9PiAhcHJldk9wZXJhdGlvbnMuaW5jbHVkZXMob3ApKTtcbiAgICBuZXdPcHMgPSBvcGVyYXRpb25zLm1hcCgob3ApID0+IHtcbiAgICAgIHJldHVybiBvcCA9PT0gbmV3T3A7XG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgLy8gRGVmYXVsdCBkaWZmIG9mIGFsbCBvcHMuXG4gICAgbmV3T3BzID0gb3BlcmF0aW9ucy5tYXAoKG9wLCBpbmRleCkgPT4ge1xuICAgICAgcmV0dXJuICFpc1NhbWVPcChvcC5pZCwgcHJldk9wZXJhdGlvbnNbaW5kZXhdPy5pZCk7XG4gICAgfSk7XG4gIH1cbiAgcmV0dXJuIG5ld09wcztcbn1cblxuZnVuY3Rpb24gaXNTYW1lT3Aob3AxPzogc3RyaW5nLCBvcDI/OiBzdHJpbmcpIHtcbiAgcmV0dXJuIG9wMSA9PT0gb3AyIHx8IGBfXyR7b3AxfV9ieWAgPT09IG9wMiB8fCBvcDEgPT09IGBfXyR7b3AyfV9ieWA7XG59XG5cbmNvbnN0IGdldFN0eWxlcyA9ICh0aGVtZTogR3JhZmFuYVRoZW1lMikgPT4ge1xuICByZXR1cm4ge1xuICAgIGhlYWRpbmc6IGNzcyh7XG4gICAgICBsYWJlbDogJ2hlYWRpbmcnLFxuICAgICAgZm9udFNpemU6IDEyLFxuICAgICAgZm9udFdlaWdodDogdGhlbWUudHlwb2dyYXBoeS5mb250V2VpZ2h0TWVkaXVtLFxuICAgICAgbWFyZ2luQm90dG9tOiAwLFxuICAgIH0pLFxuICAgIG9wZXJhdGlvbkxpc3Q6IGNzcyh7XG4gICAgICBsYWJlbDogJ29wZXJhdGlvbkxpc3QnLFxuICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgICAgZmxleFdyYXA6ICd3cmFwJyxcbiAgICAgIGdhcDogdGhlbWUuc3BhY2luZygyKSxcbiAgICB9KSxcbiAgICBhZGRCdXR0b246IGNzcyh7XG4gICAgICBsYWJlbDogJ2FkZEJ1dHRvbicsXG4gICAgICB3aWR0aDogMTI2LFxuICAgICAgcGFkZGluZ0JvdHRvbTogdGhlbWUuc3BhY2luZygxKSxcbiAgICB9KSxcbiAgfTtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/prometheus/querybuilder/shared/OperationList.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/prometheus/querybuilder/shared/OperationParamEditor.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getOperationParamEditor: () => (/* binding */ getOperationParamEditor)\n/* harmony export */ });\n/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/@emotion-css-npm-11.11.2-dbfa42cf83-1edea109df.zip/node_modules/@emotion/css/dist/emotion-css.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/utils/selectUtils.ts\");\n/* harmony import */ var _grafana_experimental__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-experimental-virtual-ba767552fe/0/cache/@grafana-experimental-npm-1.6.1-f052d2ae51-64c32bc9e3.zip/node_modules/@grafana/experimental/dist/esm/QueryEditor/Stack.js\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Input/AutoSizeInput.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Forms/Checkbox.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/themes/ThemeContext.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Button/Button.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Select/Select.tsx\");\n/* harmony import */ var _operationUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./public/app/plugins/datasource/prometheus/querybuilder/shared/operationUtils.ts\");\n\n\n\n\n\n\n\nfunction getOperationParamEditor(paramDef) {\n  if (paramDef.editor) {\n    return paramDef.editor;\n  }\n  if (paramDef.options) {\n    return SelectInputParamEditor;\n  }\n  switch (paramDef.type) {\n    case \"boolean\":\n      return BoolInputParamEditor;\n    case \"number\":\n    case \"string\":\n    default:\n      return SimpleInputParamEditor;\n  }\n}\nfunction SimpleInputParamEditor(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n    _grafana_ui__WEBPACK_IMPORTED_MODULE_3__.AutoSizeInput,\n    {\n      id: (0,_operationUtils__WEBPACK_IMPORTED_MODULE_2__.getOperationParamId)(props.operationIndex, props.index),\n      defaultValue: props.value?.toString(),\n      minWidth: props.paramDef.minWidth,\n      placeholder: props.paramDef.placeholder,\n      title: props.paramDef.description,\n      maxWidth: (props.paramDef.minWidth || 20) * 3,\n      onCommitChange: (evt) => {\n        props.onChange(props.index, evt.currentTarget.value);\n        if (props.paramDef.runQueryOnEnter && evt.type === \"keydown\") {\n          props.onRunQuery();\n        }\n      }\n    }\n  );\n}\nfunction BoolInputParamEditor(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n    _grafana_ui__WEBPACK_IMPORTED_MODULE_4__.Checkbox,\n    {\n      id: (0,_operationUtils__WEBPACK_IMPORTED_MODULE_2__.getOperationParamId)(props.operationIndex, props.index),\n      value: props.value,\n      onChange: (evt) => props.onChange(props.index, evt.currentTarget.checked)\n    }\n  );\n}\nfunction SelectInputParamEditor({\n  paramDef,\n  value,\n  index,\n  operationIndex,\n  onChange\n}) {\n  const styles = (0,_grafana_ui__WEBPACK_IMPORTED_MODULE_5__.useStyles2)(getStyles);\n  let selectOptions = paramDef.options;\n  if (!selectOptions[0]?.label) {\n    selectOptions = paramDef.options.map((option) => ({\n      label: option.toString(),\n      value: option\n    }));\n  }\n  let valueOption = selectOptions.find((x) => x.value === value) ?? (0,_grafana_data__WEBPACK_IMPORTED_MODULE_6__.toOption)(value);\n  if (!value && paramDef.optional) {\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: styles.optionalParam }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n      _grafana_ui__WEBPACK_IMPORTED_MODULE_7__.Button,\n      {\n        size: \"sm\",\n        variant: \"secondary\",\n        title: `Add ${paramDef.name}`,\n        icon: \"plus\",\n        onClick: () => onChange(index, selectOptions[0].value)\n      },\n      paramDef.name\n    ));\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_experimental__WEBPACK_IMPORTED_MODULE_8__.Stack, { gap: 0.5, direction: \"row\", alignItems: \"center\", wrap: false }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n    _grafana_ui__WEBPACK_IMPORTED_MODULE_9__.Select,\n    {\n      id: (0,_operationUtils__WEBPACK_IMPORTED_MODULE_2__.getOperationParamId)(operationIndex, index),\n      value: valueOption,\n      options: selectOptions,\n      placeholder: paramDef.placeholder,\n      allowCustomValue: true,\n      onChange: (value2) => onChange(index, value2.value),\n      width: paramDef.minWidth || \"auto\"\n    }\n  ), paramDef.optional && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n    _grafana_ui__WEBPACK_IMPORTED_MODULE_7__.Button,\n    {\n      \"data-testid\": `operations.${index}.remove-param`,\n      size: \"sm\",\n      fill: \"text\",\n      icon: \"times\",\n      variant: \"secondary\",\n      title: `Remove ${paramDef.name}`,\n      onClick: () => onChange(index, \"\")\n    }\n  ));\n}\nconst getStyles = (theme) => {\n  return {\n    optionalParam: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)({\n      marginTop: theme.spacing(1)\n    })\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/prometheus/querybuilder/shared/OperationParamEditor.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/prometheus/querybuilder/shared/OperationsEditorRow.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OperationsEditorRow: () => (/* binding */ OperationsEditorRow)\n/* harmony export */ });\n/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/@emotion-css-npm-11.11.2-dbfa42cf83-1edea109df.zip/node_modules/@emotion/css/dist/emotion-css.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _grafana_experimental__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-experimental-virtual-ba767552fe/0/cache/@grafana-experimental-npm-1.6.1-f052d2ae51-64c32bc9e3.zip/node_modules/@grafana/experimental/dist/esm/QueryEditor/Stack.js\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/themes/ThemeContext.tsx\");\n\n\n\n\n\nfunction OperationsEditorRow({ children }) {\n  const styles = (0,_grafana_ui__WEBPACK_IMPORTED_MODULE_2__.useStyles2)(getStyles);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: styles.root }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_experimental__WEBPACK_IMPORTED_MODULE_3__.Stack, { gap: 1 }, children));\n}\nconst getStyles = (theme) => {\n  return {\n    root: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)({\n      padding: theme.spacing(1, 1, 0, 1),\n      backgroundColor: theme.colors.background.secondary,\n      borderRadius: theme.shape.borderRadius(1)\n    })\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9wcm9tZXRoZXVzL3F1ZXJ5YnVpbGRlci9zaGFyZWQvT3BlcmF0aW9uc0VkaXRvclJvdy50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFvQjtBQUNGO0FBR0k7QUFDSztBQU1wQixTQUFTLG9CQUFvQixFQUFFLFNBQVMsR0FBVTtBQUN2RCxRQUFNLFNBQVMsdURBQVUsQ0FBQyxTQUFTO0FBRW5DLFNBQ0UsMkVBQUMsU0FBSSxXQUFXLE9BQU8sUUFDckIsMkVBQUMsd0RBQUssSUFBQyxLQUFLLEtBQUksUUFBUyxDQUMzQjtBQUVKO0FBRUEsTUFBTSxZQUFZLENBQUMsVUFBeUI7QUFDMUMsU0FBTztBQUFBLElBQ0wsTUFBTSxpREFBRyxDQUFDO0FBQUEsTUFDUixTQUFTLE1BQU0sUUFBUSxHQUFHLEdBQUcsR0FBRyxDQUFDO0FBQUEsTUFDakMsaUJBQWlCLE1BQU0sT0FBTyxXQUFXO0FBQUEsTUFDekMsY0FBYyxNQUFNLE1BQU0sYUFBYSxDQUFDO0FBQUEsSUFDMUMsQ0FBQztBQUFBLEVBQ0g7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2dyYWZhbmEvLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9wcm9tZXRoZXVzL3F1ZXJ5YnVpbGRlci9zaGFyZWQvT3BlcmF0aW9uc0VkaXRvclJvdy50c3g/Yzk2OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9jc3MnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHsgR3JhZmFuYVRoZW1lMiB9IGZyb20gJ0BncmFmYW5hL2RhdGEnO1xuaW1wb3J0IHsgU3RhY2sgfSBmcm9tICdAZ3JhZmFuYS9leHBlcmltZW50YWwnO1xuaW1wb3J0IHsgdXNlU3R5bGVzMiB9IGZyb20gJ0BncmFmYW5hL3VpJztcblxuaW50ZXJmYWNlIFByb3BzIHtcbiAgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIE9wZXJhdGlvbnNFZGl0b3JSb3coeyBjaGlsZHJlbiB9OiBQcm9wcykge1xuICBjb25zdCBzdHlsZXMgPSB1c2VTdHlsZXMyKGdldFN0eWxlcyk7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLnJvb3R9PlxuICAgICAgPFN0YWNrIGdhcD17MX0+e2NoaWxkcmVufTwvU3RhY2s+XG4gICAgPC9kaXY+XG4gICk7XG59XG5cbmNvbnN0IGdldFN0eWxlcyA9ICh0aGVtZTogR3JhZmFuYVRoZW1lMikgPT4ge1xuICByZXR1cm4ge1xuICAgIHJvb3Q6IGNzcyh7XG4gICAgICBwYWRkaW5nOiB0aGVtZS5zcGFjaW5nKDEsIDEsIDAsIDEpLFxuICAgICAgYmFja2dyb3VuZENvbG9yOiB0aGVtZS5jb2xvcnMuYmFja2dyb3VuZC5zZWNvbmRhcnksXG4gICAgICBib3JkZXJSYWRpdXM6IHRoZW1lLnNoYXBlLmJvcmRlclJhZGl1cygxKSxcbiAgICB9KSxcbiAgfTtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/prometheus/querybuilder/shared/OperationsEditorRow.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/prometheus/querybuilder/shared/QueryBuilderHints.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryBuilderHints: () => (/* binding */ QueryBuilderHints)\n/* harmony export */ });\n/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/@emotion-css-npm-11.11.2-dbfa42cf83-1edea109df.zip/node_modules/@emotion/css/dist/emotion-css.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _grafana_runtime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-runtime-virtual-68c57d4c0c/1/packages/grafana-runtime/src/analytics/utils.ts\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/themes/ThemeContext.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Tooltip/Tooltip.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Button/Button.tsx\");\n\n\n\n\n\nconst QueryBuilderHints = ({\n  datasource,\n  query: visualQuery,\n  onChange,\n  data,\n  queryModeller,\n  buildVisualQueryFromString\n}) => {\n  const [hints, setHints] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n  const styles = (0,_grafana_ui__WEBPACK_IMPORTED_MODULE_2__.useStyles2)(getStyles);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    const query = { expr: queryModeller.renderQuery(visualQuery), refId: \"\" };\n    const hints2 = datasource.getQueryHints(query, data?.series || []).filter((hint) => hint.fix?.action);\n    setHints(hints2);\n  }, [datasource, visualQuery, data, queryModeller]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement((react__WEBPACK_IMPORTED_MODULE_1___default().Fragment), null, hints.length > 0 && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: styles.container }, hints.map((hint) => {\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_3__.Tooltip, { content: `${hint.label} ${hint.fix?.label}`, key: hint.type }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n      _grafana_ui__WEBPACK_IMPORTED_MODULE_4__.Button,\n      {\n        onClick: () => {\n          (0,_grafana_runtime__WEBPACK_IMPORTED_MODULE_5__.reportInteraction)(\"grafana_query_builder_hints_clicked\", {\n            hint: hint.type,\n            datasourceType: datasource.type\n          });\n          if (hint?.fix?.action) {\n            const query = { expr: queryModeller.renderQuery(visualQuery), refId: \"\" };\n            const newQuery = datasource.modifyQuery(query, hint.fix.action);\n            const newVisualQuery = buildVisualQueryFromString(newQuery.expr);\n            return onChange(newVisualQuery.query);\n          }\n        },\n        fill: \"outline\",\n        size: \"sm\",\n        className: styles.hint\n      },\n      \"hint: \",\n      hint.fix?.title || hint.fix?.action?.type.toLowerCase().replace(\"_\", \" \")\n    ));\n  })));\n};\nQueryBuilderHints.displayName = \"QueryBuilderHints\";\nconst getStyles = (theme) => {\n  return {\n    container: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n      display: flex;\n      align-items: start;\n    `,\n    hint: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)`\n      margin-right: ${theme.spacing(1)};\n    `\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9wcm9tZXRoZXVzL3F1ZXJ5YnVpbGRlci9zaGFyZWQvUXVlcnlCdWlsZGVySGludHMudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFvQjtBQUN1QjtBQUdUO0FBQ1U7QUFnQnJDLE1BQU0sb0JBQW9CLENBQWdDO0FBQUEsRUFDL0Q7QUFBQSxFQUNBLE9BQU87QUFBQSxFQUNQO0FBQUEsRUFDQTtBQUFBLEVBQ0E7QUFBQSxFQUNBO0FBQ0YsTUFBZ0I7QUFDZCxRQUFNLENBQUMsT0FBTyxRQUFRLElBQUksK0NBQVEsQ0FBYyxDQUFDLENBQUM7QUFDbEQsUUFBTSxTQUFTLHVEQUFVLENBQUMsU0FBUztBQUVuQyxrREFBUyxDQUFDLE1BQU07QUFDZCxVQUFNLFFBQVEsRUFBRSxNQUFNLGNBQWMsWUFBWSxXQUFXLEdBQUcsT0FBTyxHQUFHO0FBRXhFLFVBQU1BLFNBQVEsV0FBVyxjQUFjLE9BQU8sTUFBTSxVQUFVLENBQUMsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxTQUFTLEtBQUssS0FBSyxNQUFNO0FBQ25HLGFBQVNBLE1BQUs7QUFBQSxFQUNoQixHQUFHLENBQUMsWUFBWSxhQUFhLE1BQU0sYUFBYSxDQUFDO0FBRWpELFNBQ0UsMElBQ0csTUFBTSxTQUFTLEtBQ2QsMkVBQUMsU0FBSSxXQUFXLE9BQU8sYUFDcEIsTUFBTSxJQUFJLENBQUMsU0FBUztBQUNuQixXQUNFLDJFQUFDLGdEQUFPLElBQUMsU0FBUyxHQUFHLEtBQUssU0FBUyxLQUFLLEtBQUssU0FBUyxLQUFLLEtBQUssUUFDOUQ7QUFBQSxNQUFDLCtDQUFNO0FBQU47QUFBQSxRQUNDLFNBQVMsTUFBTTtBQUNiLDZFQUFpQixDQUFDLHVDQUF1QztBQUFBLFlBQ3ZELE1BQU0sS0FBSztBQUFBLFlBQ1gsZ0JBQWdCLFdBQVc7QUFBQSxVQUM3QixDQUFDO0FBRUQsY0FBSSxNQUFNLEtBQUssUUFBUTtBQUNyQixrQkFBTSxRQUFRLEVBQUUsTUFBTSxjQUFjLFlBQVksV0FBVyxHQUFHLE9BQU8sR0FBRztBQUN4RSxrQkFBTSxXQUFXLFdBQVcsWUFBWSxPQUFPLEtBQUssSUFBSSxNQUFNO0FBQzlELGtCQUFNLGlCQUFpQiwyQkFBMkIsU0FBUyxJQUFJO0FBQy9ELG1CQUFPLFNBQVMsZUFBZSxLQUFLO0FBQUEsVUFDdEM7QUFBQSxRQUNGO0FBQUEsUUFDQSxNQUFLO0FBQUEsUUFDTCxNQUFLO0FBQUEsUUFDTCxXQUFXLE9BQU87QUFBQTtBQUFBLE1BQ25CO0FBQUEsTUFDUSxLQUFLLEtBQUssU0FBUyxLQUFLLEtBQUssUUFBUSxLQUFLLFlBQVksRUFBRSxRQUFRLEtBQUssR0FBRztBQUFBLElBQ2pGLENBQ0Y7QUFBQSxFQUVKLENBQUMsQ0FDSCxDQUVKO0FBRUo7QUFFQSxrQkFBa0IsY0FBYztBQUVoQyxNQUFNLFlBQVksQ0FBQyxVQUF5QjtBQUMxQyxTQUFPO0FBQUEsSUFDTCxXQUFXLGlEQUFHO0FBQUg7QUFBQTtBQUFBO0FBQUEsSUFJWCxNQUFNLGlEQUFHO0FBQUgsc0JBQ1ksTUFBTSxRQUFRLENBQUM7QUFBQTtBQUFBLEVBRW5DO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ncmFmYW5hLy4vcHVibGljL2FwcC9wbHVnaW5zL2RhdGFzb3VyY2UvcHJvbWV0aGV1cy9xdWVyeWJ1aWxkZXIvc2hhcmVkL1F1ZXJ5QnVpbGRlckhpbnRzLnRzeD9kYWZmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2Nzcyc7XG5pbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHsgR3JhZmFuYVRoZW1lMiwgUGFuZWxEYXRhLCBRdWVyeUhpbnQgfSBmcm9tICdAZ3JhZmFuYS9kYXRhJztcbmltcG9ydCB7IHJlcG9ydEludGVyYWN0aW9uIH0gZnJvbSAnQGdyYWZhbmEvcnVudGltZSc7XG5pbXBvcnQgeyBCdXR0b24sIFRvb2x0aXAsIHVzZVN0eWxlczIgfSBmcm9tICdAZ3JhZmFuYS91aSc7XG5pbXBvcnQgeyBMb2tpRGF0YXNvdXJjZSB9IGZyb20gJ2FwcC9wbHVnaW5zL2RhdGFzb3VyY2UvbG9raS9kYXRhc291cmNlJztcblxuaW1wb3J0IHsgUHJvbWV0aGV1c0RhdGFzb3VyY2UgfSBmcm9tICcuLi8uLi9kYXRhc291cmNlJztcblxuaW1wb3J0IHsgTG9raUFuZFByb21RdWVyeU1vZGVsbGVyQmFzZSwgUHJvbUxva2lWaXN1YWxRdWVyeSB9IGZyb20gJy4vTG9raUFuZFByb21RdWVyeU1vZGVsbGVyQmFzZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgUHJvcHM8VCBleHRlbmRzIFByb21Mb2tpVmlzdWFsUXVlcnk+IHtcbiAgcXVlcnk6IFQ7XG4gIGRhdGFzb3VyY2U6IFByb21ldGhldXNEYXRhc291cmNlIHwgTG9raURhdGFzb3VyY2U7XG4gIHF1ZXJ5TW9kZWxsZXI6IExva2lBbmRQcm9tUXVlcnlNb2RlbGxlckJhc2U7XG4gIGJ1aWxkVmlzdWFsUXVlcnlGcm9tU3RyaW5nOiAoZXhwcjogc3RyaW5nKSA9PiB7IHF1ZXJ5OiBUIH07XG4gIG9uQ2hhbmdlOiAodXBkYXRlOiBUKSA9PiB2b2lkO1xuICBkYXRhPzogUGFuZWxEYXRhO1xufVxuXG5leHBvcnQgY29uc3QgUXVlcnlCdWlsZGVySGludHMgPSA8VCBleHRlbmRzIFByb21Mb2tpVmlzdWFsUXVlcnk+KHtcbiAgZGF0YXNvdXJjZSxcbiAgcXVlcnk6IHZpc3VhbFF1ZXJ5LFxuICBvbkNoYW5nZSxcbiAgZGF0YSxcbiAgcXVlcnlNb2RlbGxlcixcbiAgYnVpbGRWaXN1YWxRdWVyeUZyb21TdHJpbmcsXG59OiBQcm9wczxUPikgPT4ge1xuICBjb25zdCBbaGludHMsIHNldEhpbnRzXSA9IHVzZVN0YXRlPFF1ZXJ5SGludFtdPihbXSk7XG4gIGNvbnN0IHN0eWxlcyA9IHVzZVN0eWxlczIoZ2V0U3R5bGVzKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IHF1ZXJ5ID0geyBleHByOiBxdWVyeU1vZGVsbGVyLnJlbmRlclF1ZXJ5KHZpc3VhbFF1ZXJ5KSwgcmVmSWQ6ICcnIH07XG4gICAgLy8gRm9yIG5vdyBzaG93IG9ubHkgYWN0aW9uYWJsZSBoaW50c1xuICAgIGNvbnN0IGhpbnRzID0gZGF0YXNvdXJjZS5nZXRRdWVyeUhpbnRzKHF1ZXJ5LCBkYXRhPy5zZXJpZXMgfHwgW10pLmZpbHRlcigoaGludCkgPT4gaGludC5maXg/LmFjdGlvbik7XG4gICAgc2V0SGludHMoaGludHMpO1xuICB9LCBbZGF0YXNvdXJjZSwgdmlzdWFsUXVlcnksIGRhdGEsIHF1ZXJ5TW9kZWxsZXJdKTtcblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICB7aGludHMubGVuZ3RoID4gMCAmJiAoXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMuY29udGFpbmVyfT5cbiAgICAgICAgICB7aGludHMubWFwKChoaW50KSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICA8VG9vbHRpcCBjb250ZW50PXtgJHtoaW50LmxhYmVsfSAke2hpbnQuZml4Py5sYWJlbH1gfSBrZXk9e2hpbnQudHlwZX0+XG4gICAgICAgICAgICAgICAgPEJ1dHRvblxuICAgICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICByZXBvcnRJbnRlcmFjdGlvbignZ3JhZmFuYV9xdWVyeV9idWlsZGVyX2hpbnRzX2NsaWNrZWQnLCB7XG4gICAgICAgICAgICAgICAgICAgICAgaGludDogaGludC50eXBlLFxuICAgICAgICAgICAgICAgICAgICAgIGRhdGFzb3VyY2VUeXBlOiBkYXRhc291cmNlLnR5cGUsXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmIChoaW50Py5maXg/LmFjdGlvbikge1xuICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHF1ZXJ5ID0geyBleHByOiBxdWVyeU1vZGVsbGVyLnJlbmRlclF1ZXJ5KHZpc3VhbFF1ZXJ5KSwgcmVmSWQ6ICcnIH07XG4gICAgICAgICAgICAgICAgICAgICAgY29uc3QgbmV3UXVlcnkgPSBkYXRhc291cmNlLm1vZGlmeVF1ZXJ5KHF1ZXJ5LCBoaW50LmZpeC5hY3Rpb24pO1xuICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG5ld1Zpc3VhbFF1ZXJ5ID0gYnVpbGRWaXN1YWxRdWVyeUZyb21TdHJpbmcobmV3UXVlcnkuZXhwcik7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG9uQ2hhbmdlKG5ld1Zpc3VhbFF1ZXJ5LnF1ZXJ5KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgIGZpbGw9XCJvdXRsaW5lXCJcbiAgICAgICAgICAgICAgICAgIHNpemU9XCJzbVwiXG4gICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e3N0eWxlcy5oaW50fVxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgIGhpbnQ6IHtoaW50LmZpeD8udGl0bGUgfHwgaGludC5maXg/LmFjdGlvbj8udHlwZS50b0xvd2VyQ2FzZSgpLnJlcGxhY2UoJ18nLCAnICcpfVxuICAgICAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgICAgICA8L1Rvb2x0aXA+XG4gICAgICAgICAgICApO1xuICAgICAgICAgIH0pfVxuICAgICAgICA8L2Rpdj5cbiAgICAgICl9XG4gICAgPC8+XG4gICk7XG59O1xuXG5RdWVyeUJ1aWxkZXJIaW50cy5kaXNwbGF5TmFtZSA9ICdRdWVyeUJ1aWxkZXJIaW50cyc7XG5cbmNvbnN0IGdldFN0eWxlcyA9ICh0aGVtZTogR3JhZmFuYVRoZW1lMikgPT4ge1xuICByZXR1cm4ge1xuICAgIGNvbnRhaW5lcjogY3NzYFxuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGFsaWduLWl0ZW1zOiBzdGFydDtcbiAgICBgLFxuICAgIGhpbnQ6IGNzc2BcbiAgICAgIG1hcmdpbi1yaWdodDogJHt0aGVtZS5zcGFjaW5nKDEpfTtcbiAgICBgLFxuICB9O1xufTtcbiJdLCJuYW1lcyI6WyJoaW50cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/prometheus/querybuilder/shared/QueryBuilderHints.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/prometheus/querybuilder/shared/QueryEditorModeToggle.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryEditorModeToggle: () => (/* binding */ QueryEditorModeToggle)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Forms/RadioButtonGroup/RadioButtonGroup.tsx\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/plugins/datasource/prometheus/querybuilder/shared/types.ts\");\n\n\n\n\nconst editorModes = [\n  { label: \"Builder\", value: _types__WEBPACK_IMPORTED_MODULE_1__.QueryEditorMode.Builder },\n  { label: \"Code\", value: _types__WEBPACK_IMPORTED_MODULE_1__.QueryEditorMode.Code }\n];\nfunction QueryEditorModeToggle({ mode, onChange }) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", { \"data-testid\": \"QueryEditorModeToggle\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_2__.RadioButtonGroup, { options: editorModes, size: \"sm\", value: mode, onChange }));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9wcm9tZXRoZXVzL3F1ZXJ5YnVpbGRlci9zaGFyZWQvUXVlcnlFZGl0b3JNb2RlVG9nZ2xlLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBa0I7QUFFZTtBQUVEO0FBT2hDLE1BQU0sY0FBYztBQUFBLEVBQ2xCLEVBQUUsT0FBTyxXQUFXLE9BQU8sbURBQWUsQ0FBQyxRQUFRO0FBQUEsRUFDbkQsRUFBRSxPQUFPLFFBQVEsT0FBTyxtREFBZSxDQUFDLEtBQUs7QUFDL0M7QUFFTyxTQUFTLHNCQUFzQixFQUFFLE1BQU0sU0FBUyxHQUFVO0FBQy9ELFNBQ0UsMkVBQUMsU0FBSSxlQUFhLDJCQUNoQiwyRUFBQyx5REFBZ0IsSUFBQyxTQUFTLGFBQWEsTUFBSyxNQUFLLE9BQU8sTUFBTSxVQUFvQixDQUNyRjtBQUVKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ3JhZmFuYS8uL3B1YmxpYy9hcHAvcGx1Z2lucy9kYXRhc291cmNlL3Byb21ldGhldXMvcXVlcnlidWlsZGVyL3NoYXJlZC9RdWVyeUVkaXRvck1vZGVUb2dnbGUudHN4PzI4NDciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHsgUmFkaW9CdXR0b25Hcm91cCB9IGZyb20gJ0BncmFmYW5hL3VpJztcblxuaW1wb3J0IHsgUXVlcnlFZGl0b3JNb2RlIH0gZnJvbSAnLi90eXBlcyc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgUHJvcHMge1xuICBtb2RlOiBRdWVyeUVkaXRvck1vZGU7XG4gIG9uQ2hhbmdlOiAobW9kZTogUXVlcnlFZGl0b3JNb2RlKSA9PiB2b2lkO1xufVxuXG5jb25zdCBlZGl0b3JNb2RlcyA9IFtcbiAgeyBsYWJlbDogJ0J1aWxkZXInLCB2YWx1ZTogUXVlcnlFZGl0b3JNb2RlLkJ1aWxkZXIgfSxcbiAgeyBsYWJlbDogJ0NvZGUnLCB2YWx1ZTogUXVlcnlFZGl0b3JNb2RlLkNvZGUgfSxcbl07XG5cbmV4cG9ydCBmdW5jdGlvbiBRdWVyeUVkaXRvck1vZGVUb2dnbGUoeyBtb2RlLCBvbkNoYW5nZSB9OiBQcm9wcykge1xuICByZXR1cm4gKFxuICAgIDxkaXYgZGF0YS10ZXN0aWQ9eydRdWVyeUVkaXRvck1vZGVUb2dnbGUnfT5cbiAgICAgIDxSYWRpb0J1dHRvbkdyb3VwIG9wdGlvbnM9e2VkaXRvck1vZGVzfSBzaXplPVwic21cIiB2YWx1ZT17bW9kZX0gb25DaGFuZ2U9e29uQ2hhbmdlfSAvPlxuICAgIDwvZGl2PlxuICApO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/prometheus/querybuilder/shared/QueryEditorModeToggle.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/prometheus/querybuilder/shared/QueryHeaderSwitch.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryHeaderSwitch: () => (/* binding */ QueryHeaderSwitch)\n/* harmony export */ });\n/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/@emotion-css-npm-11.11.2-dbfa42cf83-1edea109df.zip/node_modules/@emotion/css/dist/emotion-css.esm.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/cache/lodash-npm-4.17.21-6382451519-eb835a2e51.zip/node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _grafana_experimental__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-experimental-virtual-ba767552fe/0/cache/@grafana-experimental-npm-1.6.1-f052d2ae51-64c32bc9e3.zip/node_modules/@grafana/experimental/dist/esm/QueryEditor/Stack.js\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/themes/ThemeContext.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Switch/Switch.tsx\");\n\n\n\n\n\n\nfunction QueryHeaderSwitch({ label, ...inputProps }) {\n  const dashedLabel = label.replace(\" \", \"-\");\n  const switchIdRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)((0,lodash__WEBPACK_IMPORTED_MODULE_1__.uniqueId)(`switch-${dashedLabel}`));\n  const styles = (0,_grafana_ui__WEBPACK_IMPORTED_MODULE_3__.useStyles2)(getStyles);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_grafana_experimental__WEBPACK_IMPORTED_MODULE_4__.Stack, { gap: 1 }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"label\", { htmlFor: switchIdRef.current, className: styles.switchLabel }, label), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_5__.Switch, { ...inputProps, id: switchIdRef.current }));\n}\nconst getStyles = (theme) => {\n  return {\n    switchLabel: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)({\n      color: theme.colors.text.secondary,\n      cursor: \"pointer\",\n      fontSize: theme.typography.bodySmall.fontSize,\n      \"&:hover\": {\n        color: theme.colors.text.primary\n      }\n    })\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9wcm9tZXRoZXVzL3F1ZXJ5YnVpbGRlci9zaGFyZWQvUXVlcnlIZWFkZXJTd2l0Y2gudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBb0I7QUFDSztBQUNnQjtBQUduQjtBQUNhO0FBTzVCLFNBQVMsa0JBQWtCLEVBQUUsT0FBTyxHQUFHLFdBQVcsR0FBVTtBQUNqRSxRQUFNLGNBQWMsTUFBTSxRQUFRLEtBQUssR0FBRztBQUMxQyxRQUFNLGNBQWMsNkNBQU0sQ0FBQyxnREFBUSxDQUFDLFVBQVUsYUFBYSxDQUFDO0FBQzVELFFBQU0sU0FBUyx1REFBVSxDQUFDLFNBQVM7QUFFbkMsU0FDRSwyRUFBQyx3REFBSyxJQUFDLEtBQUssS0FDViwyRUFBQyxXQUFNLFNBQVMsWUFBWSxTQUFTLFdBQVcsT0FBTyxlQUNwRCxLQUNILEdBQ0EsMkVBQUMsK0NBQU0sSUFBRSxHQUFHLFlBQVksSUFBSSxZQUFZLFNBQVMsQ0FDbkQ7QUFFSjtBQUVBLE1BQU0sWUFBWSxDQUFDLFVBQXlCO0FBQzFDLFNBQU87QUFBQSxJQUNMLGFBQWEsaURBQUcsQ0FBQztBQUFBLE1BQ2YsT0FBTyxNQUFNLE9BQU8sS0FBSztBQUFBLE1BQ3pCLFFBQVE7QUFBQSxNQUNSLFVBQVUsTUFBTSxXQUFXLFVBQVU7QUFBQSxNQUNyQyxXQUFXO0FBQUEsUUFDVCxPQUFPLE1BQU0sT0FBTyxLQUFLO0FBQUEsTUFDM0I7QUFBQSxJQUNGLENBQUM7QUFBQSxFQUNIO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ncmFmYW5hLy4vcHVibGljL2FwcC9wbHVnaW5zL2RhdGFzb3VyY2UvcHJvbWV0aGV1cy9xdWVyeWJ1aWxkZXIvc2hhcmVkL1F1ZXJ5SGVhZGVyU3dpdGNoLnRzeD85Yjc1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2Nzcyc7XG5pbXBvcnQgeyB1bmlxdWVJZCB9IGZyb20gJ2xvZGFzaCc7XG5pbXBvcnQgUmVhY3QsIHsgSFRNTFByb3BzLCB1c2VSZWYgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB7IEdyYWZhbmFUaGVtZTIgfSBmcm9tICdAZ3JhZmFuYS9kYXRhJztcbmltcG9ydCB7IFN0YWNrIH0gZnJvbSAnQGdyYWZhbmEvZXhwZXJpbWVudGFsJztcbmltcG9ydCB7IFN3aXRjaCwgdXNlU3R5bGVzMiB9IGZyb20gJ0BncmFmYW5hL3VpJztcblxuZXhwb3J0IGludGVyZmFjZSBQcm9wcyBleHRlbmRzIE9taXQ8SFRNTFByb3BzPEhUTUxJbnB1dEVsZW1lbnQ+LCAndmFsdWUnIHwgJ3JlZic+IHtcbiAgdmFsdWU/OiBib29sZWFuO1xuICBsYWJlbDogc3RyaW5nO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gUXVlcnlIZWFkZXJTd2l0Y2goeyBsYWJlbCwgLi4uaW5wdXRQcm9wcyB9OiBQcm9wcykge1xuICBjb25zdCBkYXNoZWRMYWJlbCA9IGxhYmVsLnJlcGxhY2UoJyAnLCAnLScpO1xuICBjb25zdCBzd2l0Y2hJZFJlZiA9IHVzZVJlZih1bmlxdWVJZChgc3dpdGNoLSR7ZGFzaGVkTGFiZWx9YCkpO1xuICBjb25zdCBzdHlsZXMgPSB1c2VTdHlsZXMyKGdldFN0eWxlcyk7XG5cbiAgcmV0dXJuIChcbiAgICA8U3RhY2sgZ2FwPXsxfT5cbiAgICAgIDxsYWJlbCBodG1sRm9yPXtzd2l0Y2hJZFJlZi5jdXJyZW50fSBjbGFzc05hbWU9e3N0eWxlcy5zd2l0Y2hMYWJlbH0+XG4gICAgICAgIHtsYWJlbH1cbiAgICAgIDwvbGFiZWw+XG4gICAgICA8U3dpdGNoIHsuLi5pbnB1dFByb3BzfSBpZD17c3dpdGNoSWRSZWYuY3VycmVudH0gLz5cbiAgICA8L1N0YWNrPlxuICApO1xufVxuXG5jb25zdCBnZXRTdHlsZXMgPSAodGhlbWU6IEdyYWZhbmFUaGVtZTIpID0+IHtcbiAgcmV0dXJuIHtcbiAgICBzd2l0Y2hMYWJlbDogY3NzKHtcbiAgICAgIGNvbG9yOiB0aGVtZS5jb2xvcnMudGV4dC5zZWNvbmRhcnksXG4gICAgICBjdXJzb3I6ICdwb2ludGVyJyxcbiAgICAgIGZvbnRTaXplOiB0aGVtZS50eXBvZ3JhcGh5LmJvZHlTbWFsbC5mb250U2l6ZSxcbiAgICAgICcmOmhvdmVyJzoge1xuICAgICAgICBjb2xvcjogdGhlbWUuY29sb3JzLnRleHQucHJpbWFyeSxcbiAgICAgIH0sXG4gICAgfSksXG4gIH07XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/prometheus/querybuilder/shared/QueryHeaderSwitch.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/prometheus/querybuilder/shared/QueryOptionGroup.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryOptionGroup: () => (/* binding */ QueryOptionGroup)\n/* harmony export */ });\n/* harmony import */ var _emotion_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/@emotion-css-npm-11.11.2-dbfa42cf83-1edea109df.zip/node_modules/@emotion/css/dist/emotion-css.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_use__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./.yarn/__virtual__/react-use-virtual-dd7926f458/0/cache/react-use-npm-17.4.0-0ef4521544-0889da919b.zip/node_modules/react-use/esm/useToggle.js\");\n/* harmony import */ var _grafana_data__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-data-virtual-0996183232/1/packages/grafana-data/src/valueFormats/valueFormats.ts\");\n/* harmony import */ var _grafana_experimental__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-experimental-virtual-ba767552fe/0/cache/@grafana-experimental-npm-1.6.1-f052d2ae51-64c32bc9e3.zip/node_modules/@grafana/experimental/dist/esm/QueryEditor/Stack.js\");\n/* harmony import */ var _grafana_runtime__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-runtime-virtual-68c57d4c0c/1/packages/grafana-runtime/src/config.ts\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/themes/ThemeContext.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Collapse/Collapse.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Tooltip/Tooltip.tsx\");\n/* harmony import */ var _grafana_ui__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(\"./.yarn/__virtual__/@grafana-ui-virtual-d722efae30/1/packages/grafana-ui/src/components/Icon/Icon.tsx\");\n\n\n\n\n\n\n\n\nfunction QueryOptionGroup({ title, children, collapsedInfo, queryStats }) {\n  const [isOpen, toggleOpen] = (0,react_use__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false);\n  const styles = (0,_grafana_ui__WEBPACK_IMPORTED_MODULE_3__.useStyles2)(getStyles);\n  const convertUnits = () => {\n    const { text, suffix } = (0,_grafana_data__WEBPACK_IMPORTED_MODULE_4__.getValueFormat)(\"bytes\")(queryStats.bytes, 1);\n    return text + suffix;\n  };\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: styles.wrapper }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\n    _grafana_ui__WEBPACK_IMPORTED_MODULE_5__.Collapse,\n    {\n      className: styles.collapse,\n      collapsible: true,\n      isOpen,\n      onToggle: toggleOpen,\n      label: /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_experimental__WEBPACK_IMPORTED_MODULE_6__.Stack, { gap: 0, wrap: false }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"h6\", { className: styles.title }, title), !isOpen && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: styles.description }, collapsedInfo.map((x, i) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"span\", { key: i }, x))))\n    },\n    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", { className: styles.body }, children)\n  ), queryStats && _grafana_runtime__WEBPACK_IMPORTED_MODULE_7__.config.featureToggles.lokiQuerySplitting && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_8__.Tooltip, { content: \"Note: the query will be split into multiple parts and executed in sequence. Query limits will only apply each individual part.\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_grafana_ui__WEBPACK_IMPORTED_MODULE_9__.Icon, { tabIndex: 0, name: \"info-circle\", className: styles.tooltip, size: \"sm\" })), queryStats && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"p\", { className: styles.stats }, \"This query will process approximately \", convertUnits(), \".\"));\n}\nconst getStyles = (theme) => {\n  return {\n    collapse: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)({\n      backgroundColor: \"unset\",\n      border: \"unset\",\n      marginBottom: 0,\n      [\"> button\"]: {\n        padding: theme.spacing(0, 1)\n      }\n    }),\n    wrapper: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)({\n      width: \"100%\",\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"baseline\"\n    }),\n    title: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)({\n      flexGrow: 1,\n      overflow: \"hidden\",\n      fontSize: theme.typography.bodySmall.fontSize,\n      fontWeight: theme.typography.fontWeightMedium,\n      margin: 0\n    }),\n    description: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)({\n      color: theme.colors.text.secondary,\n      fontSize: theme.typography.bodySmall.fontSize,\n      fontWeight: theme.typography.bodySmall.fontWeight,\n      paddingLeft: theme.spacing(2),\n      gap: theme.spacing(2),\n      display: \"flex\"\n    }),\n    body: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)({\n      display: \"flex\",\n      gap: theme.spacing(2),\n      flexWrap: \"wrap\"\n    }),\n    stats: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)({\n      margin: \"0px\",\n      color: theme.colors.text.secondary,\n      fontSize: theme.typography.bodySmall.fontSize\n    }),\n    tooltip: (0,_emotion_css__WEBPACK_IMPORTED_MODULE_0__.css)({\n      marginRight: theme.spacing(0.25)\n    })\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9wcm9tZXRoZXVzL3F1ZXJ5YnVpbGRlci9zaGFyZWQvUXVlcnlPcHRpb25Hcm91cC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFvQjtBQUNGO0FBQ1E7QUFFb0I7QUFDeEI7QUFDQztBQUM2QjtBQVU3QyxTQUFTLGlCQUFpQixFQUFFLE9BQU8sVUFBVSxlQUFlLFdBQVcsR0FBVTtBQUN0RixRQUFNLENBQUMsUUFBUSxVQUFVLElBQUkscURBQVMsQ0FBQyxLQUFLO0FBQzVDLFFBQU0sU0FBUyx1REFBVSxDQUFDLFNBQVM7QUFFbkMsUUFBTSxlQUFlLE1BQWM7QUFDakMsVUFBTSxFQUFFLE1BQU0sT0FBTyxJQUFJLDZEQUFjLENBQUMsT0FBTyxFQUFFLFdBQVksT0FBTyxDQUFDO0FBQ3JFLFdBQU8sT0FBTztBQUFBLEVBQ2hCO0FBRUEsU0FDRSwyRUFBQyxTQUFJLFdBQVcsT0FBTyxXQUNyQjtBQUFBLElBQUMsaURBQVE7QUFBUjtBQUFBLE1BQ0MsV0FBVyxPQUFPO0FBQUEsTUFDbEIsYUFBVztBQUFBLE1BQ1g7QUFBQSxNQUNBLFVBQVU7QUFBQSxNQUNWLE9BQ0UsMkVBQUMsd0RBQUssSUFBQyxLQUFLLEdBQUcsTUFBTSxTQUNuQiwyRUFBQyxRQUFHLFdBQVcsT0FBTyxTQUFRLEtBQU0sR0FDbkMsQ0FBQyxVQUNBLDJFQUFDLFNBQUksV0FBVyxPQUFPLGVBQ3BCLGNBQWMsSUFBSSxDQUFDLEdBQUcsTUFDckIsMkVBQUMsVUFBSyxLQUFLLEtBQUksQ0FBRSxDQUNsQixDQUNILENBRUo7QUFBQTtBQUFBLElBR0YsMkVBQUMsU0FBSSxXQUFXLE9BQU8sUUFBTyxRQUFTO0FBQUEsRUFDekMsR0FDQyxjQUFjLG9EQUFNLENBQUMsZUFBZSxzQkFDbkMsMkVBQUMsZ0RBQU8sSUFBQyxTQUFRLG9JQUNmLDJFQUFDLDZDQUFJLElBQUMsVUFBVSxHQUFHLE1BQUssZUFBYyxXQUFXLE9BQU8sU0FBUyxNQUFLLE1BQUssQ0FDN0UsR0FFRCxjQUFjLDJFQUFDLE9BQUUsV0FBVyxPQUFPLFNBQU8sMENBQXVDLGFBQWEsR0FBRSxHQUFDLENBQ3BHO0FBRUo7QUFFQSxNQUFNLFlBQVksQ0FBQyxVQUF5QjtBQUMxQyxTQUFPO0FBQUEsSUFDTCxVQUFVLGlEQUFHLENBQUM7QUFBQSxNQUNaLGlCQUFpQjtBQUFBLE1BQ2pCLFFBQVE7QUFBQSxNQUNSLGNBQWM7QUFBQSxNQUVkLENBQUMsVUFBVSxHQUFHO0FBQUEsUUFDWixTQUFTLE1BQU0sUUFBUSxHQUFHLENBQUM7QUFBQSxNQUM3QjtBQUFBLElBQ0YsQ0FBQztBQUFBLElBQ0QsU0FBUyxpREFBRyxDQUFDO0FBQUEsTUFDWCxPQUFPO0FBQUEsTUFDUCxTQUFTO0FBQUEsTUFDVCxnQkFBZ0I7QUFBQSxNQUNoQixZQUFZO0FBQUEsSUFDZCxDQUFDO0FBQUEsSUFDRCxPQUFPLGlEQUFHLENBQUM7QUFBQSxNQUNULFVBQVU7QUFBQSxNQUNWLFVBQVU7QUFBQSxNQUNWLFVBQVUsTUFBTSxXQUFXLFVBQVU7QUFBQSxNQUNyQyxZQUFZLE1BQU0sV0FBVztBQUFBLE1BQzdCLFFBQVE7QUFBQSxJQUNWLENBQUM7QUFBQSxJQUNELGFBQWEsaURBQUcsQ0FBQztBQUFBLE1BQ2YsT0FBTyxNQUFNLE9BQU8sS0FBSztBQUFBLE1BQ3pCLFVBQVUsTUFBTSxXQUFXLFVBQVU7QUFBQSxNQUNyQyxZQUFZLE1BQU0sV0FBVyxVQUFVO0FBQUEsTUFDdkMsYUFBYSxNQUFNLFFBQVEsQ0FBQztBQUFBLE1BQzVCLEtBQUssTUFBTSxRQUFRLENBQUM7QUFBQSxNQUNwQixTQUFTO0FBQUEsSUFDWCxDQUFDO0FBQUEsSUFDRCxNQUFNLGlEQUFHLENBQUM7QUFBQSxNQUNSLFNBQVM7QUFBQSxNQUNULEtBQUssTUFBTSxRQUFRLENBQUM7QUFBQSxNQUNwQixVQUFVO0FBQUEsSUFDWixDQUFDO0FBQUEsSUFDRCxPQUFPLGlEQUFHLENBQUM7QUFBQSxNQUNULFFBQVE7QUFBQSxNQUNSLE9BQU8sTUFBTSxPQUFPLEtBQUs7QUFBQSxNQUN6QixVQUFVLE1BQU0sV0FBVyxVQUFVO0FBQUEsSUFDdkMsQ0FBQztBQUFBLElBQ0QsU0FBUyxpREFBRyxDQUFDO0FBQUEsTUFDWCxhQUFhLE1BQU0sUUFBUSxJQUFJO0FBQUEsSUFDakMsQ0FBQztBQUFBLEVBQ0g7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2dyYWZhbmEvLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9wcm9tZXRoZXVzL3F1ZXJ5YnVpbGRlci9zaGFyZWQvUXVlcnlPcHRpb25Hcm91cC50c3g/M2U3MiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9jc3MnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZVRvZ2dsZSB9IGZyb20gJ3JlYWN0LXVzZSc7XG5cbmltcG9ydCB7IGdldFZhbHVlRm9ybWF0LCBHcmFmYW5hVGhlbWUyIH0gZnJvbSAnQGdyYWZhbmEvZGF0YSc7XG5pbXBvcnQgeyBTdGFjayB9IGZyb20gJ0BncmFmYW5hL2V4cGVyaW1lbnRhbCc7XG5pbXBvcnQgeyBjb25maWcgfSBmcm9tICdAZ3JhZmFuYS9ydW50aW1lJztcbmltcG9ydCB7IENvbGxhcHNlLCBJY29uLCBUb29sdGlwLCB1c2VTdHlsZXMyIH0gZnJvbSAnQGdyYWZhbmEvdWknO1xuaW1wb3J0IHsgUXVlcnlTdGF0cyB9IGZyb20gJ2FwcC9wbHVnaW5zL2RhdGFzb3VyY2UvbG9raS90eXBlcyc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgUHJvcHMge1xuICB0aXRsZTogc3RyaW5nO1xuICBjb2xsYXBzZWRJbmZvOiBzdHJpbmdbXTtcbiAgcXVlcnlTdGF0cz86IFF1ZXJ5U3RhdHMgfCBudWxsO1xuICBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gUXVlcnlPcHRpb25Hcm91cCh7IHRpdGxlLCBjaGlsZHJlbiwgY29sbGFwc2VkSW5mbywgcXVlcnlTdGF0cyB9OiBQcm9wcykge1xuICBjb25zdCBbaXNPcGVuLCB0b2dnbGVPcGVuXSA9IHVzZVRvZ2dsZShmYWxzZSk7XG4gIGNvbnN0IHN0eWxlcyA9IHVzZVN0eWxlczIoZ2V0U3R5bGVzKTtcblxuICBjb25zdCBjb252ZXJ0VW5pdHMgPSAoKTogc3RyaW5nID0+IHtcbiAgICBjb25zdCB7IHRleHQsIHN1ZmZpeCB9ID0gZ2V0VmFsdWVGb3JtYXQoJ2J5dGVzJykocXVlcnlTdGF0cyEuYnl0ZXMsIDEpO1xuICAgIHJldHVybiB0ZXh0ICsgc3VmZml4O1xuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy53cmFwcGVyfT5cbiAgICAgIDxDb2xsYXBzZVxuICAgICAgICBjbGFzc05hbWU9e3N0eWxlcy5jb2xsYXBzZX1cbiAgICAgICAgY29sbGFwc2libGVcbiAgICAgICAgaXNPcGVuPXtpc09wZW59XG4gICAgICAgIG9uVG9nZ2xlPXt0b2dnbGVPcGVufVxuICAgICAgICBsYWJlbD17XG4gICAgICAgICAgPFN0YWNrIGdhcD17MH0gd3JhcD17ZmFsc2V9PlxuICAgICAgICAgICAgPGg2IGNsYXNzTmFtZT17c3R5bGVzLnRpdGxlfT57dGl0bGV9PC9oNj5cbiAgICAgICAgICAgIHshaXNPcGVuICYmIChcbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5kZXNjcmlwdGlvbn0+XG4gICAgICAgICAgICAgICAge2NvbGxhcHNlZEluZm8ubWFwKCh4LCBpKSA9PiAoXG4gICAgICAgICAgICAgICAgICA8c3BhbiBrZXk9e2l9Pnt4fTwvc3Bhbj5cbiAgICAgICAgICAgICAgICApKX1cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICApfVxuICAgICAgICAgIDwvU3RhY2s+XG4gICAgICAgIH1cbiAgICAgID5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5ib2R5fT57Y2hpbGRyZW59PC9kaXY+XG4gICAgICA8L0NvbGxhcHNlPlxuICAgICAge3F1ZXJ5U3RhdHMgJiYgY29uZmlnLmZlYXR1cmVUb2dnbGVzLmxva2lRdWVyeVNwbGl0dGluZyAmJiAoXG4gICAgICAgIDxUb29sdGlwIGNvbnRlbnQ9XCJOb3RlOiB0aGUgcXVlcnkgd2lsbCBiZSBzcGxpdCBpbnRvIG11bHRpcGxlIHBhcnRzIGFuZCBleGVjdXRlZCBpbiBzZXF1ZW5jZS4gUXVlcnkgbGltaXRzIHdpbGwgb25seSBhcHBseSBlYWNoIGluZGl2aWR1YWwgcGFydC5cIj5cbiAgICAgICAgICA8SWNvbiB0YWJJbmRleD17MH0gbmFtZT1cImluZm8tY2lyY2xlXCIgY2xhc3NOYW1lPXtzdHlsZXMudG9vbHRpcH0gc2l6ZT1cInNtXCIgLz5cbiAgICAgICAgPC9Ub29sdGlwPlxuICAgICAgKX1cbiAgICAgIHtxdWVyeVN0YXRzICYmIDxwIGNsYXNzTmFtZT17c3R5bGVzLnN0YXRzfT5UaGlzIHF1ZXJ5IHdpbGwgcHJvY2VzcyBhcHByb3hpbWF0ZWx5IHtjb252ZXJ0VW5pdHMoKX0uPC9wPn1cbiAgICA8L2Rpdj5cbiAgKTtcbn1cblxuY29uc3QgZ2V0U3R5bGVzID0gKHRoZW1lOiBHcmFmYW5hVGhlbWUyKSA9PiB7XG4gIHJldHVybiB7XG4gICAgY29sbGFwc2U6IGNzcyh7XG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6ICd1bnNldCcsXG4gICAgICBib3JkZXI6ICd1bnNldCcsXG4gICAgICBtYXJnaW5Cb3R0b206IDAsXG5cbiAgICAgIFsnPiBidXR0b24nXToge1xuICAgICAgICBwYWRkaW5nOiB0aGVtZS5zcGFjaW5nKDAsIDEpLFxuICAgICAgfSxcbiAgICB9KSxcbiAgICB3cmFwcGVyOiBjc3Moe1xuICAgICAgd2lkdGg6ICcxMDAlJyxcbiAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgIGp1c3RpZnlDb250ZW50OiAnc3BhY2UtYmV0d2VlbicsXG4gICAgICBhbGlnbkl0ZW1zOiAnYmFzZWxpbmUnLFxuICAgIH0pLFxuICAgIHRpdGxlOiBjc3Moe1xuICAgICAgZmxleEdyb3c6IDEsXG4gICAgICBvdmVyZmxvdzogJ2hpZGRlbicsXG4gICAgICBmb250U2l6ZTogdGhlbWUudHlwb2dyYXBoeS5ib2R5U21hbGwuZm9udFNpemUsXG4gICAgICBmb250V2VpZ2h0OiB0aGVtZS50eXBvZ3JhcGh5LmZvbnRXZWlnaHRNZWRpdW0sXG4gICAgICBtYXJnaW46IDAsXG4gICAgfSksXG4gICAgZGVzY3JpcHRpb246IGNzcyh7XG4gICAgICBjb2xvcjogdGhlbWUuY29sb3JzLnRleHQuc2Vjb25kYXJ5LFxuICAgICAgZm9udFNpemU6IHRoZW1lLnR5cG9ncmFwaHkuYm9keVNtYWxsLmZvbnRTaXplLFxuICAgICAgZm9udFdlaWdodDogdGhlbWUudHlwb2dyYXBoeS5ib2R5U21hbGwuZm9udFdlaWdodCxcbiAgICAgIHBhZGRpbmdMZWZ0OiB0aGVtZS5zcGFjaW5nKDIpLFxuICAgICAgZ2FwOiB0aGVtZS5zcGFjaW5nKDIpLFxuICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgIH0pLFxuICAgIGJvZHk6IGNzcyh7XG4gICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICBnYXA6IHRoZW1lLnNwYWNpbmcoMiksXG4gICAgICBmbGV4V3JhcDogJ3dyYXAnLFxuICAgIH0pLFxuICAgIHN0YXRzOiBjc3Moe1xuICAgICAgbWFyZ2luOiAnMHB4JyxcbiAgICAgIGNvbG9yOiB0aGVtZS5jb2xvcnMudGV4dC5zZWNvbmRhcnksXG4gICAgICBmb250U2l6ZTogdGhlbWUudHlwb2dyYXBoeS5ib2R5U21hbGwuZm9udFNpemUsXG4gICAgfSksXG4gICAgdG9vbHRpcDogY3NzKHtcbiAgICAgIG1hcmdpblJpZ2h0OiB0aGVtZS5zcGFjaW5nKDAuMjUpLFxuICAgIH0pLFxuICB9O1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/prometheus/querybuilder/shared/QueryOptionGroup.tsx\n");

/***/ }),

/***/ "./public/app/plugins/datasource/prometheus/querybuilder/shared/hooks/useFlag.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   lokiQueryEditorExplainKey: () => (/* binding */ lokiQueryEditorExplainKey),\n/* harmony export */   lokiQueryEditorRawQueryKey: () => (/* binding */ lokiQueryEditorRawQueryKey),\n/* harmony export */   promQueryEditorExplainKey: () => (/* binding */ promQueryEditorExplainKey),\n/* harmony export */   promQueryEditorRawQueryKey: () => (/* binding */ promQueryEditorRawQueryKey),\n/* harmony export */   useFlag: () => (/* binding */ useFlag)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _core_store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./public/app/core/store.ts\");\n\n\n\nconst promQueryEditorExplainKey = \"PrometheusQueryEditorExplainDefault\";\nconst promQueryEditorRawQueryKey = \"PrometheusQueryEditorRawQueryDefault\";\nconst lokiQueryEditorExplainKey = \"LokiQueryEditorExplainDefault\";\nconst lokiQueryEditorRawQueryKey = \"LokiQueryEditorRawQueryDefault\";\nfunction getFlagValue(key, defaultValue = false) {\n  const val = _core_store__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get(key);\n  return val === void 0 ? defaultValue : Boolean(parseInt(val, 10));\n}\nfunction setFlagValue(key, value) {\n  _core_store__WEBPACK_IMPORTED_MODULE_1__[\"default\"].set(key, value ? \"1\" : \"0\");\n}\nfunction useFlag(key, defaultValue = false) {\n  const [flag, updateFlag] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(getFlagValue(key, defaultValue));\n  const setter = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (value) => {\n      setFlagValue(key, value);\n      updateFlag(value);\n    },\n    [key]\n  );\n  return { flag, setFlag: setter };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvYXBwL3BsdWdpbnMvZGF0YXNvdXJjZS9wcm9tZXRoZXVzL3F1ZXJ5YnVpbGRlci9zaGFyZWQvaG9va3MvdXNlRmxhZy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBc0M7QUFFcEI7QUFFWCxNQUFNLDRCQUE0QjtBQUNsQyxNQUFNLDZCQUE2QjtBQUNuQyxNQUFNLDRCQUE0QjtBQUNsQyxNQUFNLDZCQUE2QjtBQVExQyxTQUFTLGFBQWEsS0FBdUIsZUFBZSxPQUFnQjtBQUMxRSxRQUFNLE1BQU0sbURBQUssQ0FBQyxJQUFJLEdBQUc7QUFDekIsU0FBTyxRQUFRLFNBQVksZUFBZSxRQUFRLFNBQVMsS0FBSyxFQUFFLENBQUM7QUFDckU7QUFFQSxTQUFTLGFBQWEsS0FBdUIsT0FBZ0I7QUFDM0QscURBQUssQ0FBQyxJQUFJLEtBQUssUUFBUSxNQUFNLEdBQUc7QUFDbEM7QUFTTyxTQUFTLFFBQVEsS0FBdUIsZUFBZSxPQUE4QjtBQUMxRixRQUFNLENBQUMsTUFBTSxVQUFVLElBQUksK0NBQVEsQ0FBQyxhQUFhLEtBQUssWUFBWSxDQUFDO0FBQ25FLFFBQU0sU0FBUyxrREFBVztBQUFYLElBQ2IsQ0FBQyxVQUFtQjtBQUNsQixtQkFBYSxLQUFLLEtBQUs7QUFDdkIsaUJBQVcsS0FBSztBQUFBLElBQ2xCO0FBQUEsSUFDQSxDQUFDLEdBQUc7QUFBQSxFQUNOO0FBRUEsU0FBTyxFQUFFLE1BQU0sU0FBUyxPQUFPO0FBQ2pDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ3JhZmFuYS8uL3B1YmxpYy9hcHAvcGx1Z2lucy9kYXRhc291cmNlL3Byb21ldGhldXMvcXVlcnlidWlsZGVyL3NoYXJlZC9ob29rcy91c2VGbGFnLnRzP2Q5ZGIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlQ2FsbGJhY2ssIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgc3RvcmUgZnJvbSAnLi4vLi4vLi4vLi4vLi4vLi4vY29yZS9zdG9yZSc7XG5cbmV4cG9ydCBjb25zdCBwcm9tUXVlcnlFZGl0b3JFeHBsYWluS2V5ID0gJ1Byb21ldGhldXNRdWVyeUVkaXRvckV4cGxhaW5EZWZhdWx0JztcbmV4cG9ydCBjb25zdCBwcm9tUXVlcnlFZGl0b3JSYXdRdWVyeUtleSA9ICdQcm9tZXRoZXVzUXVlcnlFZGl0b3JSYXdRdWVyeURlZmF1bHQnO1xuZXhwb3J0IGNvbnN0IGxva2lRdWVyeUVkaXRvckV4cGxhaW5LZXkgPSAnTG9raVF1ZXJ5RWRpdG9yRXhwbGFpbkRlZmF1bHQnO1xuZXhwb3J0IGNvbnN0IGxva2lRdWVyeUVkaXRvclJhd1F1ZXJ5S2V5ID0gJ0xva2lRdWVyeUVkaXRvclJhd1F1ZXJ5RGVmYXVsdCc7XG5cbmV4cG9ydCB0eXBlIFF1ZXJ5RWRpdG9yRmxhZ3MgPVxuICB8IHR5cGVvZiBwcm9tUXVlcnlFZGl0b3JFeHBsYWluS2V5XG4gIHwgdHlwZW9mIHByb21RdWVyeUVkaXRvclJhd1F1ZXJ5S2V5XG4gIHwgdHlwZW9mIGxva2lRdWVyeUVkaXRvckV4cGxhaW5LZXlcbiAgfCB0eXBlb2YgbG9raVF1ZXJ5RWRpdG9yUmF3UXVlcnlLZXk7XG5cbmZ1bmN0aW9uIGdldEZsYWdWYWx1ZShrZXk6IFF1ZXJ5RWRpdG9yRmxhZ3MsIGRlZmF1bHRWYWx1ZSA9IGZhbHNlKTogYm9vbGVhbiB7XG4gIGNvbnN0IHZhbCA9IHN0b3JlLmdldChrZXkpO1xuICByZXR1cm4gdmFsID09PSB1bmRlZmluZWQgPyBkZWZhdWx0VmFsdWUgOiBCb29sZWFuKHBhcnNlSW50KHZhbCwgMTApKTtcbn1cblxuZnVuY3Rpb24gc2V0RmxhZ1ZhbHVlKGtleTogUXVlcnlFZGl0b3JGbGFncywgdmFsdWU6IGJvb2xlYW4pIHtcbiAgc3RvcmUuc2V0KGtleSwgdmFsdWUgPyAnMScgOiAnMCcpO1xufVxuXG50eXBlIFVzZUZsYWdIb29rUmV0dXJuVHlwZSA9IHsgZmxhZzogYm9vbGVhbjsgc2V0RmxhZzogKHZhbDogYm9vbGVhbikgPT4gdm9pZCB9O1xuXG4vKipcbiAqXG4gKiBVc2UgYW5kIHN0b3JlIHZhbHVlIG9mIGV4cGxhaW4vcmF3cXVlcnkgc3dpdGNoIGluIGxvY2FsIHN0b3JhZ2UuXG4gKiBOZWVkcyB0byBiZSBhIGhvb2sgd2l0aCBsb2NhbCBzdGF0ZSB0byB0cmlnZ2VyIHJlLXJlbmRlcnMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VGbGFnKGtleTogUXVlcnlFZGl0b3JGbGFncywgZGVmYXVsdFZhbHVlID0gZmFsc2UpOiBVc2VGbGFnSG9va1JldHVyblR5cGUge1xuICBjb25zdCBbZmxhZywgdXBkYXRlRmxhZ10gPSB1c2VTdGF0ZShnZXRGbGFnVmFsdWUoa2V5LCBkZWZhdWx0VmFsdWUpKTtcbiAgY29uc3Qgc2V0dGVyID0gdXNlQ2FsbGJhY2soXG4gICAgKHZhbHVlOiBib29sZWFuKSA9PiB7XG4gICAgICBzZXRGbGFnVmFsdWUoa2V5LCB2YWx1ZSk7XG4gICAgICB1cGRhdGVGbGFnKHZhbHVlKTtcbiAgICB9LFxuICAgIFtrZXldXG4gICk7XG5cbiAgcmV0dXJuIHsgZmxhZywgc2V0RmxhZzogc2V0dGVyIH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./public/app/plugins/datasource/prometheus/querybuilder/shared/hooks/useFlag.ts\n");

/***/ }),

/***/ "./.yarn/cache/rxjs-npm-7.8.0-722f1c7172-61b4d4fd32.zip/node_modules/rxjs/dist/esm5/internal/observable/dom/WebSocketSubject.js":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WebSocketSubject: () => (/* binding */ WebSocketSubject)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/tslib-npm-2.3.1-0e21e18015-de17a98d46.zip/node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./.yarn/cache/rxjs-npm-7.8.0-722f1c7172-61b4d4fd32.zip/node_modules/rxjs/dist/esm5/internal/Subject.js\");\n/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./.yarn/cache/rxjs-npm-7.8.0-722f1c7172-61b4d4fd32.zip/node_modules/rxjs/dist/esm5/internal/Subscriber.js\");\n/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/cache/rxjs-npm-7.8.0-722f1c7172-61b4d4fd32.zip/node_modules/rxjs/dist/esm5/internal/Observable.js\");\n/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./.yarn/cache/rxjs-npm-7.8.0-722f1c7172-61b4d4fd32.zip/node_modules/rxjs/dist/esm5/internal/Subscription.js\");\n/* harmony import */ var _ReplaySubject__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./.yarn/cache/rxjs-npm-7.8.0-722f1c7172-61b4d4fd32.zip/node_modules/rxjs/dist/esm5/internal/ReplaySubject.js\");\n\n\n\n\n\n\nvar DEFAULT_WEBSOCKET_CONFIG = {\n    url: '',\n    deserializer: function (e) { return JSON.parse(e.data); },\n    serializer: function (value) { return JSON.stringify(value); },\n};\nvar WEBSOCKETSUBJECT_INVALID_ERROR_OBJECT = 'WebSocketSubject.error must be called with an object with an error code, and an optional reason: { code: number, reason: string }';\nvar WebSocketSubject = (function (_super) {\n    (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__extends)(WebSocketSubject, _super);\n    function WebSocketSubject(urlConfigOrSource, destination) {\n        var _this = _super.call(this) || this;\n        _this._socket = null;\n        if (urlConfigOrSource instanceof _Observable__WEBPACK_IMPORTED_MODULE_1__.Observable) {\n            _this.destination = destination;\n            _this.source = urlConfigOrSource;\n        }\n        else {\n            var config = (_this._config = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, DEFAULT_WEBSOCKET_CONFIG));\n            _this._output = new _Subject__WEBPACK_IMPORTED_MODULE_2__.Subject();\n            if (typeof urlConfigOrSource === 'string') {\n                config.url = urlConfigOrSource;\n            }\n            else {\n                for (var key in urlConfigOrSource) {\n                    if (urlConfigOrSource.hasOwnProperty(key)) {\n                        config[key] = urlConfigOrSource[key];\n                    }\n                }\n            }\n            if (!config.WebSocketCtor && WebSocket) {\n                config.WebSocketCtor = WebSocket;\n            }\n            else if (!config.WebSocketCtor) {\n                throw new Error('no WebSocket constructor can be found');\n            }\n            _this.destination = new _ReplaySubject__WEBPACK_IMPORTED_MODULE_3__.ReplaySubject();\n        }\n        return _this;\n    }\n    WebSocketSubject.prototype.lift = function (operator) {\n        var sock = new WebSocketSubject(this._config, this.destination);\n        sock.operator = operator;\n        sock.source = this;\n        return sock;\n    };\n    WebSocketSubject.prototype._resetState = function () {\n        this._socket = null;\n        if (!this.source) {\n            this.destination = new _ReplaySubject__WEBPACK_IMPORTED_MODULE_3__.ReplaySubject();\n        }\n        this._output = new _Subject__WEBPACK_IMPORTED_MODULE_2__.Subject();\n    };\n    WebSocketSubject.prototype.multiplex = function (subMsg, unsubMsg, messageFilter) {\n        var self = this;\n        return new _Observable__WEBPACK_IMPORTED_MODULE_1__.Observable(function (observer) {\n            try {\n                self.next(subMsg());\n            }\n            catch (err) {\n                observer.error(err);\n            }\n            var subscription = self.subscribe({\n                next: function (x) {\n                    try {\n                        if (messageFilter(x)) {\n                            observer.next(x);\n                        }\n                    }\n                    catch (err) {\n                        observer.error(err);\n                    }\n                },\n                error: function (err) { return observer.error(err); },\n                complete: function () { return observer.complete(); },\n            });\n            return function () {\n                try {\n                    self.next(unsubMsg());\n                }\n                catch (err) {\n                    observer.error(err);\n                }\n                subscription.unsubscribe();\n            };\n        });\n    };\n    WebSocketSubject.prototype._connectSocket = function () {\n        var _this = this;\n        var _a = this._config, WebSocketCtor = _a.WebSocketCtor, protocol = _a.protocol, url = _a.url, binaryType = _a.binaryType;\n        var observer = this._output;\n        var socket = null;\n        try {\n            socket = protocol ? new WebSocketCtor(url, protocol) : new WebSocketCtor(url);\n            this._socket = socket;\n            if (binaryType) {\n                this._socket.binaryType = binaryType;\n            }\n        }\n        catch (e) {\n            observer.error(e);\n            return;\n        }\n        var subscription = new _Subscription__WEBPACK_IMPORTED_MODULE_4__.Subscription(function () {\n            _this._socket = null;\n            if (socket && socket.readyState === 1) {\n                socket.close();\n            }\n        });\n        socket.onopen = function (evt) {\n            var _socket = _this._socket;\n            if (!_socket) {\n                socket.close();\n                _this._resetState();\n                return;\n            }\n            var openObserver = _this._config.openObserver;\n            if (openObserver) {\n                openObserver.next(evt);\n            }\n            var queue = _this.destination;\n            _this.destination = _Subscriber__WEBPACK_IMPORTED_MODULE_5__.Subscriber.create(function (x) {\n                if (socket.readyState === 1) {\n                    try {\n                        var serializer = _this._config.serializer;\n                        socket.send(serializer(x));\n                    }\n                    catch (e) {\n                        _this.destination.error(e);\n                    }\n                }\n            }, function (err) {\n                var closingObserver = _this._config.closingObserver;\n                if (closingObserver) {\n                    closingObserver.next(undefined);\n                }\n                if (err && err.code) {\n                    socket.close(err.code, err.reason);\n                }\n                else {\n                    observer.error(new TypeError(WEBSOCKETSUBJECT_INVALID_ERROR_OBJECT));\n                }\n                _this._resetState();\n            }, function () {\n                var closingObserver = _this._config.closingObserver;\n                if (closingObserver) {\n                    closingObserver.next(undefined);\n                }\n                socket.close();\n                _this._resetState();\n            });\n            if (queue && queue instanceof _ReplaySubject__WEBPACK_IMPORTED_MODULE_3__.ReplaySubject) {\n                subscription.add(queue.subscribe(_this.destination));\n            }\n        };\n        socket.onerror = function (e) {\n            _this._resetState();\n            observer.error(e);\n        };\n        socket.onclose = function (e) {\n            if (socket === _this._socket) {\n                _this._resetState();\n            }\n            var closeObserver = _this._config.closeObserver;\n            if (closeObserver) {\n                closeObserver.next(e);\n            }\n            if (e.wasClean) {\n                observer.complete();\n            }\n            else {\n                observer.error(e);\n            }\n        };\n        socket.onmessage = function (e) {\n            try {\n                var deserializer = _this._config.deserializer;\n                observer.next(deserializer(e));\n            }\n            catch (err) {\n                observer.error(err);\n            }\n        };\n    };\n    WebSocketSubject.prototype._subscribe = function (subscriber) {\n        var _this = this;\n        var source = this.source;\n        if (source) {\n            return source.subscribe(subscriber);\n        }\n        if (!this._socket) {\n            this._connectSocket();\n        }\n        this._output.subscribe(subscriber);\n        subscriber.add(function () {\n            var _socket = _this._socket;\n            if (_this._output.observers.length === 0) {\n                if (_socket && (_socket.readyState === 1 || _socket.readyState === 0)) {\n                    _socket.close();\n                }\n                _this._resetState();\n            }\n        });\n        return subscriber;\n    };\n    WebSocketSubject.prototype.unsubscribe = function () {\n        var _socket = this._socket;\n        if (_socket && (_socket.readyState === 1 || _socket.readyState === 0)) {\n            _socket.close();\n        }\n        this._resetState();\n        _super.prototype.unsubscribe.call(this);\n    };\n    return WebSocketSubject;\n}(_Subject__WEBPACK_IMPORTED_MODULE_2__.AnonymousSubject));\n\n//# sourceMappingURL=WebSocketSubject.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./.yarn/cache/rxjs-npm-7.8.0-722f1c7172-61b4d4fd32.zip/node_modules/rxjs/dist/esm5/internal/observable/dom/WebSocketSubject.js\n");

/***/ }),

/***/ "./.yarn/cache/rxjs-npm-7.8.0-722f1c7172-61b4d4fd32.zip/node_modules/rxjs/dist/esm5/internal/observable/dom/webSocket.js":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   webSocket: () => (/* binding */ webSocket)\n/* harmony export */ });\n/* harmony import */ var _WebSocketSubject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/rxjs-npm-7.8.0-722f1c7172-61b4d4fd32.zip/node_modules/rxjs/dist/esm5/internal/observable/dom/WebSocketSubject.js\");\n\nfunction webSocket(urlConfigOrSource) {\n    return new _WebSocketSubject__WEBPACK_IMPORTED_MODULE_0__.WebSocketSubject(urlConfigOrSource);\n}\n//# sourceMappingURL=webSocket.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi8ueWFybi9jYWNoZS9yeGpzLW5wbS03LjguMC03MjJmMWM3MTcyLTYxYjRkNGZkMzIuemlwL25vZGVfbW9kdWxlcy9yeGpzL2Rpc3QvZXNtNS9pbnRlcm5hbC9vYnNlcnZhYmxlL2RvbS93ZWJTb2NrZXQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBc0Q7QUFDL0M7QUFDUCxlQUFlLCtEQUFnQjtBQUMvQjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ3JhZmFuYS8uLy55YXJuL2NhY2hlL3J4anMtbnBtLTcuOC4wLTcyMmYxYzcxNzItNjFiNGQ0ZmQzMi56aXAvbm9kZV9tb2R1bGVzL3J4anMvZGlzdC9lc201L2ludGVybmFsL29ic2VydmFibGUvZG9tL3dlYlNvY2tldC5qcz85Nzc1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFdlYlNvY2tldFN1YmplY3QgfSBmcm9tICcuL1dlYlNvY2tldFN1YmplY3QnO1xuZXhwb3J0IGZ1bmN0aW9uIHdlYlNvY2tldCh1cmxDb25maWdPclNvdXJjZSkge1xuICAgIHJldHVybiBuZXcgV2ViU29ja2V0U3ViamVjdCh1cmxDb25maWdPclNvdXJjZSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD13ZWJTb2NrZXQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./.yarn/cache/rxjs-npm-7.8.0-722f1c7172-61b4d4fd32.zip/node_modules/rxjs/dist/esm5/internal/observable/dom/webSocket.js\n");

/***/ }),

/***/ "./.yarn/cache/uuid-npm-9.0.0-46c41e3e43-8dd2c83c43.zip/node_modules/uuid/dist/esm-browser/parse.js":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/uuid-npm-9.0.0-46c41e3e43-8dd2c83c43.zip/node_modules/uuid/dist/esm-browser/validate.js\");\n\n\nfunction parse(uuid) {\n  if (!(0,_validate_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (parse);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi8ueWFybi9jYWNoZS91dWlkLW5wbS05LjAuMC00NmM0MWUzZTQzLThkZDJjODNjNDMuemlwL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvcGFyc2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBcUM7O0FBRXJDO0FBQ0EsT0FBTyx3REFBUTtBQUNmO0FBQ0E7O0FBRUE7QUFDQSxrQ0FBa0M7O0FBRWxDO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjs7QUFFckI7QUFDQSxxQkFBcUI7O0FBRXJCO0FBQ0EscUJBQXFCOztBQUVyQjtBQUNBLHFCQUFxQjtBQUNyQjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGlFQUFlLEtBQUsiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ncmFmYW5hLy4vLnlhcm4vY2FjaGUvdXVpZC1ucG0tOS4wLjAtNDZjNDFlM2U0My04ZGQyYzgzYzQzLnppcC9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3BhcnNlLmpzP2E2YzkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHZhbGlkYXRlIGZyb20gJy4vdmFsaWRhdGUuanMnO1xuXG5mdW5jdGlvbiBwYXJzZSh1dWlkKSB7XG4gIGlmICghdmFsaWRhdGUodXVpZCkpIHtcbiAgICB0aHJvdyBUeXBlRXJyb3IoJ0ludmFsaWQgVVVJRCcpO1xuICB9XG5cbiAgbGV0IHY7XG4gIGNvbnN0IGFyciA9IG5ldyBVaW50OEFycmF5KDE2KTsgLy8gUGFyc2UgIyMjIyMjIyMtLi4uLi0uLi4uLS4uLi4tLi4uLi4uLi4uLi4uXG5cbiAgYXJyWzBdID0gKHYgPSBwYXJzZUludCh1dWlkLnNsaWNlKDAsIDgpLCAxNikpID4+PiAyNDtcbiAgYXJyWzFdID0gdiA+Pj4gMTYgJiAweGZmO1xuICBhcnJbMl0gPSB2ID4+PiA4ICYgMHhmZjtcbiAgYXJyWzNdID0gdiAmIDB4ZmY7IC8vIFBhcnNlIC4uLi4uLi4uLSMjIyMtLi4uLi0uLi4uLS4uLi4uLi4uLi4uLlxuXG4gIGFycls0XSA9ICh2ID0gcGFyc2VJbnQodXVpZC5zbGljZSg5LCAxMyksIDE2KSkgPj4+IDg7XG4gIGFycls1XSA9IHYgJiAweGZmOyAvLyBQYXJzZSAuLi4uLi4uLi0uLi4uLSMjIyMtLi4uLi0uLi4uLi4uLi4uLi5cblxuICBhcnJbNl0gPSAodiA9IHBhcnNlSW50KHV1aWQuc2xpY2UoMTQsIDE4KSwgMTYpKSA+Pj4gODtcbiAgYXJyWzddID0gdiAmIDB4ZmY7IC8vIFBhcnNlIC4uLi4uLi4uLS4uLi4tLi4uLi0jIyMjLS4uLi4uLi4uLi4uLlxuXG4gIGFycls4XSA9ICh2ID0gcGFyc2VJbnQodXVpZC5zbGljZSgxOSwgMjMpLCAxNikpID4+PiA4O1xuICBhcnJbOV0gPSB2ICYgMHhmZjsgLy8gUGFyc2UgLi4uLi4uLi4tLi4uLi0uLi4uLS4uLi4tIyMjIyMjIyMjIyMjXG4gIC8vIChVc2UgXCIvXCIgdG8gYXZvaWQgMzItYml0IHRydW5jYXRpb24gd2hlbiBiaXQtc2hpZnRpbmcgaGlnaC1vcmRlciBieXRlcylcblxuICBhcnJbMTBdID0gKHYgPSBwYXJzZUludCh1dWlkLnNsaWNlKDI0LCAzNiksIDE2KSkgLyAweDEwMDAwMDAwMDAwICYgMHhmZjtcbiAgYXJyWzExXSA9IHYgLyAweDEwMDAwMDAwMCAmIDB4ZmY7XG4gIGFyclsxMl0gPSB2ID4+PiAyNCAmIDB4ZmY7XG4gIGFyclsxM10gPSB2ID4+PiAxNiAmIDB4ZmY7XG4gIGFyclsxNF0gPSB2ID4+PiA4ICYgMHhmZjtcbiAgYXJyWzE1XSA9IHYgJiAweGZmO1xuICByZXR1cm4gYXJyO1xufVxuXG5leHBvcnQgZGVmYXVsdCBwYXJzZTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./.yarn/cache/uuid-npm-9.0.0-46c41e3e43-8dd2c83c43.zip/node_modules/uuid/dist/esm-browser/parse.js\n");

/***/ }),

/***/ "./.yarn/cache/uuid-npm-9.0.0-46c41e3e43-8dd2c83c43.zip/node_modules/uuid/dist/esm-browser/sha1.js":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  const K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  const H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  const l = bytes.length / 4 + 2;\n  const N = Math.ceil(l / 16);\n  const M = new Array(N);\n\n  for (let i = 0; i < N; ++i) {\n    const arr = new Uint32Array(16);\n\n    for (let j = 0; j < 16; ++j) {\n      arr[j] = bytes[i * 64 + j * 4] << 24 | bytes[i * 64 + j * 4 + 1] << 16 | bytes[i * 64 + j * 4 + 2] << 8 | bytes[i * 64 + j * 4 + 3];\n    }\n\n    M[i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (let i = 0; i < N; ++i) {\n    const W = new Uint32Array(80);\n\n    for (let t = 0; t < 16; ++t) {\n      W[t] = M[i][t];\n    }\n\n    for (let t = 16; t < 80; ++t) {\n      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n    }\n\n    let a = H[0];\n    let b = H[1];\n    let c = H[2];\n    let d = H[3];\n    let e = H[4];\n\n    for (let t = 0; t < 80; ++t) {\n      const s = Math.floor(t / 20);\n      const T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (sha1);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi8ueWFybi9jYWNoZS91dWlkLW5wbS05LjAuMC00NmM0MWUzZTQzLThkZDJjODNjNDMuemlwL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvc2hhMS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EscURBQXFEOztBQUVyRDs7QUFFQSxvQkFBb0IsZ0JBQWdCO0FBQ3BDO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGtCQUFrQixPQUFPO0FBQ3pCOztBQUVBLG9CQUFvQixRQUFRO0FBQzVCO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsa0JBQWtCLE9BQU87QUFDekI7O0FBRUEsb0JBQW9CLFFBQVE7QUFDNUI7QUFDQTs7QUFFQSxxQkFBcUIsUUFBUTtBQUM3QjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsb0JBQW9CLFFBQVE7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxpRUFBZSxJQUFJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ3JhZmFuYS8uLy55YXJuL2NhY2hlL3V1aWQtbnBtLTkuMC4wLTQ2YzQxZTNlNDMtOGRkMmM4M2M0My56aXAvbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tYnJvd3Nlci9zaGExLmpzPzY2NTQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQWRhcHRlZCBmcm9tIENocmlzIFZlbmVzcycgU0hBMSBjb2RlIGF0XG4vLyBodHRwOi8vd3d3Lm1vdmFibGUtdHlwZS5jby51ay9zY3JpcHRzL3NoYTEuaHRtbFxuZnVuY3Rpb24gZihzLCB4LCB5LCB6KSB7XG4gIHN3aXRjaCAocykge1xuICAgIGNhc2UgMDpcbiAgICAgIHJldHVybiB4ICYgeSBeIH54ICYgejtcblxuICAgIGNhc2UgMTpcbiAgICAgIHJldHVybiB4IF4geSBeIHo7XG5cbiAgICBjYXNlIDI6XG4gICAgICByZXR1cm4geCAmIHkgXiB4ICYgeiBeIHkgJiB6O1xuXG4gICAgY2FzZSAzOlxuICAgICAgcmV0dXJuIHggXiB5IF4gejtcbiAgfVxufVxuXG5mdW5jdGlvbiBST1RMKHgsIG4pIHtcbiAgcmV0dXJuIHggPDwgbiB8IHggPj4+IDMyIC0gbjtcbn1cblxuZnVuY3Rpb24gc2hhMShieXRlcykge1xuICBjb25zdCBLID0gWzB4NWE4Mjc5OTksIDB4NmVkOWViYTEsIDB4OGYxYmJjZGMsIDB4Y2E2MmMxZDZdO1xuICBjb25zdCBIID0gWzB4Njc0NTIzMDEsIDB4ZWZjZGFiODksIDB4OThiYWRjZmUsIDB4MTAzMjU0NzYsIDB4YzNkMmUxZjBdO1xuXG4gIGlmICh0eXBlb2YgYnl0ZXMgPT09ICdzdHJpbmcnKSB7XG4gICAgY29uc3QgbXNnID0gdW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KGJ5dGVzKSk7IC8vIFVURjggZXNjYXBlXG5cbiAgICBieXRlcyA9IFtdO1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBtc2cubGVuZ3RoOyArK2kpIHtcbiAgICAgIGJ5dGVzLnB1c2gobXNnLmNoYXJDb2RlQXQoaSkpO1xuICAgIH1cbiAgfSBlbHNlIGlmICghQXJyYXkuaXNBcnJheShieXRlcykpIHtcbiAgICAvLyBDb252ZXJ0IEFycmF5LWxpa2UgdG8gQXJyYXlcbiAgICBieXRlcyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGJ5dGVzKTtcbiAgfVxuXG4gIGJ5dGVzLnB1c2goMHg4MCk7XG4gIGNvbnN0IGwgPSBieXRlcy5sZW5ndGggLyA0ICsgMjtcbiAgY29uc3QgTiA9IE1hdGguY2VpbChsIC8gMTYpO1xuICBjb25zdCBNID0gbmV3IEFycmF5KE4pO1xuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgTjsgKytpKSB7XG4gICAgY29uc3QgYXJyID0gbmV3IFVpbnQzMkFycmF5KDE2KTtcblxuICAgIGZvciAobGV0IGogPSAwOyBqIDwgMTY7ICsraikge1xuICAgICAgYXJyW2pdID0gYnl0ZXNbaSAqIDY0ICsgaiAqIDRdIDw8IDI0IHwgYnl0ZXNbaSAqIDY0ICsgaiAqIDQgKyAxXSA8PCAxNiB8IGJ5dGVzW2kgKiA2NCArIGogKiA0ICsgMl0gPDwgOCB8IGJ5dGVzW2kgKiA2NCArIGogKiA0ICsgM107XG4gICAgfVxuXG4gICAgTVtpXSA9IGFycjtcbiAgfVxuXG4gIE1bTiAtIDFdWzE0XSA9IChieXRlcy5sZW5ndGggLSAxKSAqIDggLyBNYXRoLnBvdygyLCAzMik7XG4gIE1bTiAtIDFdWzE0XSA9IE1hdGguZmxvb3IoTVtOIC0gMV1bMTRdKTtcbiAgTVtOIC0gMV1bMTVdID0gKGJ5dGVzLmxlbmd0aCAtIDEpICogOCAmIDB4ZmZmZmZmZmY7XG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBOOyArK2kpIHtcbiAgICBjb25zdCBXID0gbmV3IFVpbnQzMkFycmF5KDgwKTtcblxuICAgIGZvciAobGV0IHQgPSAwOyB0IDwgMTY7ICsrdCkge1xuICAgICAgV1t0XSA9IE1baV1bdF07XG4gICAgfVxuXG4gICAgZm9yIChsZXQgdCA9IDE2OyB0IDwgODA7ICsrdCkge1xuICAgICAgV1t0XSA9IFJPVEwoV1t0IC0gM10gXiBXW3QgLSA4XSBeIFdbdCAtIDE0XSBeIFdbdCAtIDE2XSwgMSk7XG4gICAgfVxuXG4gICAgbGV0IGEgPSBIWzBdO1xuICAgIGxldCBiID0gSFsxXTtcbiAgICBsZXQgYyA9IEhbMl07XG4gICAgbGV0IGQgPSBIWzNdO1xuICAgIGxldCBlID0gSFs0XTtcblxuICAgIGZvciAobGV0IHQgPSAwOyB0IDwgODA7ICsrdCkge1xuICAgICAgY29uc3QgcyA9IE1hdGguZmxvb3IodCAvIDIwKTtcbiAgICAgIGNvbnN0IFQgPSBST1RMKGEsIDUpICsgZihzLCBiLCBjLCBkKSArIGUgKyBLW3NdICsgV1t0XSA+Pj4gMDtcbiAgICAgIGUgPSBkO1xuICAgICAgZCA9IGM7XG4gICAgICBjID0gUk9UTChiLCAzMCkgPj4+IDA7XG4gICAgICBiID0gYTtcbiAgICAgIGEgPSBUO1xuICAgIH1cblxuICAgIEhbMF0gPSBIWzBdICsgYSA+Pj4gMDtcbiAgICBIWzFdID0gSFsxXSArIGIgPj4+IDA7XG4gICAgSFsyXSA9IEhbMl0gKyBjID4+PiAwO1xuICAgIEhbM10gPSBIWzNdICsgZCA+Pj4gMDtcbiAgICBIWzRdID0gSFs0XSArIGUgPj4+IDA7XG4gIH1cblxuICByZXR1cm4gW0hbMF0gPj4gMjQgJiAweGZmLCBIWzBdID4+IDE2ICYgMHhmZiwgSFswXSA+PiA4ICYgMHhmZiwgSFswXSAmIDB4ZmYsIEhbMV0gPj4gMjQgJiAweGZmLCBIWzFdID4+IDE2ICYgMHhmZiwgSFsxXSA+PiA4ICYgMHhmZiwgSFsxXSAmIDB4ZmYsIEhbMl0gPj4gMjQgJiAweGZmLCBIWzJdID4+IDE2ICYgMHhmZiwgSFsyXSA+PiA4ICYgMHhmZiwgSFsyXSAmIDB4ZmYsIEhbM10gPj4gMjQgJiAweGZmLCBIWzNdID4+IDE2ICYgMHhmZiwgSFszXSA+PiA4ICYgMHhmZiwgSFszXSAmIDB4ZmYsIEhbNF0gPj4gMjQgJiAweGZmLCBIWzRdID4+IDE2ICYgMHhmZiwgSFs0XSA+PiA4ICYgMHhmZiwgSFs0XSAmIDB4ZmZdO1xufVxuXG5leHBvcnQgZGVmYXVsdCBzaGExOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./.yarn/cache/uuid-npm-9.0.0-46c41e3e43-8dd2c83c43.zip/node_modules/uuid/dist/esm-browser/sha1.js\n");

/***/ }),

/***/ "./.yarn/cache/uuid-npm-9.0.0-46c41e3e43-8dd2c83c43.zip/node_modules/uuid/dist/esm-browser/v35.js":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DNS: () => (/* binding */ DNS),\n/* harmony export */   URL: () => (/* binding */ URL),\n/* harmony export */   \"default\": () => (/* binding */ v35)\n/* harmony export */ });\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/cache/uuid-npm-9.0.0-46c41e3e43-8dd2c83c43.zip/node_modules/uuid/dist/esm-browser/stringify.js\");\n/* harmony import */ var _parse_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/uuid-npm-9.0.0-46c41e3e43-8dd2c83c43.zip/node_modules/uuid/dist/esm-browser/parse.js\");\n\n\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nconst DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nconst URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nfunction v35(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    var _namespace;\n\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = (0,_parse_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(namespace);\n    }\n\n    if (((_namespace = namespace) === null || _namespace === void 0 ? void 0 : _namespace.length) !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return (0,_stringify_js__WEBPACK_IMPORTED_MODULE_1__.unsafeStringify)(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi8ueWFybi9jYWNoZS91dWlkLW5wbS05LjAuMC00NmM0MWUzZTQzLThkZDJjODNjNDMuemlwL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvdjM1LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQWlEO0FBQ2xCOztBQUUvQjtBQUNBLDJDQUEyQzs7QUFFM0M7O0FBRUEsa0JBQWtCLGdCQUFnQjtBQUNsQztBQUNBOztBQUVBO0FBQ0E7O0FBRU87QUFDQTtBQUNRO0FBQ2Y7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxrQkFBa0IscURBQUs7QUFDdkI7O0FBRUE7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxzQkFBc0IsUUFBUTtBQUM5QjtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsV0FBVyw4REFBZTtBQUMxQixJQUFJOzs7QUFHSjtBQUNBLDhCQUE4QjtBQUM5QixJQUFJLGVBQWU7OztBQUduQjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2dyYWZhbmEvLi8ueWFybi9jYWNoZS91dWlkLW5wbS05LjAuMC00NmM0MWUzZTQzLThkZDJjODNjNDMuemlwL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvdjM1LmpzP2EyOTYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdW5zYWZlU3RyaW5naWZ5IH0gZnJvbSAnLi9zdHJpbmdpZnkuanMnO1xuaW1wb3J0IHBhcnNlIGZyb20gJy4vcGFyc2UuanMnO1xuXG5mdW5jdGlvbiBzdHJpbmdUb0J5dGVzKHN0cikge1xuICBzdHIgPSB1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoc3RyKSk7IC8vIFVURjggZXNjYXBlXG5cbiAgY29uc3QgYnl0ZXMgPSBbXTtcblxuICBmb3IgKGxldCBpID0gMDsgaSA8IHN0ci5sZW5ndGg7ICsraSkge1xuICAgIGJ5dGVzLnB1c2goc3RyLmNoYXJDb2RlQXQoaSkpO1xuICB9XG5cbiAgcmV0dXJuIGJ5dGVzO1xufVxuXG5leHBvcnQgY29uc3QgRE5TID0gJzZiYTdiODEwLTlkYWQtMTFkMS04MGI0LTAwYzA0ZmQ0MzBjOCc7XG5leHBvcnQgY29uc3QgVVJMID0gJzZiYTdiODExLTlkYWQtMTFkMS04MGI0LTAwYzA0ZmQ0MzBjOCc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB2MzUobmFtZSwgdmVyc2lvbiwgaGFzaGZ1bmMpIHtcbiAgZnVuY3Rpb24gZ2VuZXJhdGVVVUlEKHZhbHVlLCBuYW1lc3BhY2UsIGJ1Ziwgb2Zmc2V0KSB7XG4gICAgdmFyIF9uYW1lc3BhY2U7XG5cbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJykge1xuICAgICAgdmFsdWUgPSBzdHJpbmdUb0J5dGVzKHZhbHVlKTtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIG5hbWVzcGFjZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgIG5hbWVzcGFjZSA9IHBhcnNlKG5hbWVzcGFjZSk7XG4gICAgfVxuXG4gICAgaWYgKCgoX25hbWVzcGFjZSA9IG5hbWVzcGFjZSkgPT09IG51bGwgfHwgX25hbWVzcGFjZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX25hbWVzcGFjZS5sZW5ndGgpICE9PSAxNikge1xuICAgICAgdGhyb3cgVHlwZUVycm9yKCdOYW1lc3BhY2UgbXVzdCBiZSBhcnJheS1saWtlICgxNiBpdGVyYWJsZSBpbnRlZ2VyIHZhbHVlcywgMC0yNTUpJyk7XG4gICAgfSAvLyBDb21wdXRlIGhhc2ggb2YgbmFtZXNwYWNlIGFuZCB2YWx1ZSwgUGVyIDQuM1xuICAgIC8vIEZ1dHVyZTogVXNlIHNwcmVhZCBzeW50YXggd2hlbiBzdXBwb3J0ZWQgb24gYWxsIHBsYXRmb3JtcywgZS5nLiBgYnl0ZXMgPVxuICAgIC8vIGhhc2hmdW5jKFsuLi5uYW1lc3BhY2UsIC4uLiB2YWx1ZV0pYFxuXG5cbiAgICBsZXQgYnl0ZXMgPSBuZXcgVWludDhBcnJheSgxNiArIHZhbHVlLmxlbmd0aCk7XG4gICAgYnl0ZXMuc2V0KG5hbWVzcGFjZSk7XG4gICAgYnl0ZXMuc2V0KHZhbHVlLCBuYW1lc3BhY2UubGVuZ3RoKTtcbiAgICBieXRlcyA9IGhhc2hmdW5jKGJ5dGVzKTtcbiAgICBieXRlc1s2XSA9IGJ5dGVzWzZdICYgMHgwZiB8IHZlcnNpb247XG4gICAgYnl0ZXNbOF0gPSBieXRlc1s4XSAmIDB4M2YgfCAweDgwO1xuXG4gICAgaWYgKGJ1Zikge1xuICAgICAgb2Zmc2V0ID0gb2Zmc2V0IHx8IDA7XG5cbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMTY7ICsraSkge1xuICAgICAgICBidWZbb2Zmc2V0ICsgaV0gPSBieXRlc1tpXTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGJ1ZjtcbiAgICB9XG5cbiAgICByZXR1cm4gdW5zYWZlU3RyaW5naWZ5KGJ5dGVzKTtcbiAgfSAvLyBGdW5jdGlvbiNuYW1lIGlzIG5vdCBzZXR0YWJsZSBvbiBzb21lIHBsYXRmb3JtcyAoIzI3MClcblxuXG4gIHRyeSB7XG4gICAgZ2VuZXJhdGVVVUlELm5hbWUgPSBuYW1lOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tZW1wdHlcbiAgfSBjYXRjaCAoZXJyKSB7fSAvLyBGb3IgQ29tbW9uSlMgZGVmYXVsdCBleHBvcnQgc3VwcG9ydFxuXG5cbiAgZ2VuZXJhdGVVVUlELkROUyA9IEROUztcbiAgZ2VuZXJhdGVVVUlELlVSTCA9IFVSTDtcbiAgcmV0dXJuIGdlbmVyYXRlVVVJRDtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./.yarn/cache/uuid-npm-9.0.0-46c41e3e43-8dd2c83c43.zip/node_modules/uuid/dist/esm-browser/v35.js\n");

/***/ }),

/***/ "./.yarn/cache/uuid-npm-9.0.0-46c41e3e43-8dd2c83c43.zip/node_modules/uuid/dist/esm-browser/v5.js":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _v35_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/uuid-npm-9.0.0-46c41e3e43-8dd2c83c43.zip/node_modules/uuid/dist/esm-browser/v35.js\");\n/* harmony import */ var _sha1_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./.yarn/cache/uuid-npm-9.0.0-46c41e3e43-8dd2c83c43.zip/node_modules/uuid/dist/esm-browser/sha1.js\");\n\n\nconst v5 = (0,_v35_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('v5', 0x50, _sha1_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v5);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi8ueWFybi9jYWNoZS91dWlkLW5wbS05LjAuMC00NmM0MWUzZTQzLThkZDJjODNjNDMuemlwL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvdjUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTJCO0FBQ0U7QUFDN0IsV0FBVyxtREFBRyxhQUFhLGdEQUFJO0FBQy9CLGlFQUFlLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ncmFmYW5hLy4vLnlhcm4vY2FjaGUvdXVpZC1ucG0tOS4wLjAtNDZjNDFlM2U0My04ZGQyYzgzYzQzLnppcC9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3Y1LmpzPzAwMDciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHYzNSBmcm9tICcuL3YzNS5qcyc7XG5pbXBvcnQgc2hhMSBmcm9tICcuL3NoYTEuanMnO1xuY29uc3QgdjUgPSB2MzUoJ3Y1JywgMHg1MCwgc2hhMSk7XG5leHBvcnQgZGVmYXVsdCB2NTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./.yarn/cache/uuid-npm-9.0.0-46c41e3e43-8dd2c83c43.zip/node_modules/uuid/dist/esm-browser/v5.js\n");

/***/ }),

/***/ "./.yarn/__virtual__/@grafana-lezer-logql-virtual-0b75aafe9e/0/cache/@grafana-lezer-logql-npm-0.1.11-91e9d74a76-6a624b9a8d.zip/node_modules/@grafana/lezer-logql/index.es.js":
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AbsentOverTime: () => (/* binding */ AbsentOverTime),\n/* harmony export */   Add: () => (/* binding */ Add),\n/* harmony export */   And: () => (/* binding */ And),\n/* harmony export */   Avg: () => (/* binding */ Avg),\n/* harmony export */   AvgOverTime: () => (/* binding */ AvgOverTime),\n/* harmony export */   BinOpExpr: () => (/* binding */ BinOpExpr),\n/* harmony export */   BinOpModifier: () => (/* binding */ BinOpModifier),\n/* harmony export */   Bool: () => (/* binding */ Bool),\n/* harmony export */   Bottomk: () => (/* binding */ Bottomk),\n/* harmony export */   By: () => (/* binding */ By),\n/* harmony export */   Bytes: () => (/* binding */ Bytes),\n/* harmony export */   BytesConv: () => (/* binding */ BytesConv),\n/* harmony export */   BytesFilter: () => (/* binding */ BytesFilter),\n/* harmony export */   BytesOverTime: () => (/* binding */ BytesOverTime),\n/* harmony export */   BytesRate: () => (/* binding */ BytesRate),\n/* harmony export */   ConvOp: () => (/* binding */ ConvOp),\n/* harmony export */   Count: () => (/* binding */ Count),\n/* harmony export */   CountOverTime: () => (/* binding */ CountOverTime),\n/* harmony export */   Decolorize: () => (/* binding */ Decolorize),\n/* harmony export */   DecolorizeExpr: () => (/* binding */ DecolorizeExpr),\n/* harmony export */   Div: () => (/* binding */ Div),\n/* harmony export */   Drop: () => (/* binding */ Drop),\n/* harmony export */   DropLabel: () => (/* binding */ DropLabel),\n/* harmony export */   DropLabels: () => (/* binding */ DropLabels),\n/* harmony export */   DropLabelsExpr: () => (/* binding */ DropLabelsExpr),\n/* harmony export */   Duration: () => (/* binding */ Duration),\n/* harmony export */   DurationConv: () => (/* binding */ DurationConv),\n/* harmony export */   DurationFilter: () => (/* binding */ DurationFilter),\n/* harmony export */   DurationSecondsConv: () => (/* binding */ DurationSecondsConv),\n/* harmony export */   Eq: () => (/* binding */ Eq),\n/* harmony export */   Eql: () => (/* binding */ Eql),\n/* harmony export */   Expr: () => (/* binding */ Expr),\n/* harmony export */   Filter: () => (/* binding */ Filter),\n/* harmony export */   FilterOp: () => (/* binding */ FilterOp),\n/* harmony export */   FirstOverTime: () => (/* binding */ FirstOverTime),\n/* harmony export */   GroupLeft: () => (/* binding */ GroupLeft),\n/* harmony export */   GroupRight: () => (/* binding */ GroupRight),\n/* harmony export */   Grouping: () => (/* binding */ Grouping),\n/* harmony export */   GroupingLabel: () => (/* binding */ GroupingLabel),\n/* harmony export */   GroupingLabelList: () => (/* binding */ GroupingLabelList),\n/* harmony export */   GroupingLabels: () => (/* binding */ GroupingLabels),\n/* harmony export */   Gte: () => (/* binding */ Gte),\n/* harmony export */   Gtr: () => (/* binding */ Gtr),\n/* harmony export */   Identifier: () => (/* binding */ Identifier),\n/* harmony export */   Ignoring: () => (/* binding */ Ignoring),\n/* harmony export */   Ip: () => (/* binding */ Ip),\n/* harmony export */   IpLabelFilter: () => (/* binding */ IpLabelFilter),\n/* harmony export */   Json: () => (/* binding */ Json),\n/* harmony export */   JsonExpression: () => (/* binding */ JsonExpression),\n/* harmony export */   JsonExpressionList: () => (/* binding */ JsonExpressionList),\n/* harmony export */   JsonExpressionParser: () => (/* binding */ JsonExpressionParser),\n/* harmony export */   Keep: () => (/* binding */ Keep),\n/* harmony export */   KeepLabel: () => (/* binding */ KeepLabel),\n/* harmony export */   KeepLabels: () => (/* binding */ KeepLabels),\n/* harmony export */   KeepLabelsExpr: () => (/* binding */ KeepLabelsExpr),\n/* harmony export */   LabelFilter: () => (/* binding */ LabelFilter),\n/* harmony export */   LabelFormat: () => (/* binding */ LabelFormat),\n/* harmony export */   LabelFormatExpr: () => (/* binding */ LabelFormatExpr),\n/* harmony export */   LabelFormatMatcher: () => (/* binding */ LabelFormatMatcher),\n/* harmony export */   LabelName: () => (/* binding */ LabelName),\n/* harmony export */   LabelParser: () => (/* binding */ LabelParser),\n/* harmony export */   LabelReplace: () => (/* binding */ LabelReplace),\n/* harmony export */   LabelReplaceExpr: () => (/* binding */ LabelReplaceExpr),\n/* harmony export */   Labels: () => (/* binding */ Labels),\n/* harmony export */   LabelsFormat: () => (/* binding */ LabelsFormat),\n/* harmony export */   LastOverTime: () => (/* binding */ LastOverTime),\n/* harmony export */   LineComment: () => (/* binding */ LineComment),\n/* harmony export */   LineFilter: () => (/* binding */ LineFilter),\n/* harmony export */   LineFilters: () => (/* binding */ LineFilters),\n/* harmony export */   LineFormat: () => (/* binding */ LineFormat),\n/* harmony export */   LineFormatExpr: () => (/* binding */ LineFormatExpr),\n/* harmony export */   LiteralExpr: () => (/* binding */ LiteralExpr),\n/* harmony export */   LogExpr: () => (/* binding */ LogExpr),\n/* harmony export */   LogQL: () => (/* binding */ LogQL),\n/* harmony export */   LogRangeExpr: () => (/* binding */ LogRangeExpr),\n/* harmony export */   Logfmt: () => (/* binding */ Logfmt),\n/* harmony export */   Lss: () => (/* binding */ Lss),\n/* harmony export */   Lte: () => (/* binding */ Lte),\n/* harmony export */   Matcher: () => (/* binding */ Matcher),\n/* harmony export */   Matchers: () => (/* binding */ Matchers),\n/* harmony export */   Max: () => (/* binding */ Max),\n/* harmony export */   MaxOverTime: () => (/* binding */ MaxOverTime),\n/* harmony export */   MetricExpr: () => (/* binding */ MetricExpr),\n/* harmony export */   Min: () => (/* binding */ Min),\n/* harmony export */   MinOverTime: () => (/* binding */ MinOverTime),\n/* harmony export */   Mod: () => (/* binding */ Mod),\n/* harmony export */   Mul: () => (/* binding */ Mul),\n/* harmony export */   Neq: () => (/* binding */ Neq),\n/* harmony export */   Nre: () => (/* binding */ Nre),\n/* harmony export */   Number: () => (/* binding */ Number),\n/* harmony export */   NumberFilter: () => (/* binding */ NumberFilter),\n/* harmony export */   Offset: () => (/* binding */ Offset),\n/* harmony export */   OffsetExpr: () => (/* binding */ OffsetExpr),\n/* harmony export */   On: () => (/* binding */ On),\n/* harmony export */   OnOrIgnoringModifier: () => (/* binding */ OnOrIgnoringModifier),\n/* harmony export */   Or: () => (/* binding */ Or),\n/* harmony export */   Pattern: () => (/* binding */ Pattern),\n/* harmony export */   Pipe: () => (/* binding */ Pipe),\n/* harmony export */   PipeExact: () => (/* binding */ PipeExact),\n/* harmony export */   PipeMatch: () => (/* binding */ PipeMatch),\n/* harmony export */   PipelineExpr: () => (/* binding */ PipelineExpr),\n/* harmony export */   PipelineStage: () => (/* binding */ PipelineStage),\n/* harmony export */   Pow: () => (/* binding */ Pow),\n/* harmony export */   QuantileOverTime: () => (/* binding */ QuantileOverTime),\n/* harmony export */   Range: () => (/* binding */ Range),\n/* harmony export */   RangeAggregationExpr: () => (/* binding */ RangeAggregationExpr),\n/* harmony export */   RangeOp: () => (/* binding */ RangeOp),\n/* harmony export */   Rate: () => (/* binding */ Rate),\n/* harmony export */   RateCounter: () => (/* binding */ RateCounter),\n/* harmony export */   Re: () => (/* binding */ Re),\n/* harmony export */   Regexp: () => (/* binding */ Regexp),\n/* harmony export */   Selector: () => (/* binding */ Selector),\n/* harmony export */   Stddev: () => (/* binding */ Stddev),\n/* harmony export */   StddevOverTime: () => (/* binding */ StddevOverTime),\n/* harmony export */   Stdvar: () => (/* binding */ Stdvar),\n/* harmony export */   StdvarOverTime: () => (/* binding */ StdvarOverTime),\n/* harmony export */   String: () => (/* binding */ String),\n/* harmony export */   Sub: () => (/* binding */ Sub),\n/* harmony export */   Sum: () => (/* binding */ Sum),\n/* harmony export */   SumOverTime: () => (/* binding */ SumOverTime),\n/* harmony export */   Topk: () => (/* binding */ Topk),\n/* harmony export */   UnitFilter: () => (/* binding */ UnitFilter),\n/* harmony export */   Unless: () => (/* binding */ Unless),\n/* harmony export */   Unpack: () => (/* binding */ Unpack),\n/* harmony export */   Unwrap: () => (/* binding */ Unwrap),\n/* harmony export */   UnwrapExpr: () => (/* binding */ UnwrapExpr),\n/* harmony export */   Vector: () => (/* binding */ Vector),\n/* harmony export */   VectorAggregationExpr: () => (/* binding */ VectorAggregationExpr),\n/* harmony export */   VectorExpr: () => (/* binding */ VectorExpr),\n/* harmony export */   VectorOp: () => (/* binding */ VectorOp),\n/* harmony export */   Without: () => (/* binding */ Without),\n/* harmony export */   formatLokiQuery: () => (/* binding */ formatLokiQuery),\n/* harmony export */   parser: () => (/* binding */ parser)\n/* harmony export */ });\n/* harmony import */ var _lezer_lr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./.yarn/cache/@lezer-lr-npm-1.3.3-4ce9e8763b-1804074c79.zip/node_modules/@lezer/lr/dist/index.js\");\n\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst Json$1 = 1,\n  Logfmt$1 = 2,\n  Unpack$1 = 3,\n  Pattern$1 = 4,\n  Regexp$1 = 5,\n  Unwrap$1 = 6,\n  Ip$1 = 7,\n  LabelFormat$1 = 8,\n  LineFormat$1 = 9,\n  LabelReplace$1 = 10,\n  Vector$1 = 11,\n  Offset$1 = 12,\n  Bool$1 = 13,\n  On$1 = 14,\n  Ignoring$1 = 15,\n  GroupLeft$1 = 16,\n  GroupRight$1 = 17,\n  Decolorize$1 = 18,\n  Drop$1 = 19,\n  Keep$1 = 20,\n  By$1 = 21,\n  Without$1 = 22,\n  And$1 = 23,\n  Or$1 = 24,\n  Unless$1 = 25,\n  Sum$1 = 26,\n  Avg$1 = 27,\n  Count$1 = 28,\n  Max$1 = 29,\n  Min$1 = 30,\n  Stddev$1 = 31,\n  Stdvar$1 = 32,\n  Bottomk$1 = 33,\n  Topk$1 = 34,\n  LogExpr$1 = 38,\n  MetricExpr$1 = 86;\n\nconst keywordTokens = {\n  json: Json$1,\n  logfmt: Logfmt$1,\n  unpack: Unpack$1,\n  pattern: Pattern$1,\n  regexp: Regexp$1,\n  ip: Ip$1,\n  label_format: LabelFormat$1,\n  line_format: LineFormat$1,\n  label_replace: LabelReplace$1,\n  vector: Vector$1,\n  offset: Offset$1,\n  bool: Bool$1,\n  on: On$1,\n  ignoring: Ignoring$1,\n  group_left: GroupLeft$1,\n  group_right: GroupRight$1,\n  unwrap: Unwrap$1,\n  decolorize: Decolorize$1,\n  drop: Drop$1,\n  keep: Keep$1,\n};\n\nconst specializeIdentifier = (value) => {\n  return keywordTokens[value.toLowerCase()] || -1;\n};\n\nconst contextualKeywordTokens = {\n  by: By$1,\n  without: Without$1,\n  and: And$1,\n  or: Or$1,\n  unless: Unless$1,\n  sum: Sum$1,\n  avg: Avg$1,\n  count: Count$1,\n  max: Max$1,\n  min: Min$1,\n  stddev: Stddev$1,\n  stdvar: Stdvar$1,\n  bottomk: Bottomk$1,\n  topk: Topk$1,\n};\n\nconst extendIdentifier = (value) => {\n  return contextualKeywordTokens[value.toLowerCase()] || -1;\n};\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst spec_Identifier = {__proto__:null,count_over_time:281, rate:283, rate_counter:285, bytes_over_time:287, bytes_rate:289, avg_over_time:291, sum_over_time:293, min_over_time:295, max_over_time:297, stddev_over_time:299, stdvar_over_time:301, quantile_over_time:303, first_over_time:305, last_over_time:307, absent_over_time:309, bytes:315, duration:317, duration_seconds:319};\nconst parser = _lezer_lr__WEBPACK_IMPORTED_MODULE_0__.LRParser.deserialize({\n  version: 14,\n  states: \"CdOYQPOOO#]QPO'#DTO$lQPO'#DSOYQPO'#DSOOQO'#EW'#EWO$yQPO'#EVOOQO'#Es'#EsO%OQPO'#ErQ%ZQPOOOOQO'#FR'#FRO&[QPO'#FRO&aQPO'#FSO&fQPO'#FTOOQO'#EU'#EUOOQO'#DR'#DROOQO'#EX'#EXOOQO'#EY'#EYOOQO'#EZ'#EZOOQO'#E['#E[OOQO'#E]'#E]OOQO'#E^'#E^OOQO'#E_'#E_OOQO'#E`'#E`OOQO'#Ea'#EaOOQO'#Eb'#EbOOQO'#Ec'#EcOOQO'#Ed'#EdOOQO'#Ee'#EeOOQO'#Ef'#EfOOQO'#Eg'#EgO&kQPO'#DVOOQO'#DU'#DUO&yQPO,59oOOQO'#Db'#DbO'RQPO'#DaOOQO'#D`'#D`O'ZQPO'#D_O(tQPO'#D_OOQO'#D^'#D^O*vQPO,59nO,UQPO,59nO,]QPO,5:pO,dQPO,5:qO,oQPO'#EpO.tQPO,5;^O.{QPO,5;^O/QQPO,5;`O/QQPO,5;`O/QQPO,5;`O/QQPO,5;`O/QQPO,5;`O/QQPO,5;`OOQO,5;m,5;mOYQPO,5;nO1^QPO,5;oO1cQPO,59qO#]QPO,59pOOQO1G/Z1G/ZOOQO'#De'#DeOOQO,59{,59{O1hQPO,59{OOQO,59z,59zO1mQPO'#DVO2[QPO'#DgOOQO'#Dg'#DgO3xQPO'#DgOOQO'#Dm'#DmOOQO'#Dk'#DkO)dQPO'#DkO3}QPO,59yO5hQPO'#DyO5mQPO'#DzOOQO'#D}'#D}O5rQPO'#EOO5wQPO'#EROOQO,59y,59yOOQO,59x,59xOOQO1G/Y1G/YOOQO1G0[1G0[O5|QPO'#EhO,gQPO'#EhO6bQPO1G0]O6gQPO1G0]O6lQPO,5;[O6tQPO1G0xO8PQPO1G0xO8WQPO1G0xO8_QPO'#EvO:gQPO'#EuO:qQPO'#EuOYQPO1G0zOYQPO1G0zOYQPO1G0zOYQPO1G0zOYQPO1G0zOYQPO1G0zO:{QPO1G1YO;SQPO1G1ZOOQO1G/]1G/]OOQO1G/[1G/[O;XQPO1G/gO;^QPO,59qO;dQPO,5:YO;oQPO'#DjOOQO'#Di'#DiO;tQPO,5:SOOQO,5:R,5:RO=_QPO,5:VO)dQPO,5:VO)dQPO,5:VOOQO,5:e,5:eO=mQPO'#D|OOQO'#D{'#D{O=rQPO,5:fO?]QPO'#EQOOQO'#EQ'#EQOOQO'#EP'#EPO@|QPO,5:jOBgQPO'#ETOOQO'#ET'#ETOOQO'#ES'#ESODWQPO,5:mOEqQPO'#D_O5|QPO,5;SOExQPO'#EiOE}QPO,5;SOFhQPO,5;SOFrQPO,5;SOFyQPO,5;SOGOQPO7+%wO,gQPO7+%wOOQO'#Eq'#EqOH`QPO1G0vOOQO1G0v1G0vOHhQPO7+&dOYQPO7+&dOIxQPO7+&dOJPQPO7+&dOJWQQO'#EwOOQO,5;b,5;bOL`QPO,5;aOLgQPO,5;aOMxQPO7+&fONPQPO7+&fOOQO7+&f7+&fON^QPO7+&fONeQPO7+&fO! jQPO7+&fO! zQPO7+&tOOQO7+&u7+&uO!!PQPO7+%RO!!UQPO1G/rOOQO1G/t1G/tOOQO1G/{1G/{OOQO1G/}1G/}O!!ZQPO,5:UO!!`QPO,5:TOOQO1G/q1G/qO!!eQPO1G/qO!$OQPO,5:hO5mQPO,5:gO5rQPO,5:kO5wQPO,5:nO!$WQPO,5;VOE}QPO1G0nO!$fQPO1G0nO!$nQPO,5;TO)dQPO,5;VO!$sQPO1G0nO!$zQPO'#EjO!%PQPO1G0nO!$sQPO1G0nO!%XQPO1G0nO!%`QPO1G0nO6]QPO1G0nOOQO1G0n1G0nOOQO<<Ic<<IcO!%kQPO<<IcO!%pQPO,5;]OOQO7+&b7+&bOOQO<<JO<<JOO!%uQPO<<JOOYQPO<<JOOOQO'#Ey'#EyO!%|QPO,5;cOOQO'#Ex'#ExOOQO,5;c,5;cOOQO1G0{1G0{O!&UQPO1G0{O!(XQPO<<J`OOQO<<Hm<<HmO!(^QPO7+%^OOQO1G/p1G/pOOQO1G/o1G/oOOQO1G0S1G0SOOQO1G0R1G0ROOQO1G0V1G0VOOQO1G0Y1G0YOOQO'#El'#ElOOQO1G0q1G0qO!(cQPO1G0qOOQO'#Em'#EmOOQO'#En'#EnOOQO'#Eo'#EoOOQO7+&Y7+&YOOQO1G0o1G0oO!(hQPO1G0qO!(|QPO7+&YOOQO,5;U,5;UO!)UQPO7+&YO6]QPO7+&YO!)]QPO7+&YO!)hQPOAN>}OOQO1G0w1G0wO!*xQPOAN?jO!,YQPOAN?jO!,aQQO1G0}OOQO1G0}1G0}OOQO7+&g7+&gO!,iQPOAN?zO!,nQPO<<HxO!,sQPO7+&]O!,xQPO<<ItO!-QQPO<<ItO!-YQPO'#EkO!-_QPO<<ItOOQOG24iG24iOOQOG25UG25UOOQO1G1O1G1OOOQO7+&i7+&iO!-gQPOG25fOOQOAN>dAN>dO!-lQPO<<IwOOQOAN?`AN?`O!-qQPOAN?`O!-yQPOLD+QOOQOAN?cAN?cOOQO,5:f,5:fO!.OQPO!$'NlO!.TQPO!)9DWO!.YQPO!.K9rOOQO!4//^!4//^O5mQPO'#DzO!._QPO'#D_O!/VQPO,59nO!/aQPO'#DSOYQPO1G0zOYQPO1G0zOYQPO1G0zOYQPO1G0zOYQPO1G0zOYQPO1G0zO/QQPO,5;`O/QQPO,5;`O/QQPO,5;`O/QQPO,5;`O/QQPO,5;`O/QQPO,5;`O!0lQPO7+&fO!0sQPO7+&fO!1QQPO7+&fO!2YQPO7+&fO!2aQPO7+&fO!1XQPO'#Et\",\n  stateData: \"!2n~O#zOSsOS~OYZOZ[OjUOkUOlUOmUOnUOoUOpUOqUOrUO!lXO#oYO#pYO#{PO$ORO$Q_O$R`O$SaO$TbO$UcO$VdO$WeO$XfO$YgO$ZhO$[iO$]jO$^kO$_lO$`mO~OznO~O}qO!PqO!VqO!WqOgvXhvXivX!cvX!evX!fvX!gvX!hvX#ovX#pvX#qvX#rvX#svX#tvX~O!YuO#xvX$PvX~P#bO$OzO~Oe{Of{O$O|O~Og!POh!OOi!PO}!TO!c!TO!e!TO!f!TO!g!TO!h!TO#o!QO#p!QO#q!RO#r!RO#s!RO#t!SO~O!l!UO~O$O!VO~O$O!WO~O{!XO}!XO!O!XO!P!XO~O#|!YO#}!ZO~OV![O|!]O~O}qO!PqO!VqO!WqOg!RXh!RXi!RX!Y!RX!c!RX!e!RX!f!RX!g!RX!h!RX#o!RX#p!RX#q!RX#r!RX#s!RX#t!RX#x!RX$P!RX$a!RX#|!RX~OP!aOQ!bOR!bOS!cOT!cOW!iOX!hOb!jOc!kOd!lOz!`O$O!fO~O}qO!PqO!VqO!WqOgvahvaiva!cva!eva!fva!gva!hva#ova#pva#qva#rva#sva#tva~O!YuO#xva$Pva~P)lOguXhuXiuX}uX!cuX!euX!fuX!guX!huX#ouX#puX#quX#ruX#suX#tuX~O$P!oO~P+TO$P!pO~P+TO!l!tO#{PO$O!rO~O$O!uO~OYZOZ[OjUOkUOlUOmUOnUOoUOpUOqUOrUO#oYO#pYO#{PO$ORO$Q_O$R`O$SaO$TbO$UcO$VdO$WeO$XfO$YgO$ZhO$[iO$]jO$^kO$_lO$`mO~O!l!wO~P,tO$O!xO~O]!{O^!yO_!yOY#iPZ#iPj#iPk#iPl#iPm#iPn#iPo#iPp#iPq#iPr#iP!l#iP#o#iP#p#iP#{#iP$O#iP$Q#iP$R#iP$S#iP$T#iP$U#iP$V#iP$W#iP$X#iP$Y#iP$Z#iP$[#iP$]#iP$^#iP$_#iP$`#iP~O!l#TO~O|#UO~O$O#WO~O{#XO}#XO!O!XO!P!XO!c#YO!e#YO!f#YO!g#YO!h#YO~Oz#ZOg!ZXh!ZXi!ZX}!ZX!P!ZX!V!ZX!W!ZX!Y!ZX!c!ZX!e!ZX!f!ZX!g!ZX!h!ZX#o!ZX#p!ZX#q!ZX#r!ZX#s!ZX#t!ZX#x!ZX$P!ZX$a!ZX#|!ZX~O|#^O~Og#`Oh#aO#|#`Oi!Ra}!Ra!P!Ra!V!Ra!W!Ra!Y!Ra!c!Ra!e!Ra!f!Ra!g!Ra!h!Ra#o!Ra#p!Ra#q!Ra#r!Ra#s!Ra#t!Ra#x!Ra$P!Ra$a!Ra~O|#bO~Oz#cO~Oz#fO~Oz#jO~O}qO!PqO!VqO!WqO!Y#nO$a#pO~O$P#uO~O#|#vO~Oz#wO$P#yO~O$P#zO~P+TOg#uXh#uXi#uX}#uX!c#uX!e#uX!f#uX!g#uX!h#uX#o#uX#p#uX#q#uX#r#uX#s#uX#t#uX$P#uX~O#|#{O~P6{O!l#}O~P,tO$O$OO~OY#iXZ#iXj#iXk#iXl#iXm#iXn#iXo#iXp#iXq#iXr#iX!l#iX#o#iX#p#iX#{#iX$O#iX$Q#iX$R#iX$S#iX$T#iX$U#iX$V#iX$W#iX$X#iX$Y#iX$Z#iX$[#iX$]#iX$^#iX$_#iX$`#iX~O`$QOa$QO~P8dO^!yO_!yO~P8dO#|$YO~P+TO$P$ZO~O|$[O~OV$]O|#UO!d$^O!j$_O!l$`O~O{$aO~O#|$bOg![ah![ai![a}![a!P![a!V![a!W![a!Y![a!c![a!e![a!f![a!g![a!h![a#o![a#p![a#q![a#r![a#s![a#t![a#x![a$P![a$a![a~Og#`Oh#aO#|#`O$P$cO~O{$eO~O#|$fOg!nah!nai!na}!na!P!na!V!na!W!na!Y!na!c!na!e!na!f!na!g!na!h!na#o!na#p!na#q!na#r!na#s!na#t!na#x!na$P!na$a!na~O{!XO}!XO!O!XO!P!XOg!tXh!tXi!tX!V!tX!W!tX!Y!tX!c!tX!e!tX!f!tX!g!tX!h!tX#o!tX#p!tX#q!tX#r!tX#s!tX#t!tX#x!tX#|!tX$P!tX$a!tX~O#|$gOg!rah!rai!ra}!ra!P!ra!V!ra!W!ra!Y!ra!c!ra!e!ra!f!ra!g!ra!h!ra#o!ra#p!ra#q!ra#r!ra#s!ra#t!ra#x!ra$P!ra$a!ra~O{!XO}!XO!O!XO!P!XOg!wXh!wXi!wX!V!wX!W!wX!Y!wX!c!wX!e!wX!f!wX!g!wX!h!wX#o!wX#p!wX#q!wX#r!wX#s!wX#t!wX#x!wX#|!wX$P!wX$a!wX~O#|$hOg!uah!uai!ua}!ua!P!ua!V!ua!W!ua!Y!ua!c!ua!e!ua!f!ua!g!ua!h!ua#o!ua#p!ua#q!ua#r!ua#s!ua#t!ua#x!ua$P!ua$a!ua~OU$iO~P(tO!d$lO~O!Y$mO$a#pO~O}qO!PqO!VqO!WqO!Y#nO~O[$oO$P#[a~PFVO$P$tO~P5|O$P$uO~Oe{Of{Og!yqh!yqi!yq}!yq!c!yq!e!yq!f!yq!g!yq!h!yq#o!yq#p!yq#q!yq#r!yq#s!yq#t!yq#x!yq$P!yq#|!yq~O#|$xO$P$yO~Oe{Of{Og#fqh#fqi#fq}#fq!c#fq!e#fq!f#fq!g#fq!h#fq#o#fq#p#fq#q#fq#r#fq#s#fq#t#fq#x#fq$P#fq#|#fq~O$P$zO~P+TO#|$|O~P6{O#n$}O$P%QO~OY#iaZ#iaj#iak#ial#iam#ian#iao#iap#iaq#iar#ia!l#ia#o#ia#p#ia#{#ia$Q#ia$R#ia$S#ia$T#ia$U#ia$V#ia$W#ia$X#ia$Y#ia$Z#ia$[#ia$]#ia$^#ia$_#ia$`#ia~O$O$OO~PJ`O`%SOa%SO$O#ia~PJ`Og!POi!PO}!TO!c!TO!e!TO!f!TO!g!TO!h!TO#o!QO#p!QO#q#hq#r#hq#s#hq#t#hq#x#hq$P#hq~Oh#hq~PLtOg#hqh#hqi#hq~PLzOh!OO~PLtO#x#hq$P#hq~P%ZOg#hqh#hqi#hq}#hq!c#hq!e#hq!f#hq!g#hq!h#hq#q#hq#r#hq#s#hq#t#hq~O#o!QO#p!QO#x#hq$P#hq~PNoO|%TO~O$P%UO~O$O%VO~O|%WO~Oz#ZO~Og#`O#|#`Oh!_ii!_i}!_i!P!_i!V!_i!W!_i!Y!_i!c!_i!e!_i!f!_i!g!_i!h!_i#o!_i#p!_i#q!_i#r!_i#s!_i#t!_i#x!_i$P!_i$a!_i~Oz%YO|%YO~Oz%_O$c%aO$d%bO$e%cO~O[$oO$P#[i~O$b%eO~O$P#[i~PFVO!d%hO~O!Y$mO$P#[i~O$P%jO~P5|O!Y$mO$P%jO$a#pO~O$P%lO~Oz%mO~O$P%nO~P+TO#|%pO$P%qO~O$O$OOY#iiZ#iij#iik#iil#iim#iin#iio#iip#iiq#iir#ii!l#ii#o#ii#p#ii#{#ii$Q#ii$R#ii$S#ii$T#ii$U#ii$V#ii$W#ii$X#ii$Y#ii$Z#ii$[#ii$]#ii$^#ii$_#ii$`#ii~O#|%sO~O|%tO~O$O%uO~Og#`Oh#aO#|#`O!Y#_i$a#_i$P#_i~O!Y$mO$P#[q~O$P#[q~PFVO[$oO!Y%xO$P#[q~Oe{Of{Og!y!Rh!y!Ri!y!R}!y!R!c!y!R!e!y!R!f!y!R!g!y!R!h!y!R#o!y!R#p!y!R#q!y!R#r!y!R#s!y!R#t!y!R#x!y!R$P!y!R#|!y!R~Oe{Of{Og#f!Rh#f!Ri#f!R}#f!R!c#f!R!e#f!R!f#f!R!g#f!R!h#f!R#o#f!R#p#f!R#q#f!R#r#f!R#s#f!R#t#f!R#x#f!R$P#f!R#|#f!R~O$P%{O~P+TO#n$}O$P%}O~O|&OO~O$P&PO~Oz&QO~O!Y$mO$P#[y~O[$oO$P#[y~OU$iO~O!Y%xO$P#[y~O#|&TO~O$P&UO~O!Y$mO$P#[!R~O|&WO~O#|&XO~O|&YO~O$P&ZO~OP!aOQ!bOR!bOS!cOT!cOW&[OX!hOb!jOc!kOd!lOz!`O$O!fO~O!Y&]O#|va~P)lO!Y&]O#|vX~P#bOg&gOi&gO}&kO!c&kO!e&kO!f&kO!g&kO!h&kO#o&hO#p&hO#q#hq#r#hq#s#hq#t#hq#|#hq~Oh#hq~P!/kOg#hqh#hqi#hq~P!/qOh&fO~P!/kOg&gOh&fOi&gO}&kO!c&kO!e&kO!f&kO!g&kO!h&kO#o&hO#p&hO#q&iO#r&iO#s&iO#t&jO~O#|#hq~P!1XO#o&hO#p&hO#|#hq~PNoO\",\n  goto: \"0U#xPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP#y$x%a&P&SPPPPPP&k&}'_'m(OPP(_P(b(b(g(j(p)R)R)[PPPPPP)[P)RP(b(b)e)k(b(b)r)u(b){*O*U*w+^+s+s+s+s+s+s+s+s+s+s+s+s+s+s+s,Y,c,v-S-l-o-o-o-r.R*w.U*w.k/a/r/{0OPPPPPPP*w*w*w[WOR|!x#{$|Q$S!|Q$T!}S$U#O&bQ$V#PQ$W#QQ$X#RQ&l&`Q&m&aQ&n&cQ&o&dQ&p&eR&q!Vt^O|!V!x!|!}#O#P#Q#R#{$|&`&a&b&c&d&eRxRjQOR|!V!x!|!}#O#P#Q#R#{$|S!qz#vQ#s!r]&_&`&a&b&c&d&eRpPQoP^!eu!f#`#a#n$m&]Q#V!YS#g!k$gT#k!l$hQwQQ#o!qQ$n#rQ$r#sQ%i$qR&^&_[vQ!q#r#s$q&_]!nw#o$n$r%i&^itQw!q#o#r#s$n$q$r%i&^&_hsQw!q#o#r#s$n$q$r%i&^&_R!_tkrQtw!q#o#r#s$n$q$r%i&^&_R!^rV!mu#n&]R#]!aQ#[!aR%X$bU!gu#n&]Q#_!fQ$c#`Q$d#aR%f$m_!eu!f#`#a#n$m&]_!du!f#`#a#n$m&]Q#e!iR&V&[S#d!i&[R%Z$fR#i!kQ#h!kR%[$gR#m!lQ#l!lR%]$hj^O!|!}#O#P#Q#R&`&a&b&c&d&eQyRQ!v|Q#S!VQ#|!xQ${#{R%o$|w]OR|!V!x!|!}#O#P#Q#R#{$|&`&a&b&c&d&ewTOR|!V!x!|!}#O#P#Q#R#{$|&`&a&b&c&d&ewSOR|!V!x!|!}#O#P#Q#R#{$|&`&a&b&c&d&eQ!szQ#t!rR$w#vS#r!q#sW$k#o#q$r$sQ%d$jQ%k$tR%w%jQ$q#rQ%d$kQ%y%kR&R%wQ#q!qS$j#o$rQ$p#rQ$s#sS%g$n$qS%v%i%kR&S%yR%`$iR%^$iQ}VQ$v#uQ$z#zQ%z%lR%{%nR#x!uwVOR|!V!x!|!}#O#P#Q#R#{$|&`&a&b&c&d&eQ!|!OQ!}!PQ#O!QQ#P!RQ#Q!SQ#R!TQ&`&fQ&a&gQ&b&hQ&c&iQ&d&jR&e&kh!z!O!P!Q!R!S!T&f&g&h&i&j&kR$R!{Q$P!yQ%R$QR%r%SR%O$OQ%P$OR%|%p\",\n  nodeNames: \"⚠ Json Logfmt Unpack Pattern Regexp Unwrap Ip LabelFormat LineFormat LabelReplace Vector Offset Bool On Ignoring GroupLeft GroupRight Decolorize Drop Keep By Without And Or Unless Sum Avg Count Max Min Stddev Stdvar Bottomk Topk LineComment LogQL Expr LogExpr Selector Matchers Matcher Identifier Eq String Neq Re Nre PipelineExpr PipelineStage LineFilters LineFilter Filter PipeExact PipeMatch FilterOp Pipe LabelParser JsonExpressionParser JsonExpressionList JsonExpression LabelFilter IpLabelFilter UnitFilter DurationFilter Gtr Duration Gte Lss Lte Eql BytesFilter Bytes NumberFilter Number LineFormatExpr LabelFormatExpr LabelsFormat LabelFormatMatcher DecolorizeExpr DropLabelsExpr DropLabels DropLabel KeepLabelsExpr KeepLabels KeepLabel MetricExpr RangeAggregationExpr RangeOp CountOverTime Rate RateCounter BytesOverTime BytesRate AvgOverTime SumOverTime MinOverTime MaxOverTime StddevOverTime StdvarOverTime QuantileOverTime FirstOverTime LastOverTime AbsentOverTime LogRangeExpr Range OffsetExpr UnwrapExpr ConvOp BytesConv DurationConv DurationSecondsConv Grouping Labels VectorAggregationExpr VectorOp BinOpExpr BinOpModifier OnOrIgnoringModifier GroupingLabels GroupingLabelList GroupingLabel LabelName Add Sub Mul Div Mod Pow LiteralExpr LabelReplaceExpr VectorExpr\",\n  maxTerm: 159,\n  skippedNodes: [0,35],\n  repeatNodeCount: 0,\n  tokenData: \"3X~RvX^#ipq#iqr$^rs$qst%cuv%nxy%syz%xz{%}{|&S|}&X}!O&^!O!P&c!P!Q'c!Q!R'h!R![)O![!]0O!^!_0d!_!`0q!`!a1W!c!}1e!}#O1{#P#Q2Q#Q#R2V#R#S1e#S#T2[#T#o1e#o#p2h#p#q2m#q#r3S#y#z#i$f$g#i#BY#BZ#i$IS$I_#i$I|$JO#i$JT$JU#i$KV$KW#i&FU&FV#i~#nY#z~X^#ipq#i#y#z#i$f$g#i#BY#BZ#i$IS$I_#i$I|$JO#i$JT$JU#i$KV$KW#i&FU&FV#i~$aQ!_!`$g#r#s$l~$lO}~~$qO!P~~$tUOY$qZr$qrs%Ws#O$q#O#P%]#P~$q~%]O|~~%`PO~$q~%hQs~OY%cZ~%c~%sO#s~~%xO$O~~%}O$P~~&SO#q~~&XO#o~~&^O#|~~&cO#p~~&fP!Q![&i~&nR!l~!Q![&i!g!h&w#X#Y&w~&zR{|'T}!O'T!Q!['Z~'WP!Q!['Z~'`P!l~!Q!['Z~'hO#r~~'me!l~!O!P&i!Q![)O!g!h*c!i!j+Q!m!n+Q!o!p+Q!r!s+Q!v!w+Q#U#V*u#W#X+Z#X#Y-]#Z#[-o#[#]+r#_#`-o#a#b-x#d#e-o#g#h,z#h#i-o#k#l.Z#l#m/d#m#n.u~)Td!l~!O!P&i!Q![)O!g!h*c!i!j+Q!m!n+Q!o!p+Q!r!s+Q!v!w+Q#U#V*u#W#X+Z#X#Y-]#Z#[-o#[#]+r#_#`-o#a#b-x#d#e-o#g#h,z#h#i-o#k#l.Z#m#n.u~*fT{|'T}!O'T!Q!['Z!d!e*u#]#^*z~*zO!j~~*}P#U#V*u~+TQ!d!e*u#]#^*z~+`P!d~!Q![+c~+fS!Q![+c#[#]+r#a#b,W#g#h,z~+wP!d~!Q![+z~+}R!Q![+z#a#b,W#g#h,z~,]Q!d~!Q![,c#g#h,u~,fR!Q![,c#a#b,o#g#h,z~,rP#g#h,u~,zO!d~~-PP!d~!Q![-S~-VQ!Q![-S#a#b,o~-`T{|'T}!O'T!Q!['Z#U#V*u#]#^*z~-rQ#U#V*u#]#^*z~-}S!d~!Q![,c#U#V*u#]#^*z#g#h,u~.`P!d~!Q![.c~.fT!Q![.c#W#X+Z#[#]+r#a#b,W#g#h,z~.zP!d~!Q![.}~/QU!Q![.}#W#X+Z#[#]+r#a#b,W#g#h,z#k#l.Z~/gR!Q![/p!c!i/p#T#Z/p~/uR!l~!Q![/p!c!i/p#T#Z/pP0TTzP!Q![0O![!]0O!c!}0O#R#S0O#T#o0O~0iP!f~!_!`0l~0qO!g~~0vQ{~!_!`0|#r#s1R~1RO!h~~1WO!O~~1]P!c~!_!`1`~1eO!e~R1lTzP#nQ!Q![1e![!]0O!c!}1e#R#S1e#T#o1e~2QO$a~~2VO$b~~2[O#t~~2_RO#S2[#S#T%W#T~2[~2mO#{~~2rQ!Y~!_!`2x#r#s2}~2}O!V~~3SO!W~~3XO#}~\",\n  tokenizers: [0, 1],\n  topRules: {\"LogQL\":[0,36]},\n  specialized: [{term: 42, get: (value, stack) => (specializeIdentifier(value) << 1)},{term: 42, get: (value, stack) => (extendIdentifier(value) << 1) | 1},{term: 42, get: value => spec_Identifier[value] || -1}],\n  tokenPrec: 0\n});\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst Json = 1,\n  Logfmt = 2,\n  Unpack = 3,\n  Pattern = 4,\n  Regexp = 5,\n  Unwrap = 6,\n  Ip = 7,\n  LabelFormat = 8,\n  LineFormat = 9,\n  LabelReplace = 10,\n  Vector = 11,\n  Offset = 12,\n  Bool = 13,\n  On = 14,\n  Ignoring = 15,\n  GroupLeft = 16,\n  GroupRight = 17,\n  Decolorize = 18,\n  Drop = 19,\n  Keep = 20,\n  By = 21,\n  Without = 22,\n  And = 23,\n  Or = 24,\n  Unless = 25,\n  Sum = 26,\n  Avg = 27,\n  Count = 28,\n  Max = 29,\n  Min = 30,\n  Stddev = 31,\n  Stdvar = 32,\n  Bottomk = 33,\n  Topk = 34,\n  LineComment = 35,\n  LogQL = 36,\n  Expr = 37,\n  LogExpr = 38,\n  Selector = 39,\n  Matchers = 40,\n  Matcher = 41,\n  Identifier = 42,\n  Eq = 43,\n  String = 44,\n  Neq = 45,\n  Re = 46,\n  Nre = 47,\n  PipelineExpr = 48,\n  PipelineStage = 49,\n  LineFilters = 50,\n  LineFilter = 51,\n  Filter = 52,\n  PipeExact = 53,\n  PipeMatch = 54,\n  FilterOp = 55,\n  Pipe = 56,\n  LabelParser = 57,\n  JsonExpressionParser = 58,\n  JsonExpressionList = 59,\n  JsonExpression = 60,\n  LabelFilter = 61,\n  IpLabelFilter = 62,\n  UnitFilter = 63,\n  DurationFilter = 64,\n  Gtr = 65,\n  Duration = 66,\n  Gte = 67,\n  Lss = 68,\n  Lte = 69,\n  Eql = 70,\n  BytesFilter = 71,\n  Bytes = 72,\n  NumberFilter = 73,\n  Number = 74,\n  LineFormatExpr = 75,\n  LabelFormatExpr = 76,\n  LabelsFormat = 77,\n  LabelFormatMatcher = 78,\n  DecolorizeExpr = 79,\n  DropLabelsExpr = 80,\n  DropLabels = 81,\n  DropLabel = 82,\n  KeepLabelsExpr = 83,\n  KeepLabels = 84,\n  KeepLabel = 85,\n  MetricExpr = 86,\n  RangeAggregationExpr = 87,\n  RangeOp = 88,\n  CountOverTime = 89,\n  Rate = 90,\n  RateCounter = 91,\n  BytesOverTime = 92,\n  BytesRate = 93,\n  AvgOverTime = 94,\n  SumOverTime = 95,\n  MinOverTime = 96,\n  MaxOverTime = 97,\n  StddevOverTime = 98,\n  StdvarOverTime = 99,\n  QuantileOverTime = 100,\n  FirstOverTime = 101,\n  LastOverTime = 102,\n  AbsentOverTime = 103,\n  LogRangeExpr = 104,\n  Range = 105,\n  OffsetExpr = 106,\n  UnwrapExpr = 107,\n  ConvOp = 108,\n  BytesConv = 109,\n  DurationConv = 110,\n  DurationSecondsConv = 111,\n  Grouping = 112,\n  Labels = 113,\n  VectorAggregationExpr = 114,\n  VectorOp = 115,\n  BinOpExpr = 116,\n  BinOpModifier = 117,\n  OnOrIgnoringModifier = 118,\n  GroupingLabels = 119,\n  GroupingLabelList = 120,\n  GroupingLabel = 121,\n  LabelName = 122,\n  Add = 123,\n  Sub = 124,\n  Mul = 125,\n  Div = 126,\n  Mod = 127,\n  Pow = 128,\n  LiteralExpr = 129,\n  LabelReplaceExpr = 130,\n  VectorExpr = 131;\n\nfunction getNodeFromQuery(query, nodeType) {\n  const nodes = [];\n  const tree = parser.parse(query);\n  tree.iterate({\n    enter: (node) => {\n      if (nodeType === undefined || nodeType === node.type.id) {\n        nodes.push(node.node);\n      }\n    },\n  });\n  return nodes[0];\n}\n\nfunction isLogsQuery(query) {\n  if (getNodeFromQuery(query, MetricExpr$1)) {\n    return false;\n  }\n  return true;\n}\n\nfunction indent(level) {\n  return '  '.repeat(level);\n}\n\nfunction indentMultiline(block, level) {\n  const lines = block.split('\\n');\n  return lines.map((line) => indent(level) + line).join('\\n');\n}\n\nfunction trimMultiline(block) {\n  const lines = block.split('\\n');\n  return lines.map((line) => line.trimEnd()).join('\\n');\n}\n\nfunction needsBrackets(node, queryType) {\n  const childNodeIsSame = node.firstChild?.type.id === queryType;\n  let addBrackets = false;\n\n  if (node.firstChild && childNodeIsSame) {\n    addBrackets = true;\n    node = node.firstChild;\n  }\n\n  return { addBrackets, newNode: node };\n}\n\nfunction iterateNode(node, lookingFor) {\n  const nodes = [];\n  let child = node.firstChild;\n\n  while (child) {\n    if (lookingFor.includes(child.type.id)) {\n      nodes.push(child);\n    }\n\n    nodes.push(...iterateNode(child, lookingFor));\n    child = child.nextSibling;\n  }\n\n  return nodes;\n}\n\nfunction buildResponse(pipelineType, lastPipelineType, formattedNode) {\n  if (lastPipelineType === pipelineType) {\n    return ` ${formattedNode}`;\n  }\n\n  return `\\n${indent(1)}${formattedNode}`;\n}\n\nfunction trimEnd(input, charactersToTrim) {\n  let endIndex = input.length - 1;\n  while (endIndex >= 0 && charactersToTrim.includes(input[endIndex])) {\n    endIndex--;\n  }\n  return input.substring(0, endIndex + 1);\n}\n\nconst formatLogExpr = (node, query) => {\n  const { addBrackets, newNode } = needsBrackets(node, LogExpr);\n  node = newNode;\n\n  const tree = parser.parse(query.substring(node.from, node.to));\n  let formatted = '';\n\n  tree.iterate({\n    enter: (ref) => {\n      const node = ref.node;\n\n      switch (node.type.id) {\n        case Selector:\n          formatted += formatSelector(node, query);\n          break;\n\n        case PipelineExpr:\n          node.parent?.type.id !== PipelineExpr && (formatted += formatPipelineExpr(node, query));\n          break;\n      }\n    },\n  });\n\n  return addBrackets ? '(' + formatted + ')' : formatted;\n};\n\nfunction formatSelector(node, query) {\n  const selector = query.substring(node.from, node.to);\n  const subtree = parser.parse(selector);\n  const labelNodes = [];\n  let response = '';\n\n  subtree.iterate({\n    enter: (ref) => {\n      const node = ref.node;\n      if (node.type.id === Matcher) {\n        labelNodes.push(node);\n      }\n    },\n  });\n\n  labelNodes.sort((a, b) => {\n    const labelNodeA = a.getChild(Identifier);\n    const labelNodeB = b.getChild(Identifier);\n\n    const labelValueA = labelNodeA && query.substring(labelNodeA.from, labelNodeA.to);\n    const labelValueB = labelNodeB && query.substring(labelNodeB.from, labelNodeB.to);\n\n    if (!labelValueA || !labelValueB) {\n      return 0;\n    }\n\n    if (labelValueA < labelValueB) {\n      return -1;\n    }\n\n    if (labelValueA > labelValueB) {\n      return 1;\n    }\n\n    return 0;\n  });\n\n  labelNodes.forEach((node) => {\n    const labelNode = node.getChild(Identifier);\n    const operatorNode = labelNode ? labelNode.nextSibling : null;\n    const valueNode = node.getChild(String);\n\n    const label = labelNode ? query.substring(labelNode.from, labelNode.to) : null;\n    const operator = operatorNode ? query.substring(operatorNode.from, operatorNode.to) : null;\n    const value = valueNode ? query.substring(valueNode.from, valueNode.to) : null;\n\n    response += `${label}${operator}${value}, `;\n  });\n\n  return '{' + trimEnd(response, ', ') + '}';\n}\n\nfunction formatPipelineExpr(node, query) {\n  const pipelineExprNodes = [\n    LineFilter,\n    LabelParser,\n    LabelFilter,\n    JsonExpressionParser,\n    LineFormatExpr,\n    LabelFormatExpr,\n    DecolorizeExpr,\n  ];\n  let lastPipelineType;\n  let response = '';\n\n  iterateNode(node, pipelineExprNodes).forEach((node) => {\n    switch (node.type.id) {\n      case LineFilter:\n        response += buildResponse(LineFilter, lastPipelineType, formatLineFilter(node, query));\n        lastPipelineType = LineFilter;\n        break;\n\n      case LabelParser:\n        response += buildResponse(LabelParser, lastPipelineType, formatLabelParser(node, query));\n        lastPipelineType = LabelParser;\n        break;\n\n      case JsonExpressionParser:\n        response += buildResponse(JsonExpressionParser, lastPipelineType, formatJsonExpressionParser(node, query));\n        lastPipelineType = JsonExpressionParser;\n        break;\n\n      case LabelFilter:\n        response += buildResponse(LabelFilter, lastPipelineType, formatLabelFilter(node, query));\n        lastPipelineType = LabelFilter;\n        break;\n\n      case LineFormatExpr:\n        response += buildResponse(LineFormatExpr, lastPipelineType, formatLineFormatExpr(node, query));\n        lastPipelineType = LineFormatExpr;\n        break;\n\n      case LabelFormatExpr:\n        response += buildResponse(LabelFormatExpr, lastPipelineType, formatLabelFormatExpr(node, query));\n        lastPipelineType = LabelFormatExpr;\n        break;\n\n      case DecolorizeExpr:\n        response += buildResponse(DecolorizeExpr, lastPipelineType, formatDecolorizeExpr());\n        lastPipelineType = DecolorizeExpr;\n        break;\n    }\n  });\n\n  return response;\n}\n\nfunction formatLineFilter(node, query) {\n  const filterNode = node.getChild(Filter);\n  const filterOperationNode = node.getChild(FilterOp);\n  const stringNode = node.getChild(String);\n\n  const filter = filterNode && query.substring(filterNode.from, filterNode.to);\n  const string = stringNode && query.substring(stringNode.from, stringNode.to);\n\n  if (filterOperationNode) {\n    return `${filter} ip(${string})`;\n  }\n  return `${filter} ${string}`;\n}\n\nfunction formatLabelParser(node, query) {\n  const hasString = node.getChild(String);\n\n  if (hasString) {\n    const parserNode = node.getChild(Regexp) || node.getChild(Pattern);\n    const stringNode = node.getChild(String);\n\n    const parser = parserNode && query.substring(parserNode.from, parserNode.to);\n    const string = stringNode && query.substring(stringNode.from, stringNode.to);\n\n    return `| ${parser}${string}`;\n  }\n\n  const labelParser = query.substring(node.from, node.to);\n  return `| ${labelParser}`;\n}\n\nfunction formatJsonExpressionParser(node, query) {\n  const jsonExpressionNodes = iterateNode(node, [JsonExpression]);\n  let response = '';\n\n  jsonExpressionNodes.forEach((node) => {\n    const identifierNode = node.getChild(Identifier);\n    const valueNode = node.getChild(String);\n\n    const identifier = identifierNode && query.substring(identifierNode.from, identifierNode.to);\n    const value = valueNode && query.substring(valueNode.from, valueNode.to);\n\n    response += `${identifier}=${value}, `;\n  });\n\n  return `| json ${trimEnd(response, ', ')}`;\n}\n\nfunction formatLabelFilter(node, query) {\n  const selectedFilter =\n    node.getChild(Matcher) ||\n    node.getChild(IpLabelFilter) ||\n    node.getChild(NumberFilter) ||\n    node.getChild(UnitFilter)?.getChild(DurationFilter) ||\n    node.getChild(UnitFilter)?.getChild(BytesFilter);\n\n  if (!selectedFilter) {\n    return '';\n  }\n\n  const selectedFilterType = selectedFilter.type.id;\n\n  const identifierNode = selectedFilter.getChild(Identifier);\n  const operatorNode = identifierNode && identifierNode.nextSibling;\n  let valueNode;\n\n  if (selectedFilterType === DurationFilter) {\n    valueNode = selectedFilter.getChild(Duration);\n  } else if (selectedFilterType === BytesFilter) {\n    valueNode = selectedFilter.getChild(Bytes);\n  } else if (selectedFilterType === NumberFilter) {\n    valueNode = selectedFilter.getChild(Number);\n  } else {\n    valueNode = selectedFilter.getChild(String);\n  }\n\n  const identifier = identifierNode && query.substring(identifierNode.from, identifierNode.to);\n  const operator = operatorNode && query.substring(operatorNode.from, operatorNode.to);\n  const value = valueNode && query.substring(valueNode.from, valueNode.to);\n\n  if (selectedFilterType === IpLabelFilter) {\n    return `| ${identifier}${operator}ip(${value})`;\n  }\n\n  return `| ${identifier}${operator}${value}`;\n}\n\nfunction formatLineFormatExpr(node, query) {\n  const stringNode = node.getChild(String);\n  const string = stringNode && query.substring(stringNode.from, stringNode.to);\n  return `| line_format ${string}`;\n}\n\nfunction formatLabelFormatExpr(node, query) {\n  const labelFormatMatcherNodes = iterateNode(node, [LabelFormatMatcher]);\n  let response = '| label_format ';\n\n  labelFormatMatcherNodes.forEach((labelFormatMatcherNode) => {\n    let identifierNode;\n    let valueNode;\n\n    if (labelFormatMatcherNode.getChildren(Identifier).length === 2) {\n      [identifierNode, valueNode] = labelFormatMatcherNode.getChildren(Identifier);\n    } else {\n      identifierNode = labelFormatMatcherNode.getChild(Identifier);\n      valueNode = labelFormatMatcherNode.getChild(String);\n    }\n\n    const identifier = identifierNode && query.substring(identifierNode.from, identifierNode.to);\n    const value = valueNode && query.substring(valueNode.from, valueNode.to);\n\n    response += `${identifier}=${value}, `;\n  });\n\n  return trimEnd(response, ', ');\n}\n\nfunction formatDecolorizeExpr() {\n  return `| decolorize`;\n}\n\nconst formatMetricExpr = (node, query) => {\n  const { addBrackets, newNode } = needsBrackets(node, MetricExpr);\n  node = newNode;\n  let formatted = '';\n\n  const childNode = node.firstChild;\n  switch (childNode && childNode.type.id) {\n    case RangeAggregationExpr:\n      formatted = formatRangeAggregationExpr(node, query);\n      break;\n\n    case VectorAggregationExpr:\n      formatted = formatVectorAggregationExpr(node, query);\n      break;\n\n    case BinOpExpr:\n      formatted = formatBinOpExpr(node, query);\n      break;\n\n    case LiteralExpr:\n      formatted = formatLiteralExpr(node, query);\n      break;\n\n    case LabelReplaceExpr:\n      formatted = formatLabelReplaceExpr(node, query);\n      break;\n\n    case VectorExpr:\n      formatted = formatVectorExpr(node, query);\n      break;\n  }\n\n  return addBrackets ? '(' + formatted + ')' : formatted;\n};\n\nfunction formatRangeAggregationExpr(node, query) {\n  let response = '';\n\n  iterateNode(node, [RangeOp, Number, LogRangeExpr, Grouping]).forEach((node) => {\n    if (node.parent?.type.id !== RangeAggregationExpr) {\n      return;\n    }\n\n    switch (node.type.id) {\n      case RangeOp:\n        response += `${query.substring(node.from, node.to)}(\\n`;\n        break;\n\n      case Number:\n        response += `${indent(1) + query.substring(node.from, node.to)},\\n`;\n        break;\n\n      case LogRangeExpr:\n        response += formatLogRangeExpr(node, query);\n        break;\n\n      case Grouping:\n        response += formatGrouping(node, query);\n        break;\n    }\n  });\n\n  return response;\n}\n\nfunction formatLogRangeExpr(node, query) {\n  const nodes = [];\n  let selector = '';\n  let pipeline = '';\n  let range = '';\n  let offset = '';\n  let unwrap = '';\n\n  iterateNode(node, [Selector, Range, OffsetExpr, UnwrapExpr, PipelineExpr]).forEach((node) => {\n    if (node.parent?.type.id !== LogRangeExpr) {\n      return;\n    }\n\n    nodes.push(node);\n\n    switch (node.type.id) {\n      case Selector: {\n        let logExpr = query.substring(node.from, node.to);\n        selector += formatSelector({ ...node, from: 0, to: logExpr.length }, logExpr);\n        break;\n      }\n\n      case PipelineExpr:\n        pipeline += formatPipelineExpr(node, query);\n        break;\n\n      case Range:\n        range += query.substring(node.from, node.to);\n        break;\n\n      case OffsetExpr: {\n        const durationNode = node.getChild(Duration);\n        offset += ` offset ${durationNode ? query.substring(durationNode.from, durationNode.to) : ''}`;\n        break;\n      }\n\n      case UnwrapExpr:\n        iterateNode(node, [Identifier, ConvOp, LabelFilter]).forEach((node, _, arr) => {\n          switch (node.type.id) {\n            case Identifier: {\n              if (node.parent?.type.id !== UnwrapExpr) {\n                return;\n              }\n\n              const hasConvOp = arr.find((node) => node.type.id === ConvOp);\n\n              if (hasConvOp) {\n                return;\n              }\n\n              unwrap += `| unwrap ${query.substring(node.from, node.to)} `;\n              return;\n            }\n\n            case ConvOp: {\n              const identifierNode = arr.find((node) => node.type.id === Identifier);\n              const identifier = identifierNode ? query.substring(identifierNode.from, identifierNode.to) : '';\n              unwrap += `| unwrap ${query.substring(node.from, node.to)}(${identifier}) `;\n              return;\n            }\n\n            case LabelFilter:\n              unwrap += formatLabelFilter(node, query);\n              return;\n          }\n        });\n        break;\n    }\n  });\n\n  let response = '';\n  nodes.forEach((node, index, array) => {\n    const previousNode = array[index - 1];\n\n    if (node.type.id === Selector) {\n      response += indent(1) + selector;\n    }\n\n    if (node.type.id === PipelineExpr) {\n      response += indentMultiline(pipeline, 1);\n    }\n\n    if (node.type.id === Range) {\n      response += '\\n' + indent(1) + range;\n    }\n\n    if (node.type.id === OffsetExpr) {\n      response += offset;\n    }\n\n    if (node.type.id === UnwrapExpr) {\n      if (previousNode?.type.id !== OffsetExpr && previousNode?.type.id !== Range) {\n        response += '\\n' + indent(1) + unwrap;\n      } else {\n        response += ' ' + unwrap;\n      }\n    }\n  });\n\n  return (response += '\\n)');\n}\n\nfunction formatGrouping(node, query) {\n  let response = '';\n\n  const labels = iterateNode(node, [Identifier]).map((node) => {\n    return query.substring(node.from, node.to);\n  });\n\n  iterateNode(node, [By, Without]).forEach((node) => {\n    if (node.parent?.type.id !== Grouping) {\n      return;\n    }\n\n    switch (node.type.id) {\n      case By:\n        response = ` by (${labels.join(', ')}) `;\n        break;\n\n      case Without:\n        response = ` without (${labels.join(', ')}) `;\n        break;\n    }\n  });\n\n  return response;\n}\n\nfunction formatVectorAggregationExpr(node, query) {\n  let response = '';\n\n  iterateNode(node, [VectorOp, Number, MetricExpr, Grouping]).forEach((node, _, arr) => {\n    if (node.parent?.type.id !== VectorAggregationExpr) {\n      return;\n    }\n\n    switch (node.type.id) {\n      case VectorOp:\n        response += `${query.substring(node.from, node.to)}`;\n        break;\n\n      case Number:\n        response += `(\\n`;\n        response += `${indent(1) + query.substring(node.from, node.to)},\\n`;\n        break;\n\n      case MetricExpr: {\n        const hasNumber = arr.find((node) => node.type.id === Number && node.parent?.type.id === VectorAggregationExpr);\n        response += hasNumber ? '' : '(\\n';\n\n        const metricExpr = query.substring(node.from, node.to);\n        const metricNode = getNodeFromQuery(metricExpr, MetricExpr);\n        response += indentMultiline(formatMetricExpr(metricNode, metricExpr), 1);\n        response += '\\n)';\n        break;\n      }\n\n      case Grouping:\n        response += formatGrouping(node, query);\n        break;\n    }\n  });\n\n  return response;\n}\n\nfunction formatBinOpExpr(node, query) {\n  let operator;\n\n  const [leftExpr, rightExpr] = iterateNode(node, [Expr]).map((node, idx) => {\n    if (idx === 0) {\n      operator = query.substring(node.nextSibling?.from ?? 0, node.nextSibling?.to);\n    }\n\n    const expr = query.substring(node.from, node.to);\n    let expressionNode;\n\n    if (isLogsQuery(expr)) {\n      expressionNode = getNodeFromQuery(expr, LogExpr$1);\n      return formatLogExpr(expressionNode, expr);\n    } else {\n      expressionNode = getNodeFromQuery(expr, MetricExpr);\n      return formatMetricExpr(expressionNode, expr);\n    }\n  });\n\n  return leftExpr + '\\n' + operator + '\\n' + rightExpr;\n}\n\nfunction formatLiteralExpr(node, query) {\n  node = node.getChild(LiteralExpr) ?? node;\n  const addNode = node.getChild(Add);\n  const subNode = node.getChild(Sub);\n  const numberNode = node.getChild(Number);\n\n  if (!numberNode) {\n    return '';\n  }\n\n  if (addNode) {\n    return `+${query.substring(numberNode.from, numberNode.to)}`;\n  }\n\n  if (subNode) {\n    return `-${query.substring(numberNode.from, numberNode.to)}`;\n  }\n\n  return query.substring(numberNode.from, numberNode.to);\n}\n\nfunction formatLabelReplaceExpr(node, query) {\n  let response = 'label_replace(\\n';\n\n  iterateNode(node, [MetricExpr, String]).forEach((node) => {\n    if (node.parent?.type.id !== LabelReplaceExpr) {\n      return;\n    }\n\n    if (node.type.id === MetricExpr) {\n      const metricExpr = query.substring(node.from, node.to);\n      const metricNode = getNodeFromQuery(metricExpr, MetricExpr);\n      response += indentMultiline(formatMetricExpr(metricNode, metricExpr), 1) + ',\\n';\n    } else {\n      response += indent(1) + query.substring(node.from, node.to) + ',\\n';\n    }\n  });\n\n  return trimEnd(response, ',\\n') + '\\n)';\n}\n\nfunction formatVectorExpr(node, query) {\n  node = node.getChild(VectorExpr) ?? node;\n  const numberNode = node.getChild(Number);\n\n  if (!numberNode) {\n    return '';\n  }\n\n  return `vector(${query.substring(numberNode.from, numberNode.to)})`;\n}\n\n/**\n * @experimental This feature is subject to change or removal in future versions.\n */\nconst formatLokiQuery = (query) => {\n  const tree = parser.parse(query);\n  let formatted = '';\n\n  tree.iterate({\n    enter: (ref) => {\n      const node = ref.node;\n\n      if (node.parent?.type.id !== Expr || node.parent?.parent?.type.id === BinOpExpr) {\n        return;\n      }\n\n      switch (node.type.id) {\n        case MetricExpr:\n          formatted = formatMetricExpr(node, query);\n          return false;\n\n        case LogExpr:\n          formatted = formatLogExpr(node, query);\n          return false;\n      }\n    },\n  });\n\n  return trimMultiline(formatted);\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./.yarn/__virtual__/@grafana-lezer-logql-virtual-0b75aafe9e/0/cache/@grafana-lezer-logql-npm-0.1.11-91e9d74a76-6a624b9a8d.zip/node_modules/@grafana/lezer-logql/index.es.js\n");

/***/ }),

/***/ "./public/app/plugins/datasource/loki/plugin.json":
/***/ ((module) => {

module.exports = JSON.parse('{"type":"datasource","name":"Loki","id":"loki","category":"logging","logs":true,"metrics":true,"alerting":true,"annotations":true,"streaming":true,"backend":true,"queryOptions":{"maxDataPoints":true},"info":{"description":"Like Prometheus but for logs. OSS logging solution from Grafana Labs","author":{"name":"Grafana Labs","url":"https://grafana.com"},"logos":{"small":"img/loki_icon.svg","large":"img/loki_icon.svg"},"links":[{"name":"Learn more","url":"https://grafana.com/loki"},{"name":"GitHub Project","url":"https://github.com/grafana/loki"}]}}');

/***/ })

}]);